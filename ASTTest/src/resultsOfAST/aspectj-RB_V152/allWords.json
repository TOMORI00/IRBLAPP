{"Library1":"     ","Library2":"     ","NameMangler":" isSyntheticMethod perObjectInterfaceGet perObjectInterfaceSet perObjectInterfaceField perTypeWithinFieldForTarget perTypeWithinLocalAspectOf itdAtDeclareParentsField privilegedAccessMethodForMethod privilegedAccessMethodForFieldGet privilegedAccessMethodForFieldSet inlineAccessMethodForMethod inlineAccessMethodForFieldGet inlineAccessMethodForFieldSet adviceName interFieldInterfaceField interFieldInterfaceSetter interFieldInterfaceGetter interFieldSetDispatcher interFieldGetDispatcher interFieldClassField interFieldInitializer interMethod interMethodDispatcher interMethodBody preIntroducedConstructor postIntroducedConstructor superDispatchMethod protectedDispatchMethod makeVisibilityName makeName makeName makeName cflowStack cflowCounter makeClosureClassName aroundCallbackMethodName proceedMethodName AJC_DOLLAR_PREFIX CLINIT PREFIX INIT ITD_PREFIX METHOD_ASPECTOF METHOD_HASASPECT STATIC_INITIALIZER CFLOW_STACK_TYPE CFLOW_COUNTER_TYPE SOFT_EXCEPTION_TYPE PERSINGLETON_FIELD_NAME PERCFLOW_FIELD_NAME PERCFLOW_PUSH_METHOD PEROBJECT_BIND_METHOD PERTYPEWITHIN_GETINSTANCE_METHOD PERTYPEWITHIN_CREATEASPECTINSTANCE_METHOD PERTYPEWITHIN_WITHINTYPEFIELD AJC_PRE_CLINIT_NAME AJC_POST_CLINIT_NAME INITFAILURECAUSE_FIELD_NAME org.aspectj.weaver.NameMangler  -----\r\n  PTWIMPL Method and field names\r\n  body of an itd-m\r\n  around advice method is not synthetic, but generated proceed is...\r\n  it's synthetic unless it is an advice method\r\n  }\r\n  PTWIMPL method names that must include aspect type\r\n  ??? might want to handle case where aspect and class are in same package similar to public\r\n  ??? might want to handle case where aspect and class are in same package similar to public\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","DeepAspect":"     ","AssertInOnePackage":" main turnOnAssertions runTests check pre run post foo foo x x x x x x x x x x AssertInOnePackage StaticInitializerOnHelper StaticInitializerOffHelper ConstructorOnHelper ConstructorOffHelper InnerStaticInitializerOnHelper InnerStaticInitializerOffHelper InnerStaticInitializerOnHelperI InnerStaticInitializerOffHelperI CycleSuperOn CycleSubOn CycleSuperOff CycleSubOff  AssertInOnePackage.\r\n  the JVM spec, will initialize the class.\r\n  System.err.println(message);\r\n ","HandlerSig":"     ","FSTORE":" accept  org.aspectj.apache.bcel.generic.FSTORE  ","PointcutParameterImpl":" getName getType getBinding setBinding name type binding org.aspectj.weaver.reflect.PointcutParameterImpl  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","AjcTaskTester2":" getAntFile getUserProperties test1 test2 test3 test4 test4b test5 test5b test6 test6b test8 test9 test10 test11 test12 test13 fail1 fail2 fail3 beforeEveryTask afterEveryTask wantClasses wantClasses wantClasses checkClasses init makeBuildDir clearBuildDir main TEST_CLASSES TEST_SOURCES buildDir AjcTaskTester2  ","ThisOrTargetTestCase":" needToSkipPointcutParserTests setUp testMatch testMatchJP testBinding checkMatches checkNoMatch needToSkip world org.aspectj.weaver.patterns.ThisOrTargetTestCase  ReflectionBasedReferenceTypeDelegate.class.getClassLoader());\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n *               2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation\r\n *     Adrian Colyer, runtime reflection extensions \r\n * ******************************************************************/\r\n","PR339":"     ","PR333":" main  PR333 A B  ","PR335":"     ","MethodDelegateTypeMunger":" equals hashCode getDelegate getImplClassName write readMethod matches changesPublicSignature equals hashCode write readFieldHost matches changesPublicSignature aspect implClassName typePattern hashCode aspect typePattern org.aspectj.weaver.MethodDelegateTypeMunger  match only on class\r\n  match only on class\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors: \r\n *     Alexandre Vasseur     initial implementation\r\n * ******************************************************************/\r\n","ClassFile":" isTrue  classfile.required.ClassFile  ","DeclarePrecedenceImpl":" getDeclaringType getPrecedenceOrder toString declaringType precedenceList precedenceString org.aspectj.internal.lang.reflect.DeclarePrecedenceImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclarePrecedence#getDeclaringType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclarePrecedence#getPrecedenceOrder()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","TestServerTest":" setUp testInitialize testSetWorkingDirectory server org.aspectj.testing.server.TestServerTest  ","JSR":" dump updatePosition accept  org.aspectj.apache.bcel.generic.JSR  JSR_W\r\n  Depending on old position value\r\n  Position may be shifted by preceding expansions\r\n  to large for short (estimate)\r\n  5 - 3\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","SimpleAspect":"     ","ExceptionTable":" accept dump getExceptionIndexTable getNumberOfExceptions getExceptionNames setExceptionIndexTable toString copy number_of_exceptions exception_index_table org.aspectj.apache.bcel.classfile.ExceptionTable  Table of indices into\r\n  constant pool\r\n ","Game":" main getRegistry getPilot1 getPilot2 getWidth getHeight run addRobot resetShips quit error newPlayer newRobot newShip clockTick handleCollisions isCollision main getRegistry getPilot1 getPilot2 getWidth getHeight run addRobot resetShips quit error newPlayer newRobot newShip clockTick handleCollisions isCollision main getRegistry getPilot1 getPilot2 getWidth getHeight run addRobot resetShips quit error newPlayer newRobot newShip clockTick handleCollisions isCollision main getRegistry getPilot1 getPilot2 getWidth getHeight run addRobot resetShips quit error newPlayer newRobot newShip clockTick handleCollisions isCollision main getRegistry getPilot1 getPilot2 getWidth getHeight run addRobot resetShips quit error newPlayer newRobot newShip clockTick handleCollisions isCollision timer ePP registry pilot1 pilot2 screenSize timer ePP registry pilot1 pilot2 screenSize timer ePP registry pilot1 pilot2 screenSize timer ePP registry pilot1 pilot2 screenSize timer ePP registry pilot1 pilot2 screenSize spacewar.Game spacewar.Game spacewar.Game spacewar.Game spacewar.Game  \r\n  \r\n  \r\n  \r\n  \r\n /*\r\n     * Is the distance between the two centers less than the sum of the two\r\n     * radii.  This is a cheap and dirty (i.e. wrong) implementation of this.\r\n     */\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nGame.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n     * Is the distance between the two centers less than the sum of the two\r\n     * radii.  This is a cheap and dirty (i.e. wrong) implementation of this.\r\n     */\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nGame.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n     * Is the distance between the two centers less than the sum of the two\r\n     * radii.  This is a cheap and dirty (i.e. wrong) implementation of this.\r\n     */\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nGame.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n     * Is the distance between the two centers less than the sum of the two\r\n     * radii.  This is a cheap and dirty (i.e. wrong) implementation of this.\r\n     */\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nGame.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n     * These are the menu commands.\r\n     */\r\n /*\r\n     * These three methods are the ONLY ways to make a Player a Robot or a Ship.\r\n     * The structural invariant is that there should be no calls to new of one\r\n     * of these three classes outside these three methods.\r\n     */\r\n /*\r\n     * Is the distance between the two centers less than the sum of the two\r\n     * radii.  This is a cheap and dirty (i.e. wrong) implementation of this.\r\n     */\r\n","PR348":"     ","PR347":"     ","EmptyInterfaceCE":"     ","SpaceObject":" getGame getXPos getYPos getOldXPos getOldYPos getXVel getYVel setXVel setYVel isAlive setIsAlive clockTick accelerate die getSize handleCollision getGame getXPos getYPos getOldXPos getOldYPos getXVel getYVel setXVel setYVel isAlive setIsAlive clockTick accelerate die getSize handleCollision getGame getXPos getYPos getOldXPos getOldYPos getXVel getYVel setXVel setYVel isAlive setIsAlive clockTick accelerate die getSize handleCollision getGame getXPos getYPos getOldXPos getOldYPos getXVel getYVel setXVel setYVel isAlive setIsAlive clockTick accelerate die getSize handleCollision getGame getXPos getYPos getOldXPos getOldYPos getXVel getYVel setXVel setYVel isAlive setIsAlive clockTick accelerate die getSize handleCollision game xPos yPos oldXPos oldYPos xVel yVel alive game xPos yPos oldXPos oldYPos xVel yVel alive game xPos yPos oldXPos oldYPos xVel yVel alive game xPos yPos oldXPos oldYPos xVel yVel alive game xPos yPos oldXPos oldYPos xVel yVel alive spacewar.SpaceObject spacewar.SpaceObject spacewar.SpaceObject spacewar.SpaceObject spacewar.SpaceObject  /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nSpaceObject.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nSpaceObject.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nSpaceObject.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nSpaceObject.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n","A":" bar foo toString bar foo f main m1 m2 m3 m x main a main sayhi main method method method method capitalize touchBeforeExecute c warning error warning error s t t s inheritance.A inheritance.B A d1.A A a_intf.A A lib.A pkg1.A a.b.c.A A A a.A pkg1.A A a.b.c.A p.A A A A A A a.A pkg.A A A pkg.A  ","BcelMethod":" unpackJavaAttributes getParameterNames determineParameterNames unpackAjAttributes processAttributes getAttributes getAttributeNames isAjSynthetic getAssociatedShadowMunger getEffectiveSignature hasDeclarationLineNumberInfo getDeclarationLineNumber getDeclarationOffset getSourceLocation getKind hasAnnotation getAnnotations getAnnotationTypes addAnnotation ensureAnnotationTypesRetrieved canBeParameterized getGenericParameterTypes getGenericReturnType getMethod unpackGenericSignature evictWeavingState isSynthetic workOutIfSynthetic method isAjSynthetic isSynthetic knowIfSynthetic associatedShadowMunger preResolvedPointcut annotations effectiveSignature declarationLineNumber world bcelObjectType parameterNamesInitialized canBeParameterized unpackedGenericSignature genericReturnType genericParameterTypes org.aspectj.weaver.bcel.BcelMethod  used when ajc has pre-resolved the pointcut of some @Advice\r\n  private ResolvedType[] annotationTypes = null;\r\n  genericized version of return and parameter types\r\n  this is an @AspectJ annotated advice method, with pointcut pre-resolved by ajc\r\n  System.out.println(\"found effective: \" + this);\r\n  for testing - if we have this attribute, return it - will return null if it doesnt know anything\r\n  for testing - use with the method above\r\n  || getName().startsWith(NameMangler.PREFIX);\r\n  lets see if we can do better\r\n  Add it to the set of annotations\r\n  Add it to the set of annotation types\r\n  here and one in the real 'method' - should we reduce it to one layer?\r\n  must be ok, we have evicted it\r\n  sometimes the list changes underneath us!\r\n  method.getGenericSignature());\r\n  generic method declaration\r\n  this is a development bug, so fail fast with good info\r\n  put method formal in front of type formals for overriding in lookup\r\n  development bug, fail fast with good info\r\n  development bug, fail fast with good info\r\n  this.sourceContext = SourceContextImpl.UNKNOWN_SOURCE_CONTEXT;\r\n  what the hell has gone wrong?\r\n  synthetic is a modifier (4096)\r\n  synthetic is an attribute\r\n  Pre Java5 synthetic is an attribute 'Synthetic', post Java5 it is a modifier (4096 or 0x1000)\r\n /*Java5*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","B":" main g foo main b main sayhi method lesser t B B d1.d2.B B b_intf.B lib.B pkg1.B B B g.h.i.B p.B B b.B B  @Ann\r\n ","PR353":"     ","C":" method method1 method2 method3 helper0 main helper1 helper2 main main bar main foo warningMethod badMethod foo warningMethod badMethod sayBar main getAddress main getAddress test main checkGuards main main foo method1 method2 method1 method2 main main c m1 m2 m3 m4 m5 m1 m2 m3 m4 m5 m1 main sayhi method1 method1 method1 method1 main main main main main m1 m2 m3 main m1 m2 m3 m4 main m1 m2 m3 m4 method1 method2 method3 method1 method2 method3 method1 method2 method3 method1 method2 method3 method1 method2 method3 amethod m m method1 method2 method1 method2 method3 method method2 method method2 method method2 method foo goo method foo goo method1 main foo main foo getInternalPackage getMyPackage publicMethod protectedMethod defaultMethod privateMethod makeRunnable xxx main c c c c c c c c c c c c c c c c i i i i i i i i i i i i i i i i j j j j j j j j j j j j j j j j k k k k k k k k k k k k k k k k a MethV MethVI MethVLF MethISO foo bar getNumberOfThingies x arr i publicInt protectedInt defaultInt privateInt x i f f s o pkg.C pack.C C d3.C C C C p1.C C B lib.C pkg1.C C pkg.C pkg1.C C C t.C IGuard Guard GuardImpl C C pack.C pack.C pkg.C pkg.MyInterface g.h.i.C C D1 D2 p.C pack.C pack.C C pack.C pkg.C pkg.C pkg.C pkg.C pkg.C pkg.C pkg.C pack.C pack.C pack.C pack.C pack.C pack.C pack.C pack.C pack.C pack.C C C pkg.C pkg.C pkg.C pkg.C pkg.C pkg.C C C pc.C one.C two.C C typeNameConflicts.p1.C C C protectedFieldRefInInner.p1.C symbols.C reflect.tests.C reflect.tests.D  Check the clone is OK\r\n  Change the clone, check the original is OK\r\n  Guard.class);\r\n /*\r\n * Created on Oct 13, 2005 \r\n * \\u00462004-2005 Business Process Engineering S.r.L.  All rights reserved\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","D":" main sayhi d d d d d d d d d d d d d d d d a  configs.moduleB.moduleC.C1 D q.D D  ","E":"     ","F":"     ","G":" main m  G  ","H":"     ","I":" foo method  a.b.c.I p.I I pack.I  ","J":"   p.J J  ","IExprVisitor":" visit visit visit visit visit visit  org.aspectj.weaver.ast.IExprVisitor  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","WeaveLocal":"     ","LXOR":" accept  org.aspectj.apache.bcel.generic.LXOR  ","TwoDots":"     ","MainAspect":"     ","Java15PointcutExpressionTest":" suite testAtThis testAtTarget testAtThisWithBinding testAtTargetWithBinding testAtArgs testAtArgs2 testAtArgsWithBinding testAtWithin testAtWithinWithBinding testAtWithinCode testAtWithinCodeWithBinding testAtAnnotation testAtAnnotationWithBinding testReferencePointcutNoParams testReferencePointcutParams testExecutionWithClassFileRetentionAnnotation testGenericMethodSignatures testAnnotationInExecution testVarArgsMatching testJavaLangMatching testReferencePCsInSameType testReferencePCsInOtherType testArrayTypeInArgs setUp a b c d foo goo nonVarArgs varArgs setFriends foo a b c d pc parser a b c d org.aspectj.weaver.tools.Java15PointcutExpressionTest  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","P":" main runA runB  P  ","Q":"   et.Q  ","InterFieldArrays":"     ","R":"     ","S":"   S  ","T":" m1 m1 m1 m1 m2  T T T T T T T T T  ","AspectClass":" incomingMessage incomingMessage  AspectClass  ","U":"     ","JoinPointImpl":" getKind getSignature getSourceLocation toString toString toShortString toLongString getThis getTarget getArgs getStaticPart getKind getSignature getSourceLocation toString toShortString toLongString set$AroundClosure proceed proceed kind signature sourceLocation _this target args staticPart arc org.aspectj.runtime.reflect.JoinPointImpl  To proceed we need a closure to proceed on\r\n  when called from a before advice, but be a no-op\r\n  the first value to be a new this or a new target... (see pr126167)\r\n  state is always consistent with caller?,callee?,formals...,jp\r\n  replace [0] (this)\r\n  the join point has a this\r\n  this and target are the same so replace state[0]\r\n  copy the rest across\r\n  }\r\n  when called from a before advice, but be a no-op\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","V":"     ","X":" ut printArgs t  pack.X  ","ReturnCastProceed":"     ","Y":"     ","Z":"   Z  ","ThreadCounter":" inc dec isNotZero  org.aspectj.runtime.internal.cflowstack.ThreadCounter  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","PR355":"     ","EnumWithMethods":"     ","Directory":" toString toString add remove getChild getChildCount getSize name children name ca.ubc.cs.spl.aspectPatterns.examples.composite.aspectj.Directory ca.ubc.cs.spl.aspectPatterns.examples.composite.java.Directory  Component interface\r\n ","StockQuoteServiceTest":" main getAccountReport stockQuoteService services.account.StockQuoteServiceTest  private StockQuoteService stockQuoteService = new StockQuoteServiceImpl();\r\n ","Hello.20":" main  Hello  ","InpathFile":"   InpathFile  ","LineNumberTable":" unpack accept dump getLineNumberTable setLineNumberTable toString getSourceLine copy getTableLength isInPackedState data line_number_table_length line_number_table org.aspectj.apache.bcel.classfile.LineNumberTable  if 'isInPackedState' then this data needs unpacking\r\n  Table of line  throw it away now\r\n  Unpacks the byte array into the table\r\n  array is empty\r\n  else constrain search area\r\n  pos > j\r\n /*\r\n   * Initialize from another object. Note that both objects use the same\r\n   * references (shallow copy). Use copy() for a physical copy.\r\n   */\r\n /*\r\n   * @param name_index Index of name\r\n   * @param length Content length in bytes\r\n   * @param line_number_table Table of line/numbers pairs\r\n   * @param constant_pool Array of constants\r\n   */\r\n /* If exact match can't be found (which is the most common case)\r\n       * return the line number that corresponds to the greatest index less\r\n       * than pos.\r\n       */\r\n /* Do a binary search since the array is ordered.\r\n     */\r\n /* It's possible that we did not find any valid entry for the bytecode\r\n     * offset we were looking for.\r\n     */\r\n","ClientCE":" main  ClientCE C  CE 5 expected: declare IOException\r\n ","DeleteMe":" run main run run  delete.DeleteMe DeleteMe delete.DeleteMe delete.DeleteMe  ","SubClassLoader":" foo l SubClassLoader  ","PrivateCallInstance":"     ","INVOKEINTERFACE":" dump getCount initFromFile toString consumeStack getExceptions accept nargs org.aspectj.apache.bcel.generic.INVOKEINTERFACE  Number of arguments on stack (number of stack slots), called \"count\" in vmspec2\r\n  Skip 0 byte\r\n  nargs includes this reference\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","PrivilegedFieldBinding":" canBeSeenBy getAccessMethod alwaysNeedsAccessMethod getFieldBindingForLookup toString reader writer baseField org.aspectj.ajdt.internal.compiler.lookup.PrivilegedFieldBinding  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AroundA1":"     ","Comparable":" compareTo  Comparable  ","RuntimeInvisibleAnnotations":" accept dump copy  org.aspectj.apache.bcel.classfile.annotation.RuntimeInvisibleAnnotations  ","ClassAndInterface":" main  ClassAndInterface I I  ","PointcutQualification":"     ","AspectInheritance4":"     ","AspectInheritance2":"     ","AjTest":" testAj testAjIWeavingContext testInitialize testPreProcess testGetNamespace testGeneratedClassesExist testFlushGeneratedClasses  org.aspectj.weaver.loadtime.AjTest  ","AspectInheritance3":"     ","FinalConstructorParm":" lessOne main i FinalConstructorParm  bad compiler error here - not in 10b1\r\n ","BuildConfigListener":" currConfigChanged configsListUpdated  org.aspectj.ajde.BuildConfigListener  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","LocalVariableInstruction":" wide dump toString initFromFile getIndex setIndex getCanonicalTag getType n c_tag canon_tag org.aspectj.apache.bcel.generic.LocalVariableInstruction  index of referenced variable\r\n  compact version, such as ILOAD_0\r\n  canonical tag such as ILOAD\r\n  Need WIDE prefix ?\r\n  Otherwise ILOAD_n, instruction, e.g.\r\n  Assert ISTORE_0 <= tag <= ASTORE_3\r\n  compact load instruction such as ILOAD_2\r\n  Need WIDE prefix ?\r\n  Use more compact instruction xLOAD_n\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","NullPrintStream":" write write write print print print print print print print print print println println println println println println println println println println write write write NULL_OutputStream NULL_PrintStream ME org.aspectj.testing.util.NullPrintStream org.aspectj.testing.util.NullOutputStream  /*\r\n * NullPrintStream.java created on May 29, 2002\r\n *\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","SymbolFileGenerationTest":" setUp tearDown accept testCrossRefsFileGeneration testEmacssymGeneration DIR dir configFile esymFile outDir crossRefsFile ajesymResourceFileFilter org.aspectj.ajde.SymbolFileGenerationTest  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DecA2":"     ","JdiTest":" main findLaunchingConnector connectorArguments redirectOutput run errThread outThread in out BUFFER_SIZE JdiTest StreamRedirectThread  Make sure output is forwarded\r\n  before we exit\r\n  }\r\n  Copy target's output and error to our output and error.\r\n ","Annot":"     ","ReflectionShadow":" makeExecutionShadow makeAdviceExecutionShadow makeCallShadow makeCallShadow makeStaticInitializationShadow makePreInitializationShadow makeInitializationShadow makeHandlerShadow makeHandlerShadow makeFieldGetShadow makeFieldGetShadow makeFieldSetShadow makeFieldSetShadow getIWorld getThisVar getTargetVar getEnclosingType getArgVar getThisJoinPointVar getThisJoinPointStaticPartVar getThisEnclosingJoinPointStaticPartVar getKindedAnnotationVar getWithinAnnotationVar getWithinCodeAnnotationVar getThisAnnotationVar getTargetAnnotationVar getArgAnnotationVar getEnclosingCodeSignature getSourceLocation getMatchingContext world enclosingType enclosingMember matchContext thisVar targetVar argsVars atThisVar atTargetVar atArgsVars withinAnnotationVar withinCodeAnnotationVar annotationVar annotationFinder org.aspectj.weaver.reflect.ReflectionShadow  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  is correctly the signature of the ctor.\r\n  XXX this code is copied from BcelShadow with one minor change...\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getIWorld()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getThisVar()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getTargetVar()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getEnclosingType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getArgVar(int)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getThisJoinPointVar()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getThisJoinPointStaticPartVar()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getThisEnclosingJoinPointStaticPartVar()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getKindedAnnotationVar(org.aspectj.weaver.UnresolvedType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getWithinAnnotationVar(org.aspectj.weaver.UnresolvedType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getWithinCodeAnnotationVar(org.aspectj.weaver.UnresolvedType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getThisAnnotationVar(org.aspectj.weaver.UnresolvedType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getTargetAnnotationVar(org.aspectj.weaver.UnresolvedType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getArgAnnotationVar(int, org.aspectj.weaver.UnresolvedType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getEnclosingCodeSignature()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getSourceLocation()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","AspectPathTests":" suite getSpecFile test001 test002 test003 test004 test005 test006 test007 test008 test009 test010 test011 test012 test013 test014 test015 test016 test017 test018 test019 test020 test021  org.aspectj.systemtest.aspectpath.AspectPathTests  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","PR95992":"   Base Test  ","PR95993":"   Base Test Test2  ","Checklics":" main runDirect setList setPrintDirectories setFailOnError setLicense setSourcepath createSourcepath setSourcepathRef setOutputStream setReplaceheaders setGetYears execute getOut visit visitAll replaceHeaders getYears checkLicenses list gotValidFile foundLicense foundCopyright checkFile toString checkLine clear toString writeHeader writeRest replaceHeader checkFile checkLine MPL_TAG APACHE_TAG CPL_IBM_PARC_TAG CPL_IBM_TAG MPL_XEROX_PARC_TAG MPL_ONLY_TAG MPL_PARC_TAG PARC_COPYRIGHT_TAG CPL_IBM_PARC_XEROX_TAG CPL_IBM_PARC_XEROX_OTHERS_TAG EPL_CPL_IBM_PARC_XEROX_OTHERS_TAG DEFAULT LICENSES sourcepath license list streamTag failOnError getYears replaceHeaders failed passed printDirectories failed passed YEARS tag license copyright gotLicense gotCopyright file years lastLine hasLicense TOP PARC PARC_ONLY XEROX_PREFIX XEROX_SUFFIX org.aspectj.internal.tools.ant.taskdefs.Checklics org.aspectj.internal.tools.ant.taskdefs.HeaderInfo org.aspectj.internal.tools.ant.taskdefs.Header  unmodifiable Map\r\n  List filelist = new ArrayList();\r\n  being paranoid...\r\n  remove older after license xfer?\r\n  remove older after license xfer?\r\n  boolean result = false;\r\n  2002 was PARC\r\n  1999-2002 Xerox implies 1999-2001 Xerox\r\n  XEROX plus PARC\r\n  PARC only\r\n  Xerox only\r\n  int endLine = 0;\r\n  ignore default package w /*\r\n\t  This does not enforce that copyrights are correct/current,\r\n\t  only that they exist.\r\n\t  E.g., the default behavior requires MPL but permits either \r\n\t  Xerox or PARC copyright holders and any valid year.\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AnnotatedFields":"  i s i s AnnotatedFields AnnotatedFields  ","Base4":" main  I Base4  OK - since new parent matches\r\n ","Base3":" main  I Base3  ","Base2":" main  I Base2  ","Base1":" main  I Base1  ","RequestCounting":"     ","EclipseSourceContext":" getOffset getSourceFile makeSourceLocation makeSourceLocation tidy removeUnnecessaryProblems accept result offset problemToRemove org.aspectj.ajdt.internal.core.builder.EclipseSourceContext  TODO AV - should we do it lazily?\r\n  FIXME may be need -2\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","LocalClassClosingOverProceed":"     ","Cosmetic":"     ","NewSwitch":"     ","Testcase1":"     ","FileUtilTest":" testFileEquals main assertSame dirContains dirPaths dirPaths doDirPaths log tearDown testNotIsFileIsDirectory testGetBestFile testCopyFiles checkCopyFiles testDirCopySubdirs testDirCopySubdirsSuffix testGetURL checkGetURL testGetTempDir checkGetTempDir testRandomFileString testNormalizedPath testFileToClassName testDeleteContents testLineSeek testLineSeekMore testDirCopyNoSubdirs testDirCopyNoSubdirsWithSuffixes testDirCopySubdirsSuffixRoundTrip makeTempDir testPipeEmpty testPipeMin testPipe checkPipe testPipeThrown xtestPipeHalt NONE log tempFiles max hit max totalWritten thrown set org.aspectj.testing.util.FileUtilTest org.aspectj.util.FileUtilTest  import java.io.ByteArrayInputStream;\r\n  XXX cheap diff\r\n  remove any found from sought and return remainder\r\n  if suffixes required, remove those without suffixes\r\n  trim prefix\r\n  plus directory separator\r\n  assertTrue(ra[i].startsWith(prefix));\r\n  bad input\r\n  file-file\r\n  file-dir\r\n  dir-dir\r\n  same contents as fromDir.\r\n  XXX cheap test\r\n  never created\r\n  XXX prefer fast-fail?\r\n  1..10\r\n  setup files 0..MAX with 2*MAX lines\r\n  now test\r\n  number k found in every other line of every file at index k\r\n  for every other line\r\n  for each file\r\n  XXX prefer fast-fail?\r\n  no selection\r\n  only .java files\r\n  disabling till we have time to figure out why\r\n  start it up\r\n  wait for minWritten input\r\n  halt\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CompilerError":"     ","PR318":"     ","HelperInterfaceBinding":" getFileName getTypeX addMethod fields methods constantPoolName generateClass generateMethod superInterfaces typeX enclosingType methods org.aspectj.ajdt.internal.compiler.lookup.HelperInterfaceBinding  this.fileName = scope.referenceCompilationUnit().getFileName();\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","FieldSubWriter":" printMembersSummary printMembers navSummaryLink navDetailLink setDelegator printSummaryMember delegateClass getMemberKind propertyName printIntroducedSummaryLink printCrosscuts printSummaryCrosscuts hasCrosscuts mw org.aspectj.tools.doclets.standard.FieldSubWriter  XXX hack!!!\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","LineReader":" createTester create toString getFile readLines readToBlankLine nextLine normalize createTester create toString getFile readLines readToBlankLine lastLine nextLine readClippedLine normalize RETURN NONE cSCRIPT cJAVA TESTER_LEAD file eolComments leadComments RETURN NONE cSCRIPT cJAVA TESTER_LEAD file eolComments leadComments lastLine org.aspectj.testing.util.LineReader org.aspectj.util.LineReader  get next empty line to restart\r\n  XXX verify  get next empty line to restart\r\n  XXX verify /*\r\n * LineReader.java created on May 3, 2002\r\n *\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Testcase2":"     ","Testcase3":"     ","BcelAdvice":" concretize parameterizeWith match specializeOn canInline implementOn removeUnnecessaryProblems collectCheckedExceptions getThrownExceptions mustCheckExceptions hasDynamicTests getAdviceInstructions getAdviceArgSetup getNonTestAdviceInstructions getOriginalSignature getTestInstructions compareTo getExposedStateAsBcelVars hasMatchedSomething suppressLintWarnings clearLintSuppressions pointcutTest exposedState hasMatchedAtLeastOnce thrownExceptions org.aspectj.weaver.bcel.BcelAdvice  !!! interaction with unit tests\r\n  !!! must only be used for testing\r\n  ... only want to record it once against the advice(bug 133117)\r\n  allows for around advice where the return value is a type variable (see pr115250)\r\n  XXX this case is just here for supporting lazy test code\r\n  XXX this case is just here for supporting lazy test code\r\n  so that the joinpoint is primed for weaving\r\n  make sure thisJoinPoint parameters are initialized\r\n  collect up the problematic advice\r\n  XXX this guard seems to only be needed for bad test cases\r\n  System.err.println(\"isWoven? \" + ((BcelObjectType)concreteAspect).getLazyClassGen().getWeaverState());\r\n  the enclosing shadow too\r\n  at the moment it only deals with 'declared exception is not thrown'\r\n  PTWIMPL Entry to ptw is the static initialization of a type that matched the ptw type pattern\r\n  One solution would be to flag @AJ aspect with an annotation as \"prepared\" and query that one.\r\n  null tests for test harness\r\n  ??? can we really lump in Around here, how does this interact with Throwable\r\n  || pointcutTest == Literal.NO_TEST);\r\n  only call me after prepare has been called\r\n  after throwing does this just by the exception mechanism.\r\n  pr121385\r\n  Erroneous vars have already had error msgs reported!\r\n  try to avoid verify error and pass in null\r\n  try to avoid verify error and pass in null\r\n  make sure we are in an around, since we deal with the closure, not the arg here\r\n  il.append(closureInstantiation);\r\n  if not @AJ aspect, go on with the regular binding handling\r\n  org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration\r\n  in the middle of the formal bindings but at the end, in a rock solid ordering\r\n  System.err.println(\"test: \" + pointcutTest);\r\n  System.err.println(\"compareTo: \" + this + \", \" + o);\r\n  System.err.println(\"      \" + o + \" innerCflowEntries \" + o.innerCflowEntries);\r\n  System.out.println(\"compare: \" + this + \" with \" + other);\r\n  the closure instantiation has the same mapping as the extracted method from wich it is called\r\n  ATAJ aspect\r\n  System.out.println(\"vars: \" + Arrays.asList(exposedState.vars));\r\n  (BcelVar[]) exposedState.vars;\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n *     Alexandre Vasseur    support for @AJ aspects\r\n * ******************************************************************/\r\n","PR320":"     ","CallTypes":"     ","ASTitdTest":" testAspectWithPublicMethodITD testAspectWithPrivateMethodITD testAspectWithPublicAbstractMethodITD testAspectWithConstructorITD testAspectWithPublicFieldITD checkNameAndModifiers toString visit visit visit b visitDocTags org.aspectj.tools.ajc.ASTitdTest org.aspectj.tools.ajc.ITDTestVisitor  ajh02: need to use 2 for returnType - in 3 it has \"returnType2\"\r\n  JavaCore.getOptions());\r\n  System.err.println(\"actual:\\n\" + result);\r\n ","CantCallConstructorOnAspects":"     ","StructureViewManagerTest":" main suite testModelExists testNotificationAfterConfigFileChange testFreshStructureModelCreation testModelIntegrity testModelIntegrityHelper testNotificationAfterBuild testViewCreationWithNullSourceFileAndProperties setUp tearDown CONFIG_FILE_PATH CONFIG_FILE_PATH_2 currentView renderer testFile properties org.aspectj.ajde.ui.StructureViewManagerTest  TODO-path\r\n  IProgramElement n = currentView.getRootNode().getIProgramElement();\r\n  currentView.getRootNode().getIProgramElement().getChildren().get(0)\r\n  TODO-path\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AspectInheritance1":"     ","ClickHandler":" handleClick  ca.ubc.cs.spl.aspectPatterns.examples.chainOfResponsibility.java.ClickHandler  ","MethodDoc":"   org.aspectj.ajdoc.MethodDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","PR328":" main realMain  PR328 Modest  ","StaticJoinPointFactory":"   org.aspectj.weaver.StaticJoinPointFactory  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","BCException":" printStackTrace printStackTrace printStackTrace thrown org.aspectj.weaver.BCException  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","DefiniteStatic":" main SOURCE SINK sink Type bat DefiniteStatic  incorrect CE: field SINK might not have a value\r\n ","Weaver5ModuleTests":" suite main  org.aspectj.weaver.Weaver5ModuleTests  ","SeeTag":"   org.aspectj.ajdoc.SeeTag  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Instruction":" dump getName toString toString toString copy initFromFile readInstruction className consumeStack produceStack getOpcode getLength setOpcode dispose accept getComparator setComparator equals length opcode cmp org.aspectj.apache.bcel.generic.Instruction  Length of instruction in bytes\r\n  Opcode number\r\n  Common for all instructions\r\n  \"Constant\" instruction, no need to duplicate\r\n  Read next opcode after wide byte\r\n  Used predefined immutable object, if available\r\n  Do further initializations, if any\r\n  Byte code offset set in InstructionList\r\n  Special case\r\n /* Find appropiate class, instantiate an (empty) instruction object\r\n     * and initialize it by hand.\r\n     */\r\n /* ICONST_0, etc. will be shortened to ICONST, etc., since ICONST_0 and the like\r\n     * are not implemented (directly).\r\n     */\r\n","QueueStateAspect":"     ","BasicCommandTestCase":" testA testA1 testBadA testHello testBadHello testMissingHello testBadBinding testThisAndModifiers testDeclares testDeclareWarning testP1 testUnimplementedSyntax testXlintWarn testXlintError testMissingJarError testMissingRuntimeError testImplicitOutputDir testSizeChanges  org.aspectj.ajdt.internal.compiler.batch.BasicCommandTestCase  import java.util.Arrays;\r\n  import org.aspectj.bridge.IMessage;\r\n  DON'T yet have a way of testing that we actually got a particular info message\r\n /*boolean result = */\r\n /*boolean result = */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AjdocOutputChecker":" containsString getMissingStringsInFile containsStringWithinSection getMissingStringsInSection classDataSectionContainsRel detailSectionContainsRel summarySectionContainsRel  org.aspectj.tools.ajdoc.AjdocOutputChecker  found the required class data section\r\n  found the required main section\r\n  found the required subsection\r\n  found the required main section\r\n  found the required subsection\r\n /*String*/\r\n /*String*/\r\n","AdviceThrowsCp":"     ","TestingXmlTests":" suite  org.aspectj.testing.xml.TestingXmlTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","IntroducedSuperDoc":" types isImplements  org.aspectj.ajdoc.IntroducedSuperDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","AdviceThrowsCf":"     ","TypeVariable":" getFirstBound getUpperBound getAdditionalInterfaceBounds getLowerBound getName resolve canBeBoundTo matchingBounds isASubtypeOf setUpperBound setLowerBound setAdditionalInterfaceBounds toDebugString getDisplayName toString getSignature setRank getRank setDeclaringElement getDeclaringElement setDeclaringElementKind getDeclaringElementKind write read NONE isResolved beingResolved name rank declaringElementKind UNKNOWN METHOD TYPE declaringElement upperBound additionalInterfaceBounds lowerBound org.aspectj.weaver.TypeVariable  no class bound was specified (it will default to object)\r\n  avoid spiral of death\r\n  look for type variable on method...\r\n  resolve by finding the real type var that we refer to...\r\n  should issue message, this is a workaround to get us going...\r\n  AMC - need a more robust test!\r\n  wildcard can accept any binding\r\n  aCandidateType is a subtype of upperBound\r\n  aCandidateType is a subtype of all additionalInterfaceBounds\r\n  lowerBound is a subtype of aCandidateType\r\n  either we both have bounds, or neither of us have bounds\r\n  we both have bounds, compare\r\n  XXX what about interfaces?\r\n  only used when resolving\r\n  only used when resolving\r\n  only used when resolving\r\n  good enough approximation\r\n  if (declaringElementKind==UNKNOWN) throw new RuntimeException(\"Dont know declarer of this tvar : \"+this);\r\n  name, upperbound, additionalInterfaceBounds, lowerbound\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","VoidField":"     ","ConstantHTML":" referenceConstant writeConstant getMethodNumber class_name class_package constant_pool file constant_ref constants methods org.aspectj.apache.bcel.util.ConstantHTML  name of current class\r\n  name of package\r\n  reference to constant pool\r\n  file to write to\r\n  String to return for cp[i]\r\n  The constants in the cp\r\n  Loop through constants, constants[0] is reserved\r\n  The header is always the same\r\n  Get class_index and name_and_type_index, depending on type\r\n  Get method name and its class\r\n  Partially compacted class name, i.e.,   I.e., remove java.lang.\r\n  I.e., remove java.lang.\r\n  Remove class package prefix\r\n  Get method signature\r\n  Get array of strings containing the argument types\r\n  Get return type string\r\n  Method is local to class\r\n  Get class_index and name_and_type_index\r\n  Get method name and its class (compacted)\r\n  I.e., remove java.lang.\r\n  Remove class package prefix\r\n  Field is local to class\r\n    I.e., remove java.lang.\r\n  Remove class package prefix\r\n /* For every constant type get the needed parameters and print them appropiately \r\n     */\r\n","TryErrors":"     ","NoSuchAdviceException":" getName serialVersionUID name org.aspectj.lang.reflect.NoSuchAdviceException  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","WithincodePointcut":" getSignature couldMatchKinds parameterizeWith fastMatch matchInternal write read resolveBindings postRead equals hashCode toString findResidueInternal concretize1 accept signature matchedShadowKinds org.aspectj.weaver.patterns.WithincodePointcut  these next two are needed for inlining of field initializers\r\n  they were withincode of the outer signature\r\n  look for inappropriate use of parameterized types and tell user...\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ConstantDouble":" accept dump getBytes setBytes toString getConstantValue bytes org.aspectj.apache.bcel.classfile.ConstantDouble  ","VariableExpression":" getName evaluate getName evaluate replace copy name name ca.ubc.cs.spl.aspectPatterns.examples.interpreter.aspectj.VariableExpression ca.ubc.cs.spl.aspectPatterns.examples.interpreter.java.VariableExpression  ","MissingLineNumbers":"     ","TreeCompare":" main takeSnapshot getRoot compareSnapshots signalDifferentTypes compareSnapshots compareSnapshots DODIFF org.aspectj.testing.compare.TreeCompare  testing\r\n  utils\r\n  ignored\r\n  Bill added to actual\r\n  Peter mispelled in actual\r\n  Vim added in actual, with a child\r\n  construct the respective trees\r\n  } else {\r\n  this is the custom part: adapter generating generic model\r\n  GenericTreeNodesVisitorI visitor = GenericTreeNode.PRINTALL;\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","OddConstructors":"     ","PR61768":"     ","SuperFixerVisitor":" endVisit superMethodsCalled method targetClass org.aspectj.ajdt.internal.compiler.ast.SuperFixerVisitor  an error has already occurred\r\n  need to treat super calls specially here\r\n  XXX this is a hack that violates some binary compatibility rules\r\n  ??? do we want these to be unique\r\n  XXX does this walk into inners\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AfterThrowingWeaveTestCase":" testAfterThrowing testAfterThrowingParam  org.aspectj.weaver.bcel.AfterThrowingWeaveTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Ajc":" setShouldEmptySandbox compile compile hasSpecifiedIncremental doIncrementalCompile getLastCompilationResult getSandboxDirectory setBaseDir addMessagesTo isIncremental createEmptySandbox adjustToSandbox adjustFileOrDir dumpAJDEStructureModel dumpAJDEStructureModel doRepeatCommand running doIncremental handleMessage isIgnoring dontIgnore finalList execute compile removeUnsupported addAjcOptions logAndAddFilesToCompile SANDBOX_NAME TESTER_PATH result sandbox baseDir main ajcArgs incrementalStage shouldEmptySandbox controller verbose command AJC_COMPILER_SUCCESS MAIN_CLASS_NAME javacOnlyFlags javacOnlyArgs org.aspectj.tools.ajc.Ajc org.aspectj.tools.ajc.AjcCommandController org.aspectj.tools.ajc.AbortInterceptor org.aspectj.tools.ant.taskdefs.compilers.Ajc  bin directories.  This means for the necessary types to be found we have to put these jars on the classpath:\r\n  hmmm, this next one should perhaps point to an aj-build jar...\r\n  important to sleep after preparing the sandbox on first incremental stage (see notes in pr90806)\r\n  in c:\\documents and settings\\......... for the results of a failed test.\r\n  could be resource file\r\n  newArgs[i] = new File(baseDir,args[i]).getAbsolutePath();   get copied too (e.g. .out, .err, .event files)\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  ensure that control returns to caller\r\n  so that we can come back for more...\r\n  allow message to accumulate...\r\n  Same behavior as DefaultCompilerAdapter.logAndAddFilesToCompile\r\n  with .lst files also\r\n  file to the command line\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.tools.ajc.Main.CommandController#doRepeatCommand()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.tools.ajc.Main.CommandController#running()\r\n\t */\r\n /*\r\n * So that we can drive incremental compilation easily from a unit\r\n * test.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer, \r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2000-2001 Xerox Corporation. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PerTypeWithin":" propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty clone0 subtreeMatch0 accept0 treeSize getTypePattern accept couldMatchKinds parameterizeWith fastMatch matchInternal resolveBindings findResidueInternal concretize write readPerClause getKind toString toDeclarationString isWithinType equals hashCode typePattern kindSet org.aspectj.org.eclipse.jdt.core.dom.PerTypeWithin org.aspectj.weaver.patterns.PerTypeWithin  add the type thingy here\r\n  allow default implementation to flag the error\r\n  remeber to set the type thingy here\r\n  dispatch to correct overloaded match method\r\n  stub\r\n  Any shadow could be considered within a pertypewithin() type pattern\r\n  -----\r\n  PTWIMPL ?? Add a proper message\r\n  call the localAspectOf() method.\r\n  typePattern,\r\n  This munger will initialize the aspect instance field in the matched type\r\n  ATAJ: add a munger to add the aspectOf(..) to the @AJ aspects\r\n  ATAJ inline around advice support - don't use a late munger to allow around inling for itself\r\n  PTWIMPL Represents a parsed pertypewithin()\r\n /* *******************************************************************\r\n * Copyright (c) 2005 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","EnumTest":" testEnum testInlinedEnum testEnumWithMethods  org.aspectj.tools.ajdoc.EnumTest  ","NodeAspect":"     ","Xlint":"     ","LockAspect1":"     ","ValuesTest":" testInvert checkInvert render render  org.aspectj.testing.util.options.ValuesTest  no input or missed => none found\r\n  no missed, input 1 => 1 found\r\n  1 (all) missed, input 1 => none found\r\n  0 (none) missed, input 1 => 1 found\r\n  2 missed, input 3 => 1 (first) found\r\n  2 missed, input 3 => 1 (middle) found\r\n  2 missed, input 3 => 1 (last) found\r\n  2 missed, input 4 => 2 found\r\n  starting run\r\n  ending run\r\n  middle run\r\n  two middle run\r\n  start, 2 middle run\r\n  middle, end run\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","AbstractTraceTest":" testIsTraceEnabled testEnterWithThisAndArgs testEnterWithThisAndArray testEnterWithThisAndCollection testEnterWithThisAndTraceable testEnterWithThis testEnter testExitWithReturn testExitWithThrowable testExit testDebug testInfo testWarn testWarnWithException testError testErrorWithException testFatal testFatalWithException trace org.aspectj.weaver.AbstractTraceTest  ","AjcSpecXmlReaderTest":" setUp tearDown testBeanInfo testAjcTests testAjcTests10 testAjcTestsBroken testAjcTestsAttic testAjcHarnessTests checkXmlRoundTrip checkRoundTrip tempFiles org.aspectj.testing.xml.AjcSpecXmlReaderTest  import junit.framework.*;\r\n  AjcSpecXmlReader me = AjcSpecXmlReader.getReader();\r\n  check clone while we're here\r\n  XXX once .txt gone, add bugId and keywords to test\r\n  read flat, write the xml variant, read back, and compare\r\n  suite0.printAll(System.err, \"\");\r\n  suite0.printAll(System.err, \"\");\r\n  same for second-generation xml\r\n  XXX enable later assertTrue(warning, null == warning);\r\n  System.err.println(\"----------------------- suite2 \" + xml2Path);\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","SuppressedWarnings":" suite getSpecFile testSuppression1 testSuppression2 testSuppressionWithCflow_pr93345 testSuppressionOfMessagesIssuedDuringMatching  org.aspectj.systemtest.ajc150.SuppressedWarnings  Check basic suppression\r\n  (see bug 62073 reference in WeaverMessageHandler.handleMessage())\r\n ","HasMemberTypePattern":" matchesExactly hasField hasMethod matchesExactly matchesInstanceof parameterizeWith resolveBindings equals hashCode toString write read accept signaturePattern org.aspectj.weaver.patterns.HasMemberTypePattern  TODO what about ITDs\r\n  TODO what about ITDs\r\n  try itds before we give up\r\n  check that hasmember type patterns are allowed!\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","JoinPointClosure":" proceed execute getThis getStaticPart jp org.aspectj.aopalliance.JoinPointClosure  AspectJ around advice.\r\n /* (non-Javadoc)\r\n\t * @see org.aopalliance.intercept.Joinpoint#proceed()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aopalliance.intercept.Joinpoint#getThis()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aopalliance.intercept.Joinpoint#getStaticPart()\r\n\t * Must return either a Field, Method or Constructor representing the entity\r\n\t * at the joinpoint.\r\n\t */\r\n","AtTestTracing":"   AtTestTracing  ","ajcDeclareSoft":"     /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","SubClass":" register label main run i SubClass target.SubClass SubClass  ","RunValidator":" isValid isValid reset init runPassed dopassed NORMAL ORIGINAL_NORMAL ZERO_STATUS PASS FAIL resultChecker permittedExceptionsClass requiredExceptionsClass org.aspectj.testing.run.RunValidator  After the result has completed, the result is stored.\r\n  need MessageHandler.getMessage(...)\r\n  at most one of the ExceptionsClass set\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","WildTypePattern":" getNamePatterns getUpperBound getLowerBound getAdditionalIntefaceBounds setIsVarArgs couldEverMatchSameTypesAs splitNames matchesExactly matchesExactly matchesParameters matchesBounds getDimensions isArray matchesExactlyByName lastIndexOfDotOrDollar innerMatchesExactly innerMatchesExactly outOfStar inStar matchesInstanceof extractName maybeExtractName maybeGetSimpleName maybeGetCleanName parameterizeWith resolveBindings maybeResolveToAnyPattern maybeResolveToBindingTypePattern resolveBindingsFromFullyQualifiedTypeName lookupTypeInScope lookupTypeInWorld resolveBindingsForExactType resolveGenericWildcard resolveParameterizedType resolveBindingsForMissingType resolveBindingsForTypeVariable verifyTypeParameters verify isStar isNamePatternStar preMatch toString equals hashCode write read readTypePattern150 readTypePatternOldStyle accept GENERIC_WILDCARD_CHARACTER namePatterns ellipsisCount importedPrefixes knownMatches dim boundscheckingoff upperBound additionalInterfaceBounds lowerBound isGeneric scope genericType requireExactType typeParameters sLoc VERSION org.aspectj.weaver.patterns.WildTypePattern  SECRETAPI - just for testing, turns off boundschecking temporarily...\r\n  extends Foo\r\n  extends Foo & A,B,C\r\n  super Foo\r\n  type pattern. We can only tell during resolve bindings.\r\n  called by parser after parsing a type pattern, must bump dim as well as setting flag\r\n  false is necessary but not sufficient\r\n  what about   we treat $ like . here\r\n  names). More work required on our part to get this right...\r\n  Ensure the annotation pattern is resolved\r\n  we have to match type parameters\r\n  type variables we need to make sure we match against them too\r\n  for upper bound, null can also match against Object - but anything else and we're out.\r\n  match ? extends\r\n  match ? super\r\n  it is a ? extends or ? super deal then we have to match them too.\r\n  we deal with parameter matching separately...\r\n  we deal with bounds matching separately too...\r\n  XXX hack\r\n  we match if the dimensions match\r\n  we've already ruled out \"*\", and no other name pattern should match an anonymous type\r\n  if it's longer than that, then known matches are prefixes of a sort\r\n  System.err.println(\"prefix match? \" + prefix + \" to \" + targetTypeName);\r\n  assumes that prefixes have a dot at the end\r\n  ??? doing this everytime is not very efficient\r\n  System.err.print(\"match(\\\"\" + Arrays.asList(namePatterns) + \"\\\", \\\"\" + Arrays.asList(names) + \"\\\") -> \");\r\n  System.err.println(b);\r\n  invariant: if (tLeft > 0) then (ti < target.length && pi < pattern.length)\r\n  exactly parallel with that in NamePattern\r\n  invariant: if (tLeft > 0) then (ti < target.length)\r\n  XXX hack to let unmatched types just silently remain so\r\n  it is not ok to treat Foo as a method name!\r\n  System.err.println(\"extract from : \" + Arrays.asList(namePatterns));\r\n  can't extract\r\n  System.err.println(\"    left : \" + Arrays.asList(namePatterns));\r\n  System.out.println(\"get clean: \" + this);\r\n  System.out.println(buf);\r\n  resolve any type parameters\r\n  resolve any bounds\r\n  pattern contains wildcards so can't be resolved to an ExactTypePattern...\r\n  ??? loses source location\r\n  AnyWithAnnotation\r\n  can't resolve to a simple \"any\" pattern\r\n  not possible to resolve to a binding type pattern\r\n  ??? this loop has too many inefficiencies to count\r\n  this must be a generic wildcard with bounds\r\n  we have to set the bounds on it based on the bounds of this pattern\r\n  might have changed if we find out include subtypes is set on one of the bounds...\r\n  leave as wild type pattern\r\n  messages already isued\r\n  AMC... just leave it as a wild type pattern then?\r\n  UnresolvedType type = scope.getWorld().resolve(tx,true);\r\n  ExactTypePattern for this WildTypePattern\r\n  Only put the lint warning out if we can't find it in the world\r\n  we have to set bounds on the TypeVariable held by tvrType before resolving it\r\n  leave as wild type pattern then\r\n  no bounds to worry about...\r\n  issue message \"does not match because baseType.getName() is not generic\"\r\n  issue message \"does not match because wrong no of type params\"\r\n  the call to checkBoundsOK\r\n  ok... (see pr112105)  Want to break this? Run GenericAspectK test.\r\n  issue message that type parameter does not meet specification\r\n  System.err.println(\"Verifying \"+ut.getName()+\" meets bounds for \"+tvs[i]);\r\n  ??? not most efficient\r\n  ??? not most efficient\r\n  rev on change\r\n  ! change from M2\r\n  file size. Storing it on enclosing types would be more efficient\r\n  generics info, new in M3\r\n  generics info, new in M3\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.TypePattern#couldEverMatchSameTypesAs(org.aspectj.weaver.patterns.TypePattern)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","HasMemberTypePatternFinder":" visit hasMemberTypePattern hasMemberTypePattern org.aspectj.weaver.patterns.HasMemberTypePatternFinder  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","BufferTest":"     ","WorldAt":" greeting  WorldAt  ","SuperToIntro":"     ","PoliceExtensionUse":" synchronizationDesignatorEncountered visit visit visit visit synchronizationDesignatorEncountered world p org.aspectj.weaver.bcel.PoliceExtensionUse  error scenario can sometimes lead to this LazyClassGen.toLongString()\r\n  Check it!\r\n ","InnerHell":" main  InnerHell MyButton  ","StaticMethodsShouldNotReceiveInstanceofAdvice":"     ","DeclareDeclaration":" addAtAspectJAnnotations generateCode shouldDelegateCodeGeneration parseStatements resolveStatements build print generateInfoAttributes postParse getNodeType0 memSize treeSize resolveBinding declareDecl org.aspectj.ajdt.internal.compiler.ast.DeclareDeclaration org.aspectj.org.eclipse.jdt.core.dom.DeclareDeclaration  in AsmBuilder for processing of MethodDeclaration locations.\r\n  ??? we might need to set parameters to be empty\r\n  FIXME asc the name should perhaps include the hashcode of the pattern (type  them to be easily distinguised at weave time (e.g. see declare annotation)\r\n  ajh02: should add one called DECLARE_DECLARATION or something\r\n  ajh02: :- /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n","Four":"     ","ResourceCopyTestCase":" setUp testSrcToBin testInjarsToOutjar testDuplicateResources testSrcToOutjar testInjarsToBin testInjarsToOutjarOddNames compareDirs compareJars compareSourceToOutjar compareInjarsToBin listSourceResources listJarResources accept PROJECT_DIR srcDir binDir injar1Name injar2Name outjarName aspectjResourceFileFilter org.aspectj.ajde.ResourceCopyTestCase  /*\r\n\t * Ensure the output directpry in clean\r\n\t */\r\n /*\r\n\t * Ensure bin contains all non-Java resouces from source and injars\r\n\t */\r\n /* Ensure we copied right JAR manifest */\r\n /*\r\n\t * Ensure -outjar contains all non-Java resouces from injars\r\n\t */\r\n /*\r\n\t * Ensure -outjar conatins all non-Java resouces from source and injars\r\n\t */\r\n /* Ensure we copied the right JAR manifest */\r\n /*\r\n\t * Ensure bin contains all non-Java resouces from source and injars\r\n\t */\r\n /* JAR manifests shouldn't be copied */\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","IndexedInstruction":" getIndex setIndex  org.aspectj.apache.bcel.generic.IndexedInstruction  ","SALOAD":" accept  org.aspectj.apache.bcel.generic.SALOAD  ","ArrayElementValue":" toString dump stringifyValue getElementValuesArray getElementValuesArraySize evalues org.aspectj.apache.bcel.classfile.annotation.ArrayElementValue  For array types, this is the array\r\n  u1 type of value (ARRAY == '[')\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","DumpTestCase":" setUp tearDown testSetDumpOnException testSetDumpOnExit testDump testDumpWithException testDumpOnExit testDumpOnExitExcluded testDumpOnExitIncluded assertContents fileContains recursiveCall dumpFile savedDumpCondition org.aspectj.weaver.DumpTestCase  /* Ensure dump file exists and contains certain contents under a given heading */\r\n /* Generate a big stack trace */\r\n","SubtypeConstructorCW":"     ","EclipseAttributeAdapter":" getNameChars getAllBytes attr org.aspectj.ajdt.internal.compiler.ast.EclipseAttributeAdapter  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","NonAlphaSignaturePatternCE":"     ","AnnotationMoodyImplementor":"   moodytest.AnnotationMoodyImplementor  ","Java5Class":" method2 genericMethod1 genericMethod2 genericMethod3 genericMethod4  pkg.Java5Class pkg.MyGenericClass pkg.MyGenericClass2  ","MethodCalledAroundAspect":"     ","IFNONNULL":" negate accept  org.aspectj.apache.bcel.generic.IFNONNULL  ","SuperInIntroduction":"     ","AssertionViolatedException":" extendMessage getMessage main detailMessage org.aspectj.apache.bcel.verifier.exc.AssertionViolatedException  Thanks to Java, the constructor call here must be first.\r\n ","Test100":" target beforeA  ataspectj.misuse.Test100  invalid before advice since use Pjp\r\n ","UnsupportedPointcutPrimitiveException":" getUnsupportedPrimitive getInvalidPointcutExpression serialVersionUID unsupportedPrimitive pointcutExpression org.aspectj.weaver.tools.UnsupportedPointcutPrimitiveException  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","KindedPointcut":" getSignature couldMatchKinds couldEverMatchSameJoinPointsAs fastMatch matchInternal warnOnConfusingSig equals hashCode toString postRead write read resolveBindings findResidueInternal concretize1 parameterizeWith getKind accept kind signature matchKinds munger org.aspectj.weaver.patterns.KindedPointcut  only set after concretization\r\n  Don't do all this processing if we don't need to !\r\n  no warnings for declare error  warning never needed if the declaring type is any\r\n  warning not needed if match type couldn't ever be the declaring type\r\n  exact declaring type then warning not needed.\r\n  this will be reported elsewhere.\r\n  XXX Put out another XLINT in this case?\r\n  PR60015 - Don't report the warning if the declaring type is object and 'this' is an interface\r\n  Bug fix 60936\r\n  no parameterized types\r\n  fields can't have a void type!\r\n  no parameterized types in declaring type position\r\n  no throwable parameterized types\r\n  no throwable parameterized types\r\n  no throwable parameterized types\r\n  list in capturing type identifiers.\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#couldMatchKinds()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","NoReturnTypeInDesignator":"     ","IndeterminateArgType":"     ","Ajc11CompilerAdapterTest":" tearDown testCompilerAdapterWithAjc testCompilerAdapterWithAjcRecursively getJavac setupTracingJava log LOGGING tempFiles org.aspectj.tools.ant.taskdefs.Ajc11CompilerAdapterTest  XXX unverified\r\n  XXX unverified\r\n  expecting full recompile - pre-cleaned\r\n  XXX assumes module dir, doc loc\r\n  XXX assumes tracing example\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","GeneratingDuplicateNamedAdviceMethodsInAbstractAspectsWithExtendedAspect":"     ","AnonymousMethodLookup":" main foo  AnonymousMethodLookup C  ","PushInstruction":"   org.aspectj.apache.bcel.generic.PushInstruction  ","SwitchBounds":" minZero maxZero minMax fiveMins main  SwitchBounds  ","Trouble":"     ","And":" accept toString equals getLeft getRight left right org.aspectj.weaver.ast.And  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","EclipseSourceLocation":" getCompilationResult getOffset getStartPos getEndPos getSourceFile getLine getColumn getEndLine getContext toString hashCode equals getSourceFileName NO_CONTEXT result startPos endPos filename file startLine endLine column context hashCode org.aspectj.ajdt.internal.compiler.lookup.EclipseSourceLocation  EclipseSourceContext eclipseContext;\r\n  lazy but final\r\n  new String(result.fileName));\r\n  || (0 == result.fileName.length)) {\r\n  1-based\r\n  JJH added check that lineNumber is in legal range to avoid exceptions\r\n  ?? which of n>1 problems?\r\n  other parts important?\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","MainWrapper":" main runInOurThreadGroup loadAllClasses reportException PROP_NAME CLASSDIR_NAME SIGNAL_EXCEPTION_NAME FAIL_ON_EXCEPTION_NAME FAIL_ON_EXCEPTION SIGNAL_EXCEPTION OUT_STREAM result org.aspectj.internal.tools.ant.taskdefs.MainWrapper  todo public class controls - yuck\r\n  access classname from jvm arg\r\n  this will fail if the class is not available from this classloader\r\n  will fail if no main method\r\n  if user also request loading of all classes...\r\n  setup: this try block is for loading main method - return -1 if fail\r\n  run: this try block is for running things - get Throwable from our thread here\r\n  todo: InterruptedException might be benign - retry?\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ExampleMain":" main  tracing.ExampleMain  /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","XMLWriterTest":" testUnflattenList checkUnflattenList  org.aspectj.testing.xml.XMLWriterTest  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Ann":"     ","OpenListIteration":"     ","PointcutLibraryTest":"     ","ModifiersPatternTestCase":" testMatch makeModifiersPattern checkMatch checkMatch testSerialization checkSerialization world org.aspectj.weaver.patterns.ModifiersPatternTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AroundArgsWeaveTestCase":" testWeave  org.aspectj.weaver.bcel.AroundArgsWeaveTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","IMessageHandler":" handleMessage isIgnoring dontIgnore handleMessage isIgnoring dontIgnore SYSTEM_ERR SYSTEM_OUT THROW org.aspectj.bridge.IMessageHandler  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DefaultTypePattern":" getDetail setDetail propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty clone0 subtreeMatch0 accept0 treeSize detail org.aspectj.org.eclipse.jdt.core.dom.DefaultTypePattern  allow default implementation to flag the error\r\n  dispatch to correct overloaded match method\r\n ","Instanceof":" accept toString equals getVar getType var type org.aspectj.weaver.ast.Instanceof  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","InterfaceI":" foo  foo.InterfaceI  ","TopFrame":" init refreshBuildMenu setEditorPanel fixButtonBorders jbInit exit_menuItem_actionPerformed this_windowClosing quit treeMode_comboBox_actionPerformed save_button_actionPerformed this_windowClosed showMessagesPanel hideMessagesPanel jMenuItem1_actionPerformed projectBuild_menuItem_actionPerformed run_button_actionPerformed projectRunOther_menuItem_actionPerformed projectRun_menuItem_actionPerformed build_button_actionPerformed options_button_actionPerformed editConfig_button_actionPerformed resetSourceEditorPanel svProperties_menuItem_actionPerformed openConfig_button_actionPerformed closeConfig_button_actionPerformed buildFresh build runInSameVM runInNewVM serialVersionUID CURRENT_DIR statusText_label editor_panel sourceEditor_panel menuBar jMenu1 jMenu2 projectBuild_menuItem left_flowLayout jMenuItem1 exit_menuItem top_splitPane borderLayout3 projectRun_menuItem projectRunOther_menuItem status_panel borderLayout4 emptyBorder toolbar_panel right_splitPane messages_panel tools_menu joinpointProbe_menuItem projectDebug_menuItem svProperties_menuItem lastChosenDir toolBar_panel build_toolBar closeConfig_button openConfig_button run_button project_toolBar save_button options_button editConfig_button file_toolBar filler_panel borderLayout5 borderLayout6 border8 jLabel1 jLabel2 multiView_panel buildCombo serialVersionUID serialVersionUID org.aspectj.tools.ajbrowser.TopFrame  private AJButtonMenuCombo lastBuildCombo = null;\r\n  private BorderLayout borderLayout1 = new BorderLayout();\r\n  this.fileStructure_panel = fileStructurePanel;\r\n  bindKeys();\r\n  browser_panel.setFont(new java.awt.Font(\"Dialog\", 0, 11));\r\n  structureView_pane.add(browser_panel, JSplitPane.LEFT);\r\n  file_toolBar.add(editConfig_button, null);\r\n  jMenu2.add(projectDebug_menuItem);\r\n  Ajde.getDefault().getConfigurationManager().editConfigFile(UiManager.getDefault().getViewManager().getCurrConfigFile());\r\n  .replace('\\\\', ' /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","TopLevelAround":"     ","BugCase2":" setAge twiceAsOld main setAge main a BugCase2 Foo  ","BugCase1":" setAge twiceAsOld main setAge main a BugCase1 Foo  ","NotThis":"     ","Point":" getCurrVal getX getY setX setY incrXY check getX setX getY setY move toString getShape getX setX getY setY move toString getShape getX getY setRectangular setX setY offset toString getX getY getTheta getRho setRectangular setPolar rotate offset makePolar makeRectangular toString main getX getY setX setY getColor setColor getX getY setX setY getColor setColor addObserver removeObserver notifyObservers getX setX getY setY move toString getShape getX setX getY setY move toString getShape getX getY setX setY move toString getShape getX getY setX setY moveBy getCurrVal getX getY setX setY incrXY check move getX getY getTheta getRho setRectangular setPolar rotate offset makePolar makeRectangular toString main getX getY setRectangular setX setY offset toString xx x y currVal name c b a _x _y HEIGHT WIDTH _x _y HEIGHT WIDTH x y x y theta rho polar rectangular x y color observers x y color _x _y HEIGHT WIDTH _x _y HEIGHT WIDTH _x _y HEIGHT WIDTH x y xx x y currVal name c b a x y x y theta rho polar rectangular x y figures.primitives.planar.Point figures.primitives.planar.PointBoundsException figures.primitives.planar.BoundedPoint figures.primitives.planar.StrictlyBoundedPoint figures.Point figures.Point bean.Point introduction.Point ca.ubc.cs.spl.aspectPatterns.examples.observer.aspectj.Point ca.ubc.cs.spl.aspectPatterns.examples.observer.java.Point figures.Point figures.Point figures.Point figures.Point figures.primitives.planar.Point figures.primitives.planar.PointBoundsException figures.primitives.planar.BoundedPoint figures.primitives.planar.StrictlyBoundedPoint org.aspectj.examples.Point introduction.Point bean.Point  /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n*/\r\n /*\r\n  Copyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\n  Use and copying of this software and preparation of derivative works based\r\n  upon this software are permitted.  Any distribution of this software or\r\n  derivative works must comply with all applicable United States export control\r\n  laws.\r\n\r\n  This software is made available AS IS, and Xerox Corporation makes no warranty\r\n  about the software, its performance or its conformity to any specification.\r\n*/\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n /*\r\n  Copyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\n  Use and copying of this software and preparation of derivative works based\r\n  upon this software are permitted.  Any distribution of this software or\r\n  derivative works must comply with all applicable United States export control\r\n  laws.\r\n\r\n  This software is made available AS IS, and Xerox Corporation makes no warranty\r\n  about the software, its performance or its conformity to any specification.\r\n*/\r\n /*\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n*/\r\n","TryCatchFinally":" main m1 m2 m3 m1v m2v m3v  TryCatchFinally  ","BcelShadow":" copyInto getIWorld deleteNewAndDup retargetFrom addAdvicePreventingLazyTjp prepareForMungers getRange setRange getSourceLine getEnclosingType getEnclosingClass getWorld makeConstructorExecution makeStaticInitialization makeExceptionHandler findHandlerParamName makeIfaceInitialization initIfaceInitializer makeUnfinishedInitialization makeUnfinishedPreinitialization makeMethodExecution init makeMethodExecution makeShadowForMethod makeAdviceExecution makeConstructorCall makeArrayConstructorCall makeMonitorEnter makeMonitorExit makeMethodCall makeShadowForMethodCall makeFieldGet makeFieldSet retargetAllBranches terminatesWithReturn arg0HoldsThis getThisVar getThisAnnotationVar getTargetVar getTargetAnnotationVar getArgVar getArgAnnotationVar getKindedAnnotationVar getWithinAnnotationVar getWithinCodeAnnotationVar getThisJoinPointStaticPartVar getThisEnclosingJoinPointStaticPartVar requireThisJoinPoint getThisJoinPointVar initializeThisJoinPoint checkLazyTjp loadThisJoinPoint createThisJoinPoint getThisJoinPointStaticPartBcelVar getThisJoinPointStaticPartBcelVar getThisEnclosingJoinPointStaticPartBcelVar getEnclosingCodeSignature makeArgsObjectArray initializeThisVar initializeTargetVar ensureTargetTypeIsCorrect initializeArgVars initializeForAroundClosure initializeThisAnnotationVars initializeTargetAnnotationVars initializeArgAnnotationVars getRelevantMember getAnnotations initializeKindedAnnotationVars findMethod2 findMethod findField initializeWithinAnnotationVars initializeWithinCodeAnnotationVars weaveBefore weaveAfter weaveAfterReturning findReturnInstructions generateReturnInstructions hasANonVoidReturnType getAfterReturningAdviceDispatchInstructions insertAdviceInstructionsForBindingReturningParameter retargetReturnInstruction isLastInstructionInRange weaveAfterThrowing weaveSoftener weavePerObjectEntry weavePerTypeWithinAspectInitialization weaveCflowEntry weaveAroundInline getRedoneProceedCall bindsThisOrTarget visit visit visit visit getRedoneProceedCallForAnnotationStyle bindsThis bindsTarget visit visit visit visit visit visit visit visit weaveAroundClosure makeCallToCallback makeClosureInstantiation makeProceedArgumentMap makeClosureClassAndReturnConstructor extractMethod addPreInitializationReturnCode getSuperConstructorParameterTypes makeRemap createMethodGen samePackage addType addTypeToEnd genTempVar genTempVar genTempVarIndex getFactory getSourceLocation getEnclosingShadow getEnclosingMethod isFallsThrough setActualTargetType getActualTargetType range world enclosingMethod appliedLazyTjpOptimization actualInstructionTargetType badAdvice thisVar targetVar argVars kindedAnnotationVars thisAnnotationVars targetAnnotationVars argAnnotationVars withinAnnotationVars withincodeAnnotationVars thisJoinPointVar isThisJoinPointLazy lazyTjpConsumers thisJoinPointStaticPartVar bindsThisOrTarget usesThis usesTarget org.aspectj.weaver.bcel.BcelShadow  SECRETAPI - for testing, this will tell us if the optimization succeeded *on the last shadow processed*\r\n  from the signature (pr109728) (1.4 declaring type issue)\r\n  by the actual instruction we care about.\r\n  we must be in statement context.\r\n  XXX see next XXX comment\r\n  Now make any jumps to the 'new', the 'dup' or the 'end' now target the nextHandle\r\n  records advice that is stopping us doing the lazyTjp optimization\r\n  at a handler jp and only before advice is supported) (pr46298)\r\n  int positionOffset = (hasTarget() ? 1 : 0) + ((hasThis() && !getKind().isTargetSameAsThis()) ? 1 : 0);\r\n  the store instruction\r\n  pr74952\r\n  no new  the arg-setup code, the start of the running code, and the end of the running code.\r\n  world.isXlazyTjp();   can't build tjp lazily, no suitable test...\r\n  on the stack.\r\n  easier than deleting it ...\r\n  an incorrect aload.\r\n  the one from the enclosingMethod declarationLineNumber if available.\r\n  overrides\r\n  move the start past ajc$preClinit\r\n  System.out.println(\"got store: \" + startOfHandler.getInstruction() + \", \" + index);\r\n  this call marks the instruction list as changed\r\n  UnresolvedType inType = constructor.getEnclosingClass().getType();\r\n  r.associateWithTargets(start, end);\r\n  ret.fallsThrough = true;\r\n  world.makeMethodSignature(enclosingMethod));\r\n  all the arguments in temps.\r\n  (FieldInstruction) getHandle.getInstruction()),\r\n  this doesn't do the right thing for calls in the pre part of introduced constructors.\r\n  FIXME asc Why bother with this if we always return one?\r\n  Even if we can't find one, we have to return one as we might have this annotation at runtime\r\n  FIXME asc why bother with this if we always return one?\r\n  Even if we can't find one, we have to return one as we might have this annotation at runtime\r\n  reflective thisJoinPoint support\r\n  }\r\n  make sure any state needed is initialized, but throw the instructions out\r\n  special case only one lazyTjpUser\r\n  do we know enough to bother reporting?\r\n  check for around advice\r\n  If not lazy, its already been built and stored, just retrieve it\r\n  If we're lazy, build the join point right here.\r\n  Does someone else need it? If so, store it for later retrieval\r\n  TAG:SUPPORTING12: We didn't have different jpsp types in 1.2\r\n  the enclosing of an execution is itself\r\n  is correctly the signature of the ctor.\r\n  ??? need to better understand all the enclosing variants\r\n  gotta pop off the args before we find the target\r\n  Lets go back through the code from the start of the shadow\r\n  ignore this instruction - it doesnt give us the info we want\r\n  A load instruction may tell us the real type of what the clone() call is on\r\n  A field access instruction may tell us the real type of what the clone() call is on\r\n  Just use a standard java.lang.object array - that will work fine\r\n  A new array instruction obviously tells us it is an array type !\r\n  Just use a standard java.lang.object array - that will work fine\r\n  A multi new array instruction obviously tells us it is an array type !\r\n  System.out.println(\"   hasThis: \" + hasThis() + \", hasTarget: \" + hasTarget());\r\n  we move backwards because we're popping off the stack\r\n  what about annotations we havent gotten yet but we will get in subclasses?\r\n  check the ITD'd dooberries\r\n  then the last arg of the above should be true\r\n  check the ITD'd dooberries\r\n  AjcMemberMaker.interMethodBody(fakerm,typeMunger.getAspectType()));\r\n  didn't find in ITDs, look in supers\r\n  FIXME asc Refactor this code, there is duplication\r\n  ResolvedMember rm[] = relevantType.getDeclaredMethods();\r\n  check the ITD'd dooberries\r\n  if (fakerm.hasAnnotations())\r\n  We can't have recognized the shadow - should blow up now to be on the safe side\r\n  String searchString = getSignature().getName()+getSignature().getParameterSignature();\r\n  FIXME asc whats the real diff between this one and the version in findMethod()?\r\n  For some shadow we are interested in annotations on the method containing that shadow.\r\n  list of instructions that handle the actual return from the join point\r\n  variable that holds the return value\r\n  we need at least one instruction, as the target for jumps\r\n  list of instructions for dispatching to the advice itself\r\n  so ignore RETURN\r\n  at the end of the instruction list...\r\n  we have to dup the return val before consuming it...\r\n  store the return value into this var\r\n  a shadow, inside me).\r\n  throw (ExceptionInInitializerError)exc;\r\n  ???Type.THROWABLE,\r\n  ???Type.THROWABLE,\r\n  high priority if our args are on the stack\r\n  a shadow, inside me).\r\n  ??? special\r\n  ENH 42737\r\n  aload_1\r\n  instanceof class java  ifeq go to new SOFT_EXCEPTION_TYPE instruction\r\n  aload_1\r\n  athrow\r\n  handler.append(fact.NOP);\r\n  high priority if our args are on the stack\r\n  ??? would be nice to abstract that to say things only once\r\n  Don't initialize statics in\r\n  This should be getting managed by a counter - lets make sure.\r\n  arrayVar.appendLoad(entrySuccessInstructions, fact);\r\n  this is the same for both per and non-per\r\n  !!! THIS BLOCK OF CODE SHOULD BE IN A METHOD CALLED weaveAround(...);\r\n  Member originalSig = mungerSig;   ??? might want some checks here to give better errors\r\n  }\r\n  Note: for code style, this is done at Aspect compilation time.\r\n  we see one pjp passed around - dangerous\r\n  remember this decision to avoid re-analysis\r\n  specific test for @AJ proceedInInners\r\n  ??? should consider optimizations to recognize simple cases that don't require body extraction\r\n  start by exposing various useful things into the frame\r\n  eg. \"private static final void method_aroundBody0(M, M, String, org.aspectj.lang.JoinPoint)\"\r\n  now extract the advice into its own method\r\n  System.err.println(\"recip \" + recipientFileName);\r\n  the beginning of the parameter list\r\n  ??? we don't actually need to push NULL for the closure if we take care\r\n  (fact, getWorld(), munger.getSignature()));\r\n  adviceMethodInvocation =\r\n  InstructionHandle adviceMethodInvocation;\r\n  InstructionHandle endNop = range.insert(fact.NOP, Range.InsideAfter);\r\n  and actually add the whole mess to the shadow\r\n  [TODO document @AJ code rule: don't manipulate 2 jps proceed at the same time.. in an advice body]\r\n  proceed with args as a boxed Object[]\r\n  inlining support for code style aspects\r\n  remove this*JoinPoint* as arguments to proceed\r\n  System.out.println(\"stateTypes: \" + Arrays.asList(stateTypes));\r\n  throw new RuntimeException(\"unimplemented\");\r\n  from localAdvice signature\r\n  STORE the Object[] into a local variable\r\n  STORE the ProceedingJoinPoint instance into a local variable\r\n  then the arguments to the 'new' proceed call need to be reorganized. (pr126167)\r\n  join point this and target are the same (eg. call)\r\n  use local variable 0 (which is 'this' for a non-static method)\r\n  they have supplied new this as first entry in object array\r\n  from localAdvice signature\r\n  store the Object[] array on stack if proceed with args\r\n  do the callback invoke\r\n  box it again. Handles cases where around advice does return something else than Object\r\n  MOVE OUT ALL THE INSTRUCTIONS IN MY SHADOW INTO ANOTHER METHOD!\r\n  cannot happen in around advice\r\n  put \"this\" back on the stack\r\n  initialize the bit flags for this shadow\r\n  stick the bitflags on the stack and call the variant of linkClosureAndJoinPoint that takes an int\r\n  ATAJ for @AJ aspect we need to link the closure with the joinpoint instance\r\n  invoke the advice\r\n  remember to render tjps\r\n  exposed for testing\r\n  LazyMethodGen constructor) {\r\n  final Type objectArrayType = new ArrayType(Type.OBJECT, 1);\r\n  XXX we don't know why this is required\r\n  need this test to avoid args bound via cflow\r\n  constructor\r\n  method\r\n  int proceedVarIndex = 1;\r\n  int stateVarIndex = runMethod.allocateLocal(1);\r\n  class\r\n  convert thing on top of stack to object\r\n  push object array\r\n  swap\r\n  do object array store.\r\n  assert getKind() == PreInitialization\r\n  thisVar guaranteed to be 0\r\n  passing in a target too\r\n  assert targetVar == thisVar\r\n  point.\r\n  }\r\n  they will still refer to the subtype.\r\n  join point, it is unnecessary to accept (and pass) tjp.\r\n  UnresolvedType.getNames(getSignature().getExceptions(world)),\r\n  }\r\n  eh doesn't think we need to garbage collect these (64K is a big number...)\r\n  For staticinitialization, if we have a nice offset, don't build a new source loc\r\n  System.err.println(this + \": \" + range);\r\n  fallsThrough;\r\n /*<UnresolvedType,BcelVar>*/\r\n /*<UnresolvedType,BcelVar>*/\r\n /*<UnresolvedType,BcelVar>*/\r\n /*<UnresolvedType,BcelVar>*/\r\n /*<UnresolvedType,BcelVar>*/\r\n /*<UnresolvedType,BcelVar>*/\r\n /* PR 72528\r\n     * This method double checks the target type under certain conditions.  The Java 1.4\r\n     * compilers seem to take calls to clone methods on array types and create bytecode that\r\n     * looks like clone is being called on Object.  If we advise a clone call with around\r\n     * advice we extract the call into a helper method which we can then refer to.  Because the\r\n     * type in the bytecode for the call to clone is Object we create a helper method with\r\n     * an Object parameter - this is not correct as we have lost the fact that the actual\r\n     * type is an array type.  If we don't do the check below we will create code that fails\r\n     * java verification.  This method checks for the peculiar set of conditions and if they\r\n     * are true, it has a sneak peek at the code before the call to see what is on the stack.\r\n     */\r\n /* Implementation notes:\r\n\t\t * \r\n\t\t * AroundInline still extracts the instructions of the original shadow into \r\n\t\t * an extracted method.  This allows inlining of even that advice that doesn't\r\n\t\t * call proceed or calls proceed more than once. \r\n\t\t * \r\n\t\t * It extracts the instructions of the original shadow into a method.\r\n\t\t * \r\n\t\t * Then it extracts the instructions of the advice into a new method defined on\r\n\t\t * this enclosing class.  This new method can then be specialized as below.\r\n\t\t * \r\n\t\t * Then it searches in the instructions of the advice for any call to the\r\n\t\t * proceed method.\r\n\t\t * \r\n\t\t *   At such a call, there is stuff on the stack representing the arguments to\r\n\t\t *   proceed.  Pop these into the frame.\r\n\t\t * \r\n\t\t *   Now build the stack for the call to the extracted method, taking values \r\n\t\t *   either from the join point state or from the new frame locs from proceed.\r\n\t\t *   Now call the extracted method.  The right return value should be on the\r\n\t\t *   stack, so no cast is necessary.\r\n\t\t *\r\n\t\t * If only one call to proceed is made, we can re-inline the original shadow.\r\n\t\t * We are not doing that presently.\r\n\t\t * \r\n\t\t * If the body of the advice can be determined to not alter the stack, or if\r\n\t\t * this shadow doesn't care about the stack, i.e. method-execution, then the\r\n\t\t * new method for the advice can also be re-lined.  We are not doing that\r\n\t\t * presently.\r\n\t\t */\r\n /*ResolvedType stateTypeX =*/\r\n /*LazyMethodGen constructor = */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n *     Alexandre Vasseur    support for @AJ aspects\r\n * ******************************************************************/\r\n","Interfaces":"     ","FCONST":" getValue getType accept value org.aspectj.apache.bcel.generic.FCONST  ","PR590a":"     ","JSR_W":" dump initFromFile accept  org.aspectj.apache.bcel.generic.JSR_W  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","ClassLoaderWeavingAdaptorTest":" testClassLoaderWeavingAdaptor testGetNamespace testGeneratedClassesExistFor testFlushGeneratedClasses  org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptorTest  ","AnnotationValue":" stringify whatKindIsThis valueKind STRING ENUM_CONSTANT CLASS ANNOTATION ARRAY PRIMITIVE_INT PRIMITIVE_BYTE PRIMITIVE_CHAR PRIMITIVE_DOUBLE PRIMITIVE_FLOAT PRIMITIVE_LONG PRIMITIVE_SHORT PRIMITIVE_BOOLEAN org.aspectj.weaver.AnnotationValue  byte\r\n  char\r\n  double\r\n  float\r\n  int\r\n  long\r\n  short\r\n  boolean\r\n  String\r\n  Enum constant\r\n  Class\r\n  Annotation\r\n  Array\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","DumpTestTheDump":" aroundMethod  ataspectj.DumpTestTheDump  ","TypeFactory":" createParameterizedType createUnresolvedParameterizedType createRawType convertSigToType createTypeFromSignature createTypeParams  org.aspectj.weaver.TypeFactory  try and find the generic type...\r\n  pType.setSourceContext(aBaseType.getSourceContext());\r\n  rType.setSourceContext(aBaseType.getSourceContext());\r\n  could be a primitive\r\n  UnresolvedType bound2 = convertSigToType(signature.substring(1));\r\n  ? extends ...\r\n  UnresolvedType bound2 = convertSigToType(signature.substring(1));\r\n  Should be an inner type of a parameterized type - could assert there is a '$' in the signature....\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","SwitchStmtLocals":" main realMain i SwitchStmtLocals  ","Node":" accept visit clear add addNode getNodes getItems toString EMPTY_NODES EMPTY_ITEMS name type key typeArray nodes items org.aspectj.apache.bcel.classfile.Node org.aspectj.testing.util.Node  XXX synchronize\r\n  XXX render\r\n /*\r\n * Node.java created on May 14, 2002\r\n *\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Test019":" itsAFoo  ataspectj.misuse.Test019  \"@AfterReturning with wrong number of args\"\r\n ","Test017":"     ","Test018":"   A  ","Test015":" someCall  A  ","Test016":" someCall someCall  ataspectj.misuse.Test016 A  \"@Pointcut with throws clause\"\r\n ","WithinTestCase":" testMatch makePointcut checkMatch checkSerialization world org.aspectj.weaver.patterns.WithinTestCase  \r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AroundChangeThis":"     ","Test013":" someCall  A  ","Test014":" somecall beforeA afterA aroundA afterAT2 afterAT afterAR2 afterAR getX2 X X2 ataspectj.misuse.Test014  \"@Pointcut with garbage string\"\r\n ","Test022":" someCall  A  ","ExceptionHandler":" getExceptionType getHandlerStart catchtype handlerpc org.aspectj.apache.bcel.verifier.structurals.ExceptionHandler  ","Test023":"     ","Test020":" someCall  ataspectj.misuse.Test020  \"@Before on non-public method\"\r\n ","Test021":" someCall  ataspectj.misuse.Test021  \"@Before on method not returning void\"\r\n ","GenericTest":" main h GenericTest  initDec,\r\n  check we've checking all decs in aspect A and class C\r\n ","SwingTreeViewNode":" getStructureNode getIcon add add remove getChildren getKind getRelationshipName toString serialVersionUID relationshipName programElement icon kind org.aspectj.ajde.ui.swing.SwingTreeViewNode  import org.aspectj.ajde.ui.IStructureViewNode.Kind;\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","KeywordPointcut":" main realMain  KeywordPointcut  ","CompilerDumpTestCase":" setUp tearDown testDump testDumpWithWarnings testWithErrors PROJECT_DIR baseDir dumpFile savedDumpCondition org.aspectj.ajdt.internal.compiler.batch.CompilerDumpTestCase  ","NestedInners":" main m counter NestedInners Outer  ","IncorrectXlintOnInterface":"     ","FRETURN":" accept  org.aspectj.apache.bcel.generic.FRETURN  ","AnnotationStringElement":"     ","Ajava":" getAddress getAddress  Ajava t.Ajava  ","SimpleElementValueGen":" getElementValue getIndex getValueString getValueInt stringifyValue dump idx org.aspectj.apache.bcel.generic.annotation.SimpleElementValueGen  For 'class' this points to the class entry in the cpGen\r\n  cpool.getConstant(SimpleElementValuevalue.getIndex())\r\n  Whatever kind of value it is, return it as a string\r\n  u1 kind of value\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","ClassQueue":" enqueue dequeue empty toString vec org.aspectj.apache.bcel.util.ClassQueue  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","Test008":" someCall someCall  ataspectj.misuse.Test008 A  \"@Pointcut not returning void\"\r\n ","Test009":"   A  ","InterfaceMethodDeclarationNonPublic":"     ","Test006":" someCall someCall  ataspectj.misuse.Test006 ataspectj.misuse.Test006B A B  shouldn't allow advice in a non-aspect type\r\n  \"class with @Before extending @Aspect class\"\r\n ","Test007":"     ","Test004":"     ","Code":" accept dump getAttributes getLineNumberTable getLocalVariableTable getCode getExceptionTable getMaxLocals getMaxStack getInternalLength calculateLength setAttributes setCode setExceptionTable setMaxLocals setMaxStack toString toString copy max_stack max_locals code_length code exception_table_length exception_table attributes_count attributes org.aspectj.apache.bcel.classfile.Code  Maximum size of stack used by this method\r\n  Number of local variables\r\n  Length of code in bytes\r\n  Actual byte code\r\n  Table of handled exceptions\r\n  Attributes of code: LineNumber\r\n  or LocalVariable\r\n  Initialize with some default values which will be overwritten later\r\n  Read byte code\r\n  Overwrites length!\r\n  Adjust length\r\n /* Read exception table that contains all regions where an exception\r\n     * handler is active, i.e., a try { ... } catch() block.\r\n     */\r\n /* Read all attributes, currently `LineNumberTable' and\r\n     * `LocalVariableTable'\r\n     */\r\n /* Adjust length, because of setAttributes in this(), s.b.  length\r\n     * is incorrect, because it didn't take the internal attributes\r\n     * into account yet! Very subtle bug, fixed in 3.1.1.\r\n     */\r\n /*max_stack*/\r\n /*max_locals*/\r\n /*code length*/\r\n /*byte-code*/\r\n /*exception-table length*/\r\n /* exception table */\r\n","Test005":"   ataspectj.misuse.Test005 A B  \"@Aspect class extending @Aspect class\"\r\n ","BcelGenericSignatureToTypeXTestCase":" testEnumFromHell testColonColon testEnumFromHell testColonColon  org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXTestCase org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXTestCase  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","Test002":"     ","Test003":"     ","Test011":" someCall  A  ","Test012":" someCall  A  ","EclipseShadow":" getIWorld getEnclosingType getSourceLocation getEnclosingCodeSignature getThisVar getTargetVar getArgVar getThisJoinPointVar getThisJoinPointStaticPartVar getThisEnclosingJoinPointStaticPartVar getArgAnnotationVar getKindedAnnotationVar getTargetAnnotationVar getThisAnnotationVar getWithinAnnotationVar getWithinCodeAnnotationVar makeShadow world astNode context org.aspectj.ajdt.internal.compiler.lookup.EclipseShadow  XXX need to fill this in ASAP\r\n  ??? these should be ignored, they don't have shadows\r\n  super calls don't have shadows\r\n  XXX make sure we're getting the correct declaring type at call-site\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","HierarchyWalker":" preProcess postProcess process  org.aspectj.asm.HierarchyWalker  /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","PrivateClass":"     ","Test010":"   ataspectj.misuse.Test010 A  \"@Aspect on interface\"\r\n ","CflowInitInAspectVariantsBefore":"     ","TypePatternImpl":" asString toString typePattern org.aspectj.internal.lang.reflect.TypePatternImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.TypePattern#asString()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","VisitorProtocol":"     ","AdviceDeclaration":" generateInfoAttributes makeAttribute resolveStatements getDeclaredParameterCount generateProceedMethod generateCode determineExtraArgumentFlags resize addAtAspectJAnnotations buildArgNameRepresentation postParse checkAndSetModifiers addTjpArguments makeFinalArgument extendArgumentsLength printBody printReturnType propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty internalGetChildListProperty internalJavadocProperty getNodeType0 getPointcut setPointcut parameters thrownExceptions getBody setBody memSize treeSize internalModifiersProperty internalModifiers2Property pointcutDesignator baseArgumentCount extraArgument kind extraArgumentFlags proceedMethodBinding proceedCalls proceedInInners proceedCallSignatures formalsUnchangedToProceed declaredExceptions JAVADOC_PROPERTY PARAMETERS_PROPERTY POINTCUT_PROPERTY THROWN_EXCEPTIONS_PROPERTY BODY_PROPERTY PROPERTY_DESCRIPTORS_2_0 PROPERTY_DESCRIPTORS_3_0 parameters pointcut thrownExceptions optionalBody org.aspectj.ajdt.internal.compiler.ast.AdviceDeclaration org.aspectj.org.eclipse.jdt.core.dom.AdviceDeclaration  set during parsing\r\n  referenced by IfPseudoToken.makeArguments\r\n  set during parsing, referenced by Proceed\r\n  set during parsing, referenced by Proceed and AsmElementFormatter\r\n  set during this.resolveStaments, referenced by Proceed\r\n  populated during Proceed.findEnclosingAround\r\n  override\r\n  !!! safety\r\n  upperScope);\r\n  XXX set these correctly\r\n  System.err.println(\"proceed in inner: \" + call);\r\n  proceedInInners so that we won't try to inline this body\r\n  if we have proceed in inners we won't ever be inlined so the code below is unneeded\r\n  override\r\n  this only works before code generation\r\n  called by Proceed.resolveType\r\n  push the closure\r\n  call run\r\n  override\r\n  override, Called by ClassScope.postParse\r\n  called by IfPseudoToken\r\n  XXX encode start and end location\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  allow default implementation to flag the error\r\n  allow default implementation to flag the error\r\n  ajh02: should add one like ADVICE_DECLARATION or something\r\n  a MethodDeclaration may occur in a Block - must check cycles\r\n  ajh02: stub. I don't know what this is meant to do\r\n  ajh02: stub method. I don't know what this does\r\n  ajh02: stub method. I don't know what this does\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t * @since 3.0\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n","INVOKEVIRTUAL":" getExceptions accept  org.aspectj.apache.bcel.generic.INVOKEVIRTUAL  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","Group":" add members move resetIdentifier toString getBounds contains paint size add members move resetIdentifier toString getBounds contains paint size add members move resetIdentifier toString getBounds contains paint size add members move resetIdentifier toString getBounds contains paint size add members move setIdentifier toString getBounds contains paint size _members _identifier _members _identifier _members _identifier _members _identifier _members _identifier figures.Group figures.Group figures.Group figures.Group figures.Group  /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","ParamTag":"   org.aspectj.ajdoc.ParamTag  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","BasicType":" getType equals  org.aspectj.apache.bcel.generic.BasicType  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","ExposedType":"     ","Aspectj5rtModuleTests":" suite  org.aspectj.runtime.Aspectj5rtModuleTests  default package\r\n ","FieldyHelloWorld":" main str org.aspectj.weaver.test.FieldyHelloWorld  /* Copyright (c) 2002 Contributors.\r\n * \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n */\r\n","IElementHandleProvider":" createHandleIdentifier createHandleIdentifier createHandleIdentifier getFileForHandle getLineNumberForHandle getOffSetForHandle dependsOnLocation initialize  org.aspectj.asm.IElementHandleProvider  /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","PrintableFlyweight":" print print  ca.ubc.cs.spl.aspectPatterns.examples.flyweight.aspectj.PrintableFlyweight ca.ubc.cs.spl.aspectPatterns.examples.flyweight.java.PrintableFlyweight  ","AspectJElementHierarchy":" getElement getRoot setRoot addToFileMap removeFromFileMap setFileMap findInFileMap getFileMapEntrySet isValid findElementForSignature findElementForLabel findElementForType findClassInNodes findElementForSourceFile findElementForSourceLine findElementForSourceLine findElementForOffSet createFileStructureNode findNodeForSourceLineHelper matches hasMoreSpecificChild getConfigFile setConfigFile findElementForHandle findElementForHandleOrCreate findElementForHandle cache flushTypeMap flushHandleMap flushFileMap updateHandleMap getFilename getCanonicalFilePath serialVersionUID root configFile fileMap handleMap typeMap org.aspectj.asm.internal.AspectJElementHierarchy  this searches each file for a class\r\n  findFileNode(filePath, model);\r\n  SourceFilePath might have originated on windows on linux...\r\n  '!' is used like in URLs  \"c:  we are a binary aspect in the default package\r\n  fileNode.setSourceLocation();\r\n  );\r\n  try the cache first...\r\n  findElementForHandle() to mirror behaviour before pr141730\r\n  Only delete the entries we need to from the handle map - for performance reasons\r\n  TODO rename this method ... it does more than just the handle map\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n *     Andy Clement    Extensions for better IDE representation\r\n * ******************************************************************/\r\n","Test001":"     ","AnnotationDeclaringType":"     ","Java14Tests":" suite getSpecFile test001 test002 test003 test006 test007 test008 test009 test010 test011 test012 test013 test014 test015 test016 test017 test018 test019 test020 test021  org.aspectj.systemtest.java14.Java14Tests  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","AspectOnInterface":"     ","StringPrototypes":"     ","Asp":"     ","MainSilent":" target main  ataspectj.ltwlog.MainSilent  ","GenericsErasureTesting":" testLoadingGenerics getSignatureAttribute  org.aspectj.apache.bcel.classfile.tests.GenericsErasureTesting  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement (IBM)     initial implementation \r\n * ******************************************************************/\r\n","Declare":" read resolve parameterizeWith isAdviceLike getNameSuffix setDeclaringType getDeclaringType ERROR_OR_WARNING PARENTS SOFT DOMINATES ANNOTATION declaringType org.aspectj.weaver.patterns.Declare  set when reading declare from aspect\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ExactTypePattern":" isArray couldEverMatchSameTypesAs matchesExactly matchesTypeVariable matchesExactly getType matchesInstanceof equals hashCode write read readTypePattern150 readTypePatternOldStyle toString resolveBindings parameterizeWith accept type primitiveTypesMap boxedPrimitivesMap boxedTypesMap EXACT_VERSION org.aspectj.weaver.patterns.ExactTypePattern  false is necessary but not sufficient\r\n  was this method previously coded to return false *on purpose* ??  pr124808\r\n  in our world, Object is assignable from anything\r\n  fix for PR 64262 - shouldn't try to coerce primitives\r\n  true if (matchType instanceof this.type)\r\n  rev if changed\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.TypePattern#couldEverMatchSameTypesAs(org.aspectj.weaver.patterns.TypePattern)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","InvokeInstruction":" toString consumeStack produceStack getType getMethodName getReturnType getArgumentTypes  org.aspectj.apache.bcel.generic.InvokeInstruction  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","Catastrophic":"     ","IfPCDDupMethod":"     ","Visitable":" accept  ca.ubc.cs.spl.aspectPatterns.examples.visitor.aspectj.Visitable ca.ubc.cs.spl.aspectPatterns.examples.visitor.java.Visitable  ","AnnotatedElement":" hasAnnotation getAnnotationTypes  org.aspectj.weaver.AnnotatedElement  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","TestWithMissing":" invoke main  TestWithMissing  ","StringPrototypeA":" setText toString setText toString clone text text ca.ubc.cs.spl.aspectPatterns.examples.prototype.aspectj.StringPrototypeA ca.ubc.cs.spl.aspectPatterns.examples.prototype.java.StringPrototypeA  ","StringPrototypeB":" setText toString setText toString clone text text ca.ubc.cs.spl.aspectPatterns.examples.prototype.aspectj.StringPrototypeB ca.ubc.cs.spl.aspectPatterns.examples.prototype.java.StringPrototypeB  ","ClassloaderRepositoryTest":" setUp testLocalCacheWorks testSharedCacheWorks testSharedCacheCanBeDeactivated tearDown rep1 rep2 org.aspectj.apache.bcel.classfile.tests.ClassloaderRepositoryTest  Retrieve string 5 times from same repository, 4 hits should be from local cache\r\n  Retrieve String through one repository then load again through another, should be shared cache hit\r\n  Shared cache OFF, shouldn't get a shared cache hit\r\n /*\r\n * Tests create a simple classloader repository configuration and check sharing of information.\r\n */\r\n","ReturnThis":" main foo  ReturnThis C  ","PackageFrameWriter":" generate generateClassListing packagedoc org.aspectj.tools.doclets.standard.PackageFrameWriter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","InvocationJoinPointClosureTest":" testGetStaticPartMethod testGetStaticPartConstructor testGetStaticPartException testGetArguments  org.aspectj.aopalliance.tests.InvocationJoinPointClosureTest  /*\r\n * Created on 07-May-2004\r\n *\r\n * TODO To change the template for this generated file go to\r\n * Window - Preferences - Java - Code Generation - Code and Comments\r\n */\r\n","AntSpec":" execute addStdErrSpec addStdOutSpec setVerbose setFile setTarget addExpectedMessage setBaseDir setTest populatePath DEFAULT_LTW_CLASSPATH_ENTRIES m_verbose m_ajcTest m_stdErrSpec m_stdOutSpec m_antFile m_antTarget org.aspectj.testing.AntSpec  read the Ant file\r\n  setup aj.sandbox\r\n  setup aj.dir \"modules\" folder\r\n  create the test implicit path aj.path that contains the sandbox + regular test infra path\r\n  use default target if no target specified\r\n  AjcTestCase.fail(failMessage + \"failure \" + event.getException());\r\n  make sure we listen for failure\r\n /* See if stdout/stderr matches test specification */\r\n","IntroducedFieldsNotBinding":"     ","GenericArray":"   org.aspectj.apache.bcel.verifier.structurals.GenericArray  ","CompilerRun":" setupAjcRun run toString updateBootclasspathForSourceVersion testAccessToCRSOptions testAccessToOptions copy initClone clone setIncludeClassesDir setReuseCompiler setPermitAnyCompiler setCompiler setTestSrcDirOffset addDirChanges toLongString toString setFiles setClasspath setSourceroots setXlintfile setOutjar setExtdirs setAspectpath setArgfiles getArgfilesArray doAdoptParentValues getShortCompilerName makeRunIterator getPrintName setupArgs checkResult hasInvalidOptions hasCompilerSpecErrors gatherValues handleTestArgs indexOf writeXml clone toString getOptions compilerOptions compilerClassName compilerIsLoadable RA_String JAR_SUFFIXES SOURCE_SUFFIXES spec sandbox arguments injars inpaths XMLNAME DEFAULT_COMPILER SEEK_PREFIX SEEK_MESSAGE_PREFIX CRSOPTIONS NAMES compiler reuseCompiler permitAnyCompiler includeClassesDir testSetup argfiles aspectpath classpath sourceroots extdirs testSrcDirOffset xlintfile outjar compilerName ignoreWarningsSet ignoreWarnings result failureReason seek commandOptions AJDE_COMPILER AJCTASK_COMPILER compilerOptionToLoadable crsOptions compilerFamily crsIncrementalOption crsSourceOption crsIgnoreWarnings eclipseOption buildercompilerOption ajdecompilerOption javacOption ajctaskcompilerOption ajccompilerOption compilerOptionToClassname compilerOptions ajc10Options invalidOptions org.aspectj.testing.harness.bridge.CompilerRun  XXX what if rdir is two levels deep?\r\n  see validation of inpathPaths below due to ambiguous base dir\r\n  validate readable for sources\r\n  injars might be outjars in the classes dir...\r\n  moved after solving any injars that were outjars\r\n  hmm - duplicates validation above, verifying getBaseDirFiles?\r\n  staging - copy files\r\n  XXX make copyFiles support a filter?\r\n  continue recursion\r\n  only source files are relevant to staging\r\n  have no dots.\r\n  XXX why this? was always? || (testBaseSrcDir != sandbox.stagingDir))) {\r\n  source text files are copied when staging incremental tests\r\n  save classpath and aspectpath in sandbox for this and other clients\r\n  XXX todo set bootclasspath if set for forking?\r\n  more debugging context in case of failure\r\n  worth it to try for canonical?\r\n  put specified arguments last, for better badInput tests\r\n  add both java  XXX hack - seek on request as a side effect. reimplement as listener\r\n  throws IllegalStateException if null\r\n  setup failed\r\n  XXX around advice or template method  ignore - no version specified\r\n  use same command - see also IncCompiler.Spec.fresh\r\n  XXX need name for compilerRun\r\n  warning: HarnessSelectionTest checks for specific error wording\r\n  urk - s.b. null, but expected\r\n  or staging but no -incremental flag\r\n  set compiler in result\r\n  check compiler semantics\r\n  add toadd and finish result\r\n  update bootclasspath\r\n  not supporting 1.0 options any more\r\n  || BUILDER_COMPILER.equals(compilerName))\r\n  not supporting ajc right now\r\n  not supporting 1.0 options any more\r\n  ---- local option values\r\n  flattening two-String options, etc.\r\n  all local values should be picked up\r\n  ---- global option values\r\n  }\r\n  \"org.aspectj.ajdt.internal.core.builder.Builder.Command\";\r\n  these are options handled  compiler verification - permit but flag ajc 1.0 options\r\n  compiler options go in map\r\n  map.put(BUILDERCOMPILER_OPTION, BUILDER_COMPILER);\r\n  map.put(JAVAC_OPTION, \"XXX javac option not supported\");\r\n  options not permitted in the harness\r\n  other options added directly\r\n  workingdir above in invalid options\r\n  -warn:.. and -g  these are recognized but records with them are skipped\r\n /*String*/\r\n /*String*/\r\n /*String err =*/\r\n /*\r\n             * Describe any semantic conflicts between options.\r\n             * This skips:\r\n             * - old 1.0 options, including lenient v. strict\r\n             * - old ajc options, include !incremental and usejavac w/o javac\r\n             * - invalid eclipse options (mostly ajc) \r\n             * @param compilerName the String name of the target compiler\r\n             * @return a String describing any conflicts, or null if none\r\n             */\r\n /*\r\n            * The options field in a compiler test permits some arbitrary\r\n            * command-line options to be set.  It does not permit things\r\n            * like classpath,  aspectpath, files, etc. which are set\r\n            * using other fields in the test specification, so the options\r\n            * permitted are a subset of those permitted on the command-line.\r\n            * \r\n            * Global options specified on the harness command-line are\r\n            * adopted for the compiler command-line if they are permitted\r\n            * in the options field.  That means we have to detect each\r\n            * permitted option, rather than just letting all through\r\n            * for the compiler.\r\n            * \r\n            * Conversely, some options are targeted not at the compiler,\r\n            * but at the test itself (e.g., to ignore warnings, or to \r\n            * select a compiler.\r\n            * \r\n            * The harness can run many compilers, and they differ in\r\n            * which options are permitted.  You can specify a compiler\r\n            * as an option (e.g., -eclipse).  So the set of constraints\r\n            * on the list of permitted options can differ from test to test.\r\n            * \r\n            * The following code sets up the lists of permitted options\r\n            * and breaks out subsets for different compiler-variant checks.\r\n            * Most options are created but not named, but some options\r\n            * are named to detect corresponding values for further \r\n            * processing.  e.g., the compiler options are saved so \r\n            * we can do per-compiler option verification.\r\n            *\r\n            */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC),\r\n *               2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Wes Isberg     2003 updates\r\n * ******************************************************************/\r\n","ObserverProtocol":"     ","AroundUnlock":"     ","OperandStack":" clone clear equals getClone isEmpty maxStack peek peek pop pop push size slotsUsed toString merge initializeObject stack maxStack org.aspectj.apache.bcel.verifier.structurals.OperandStack  in some uninitialized object, we reject the code (see vmspec2, 4.9.4, last paragraph).\r\n  the known object type\r\n  note that.\r\n  if we have an uninitialized object here\r\n  on the other hand...\r\n /*  XXX change this to a better implementation using a variable\r\n\t\t    that keeps track of the actual slotsUsed()-value monitoring\r\n\t\t    all push()es and pop()s.\r\n\t\t*/\r\n","CommandReceiver":"   ca.ubc.cs.spl.aspectPatterns.patternLibrary.CommandReceiver  ","SubC1":"   p1.subp1.SubC1  ","ModelExceptionHandling":"     ","AddAtAspectJAnnotationsVisitor":" visit visit visit visit unit org.aspectj.ajdt.internal.compiler.ast.AddAtAspectJAnnotationsVisitor  /* *******************************************************************\r\n * Copyright (c) 2005 IBM Corporation Ltd\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer  initial implementation \r\n * ******************************************************************/\r\n","FinallyAndReturns":" main m m1  FinallyAndReturns  ","DefaultTraceTest":" setUp testDefaultTrace testSetTraceEnabled  org.aspectj.weaver.DefaultTraceTest  ","BrokenSwitch":"     ","UnlockSignature":"   org.aspectj.lang.reflect.UnlockSignature  ","AnnVisitor":" visitEnum visit visitAnnotation visitArray visitEnd a org.aspectj.weaver.asm.AnnVisitor  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","MarkerAnnotationInvisible":"     ","LongDistance":"   telecom.LongDistance  /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","ArrayCloning":"     ","SimpleGenerator":" prepare filter finalize prepare filter finalize  ca.ubc.cs.spl.aspectPatterns.examples.templateMethod.aspectj.SimpleGenerator ca.ubc.cs.spl.aspectPatterns.examples.templateMethod.java.SimpleGenerator  ","TestingAnnotations":" main doSomething doSomething doSomething doSomething main doSomething doSomething doSomething doSomething  TestingAnnotations A B C D TestingAnnotations A B C D  ","IHierarchyListener":" elementsUpdated  org.aspectj.asm.IHierarchyListener  /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","PackageWildcards":"     ","AspectOfWhenAspectNotInIncludeTest":" target before testInclude testAspectOf testAspectUntouched main suite I shouldNotHappenDueToInclude ataspectj.bugs.AspectOfWhenAspectNotInIncludeTest  aspect not applied as per aop.xml include\r\n  aspectOf method has been added to the aspect, no matter the aop.xml include ","Fifteen":"     ","Test039":" listOperation anyUtilityCall  Foo  must qualify\r\n  should compile, I think - just matches no joinPoints\r\n ","Test037":"     ","TestSwitchy":" main goo nimbo i j org.aspectj.weaver.test.TestSwitchy  /* Copyright (c) 2002 Contributors.\r\n * \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n */\r\n","Test038":"   Foo  ","PointcutFormals":"     ","Test035":"     ","AdviceSignatureImpl":" getReturnType createToString toAdviceName getAdvice returnType adviceMethod org.aspectj.runtime.reflect.AdviceSignatureImpl  buf.append(sm.makeModifiersString(getModifiers()));\r\n  nothing we can do, caller will see null\r\n /* name is consistent with reflection API  \r\n    before and after always return Void.TYPE\r\n    (some around also return Void.Type)      */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.runtime.reflect.MemberSignatureImpl#createAccessibleObject()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PrivateMethodOnInnerInterface":"     ","Test036":"     ","IfPCDExprVisibility":"     ","Test044":"     ","Test042":"     ","Test043":" getMood getMood feelingMoody mood Mood MoodIndicator  ","Test040":"     ","Test041":"     ","StockQuoteServiceImpl":" getQuote  services.stockquote.StockQuoteServiceImpl  ","NoSuchPointcutException":" getName serialVersionUID name org.aspectj.lang.reflect.NoSuchPointcutException  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","OutputImplementation":" safeRequest regularRequest unsafeRequest safeRequest regularRequest unsafeRequest  ca.ubc.cs.spl.aspectPatterns.examples.proxy.aspectj.OutputImplementation ca.ubc.cs.spl.aspectPatterns.examples.proxy.java.OutputImplementation  ","TaskdefsModuleTests":" suite  org.aspectj.tools.ant.TaskdefsModuleTests  ","LocaleTest":" testNormalLocale testTurkishLocale doBipush  org.aspectj.weaver.LocaleTest  bipush\r\n  data for bipush\r\n /* Copyright (c) 2002 Contributors.\r\n * \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n */\r\n","LockSignatureImpl":" createToString getParameterType parameterType org.aspectj.runtime.reflect.LockSignatureImpl  ","ARETURN":" accept  org.aspectj.apache.bcel.generic.ARETURN  ","Test028":"     ","Test029":"     ","AssertInAdviceBug":"     ","Test026":"     ","Test027":"     ","ReflectOnAtAspectJDeclareParents":" main runTests testDeclareParents testDeclaredInterTypeMethods testInterTypeMethods testDeclaredInterTypeFields testInterTypeFields assertEquals  ReflectOnAtAspectJDeclareParents  ","TraceMyJoinPoints":"     ","WhatsGoingOn":"     ","Test024":"     ","Test025":"   A D C  ","Test033":" someCall  A  ","HardTraceNothing":"     ","Test034":"     ","Test031":"     ","Test032":" someCall main  A B  ","EachObjectTarget":" main foo main foo  EachObjectTarget p.EachObjectTarget  ","Test030":"     ","ICounter":"   ICounter  ","Alpha":" main main main main m1 m2 m3 main  primary.Alpha primary.Alpha primary.Alpha primary.Alpha primary.Alpha  ","PrinterWorld":" print returnInt returnArrayWithCloning returnArrayWithoutCloning intArray de.rohith.PrinterWorld  ","MainVerbose":" target main  ataspectj.ltwlog.MainVerbose  ","MessageUtilTest":" testMessageRendering getSampleMessageTexts getSampleExceptions getSampleLocations getSampleMessages samples exceptions locations messageTexts org.aspectj.testing.util.MessageUtilTest  comment to inspect manually\r\n /* Exception */\r\n /*ISourceLocation*/\r\n /*String */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ProtectedIntro":"     ","ReflectOnAjcCompiledPointcuts":" main  ReflectOnAjcCompiledPointcuts  PointcutParser p = PointcutParser.getPointcutParserSupportingAllPrimitivesAndUsingContextClassloaderForResolution();\r\n  pe = p.parsePointcutExpression(\"PointcutLibrary.propertySet(Object)\");\r\n ","ThisJoinPointUnlock":"     ","DeclareParentsNonsenseCE":"     ","SuperPointcutCE":"     ","CrosscuttingMembersSet":" addOrReplaceAspect addOrReplaceAspect addOrReplaceDescendantsOf addAdviceLikeDeclares deleteAspect containsAspect addFixedCrosscuttingMembers clearCaches getShadowMungers getTypeMungers getLateTypeMungers getDeclareSofts getDeclareParents getDeclareAnnotationOnTypes getDeclareAnnotationOnFields getDeclareAnnotationOnMethods getDeclareDominates findAspectDeclaringParents reset hasChangedSinceLastReset recordNecessaryCheck verify world members shadowMungers typeMungers lateTypeMungers declareSofts declareParents declareAnnotationOnTypes declareAnnotationOnFields declareAnnotationOnMethods declareDominates changedSinceLastReset verificationList trace org.aspectj.weaver.CrosscuttingMembersSet  FIXME AV - ? we may need a sequencedHashMap there to ensure source based precedence for @AJ advice\r\n  includes ctors\r\n  List of things to be verified once the type system is 'complete'\r\n  sourcelocation for the shadowMunger which we need to pick up\r\n  we might have sub-aspects that need to re-collect their crosscutting members from us\r\n  System.err.println(\"Looking at descendants of \"+aspectType.getName());\r\n  XXX only for testing\r\n  DECAT Merge multiple together\r\n /* ResolvedType (the aspect) > CrosscuttingMembers */\r\n /*IVerificationRequired*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ASTVisitorTest":" testAspectWithITD testAspectWithCommentThenITD testAspectWithCommentThenPointcut testAPrivilegedAspect testAnInterface testAnAspect testPointcutInClass testPointcutInAspect testAroundAdvice testAroundAdviceWithProceed testBeforeAdvice testAfterAdvice testAfterThrowingAdviceWithNoArgument testAfterThrowingAdvice testAfterReturningAdviceWithNoArgument testAfterReturningAdvice testMethodWithStatements testAdviceWithStatements testPointcutInAPointcut testCallPointcut testExecutionPointcut testGetPointcut testSetPointcut testHandlerPointcut testStaticInitializationPointcut testInitializationPointcut testPreInitializationPointcut testAdviceExecutionPointcut testPointcutWithoutArguments testPointcutWithOnePrimitiveArgument testPointcutWithTwoPrimitiveArguments testPointcutWithOneTypedArgument testPointcutWithTwoTypedArgument testFieldITD testMethodITD testConstructorITD testInitializedField testMethodITDWithStatements testConstructorITDWithStatements testInitializedFieldITD testMethodBeingCalled testFieldBeingCalled testConstructorBeingCalled testMethodITDBeingCalled testFieldITDBeingCalled testConstructorITDBeingCalled testDeclareParents testDeclareWarning testDeclareError testDeclareSoft testDeclarePrecedence testDeclareAnnotationType testDeclareAnnotationMethod testDeclareAnnotationField testDeclareAnnotationConstructor testPerThis testPerTarget testPerCFlow testPerCFlowBelow check checkJLS3 setUp tearDown createAST toString isVisitingChildren setVisitingChildren visit endVisit visit endVisit visit endVisit visit visit visit visit visit endVisit endVisit endVisit endVisit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit visit endVisit endVisit visit endVisit visit visit visit visit visit visit visit visit visit endVisit endVisit endVisit endVisit endVisit endVisit endVisit endVisit endVisit visit endVisit visit endVisit visit visit visit endVisit endVisit endVisit AST_INTERNAL_JLS2 b visitTheKids visitDocTags org.aspectj.tools.ajc.ASTVisitorTest org.aspectj.tools.ajc.TestVisitor  from bug 110465 - will currently break because of casts\r\n  original tests\r\n  could add a special AST node for them if anyone would like\r\n  ajh02: need to use 2 for returnType - in 3 it has \"returnType2\"\r\n  JavaCore.getOptions());\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n ","FactoryEnforcement":"     ","AnAttributedClass":" doSomething  AnAttributedClass  ","AmbiguousClassReference4CE":" main  AmbiguousClassReference4CE  CE: \"duplicate type name\"\r\n  CE: \"duplicate type name\"\r\n ","AbstractAspectOf":"     ","Ajc10":" setVerbose setVersion setNocomments setEmacssym setUsejavac setPreprocess setWorkingdir setDestdir setOptimize setClasspath createClasspath setClasspathref setBootclasspath createBootclasspath setBootclasspathref setExtdirs createExtdirs setArgfile setArgfiles setEncoding setSource setLenient setStrict setPorting setX setThreads setDumpstack setInternalclasspath createInternalclasspath setInternalclasspathref setSrcdir createSrc createSrcdir setFork setFailonerror setMaxmemory setJvmarg createJvmarg setNosymbols setDebug setDeprecation setTarget setDepend setIncludeantruntime setIncludejavaruntime ignore backdoorSetFile reset setif execute render spoon check VALID_XOPTIONS source14 ignoredOptions cmd vmcmd threads destdir workingdir internalclasspath classpath bootclasspath extdirs srcdir argfiles fork failonerror verbose encoding source org.aspectj.tools.ant.taskdefs.Ajc10  protected boolean version;\r\n  javac-also eajc-also docDone\r\n  let the compiler handle it\r\n  ajc-only not-eajc docDone\r\n  ajc-only  eajc-also docDone\r\n  ajc-only not-eajc docDone\r\n  ajc-only not-eajc docDone\r\n  ajc-only not-eajc ocDone\r\n  javac-also eajc-also  docDone\r\n  javac-also ignored docDone\r\n  javac-also eajc-also docDone\r\n  javac-also docDone\r\n  javac-also docDone\r\n  XXX may jury-rig\r\n  XXX may jury-rig\r\n  XXX may jury-rig\r\n  javac-also not-eajc docDone\r\n  javac-also not-eajc docDone\r\n  ajc-only eajc-also docDone\r\n  ajc-only eajc-also docDone\r\n  ignore(\"encoding\");\r\n  javac-also (Ant 1.4) eajc-also docDone\r\n  ajc-only not-eajc docDone\r\n  ajc-only not-eajc docDone\r\n  ajc-only not-eajc docDone\r\n  ajc-only eajc-also docDone\r\n  ajc-old docDone ignored\r\n  ------------------------- vestigial\r\n  ajc-old\r\n  ajc-taskdef only\r\n  ajc-taskdef only\r\n  ajc-taskdef only\r\n  javac-also eajc-also docDone\r\n  javac-also eajc-also docDone\r\n  javac-also eajc-also docDone\r\n  ajc-only not-eajc docDone\r\n  javac-also docDone\r\n  ajc-taskdef only docDone\r\n  XXX fork\r\n  XXX fork\r\n  todo remove?\r\n  ------------------------- javac task compatibility\r\n  todo: changed from -debug\r\n  XXX eajc: also \"warn:deprecation\"\r\n  todo: ajc accepts but doesn't use - pass in?\r\n  ------------------------- javac task compatibility - ignored\r\n  javac-also ignored docDone\r\n  javac-also ignored docDone\r\n  javac-also ignored docDone\r\n  version = false;\r\n  }\r\n  todo: ignore any srcdir if any argfiles and no explicit includes\r\n  int result = (fork || (internalclasspath != null)) ? fork() : spoon();\r\n  see throw above\r\n  if (version) version(null);\r\n  check for \"just quit -- message printed already\"\r\n  t.printStackTrace();   XXX avoid rendering if not verbosely logging?\r\n /* *******************************************************************\r\n * Copyright (c) 2000-2001 Xerox Corporation. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","IWeaveRequestor":" acceptResult processingReweavableState addingTypeMungers weavingAspects weavingClasses weaveCompleted  org.aspectj.weaver.IWeaveRequestor  various notifications to the requestor about our progress...\r\n /*\r\n\t * A class file resulting from a weave (yes, even though the type name\r\n\t * says \"unwoven\"...).\r\n\t */\r\n","CodeHTML":" codeToHTML findGotos writeMethod class_name methods file goto_set constant_pool constant_html wide org.aspectj.apache.bcel.util.CodeHTML  name of current class\r\n  Methods to print\r\n  file to write to\r\n  Both cases have a field default_offset in common\r\n  Print switch indices in first row (and default)\r\n  Print target and default indices in second row\r\n  Print switch indices in first row (and default)\r\n  Print target and default indices in second row\r\n  Clear flag\r\n  Local field\r\n  Redundant\r\n  Reserved\r\n  Get signature, i.e., types\r\n  List arguments\r\n  Attach return type\r\n  Either branch or index\r\n  Never reached\r\n  Look for local variables and their range\r\n  Both cases have a field default_offset in common\r\n  LOOKUPSWITCH\r\n  bytes.readByte();   bytes.readByte();   Ignore output\r\n  System.out.println(OPCODE_NAMES[opcode]);\r\n  Get target addresses from GOTO, JSR, TABLESWITCH, etc.\r\n  Get raw signature\r\n  Get array of strings containing the argument types\r\n  Get return type string\r\n  Get method name\r\n  Get method's access flags\r\n  Get the method's attributes, the Code Attribute in particular\r\n  Print the byte code\r\n  last loop\r\n  Mark last line, may be targetted from Attributes window\r\n /* Special case: Skip (0-3) padding bytes, i.e., the\r\n     * following bytes are 4-byte-aligned\r\n     */\r\n /* Lookup switch has variable length arguments.\r\n       */\r\n /* Two address bytes + offset from start of byte stream form the\r\n       * jump target.\r\n       */\r\n /* Same for 32-bit wide jumps\r\n       */\r\n /* Index byte references local variable (register)\r\n       */\r\n /*\r\n       * Remember wide byte which is used to form a 16-bit address in the\r\n       * following instruction. Relies on that the method is called again with\r\n       * the following opcode.\r\n       */\r\n /* Array of basic type.\r\n       */\r\n /* Access object/class fields.\r\n       */\r\n /* Operands are references to classes in constant pool\r\n       */\r\n /* Operands are references to methods in constant pool\r\n       */\r\n /* Operands are references to items in constant pool\r\n       */\r\n /* Array of references.\r\n       */\r\n /* Multidimensional array of references.\r\n       */\r\n /* Increment local variable.\r\n       */\r\n /* Set an anchor mark if this line is targetted by a goto, jsr, etc.\r\n\t * Defining an anchor for every line is very inefficient!\r\n\t */\r\n","LotsOfVars":" main  LotsOfVars  ","SubjectObserverProtocol":"     ","NoAspectBoundException":" getCause cause org.aspectj.lang.NoAspectBoundException  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","MyFoo":" callMain main callMain main anotMethod i foo.MyFoo foo.MyFoo  ","PinpointingMessageHandler":" handleMessage isIgnoring dontIgnore getMessage getKind isError isWarning isDebug isInfo isAbort isTaskTag isFailed getDeclared getID getSourceStart getSourceEnd getThrown getSourceLocation getDetails getExtraSourceLocations getMessage delegate delegate message serialVersionUID org.aspectj.bridge.context.PinpointingMessageHandler  /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHandler#handleMessage(org.aspectj.bridge.IMessage)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHandler#isIgnoring(org.aspectj.bridge.IMessage.Kind)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHandler#dontIgnore(org.aspectj.bridge.IMessage.Kind)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ModelTests":" testSourceLocationAndJarFile_pr145963 testSourceLocationAndClassFile_pr145963 testAspectInDefaultPackage_pr145963 testAspectInJavaFile_pr145963 suite getSpecFile  org.aspectj.systemtest.model.ModelTests  'expected model' files.\r\n  Switch this to true if you want to debug the comparison\r\n   ","SimpleAspect2":"     ","AbstractWorldTestCase":" getWorld testPrimitiveTypes primAssignTest testPrimitiveArrays modifiersTest fieldsTest methodsTest mungersTest interfacesTest superclassTest pointcutsTest isInterfaceTest isAspectTest isClassTest isCoerceableFromTest isAssignableFromTest modifiersTest exceptionsTest primitiveTypeXs org.aspectj.weaver.AbstractWorldTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Object":"   java.lang.Object  CE 5 here?\r\n ","NonStaticInnerInterfaces_PR386":" main go go go j NonStaticInnerInterfaces_PR386 B A C  ","SimpleAspect1":"     ","Write":"     ","StackMapEntry":" dump toString setByteCodeOffset getByteCodeOffset setNumberOfLocals getNumberOfLocals setTypesOfLocals getTypesOfLocals setNumberOfStackItems getNumberOfStackItems setTypesOfStackItems getTypesOfStackItems copy accept getConstantPool setConstantPool byte_code_offset number_of_locals types_of_locals number_of_stack_items types_of_stack_items constant_pool org.aspectj.apache.bcel.classfile.StackMapEntry  ","CodeConstraintException":"   org.aspectj.apache.bcel.verifier.exc.CodeConstraintException  ","BringUpTests":" suite getSpecFile testEmptyClass testEmptyAspect  org.aspectj.systemtest.bringup.BringUpTests  ","UtilTests":" setUp testUtilityClassSignatureManipulation1 testUtilityClassSignatureManipulation2 testTypeUtilMethods1 testTypeUtilMethods2 tearDown suite suite suite TESTING_UTIL_PATH org.aspectj.apache.bcel.classfile.tests.UtilTests org.aspectj.testing.util.UtilTests org.aspectj.testingutil.UtilTests org.aspectj.util.UtilTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation \r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","InjarOneMain":" main main  InjarOneMain InjarOneMain  ","BadAround":"     ","HashablePoint.30":"     ","ProductModule":" toString DIST productDir replaceFile relativePath module assembleAll org.aspectj.internal.tools.build.ProductModule  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Loadtime515ModuleTests":" suite  Loadtime515ModuleTests  ","Globals":" getRtJarFor get14Bootclasspath getSystemProperty FORK_NAME LIBDIR_NAME J2SE14_RTJAR_NAME J2SE13_RTJAR_NAME LIBDIR J2SE14_RTJAR J2SE13_RTJAR MAIN_PARM_TYPES S_testingclient_jar S_aspectjrt_jar F_testingclient_jar F_aspectjrt_jar globalsValid org.aspectj.testing.harness.bridge.Globals  XXX used only by 1.0 compiler tests - deprecate?\r\n  String forkSpec = getSystemProperty(FORK_NAME, null);\r\n  avoid at all costs during static init\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC)\r\n *               2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Wes Isberg     removed unused globals.\r\n * ******************************************************************/\r\n","Named":" getName  Named  ","LOOKUPSWITCH":" dump initFromFile accept  org.aspectj.apache.bcel.generic.LOOKUPSWITCH  npairs\r\n  match-offset pairs\r\n  reads padding\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n /* alignment remainder assumed\r\n\t\t\t\t\t     * 0 here, until dump time. */\r\n","ConcreteClassA":"     ","FieldDocImpl":" setType dec fieldDec isField type isVolatile isTransient serialFieldTags toString weakEquals field type org.aspectj.tools.ajdoc.FieldDocImpl  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","MemberDoc":" introduced  org.aspectj.ajdoc.MemberDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","GenericsTests":" suite getSpecFile testITDReturningParameterizedType testPR91267_1 testParameterizedTypeAndAroundAdvice_PR115250 testParameterizedTypeAndAroundAdvice_PR115250_2 testPR91267_2 testPR91053 testPR87282 testGenericsOverrides_1 testGenericsOverrides_2 testGenericsOverrides_3 testGenericsOverrides_4 testSelfBoundGenerics_pr117296 testPR88606 testPR97763 testGenericsBang_pr95993 testPR96220_GenericAspects1 testPR96220_GenericAspects2 testPR96220_GenericAspects3 testGenericAspects4 testGenericAspects5 testGenericAspects6 testTypeVariablesInDeclareWarning testTypeVariablesInExecutionAdvice testTypeVariablesInAnonymousPointcut testDeclareParentWithParameterizedInterface testDeclareSoftInGenericAspect testParseItdNonStaticMethod testParseItdStaticMethod testParseItdCtor testParseItdComplexMethod testParseItdSharingVars1 testParseItdSharingVars2 testGenericMethodITD1 testGenericMethodITD2 testGenericMethodITD3 testGenericMethodITD4 testGenericMethodITD5 testGenericMethodITD6 testGenericMethodITD7 testGenericMethodITD8 testGenericMethodITD9 testGenericMethodITD10 testGenericMethodITD11 testGenericMethodITD12 testGenericMethodITD13 testGenericMethodITD14 testGenericMethodITD15 testGenericCtorITD1 testGenericCtorITD2 testGenericCtorITD3 testParameterizedMethodITD1 testParameterizedMethodITD2 testParameterizedMethodITD3 testParameterizedMethodITD4 testPublicITDs testPublicITDsErrors testPrivateITDs testPackageITDs testTargettingInterface testTargettingAspect testTargettingClass testFieldITDsUsingTargetTypeVars1 testFieldITDsUsingTargetTypeVars2 testFieldITDsUsingTargetTypeVars3 testFieldITDsUsingTargetTypeVars4 testFieldITDsUsingTargetTypeVars5 testFieldITDsUsingTargetTypeVars6 testFieldITDsUsingTargetTypeVars7 testFieldITDsUsingTargetTypeVars8 testFieldITDsUsingTargetTypeVars9 testFieldITDsUsingTargetTypeVars10 testFieldITDsUsingTargetTypeVars11 testFieldITDsUsingTargetTypeVars12 testFieldITDsUsingTargetTypeVars13 testFieldITDsUsingTargetTypeVars14 testFieldITDsUsingTargetTypeVars15 testFieldITDsUsingTargetTypeVars16 testFieldITDsUsingTargetTypeVars17 testMethodITDsUsingTargetTypeVarsA1 testMethodITDsUsingTargetTypeVarsA2 testMethodITDsUsingTargetTypeVarsA3 testMethodITDsUsingTargetTypeVarsA4 testMethodITDsUsingTargetTypeVarsB1 testMethodITDsUsingTargetTypeVarsC1 testMethodITDsUsingTargetTypeVarsD1 testMethodITDsUsingTargetTypeVarsE1 testMethodITDsUsingTargetTypeVarsF1 testMethodITDsUsingTargetTypeVarsG1 testMethodITDsUsingTargetTypeVarsH1 testMethodITDsUsingTargetTypeVarsI1 testMethodITDsUsingTargetTypeVarsI2 testMethodITDsUsingTargetTypeVarsJ1 testMethodITDsUsingTargetTypeVarsK1 testMethodITDsUsingTargetTypeVarsL1 testMethodITDsUsingTargetTypeVarsM1 testMethodITDsUsingTargetTypeVarsM2 testMethodITDsUsingTargetTypeVarsN1 testMethodITDsUsingTargetTypeVarsO1 testMethodITDsUsingTargetTypeVarsO2 testMethodITDsUsingTargetTypeVarsP1 testMethodITDsUsingTargetTypeVarsQ1 testCtorITDsUsingTargetTypeVarsA1 testCtorITDsUsingTargetTypeVarsB1 testCtorITDsUsingTargetTypeVarsC1 testCtorITDsUsingTargetTypeVarsD1 testCtorITDsUsingTargetTypeVarsE1 testCtorITDsUsingTargetTypeVarsF1 testCtorITDsUsingTargetTypeVarsG1 testCtorITDsUsingTargetTypeVarsH1 testCtorITDsUsingTargetTypeVarsI1 testSophisticatedAspectsA testSophisticatedAspectsB testSophisticatedAspectsC testSophisticatedAspectsD testSophisticatedAspectsE testSophisticatedAspectsF testSophisticatedAspectsG testSophisticatedAspectsH testSophisticatedAspectsI testSophisticatedAspectsJ testSophisticatedAspectsK2 testSophisticatedAspectsL testSophisticatedAspectsM testSophisticatedAspectsN testSophisticatedAspectsO testSophisticatedAspectsP testSophisticatedAspectsQ testSophisticatedAspectsR testSophisticatedAspectsS testSophisticatedAspectsT testSophisticatedAspectsU testSophisticatedAspectsV testSophisticatedAspectsW testSophisticatedAspectsX testSophisticatedAspectsY testSophisticatedAspectsZ testUsingSameTypeVariable testBinaryWeavingITDsA testBinaryWeavingITDsB testBinaryWeavingITDs1 testBinaryWeavingITDs2 testBinaryWeavingITDs3 testGenericITFSharingTypeVariable testReusingTypeVariableLetters testMultipleGenericITDsInOneFile testItdNonStaticMember testItdStaticMember testStaticGenericMethodITD testAtOverride0 testAtOverride1 testAtOverride2 testAtOverride3 testAtOverride4 testAtOverride5 testAtOverride6 testAtOverride7 testITDBridgeMethodsCovariance1 testITDBridgeMethodsCovariance2 testITDBridgeMethods1Normal testITDBridgeMethods1Itd testITDBridgeMethods2Normal testITDBridgeMethods2Itd testITDBridgeMethodsPr91381 testGenericITDsBridgeMethods1 testGenericITDsBridgeMethods1binary testGenericITDsBridgeMethods2 testGenericITDsBridgeMethods2binary testGenericITDsBridgeMethods3 testGenericITDsBridgeMethods3binary testGenericITDSBridgeMethods4 testGenericITDSBridgeMethods4binary testBinaryBridgeMethodsOne testBinaryBridgeMethodsTwo testBinaryBridgeMethodsThree testGenericITDsBridgeMethodsPR91381 testGenericITDsBridgeMethodsPR91381_2 testPR96220_GenericDecp testGenericDecpMultipleVariantsOfAParameterizedType1 testGenericDecpMultipleVariantsOfAParameterizedType2 testGenericDecpMultipleVariantsOfAParameterizedType3 testGenericDecpMultipleVariantsOfAParameterizedType4 testGenericDecpMultipleVariantsOfAParameterizedType1_binaryWeaving testGenericDecpMultipleVariantsOfAParameterizedType2_binaryWeaving testGenericDecpMultipleVariantsOfAParameterizedType3_binaryWeaving testGenericDecpMultipleVariantsOfAParameterizedType4_binaryWeaving testGenericDecpParameterized testGenericDecpIncorrectNumberOfTypeParams testGenericDecpSpecifyingBounds testGenericDecpViolatingBounds testHandlerWithGenerics testPointcutsThatDontAllowTypeVars testParameterizedTypesInAtPCDs testAnnotationPatternsWithParameterizedTypes testStaticInitializationWithParameterizedTypes testWithinPointcutErrors testWithinPointcutWarnings testThisTargetPointcutErrors testThisTargetPointcutRuntime testInitAndPreInitPointcutErrors testInitAndPreInitPointcutMatchingWithGenericDeclaringTypes testInitAndPreInitPointcutMatchingWithParameterizedParameterTypes testWithinCodePointcutErrors testWithinCodeMatching testWithinCodeOverrideMatchingWithGenericMembers testExecutionWithRawType testExecutionWithRawSignature testExecutionPointcutErrors testExecutionMatching testExecutionOverrideMatchingWithGenericMembers testCallPointcutErrors testCallMatching testCallOverrideMatchingWithGenericMembers testCallWithBridgeMethods testGetAndSetPointcutErrors testGetAndSetPointcutMatchingWithGenericAndParameterizedTypes testGetAndSetPointcutMatchingWithGenericAndParameterizedFieldTypes testArgsWithRawType testArgsParameterizedType testArgsParameterizedAndWildcards testArgsWithWildcardVar testArgsWithWildcardExtendsVar testArgsWithWildcardSuperVar testGenericMethodMatching testGenericWildcardsInSignatureMatching testAfterThrowing testAfterReturningWithRawType testAfterReturningParameterizedType testAfterReturningParameterizedAndWildcards testAfterReturningWithWildcardVar testAfterReturningWithWildcardExtendsVar testAfterReturningWithWildcardSuperVar testAJDKErasureMatchingExamples testAJDKParameterizedMatchingSimpleExamples testAJDKMixedTypeVarsAndParametersExample testAJDKSignatureAndWildcardExamples testAJDKBridgeMethodExamples testAJDKArgsExamples testAJDKArgsAndWildcardsExamples testAJDKAfterReturningExamples testAJDKPointcutInGenericClassExample testStaticPointcutParameterization testDynamicPointcutParameterization testReferenceToPointcutInGenericClass testReferenceToPointcutInGenericClass2 testDeclareParentsParameterized testDeclarePrecedenceParameterized testDeclareAnnotationParameterized testMultiLevelGenericAspects checkMethodsExist isBridge getClass getClassSignature checkOneSignatureAttribute verifyClassSignature stringify  org.aspectj.systemtest.ajc150.GenericsTests  generic aspects\r\n  in separate files\r\n  all in one file\r\n  parsing of generic ITD members\r\n  <E> ... (List<? extends E>)\r\n  <E extends Number> ... (List<? extends E>) called incorrectly\r\n  <E> ... (List<E>,List<E>)\r\n  <A,B> ... (List<A>,List<B>)\r\n  <E> ... (List<E>,List<E>) called incorrectly\r\n  <E extends Number> ... (List<? extends E>)\r\n  <E> ... (List<E>,List<? extends E>)\r\n  <E> ... (List<E>,List<? extends E>) called incorrectly\r\n  <R extends Comparable<? super R>> ... (List<R>)\r\n  <R extends Comparable<? super R>> ... (List<R>) called incorrectly\r\n  <R extends Comparable<? extends R>> ... (List<R>)\r\n  <R extends Comparable<? extends R>> ... (List<R>) called incorrectly\r\n  <R extends Comparable<? extends R>> ... (List<R>) called correctly in a clever way ;)\r\n  <R extends Comparable<? super R>> ... (List<R>) called incorrectly in a clever way\r\n  <R extends Comparable<? super R>> ... (List<R>) called correctly in a clever way\r\n  <T> new(List<T>)\r\n  <T> new(List<T>,List<? extends T>)\r\n  <T> new(List<T>,Comparator<? super T>)\r\n  (List<? extends Super>)\r\n  (List<? extends Number>) called incorrectly\r\n  (List<? super A>) called incorrectly\r\n  (List<? super B>)\r\n  differing visibilities\r\n  targetting different types (interface  using a type variable from the target generic type in your ITD\r\n  public void testSophisticatedAspectsK() {runTest(\"uberaspects - K\");}   includes nasty casts\r\n  casts are gone\r\n  from the AJDK\r\n  pointcut matching\r\n  general tests ... usually just more complex scenarios\r\n  bridge methods\r\n  Just normal source compile of two types with a method override between them\r\n  Now the same thing but the aspect (which doesn't do much!) is binary woven in.\r\n  Now the method is put into the superclass via ITD - there should be a bridge method in the subclass\r\n  Now the superclass ITD is done with binary weaving so the weaver (rather than compiler) has to create the bridge method\r\n  Now the method is put into the subclass via ITD - there should be a bridge method alongside it in the subclass\r\n  Now the subclass ITD is done with binary weaving - the weaver should create the necessary bridge method\r\n  the bridge method should still be created in the subtype\r\n  now the aspect doing the decp between the types is applied via binary weaving - weaver should create the bridge method\r\n  Both the existing type decl and the one adding via decp are parameterized\r\n  Existing type decl is raw and the one added via decp is parameterized\r\n  Existing type decl is parameterized and the one added via decp is raw\r\n  decp is parameterized but it does match the one already on the type\r\n  same as above four tests for binary weaving\r\n  Existing type decl is parameterized and the one added via decp is raw\r\n  decp is parameterized but it does match the one already on the type\r\n  check the methods specified do exist\r\n  why not importing java.lang.reflect.Method? No BCEL clash?\r\n  Check the signature attribute on a class is correct\r\n ","IXOR":" accept  org.aspectj.apache.bcel.generic.IXOR  ","ConcreteTypeMunger":" equivalentTo getMunger getAspectType getSignature getWorld getSourceLocation matches getMatchingSyntheticMember compareTo fallbackCompareTo isTargetTypeParameterized parameterizedFor isLateMunger munger aspectType org.aspectj.weaver.ConcreteTypeMunger  An EclipseTypeMunger and a BcelTypeMunger may say TRUE for equivalentTo()...\r\n  XXX\r\n  ConcreteTypeMunger o = (ConcreteTypeMunger) other;\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","StructureViewManager":" elementsUpdated fireNavigateBackAction fireNavigateForwardAction fireNavigationAction fireNavigationAction navigationAction refreshView getDefaultViewProperties getAvailableRelations createGlobalView createViewForSourceFile deleteView setDefaultFileView getDefaultFileView treeViewBuilder historyModel structureViews defaultFileView DEFAULT_VIEW_PROPERTIES AVAILABLE_RELATIONS VIEW_LISTENER org.aspectj.ajde.ui.StructureViewManager  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Type":" getSignature getType getSize toString getMethodSignature getType getTypeInternal getReturnType getArgumentTypes getArgumentSizes getTypeSize getType getSignature getSignature getType getConsumed type signature VOID BOOLEAN INT SHORT BYTE LONG DOUBLE FLOAT CHAR OBJECT STRING STRINGBUFFER THROWABLE NO_ARGS NULL UNKNOWN t consumed org.aspectj.ajdoc.Type org.aspectj.apache.bcel.generic.Type  signature for the type\r\n  Look for closing ';'\r\n  generics awareness\r\n  ObjectType doesn't currently store parameterized info\r\n  Recurse, but just once, if the signature is ok\r\n  Should never occur\r\n  Read return type after `)'\r\n  Should never occur\r\n  Read all declarations between for `(' and `)'\r\n  current string position\r\n  update position\r\n  current string position\r\n  Should never occur\r\n  Look for closing ';'\r\n  generics awareness\r\n  type == T_REFERENCE\r\n  \"Real\" class\r\n  avoid clone\r\n  avoid clone\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n /* Predefined constants */\r\n /* That's an amazingly easy case, because getName() returns\r\n     * the signature. That's what we would have liked anyway.\r\n     */\r\n","NamePatternParserTestCase":" testMatch checkMatch  org.aspectj.weaver.patterns.NamePatternParserTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AjCompilerAdapter":" beforeCompiling beforeProcessing beforeResolving afterResolving beforeAnalysing afterAnalysing beforeGenerating afterGenerating afterCompiling afterProcessing acceptResult getBinarySourcesFrom notifyRequestor weave afterDietParsing getResultsPendingWeave compiler weaver eWorld isBatchCompile reportedErrors isXTerminateAfterCompilation proceedOnError inJava5Mode noAtAspectJAnnotationProcessing intermediateResultsRequestor progressListener outputFileNameProvider binarySourceProvider weaverMessageHandler binarySourceSetForFullWeave processingToken resolvingToken analysingToken generatingToken incrementalCompilationState resultsPendingWeave org.aspectj.ajdt.internal.compiler.AjCompilerAdapter  Do we need to reset the message handler or create a new one? (This saves a ton of memory lost on incremental compiles...)\r\n  Don't wrap AbortCompilation exceptions!\r\n  which will then then log it as a compiler problem.\r\n  not great ... but one more check before we continue, see pr132314\r\n  notification happens as weave progresses...\r\n  no point weaving... just tell the requestor we're done\r\n  Map is fileName |-> List<UnwovenClassFile>\r\n  XXX - see bugs 57432,58679 - final parameter on next call should be \"compiler.options.maxProblemsPerUnit\"\r\n  ensure weaver state is set up correctly\r\n  force full recompilation from source\r\n  ???: is this the right point for this? After weaving has finished clear the caches.\r\n  }\r\n /* fileName |-> List<UnwovenClassFile> */\r\n /*InterimResult*/\r\n /* fileName |-> List<UnwovenClassFile> */\r\n /*\r\n\t * Called from the weaverAdapter once it has finished weaving the class files\r\n\t * associated with a given compilation result.\r\n\t */\r\n","RuntimeVisibleAnnotationAttributeTest":" setUp testSeeAnnotationsAsAttribute testAnnotationsAttributeContainsRightData testAccessingAnnotationsOnClazz testReadingWritingAnnotations testAnnotationStringElement testAnnotationStringElementReadWrite verifyAnnotationStringElement testComplexAnnotation testComplexAnnotationsReadWrite verifyComplexAnnotation checkValue testAnnotationClassElement testAnnotationClassElementCopying testAnnotationClassElementReadWrite verifyClassAnnotation testAnnotationEnumElement testAnnotationEnumElementReadWrite verifyAnnotationEnumElement testAnnotationArraysOfAnnotations testAnnotationArraysOfAnnotationsReadWrite checkCombinedAnnotation tearDown  org.aspectj.apache.bcel.classfile.tests.RuntimeVisibleAnnotationAttributeTest  Write it out\r\n  Write it out\r\n  Write it out\r\n  Checks we can copy class values in an annotation\r\n  Write it out\r\n  Write it out\r\n  Write it out\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation \r\n * ******************************************************************/\r\n","AnnotationsForMemberHolder":" getAnnotations getAnnotationTypes hasAnnotation ensureAnnotationXsUnpacked ensureAnnotationsUnpacked addAnnotation annotationTypesCorrect annotationTypes annotationXsCorrect annotationXs annotations world org.aspectj.weaver.AnnotationsForMemberHolder  guard for lazy initialization of annotationTypes\r\n  finished with\r\n /*AnnotationAJ*/\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","TestBuildModule":" main createModule createProduct SYNTAX org.aspectj.internal.tools.ant.taskdefs.TestBuildModule  private static boolean REBUILD = false;\r\n  create a module\r\n  set module dir or basedir plus module name\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PR405":"     ","AbortException":" borrowPorter returnPorter extractMessage getIMessage isPorter getThrown setIMessage getMessage printStackTrace printStackTrace printStackTrace isSilent setIsSilent serialVersionUID isSilent NO_MESSAGE_TEXT porters message isPorter org.aspectj.bridge.AbortException  XXX move porters out, handle proxy better\r\n  better than nothing\r\n  Always print\r\n  XXX move porters out, handle proxy better\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AjcCompilerAdapter":" setJavac execute ajc org.aspectj.tools.ant.taskdefs.AjcCompilerAdapter  XXX unsupported\r\n  XXX unsupported\r\n  XXX unsupported\r\n  XXX unsupported\r\n  XXX unsupported\r\n  enforce one-shot\r\n /* *******************************************************************\r\n * Copyright (c) 2000-2001 Xerox Corporation. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Zeros":" main realMain  Zeros  ","TracingAspect":"     ","SimpleClass":" main main  SimpleClass SimpleClass  ","ArrayType":" getBasicType getElementType getDimensions hashcode equals dimensions basic_type org.aspectj.apache.bcel.generic.ArrayType  Basic type or reference\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","Eight":"     ","SIValidationException":" getValidationErrors validationErrors insurance.model.validation.SIValidationException  /*\r\n * Created on 18-Jul-2004\r\n *\r\n * TODO To change the template for this generated file go to\r\n * Window - Preferences - Java - Code Style - Code Templates\r\n */\r\n","HelloWorldAspect":"     ","ScopesAndFields_PR191":" main realMain c t a c ScopesAndFields_PR191 C  ","FloatPrivilegedRoundoff":"     ","L2D":" accept  org.aspectj.apache.bcel.generic.L2D  ","TimeoutException":"  time time time time time coordination.TimeoutException coordination.TimeoutException coordination.TimeoutException coordination.TimeoutException coordination.TimeoutException  /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","NotAndDeclaringTypes":"     ","L2F":" accept  org.aspectj.apache.bcel.generic.L2F  ","L2I":" accept  org.aspectj.apache.bcel.generic.L2I  ","Blob":"   Blob  ","ParentMethodCE":" defineMethod  parent.ParentMethodCE  ","Handler":"     ","XLintTypeThisPCD":"     ","AroundLotsOfVars":"     ","ExceptionBugTest":" method1 method2 x ExceptionBugTest  warning here\r\n  warning here\r\n ","TheBigOne":"     ","GETFIELD":" produceStack getExceptions accept  org.aspectj.apache.bcel.generic.GETFIELD  ","BadBindingError":"     ","InvalidNewQualifier15CE":" test  InvalidNewQualifier15CE Outer OuterInterface OuterOuter  new OuterOuter.Inner(){}.new OuterOuter.Inner.I(){};   CE 15 new qualification bad\r\n  ok\r\n ","Detour.20":"     ","NewClass":"   bar.NewClass pkg.NewClass  ","PartiallyExposedHierarchyTestCase":" setUp testPartiallyExposedHierarchy PROJECT_DIR baseDir org.aspectj.ajdt.internal.compiler.batch.PartiallyExposedHierarchyTestCase  Message error   = new Message(15, \"type sample.Base must be accessible for weaving interface inter type declaration from aspect sample.Trace\");\r\n  newMessageList(error));\r\n ","TestDiffsTest":" genTestInput tearDown testCompareResults tempFiles org.aspectj.testing.util.TestDiffsTest  ignore\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AfterReturningInterfaceConstructor":"     ","NotFoundTypeName":"     ","IllegalAdoption":"     ","ColumnScanEmitter":" columnCount columnWidths characters comment endDocument endElement processingInstruction setDocumentLocator setEscaping setNamePool setUnparsedEntity setWriter startDocument startElement columnCount columnWidths characters comment endDocument endElement processingInstruction setDocumentLocator setEscaping setNamePool setUnparsedEntity setWriter startDocument startElement numColumns width namePool foURI numColumns width namePool foURI com.nwalsh.saxon.ColumnScanEmitter com.nwalsh.saxon.ColumnScanEmitter  ","TraceAspect":"     ","PointcutParser":" getAllSupportedPointcutPrimitives getPointcutParserSupportingAllPrimitivesAndUsingContextClassloaderForResolution getPointcutParserSupportingSpecifiedPrimitivesAndUsingContextClassloaderForResolution getPointcutParserSupportingAllPrimitivesAndUsingSpecifiedClassloaderForResolution getPointcutParserSupportingSpecifiedPrimitivesAndUsingSpecifiedClassLoaderForResolution setWorld setClassLoader setLintProperties setLintProperties registerPointcutDesignatorHandler createPointcutParameter parsePointcutExpression parsePointcutExpression resolvePointcutExpression concretizePointcutExpression parseTypePattern getWorld getSupportedPrimitives setCustomMessageHandler buildResolutionScope toUnresolvedType validateAgainstSupportedPrimitives validateKindedPointcut buildUserMessageFromParserException world classLoader supportedPrimitives pointcutDesignators org.aspectj.weaver.tools.PointcutParser  again, because we have now followed any ref'd pcuts\r\n  always ok...\r\n  deliberate fall-through\r\n /*<PointcutPrimitives>*/\r\n /* for testing */\r\n /* for testing */\r\n","AsmHierarchyBuilder":" buildStructureForCompilationUnit internalBuild genAddToNode visit endVisit visit endVisit visit endVisit genSourceSignature findEnclosingClass visit addUsesPointcutRelationsForNode getPointcutDeclaration genNamedPointcuts addAllNamed genSourceSignature genBytecodeInfo endVisit visit endVisit visit endVisit generateJavadocComment genSourceSignature visit endVisit genSourceSignature visit makeLocation getStartLine getEndLine getEndLine getEndLine getEndLine formatter shouldAddUsesPointcut buildConfig stack currCompilationResult filename lineseps inInitializer org.aspectj.ajdt.internal.core.builder.AsmHierarchyBuilder  until we do it in the same way as other relationships.\r\n  clear reference since this structure is anchored in static\r\n  -- create node to add\r\n  AMC - use the source start and end from the compilation unit decl\r\n  -- remove duplicates before adding (XXX use them instead?)\r\n  -- add and traverse\r\n  -- update file map (XXX do this before traversal?)\r\n  note packages themselves have no source location\r\n  @AJ support\r\n  @AJ support\r\n  ??? share impl with visit(TypeDeclaration, ..) ?\r\n  If we couldn't find a nice name like 'new Runnable() {..}' then use the number after the $\r\n  Create a name something like 'new Runnable() {..}'\r\n  @AJ support\r\n  when creating the structure model\r\n  will set the name\r\n  and instead get \"void\".\r\n  TODO: add return type test\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  bad type name\r\n  }\r\n  The field represents an enum value\r\n  !!! specify length?\r\n  look for   found *  the \",\" or \";\" has to be put on by whatever uses the sourceSignature\r\n  $NON-NLS-1$\r\n  a little wierd but does the job\r\n  bad type name\r\n  Fix to enable us to anchor things from ctor nodes\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  new ArrayList());\r\n  AMC - different strategies based on node kind\r\n  found a valid end line for this node...\r\n  ??? handle non-existant files\r\n  currCompilationResult.lineSeparatorPositions,\r\n  if (  n instanceof TypeDeclaration ) return getStartLine( (TypeDeclaration)n);\r\n  hierarchy!!\r\n  currCompilationResult.lineSeparatorPositions,\r\n  hierarchy!!\r\n  currCompilationResult.lineSeparatorPositions,\r\n  hierarchy!!\r\n  currCompilationResult.lineSeparatorPositions,\r\n  hierarchy!!\r\n  currCompilationResult.lineSeparatorPositions,\r\n  hierarchy!!\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n *     Mik Kersten\trevisions, added additional relationships\r\n *     Alexandre Vasseur        support for @AJ style\r\n * ******************************************************************/\r\n","GenericITDsDesign":" suite getSpecFile verifyDebugString getClassFromDisk getClassSignature verifyClassSignature getTypeMunger getMungerFromLine getMeTheFields testDesignA testDesignB testDesignC testDesignD testDesignE testDesignF testDesignG recentWorld org.aspectj.systemtest.ajc150.GenericITDsDesign  Check the signature attribute on a class is correct\r\n  Let's check all parts of the member\r\n  resolution will join the type variables together (i.e. make them refer to the same instance)\r\n  variable and that the parameter refers to the type variable.\r\n  Verify: bounds are preserved and accessible after serialization\r\n  System.err.println(theBcelMunger.getMunger().getSignature().toDebugString());\r\n  b) type variables below the 'top level' (e.g. List<A>) are preserved.\r\n  System.err.println(theBcelMunger.getMunger().getSignature().toDebugString());\r\n  System.err.println(theBcelMunger.getMunger().getSignature().toDebugString());\r\n  Verify: a) sharing type vars with some target type results in the correct variable names in the serialized form\r\n  Verify: a) for fields, sharing type vars with some target type results in the correct entries in the class file\r\n  Declared in src as: List C.list1;         and       List<Z> C<Z>.list2;\r\n  bound for second field collapses to Object\r\n  Verifying what gets into a class targetted with a field ITD\r\n  Verifying what gets into a class when an interface it implements was targetted with a field ITD\r\n /*BcelTypeMunger*/\r\n","ProceedArgsCE":"     ","InterTypeFieldDeclarationImpl":" getName getType getGenericType toString name type genericType org.aspectj.internal.lang.reflect.InterTypeFieldDeclarationImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeFieldDeclaration#getName()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeFieldDeclaration#getType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeFieldDeclaration#getGenericType()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ColorLabel":" colorCycle colors colorIndex cycleCount observer.ColorLabel  /*\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n*/\r\n","Bar":"   pkg1.Bar pkg1.subpkg.Bar  ","Binkley":"     ","DataClass":" getV main doit v DataClass  ","StatefulNameEnvironment":" addAllPackageNames cleanup findType findType findType isPackage classesFromName inflatedClassFilesCache packageNames baseEnvironment org.aspectj.ajdt.internal.core.builder.StatefulNameEnvironment  import java.util.HashMap;\r\n  !!! seems to match FileSystem behavior\r\n  see above...\r\n  System.out.println(\"from cache: \" + name);\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ClassForAspectPath":" main method  ClassForAspectPath  ","ComplexAnnotation":"     ","Customer":" removeCall addCall toString getAreacode localTo call pickup hangup merge name areacode calls telecom.Customer  /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","Lint":" setAll setAll setFromProperties loadDefaultProperties setFromProperties setFromProperties allKinds getLintKind suppressKinds clearAllSuppressions clearSuppressions getMessageKind fromKey setSuppressed isEnabled isSupressed getName getKind setKind signal signal kinds world invalidAbsoluteTypeName invalidWildcardTypeName unresolvableMember typeNotExposedToWeaver shadowNotInStructure unmatchedSuperTypeInCall unmatchedTargetKind canNotImplementLazyTjp multipleAdviceStoppingLazyTjp needsSerialVersionUIDField serialVersionUIDBroken noInterfaceCtorJoinpoint noJoinpointsForBridgeMethods enumAsTargetForDecpIgnored annotationAsTargetForDecpIgnored cantMatchArrayTypeOnVarargs adviceDidNotMatch invalidTargetForAnnotation elementAlreadyAnnotated runtimeExceptionNotSoftened uncheckedArgument uncheckedAdviceConversion noGuardForLazyTjp noExplicitConstructorCall aspectExcludedByConfiguration unorderedAdviceAtShadow swallowedExceptionInCatchBlock calculatingSerialVersionUID cantFindType cantFindTypeAffectingJoinPointMatch trace name message kind isSupressed org.aspectj.weaver.Lint  allows a user to control their severity (for e.g. ltw or binary weaving)\r\n  temporarily suppress the given lint messages\r\n  remove any suppression of lint warnings in place\r\n  by SuppressAjWarnings\r\n  can't suppress errors!\r\n /* private */\r\n /* private */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","WhitespaceFlyweight":" print print c c ca.ubc.cs.spl.aspectPatterns.examples.flyweight.aspectj.WhitespaceFlyweight ca.ubc.cs.spl.aspectPatterns.examples.flyweight.java.WhitespaceFlyweight  ","Util":" isExecutingOnJava5 start ident space newline split inlineTags firstSentenceTags firstSentenceText findTags parse rawCommentText commentText compareTo signature flatSignature signature isIncluded isIncluded dump gets array array documentation invoke invoke access executableMemberDoc pointcutDec methodDec getPointcutDec getFieldDec getMethodDec getConstructorDec shortVersion replace visitFiles iaxIfNotCanReadDir iaxIfNotCanReadFile iaxIfNotCanWriteDir iaxIfNull renderException canWriteDir path path canReadDir canReadFile delete deleteContents makeTempDir close isEmpty closeSilently closeSilently reportMemberDiffs copy getAttribute getClasspath getRequiredBundles utility main main fail read write main log dumpMethods dumparray dumplist stringify fail signal signal TESTSRC JAVA5_SRC JAVA5_TESTSRC JAVA5_VM BUNDLE_NAME BUNDLE_SYMBOLIC_NAME BUNDLE_VERSION BUNDLE_ACTIVATOR BUNDLE_VENDOR REQUIRE_BUNDLE IMPORT_PACKAGE BUNDLE_CLASSPATH NAMES manifest attributes text name versions optional DEFAULT_COMMAND DEFAULT_NAME PRINT pubPublic pubProtected pubDefault pubPrivate pubInnerPublic pubInnerProtected pubInnerDefault pubInnerPrivate defPublic defProtected defDefault defPrivate defInnerPublic defInnerProtected defInnerDefault defInnerPrivate org.aspectj.tools.ajdoc.Util org.aspectj.tools.ajdoc.Util org.aspectj.internal.tools.build.Util org.smart.app.Util jar.Util zip.Util Util pack.Util Util Util util.Util  Try to match a link tag\r\n  of str as a 'Text' Tag\r\n  match it\r\n  Don't want to include the right brace\r\n  end of a sentence\r\n  Find the closing '>'\r\n  If there's no closing '>' signal an error\r\n  Inspect the inside of the tag\r\n  <h5> <h6> <hr> <pre> or <  XXX This sucks!!! Will redo later.\r\n  String result = \"\";\r\n  result += line.substring(i);\r\n  return result;\r\n  String result = \"\";\r\n  result += line;\r\n  return result;\r\n  String str = \"(\";\r\n  str += typeName + (i < N-1 ? \",\" : \"\");\r\n  str += \")\";\r\n  return str;\r\n  XXX to do\r\n  XXX Debugging\r\n  TODO\r\n  TODO\r\n  MethodDec md = (MethodDec)i.next();\r\n  XXX quick hack for Java 5 support\r\n  just assume only one quoted \",\" for version?\r\n  bundle-version=\"[1.5.0,1.5.5]\";resolution:=optiona\r\n  File file = File.createTempFile(name,null);\r\n  ,String[] expectedMethods) {\r\n  System.err.println(\"fail: \" + s);\r\n  System.err.println(\"signal: \" + s);\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","RunSpecIterator":" abortOnFailure reset getNumIncomplete hasNextRun nextRun iterationCompleted toString makeSandbox getSandbox setSandbox spec sandbox childSpecs specIndex validator childIterator haltOnFailure numIncomplete failureKind org.aspectj.testing.harness.bridge.RunSpecIterator  XXX reconsider public after debugging\r\n  hoist: result not wrapped but single IRun\r\n  client should read reason why from validator\r\n  do not return result if halting due to failure\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CoverageTestCase":" setUp testOptions testCoveragePublicMode testAJdocHasAspectTitle testAJdocHasClassTitle testInnerAspect testAdviceNamingCoverage testAdvisesRelationshipCoverage testAdvisedByMethodExecution testAdvisedByConstructorExecution testAdvisedByMethodCall testAdvisedByConstructorCall testAdvisedByGet testAdvisedBySet testAdvisedByInitialization testAdvisedByStaticInitialization testAdvisedByHandler testTwoBeforeAdvice testNoSpuriousAdvisedByRels testCoverage testNestedAspect testNestedAspectWithSimilarName testAdviceInNestedAspect testAdvisedByInNestedAspect createFiles file0 file1 aspect1 file2 file3 file4 file5 file6 file7 file8 file9 file10 org.aspectj.tools.ajdoc.CoverageTestCase  should only be ajdoc for the public class\r\n  the private ClassBar, Bazz and Jazz classes.\r\n  than \"Class ClassA.InnerAspect\"\r\n  get the html file for the enclosing class\r\n  has not been changed to \"Aspect ClassA\"\r\n  than \"Class PkgVisibleClass.NestedAspect\"\r\n  get the html file for the enclosing class\r\n  has not been changed to \"Aspect PkgVisibleClass\"\r\n  rather than \"Class ClassWithNestedAspect.NestedAspect\"\r\n  get the html file for the enclosing class\r\n  has not been changed to \"Aspect ClassWithNestedAspect\"\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","NoCalledMethodName":"     ","LazyMethodGen":" calculateMaxLocals hasDeclaredLineNumberInfo getDeclarationLineNumber getDeclarationOffset addAnnotation hasAnnotation initialize unpackHandlers getOutermostExceptionStart getOutermostExceptionEnd unpackLineNumbers ensureAllLineNumberSetup unpackLocals allocateLocal allocateLocal getMethod markAsChanged toString toShortString toLongString print print printAspectAttributes run assignLabels print printRangeString getRangeString printDepth printLabel printInstruction pad getLocalVariableTag getLineNumber isStatic isAbstract isBridgeMethod addExceptionHandler getAccessFlags getAccessFlagsWithoutSynchronized isSynchronized setAccessFlags getArgumentTypes getEnclosingClass getMaxLocals getName getReturnType setMaxLocals getBody hasBody getAttributes getDeclaredExceptions getClassName pack forceSyntheticForAjcMagicMembers inAspect makeSynthetic packBody addLocalVariables addExceptionHandlers handleBranchInstruction handleRangeInstruction copyAllInstructionsExceptRangeInstructionsInto remap insertHandler isPrivate isProtected isDefault isPublic assertGoodBody assertGoodBody assertGoodHandle assertGoodBranchInstruction assertInBody assertGoodRangeHandle assertGoodRange assertRangeHandle assertTargetedBy assertTargets getRangeAndAssertExactlyOne assertGoodTargeter isAdviceMethod isAjSynthetic isSynthetic getSourceLocation getEffectiveSignature setEffectiveSignature getSignature getParameterSignature getMemberView forcePublic getCanInline setCanInline addAttribute toTraceString ACC_SYNTHETIC accessFlags returnType name argumentTypes declaredExceptions body attributes newAnnotations enclosingClass memberView effectiveSignature highestLineNumber avoidUseOfBcelGenObjects checkedXsetOption fromFilename maxLocals canInline isSynthetic matchedShadows matchedShadowTests definingType savedMethod prefixMap suffixMap labelMap body out pool ranges BODY_INDENT CODE_INDENT start end org.aspectj.weaver.bcel.LazyMethodGen  private final String[]        argumentNames;\r\n  leaving null for abstracts\r\n  this is the type of the interface the method is technically on\r\n  ??? should be okay, since constructed ones aren't woven into\r\n  this.argumentNames = Utility.makeArgNames(paramTypes.length);\r\n  TODO we could check for @Around advice as well\r\n  inline state will be garbaged due to reweavable impl\r\n  TODO we could check for @Around advice as well\r\n  inline state will be garbaged due to reweavable impl\r\n  build from an existing method, lazy build saves most work for initialization\r\n  If member view is null, we manage them in newAnnotations\r\n  Check local annotations first\r\n  Check whether we need to configure the optimization\r\n  this.annotations = gen.getAnnotations();\r\n  body = new InstructionList(savedMethod.getCode().getCode());\r\n  if (len > 0) hasExceptionHandlers = true;\r\n  this doesn't necessarily handle overlapping correctly!!!\r\n  also removes from target\r\n  also removes from target\r\n  also removes from target\r\n  ??? this relies on gentle treatment of constant pool\r\n  throw e; PR 70201.... let the normal problem reporting infrastructure deal with this rather than crashing.\r\n  XXX assuming exactly one attribute, munger...\r\n  killNops();\r\n  boolean hasPendingTargeters = false;\r\n  assert isRangeHandle(h);\r\n  label assignment\r\n  don't print empty ranges, that is, ranges who contain no actual instructions\r\n  doesn't handle nested: if (r.getStart().getNext() == r.getEnd()) continue;\r\n  killNops();\r\n  getArgumentNames(),\r\n  belt and braces, do the attribute even on Java 5 in addition to the modifier flag\r\n  map from localvariabletag to instruction handle\r\n  assert map.get(ih) == jh\r\n  and store up info for local variables\r\n  If we do know about it - update its end position\r\n  now continue\r\n  must be a range instruction since they're the only things we didn't copy across\r\n  just increment ih.\r\n  TODO Could be made conditional on whether line debug info is being produced\r\n  now add local variables\r\n  if so, just continue.\r\n  we already have a var starting at this tag with this slot\r\n  now add exception handlers\r\n  old target\r\n  New target is in hash map\r\n  Either LOOKUPSWITCH or TABLESWITCH\r\n  Update all targets\r\n  we're a range instruction\r\n  order is important, insert handlers in order of start\r\n  System.err.println(\"er \" + er);\r\n  int rreal = r.getRealStart().getPosition();\r\n  Old implementation, simply:   l.add(0,fresh);\r\n  we have reached the end\r\n  only enable for debugging, consider using cheaper toString()\r\n  definingType.getNameAsIdentifier() + \".\" + getName());   only to be enabled for debugging\r\n  if (memberView == null) return null;\r\n /*\r\n     * This option specifies whether we let the BCEL classes create LineNumberGens and LocalVariableGens\r\n     * or if we make it create LineNumberTags and LocalVariableTags.  Up until 1.5.1 we always created\r\n     * Gens - then on return from the MethodGen ctor we took them apart, reprocessed them all and \r\n     * created Tags. (see unpackLocals/unpackLineNumbers).  As we have our own copy of Bcel, why not create\r\n     * the right thing straightaway?  So setting this to true will call the MethodGen ctor() in such\r\n     * a way that it creates Tags - removing the need for unpackLocals/unpackLineNumbers - HOWEVER see\r\n     * the ensureAllLineNumberSetup() method for some other relevant info.\r\n     * \r\n     * Whats the difference between a Tag and a Gen?  A Tag is more lightweight, it doesn't know which\r\n     * instructions it targets, it relies on the instructions targetting *it* - this reduces the amount\r\n     * of targeter manipulation we have to do.\r\n     * \r\n     * Because this *could* go wrong - it passes all our tests, but you never know, the option:\r\n     * -Xset:optimizeWithTags=false\r\n     * will turn it *OFF*\r\n     */\r\n /*ShadowMungers*/\r\n /*Test*/\r\n /*BcelWorld.fromBcel(lng.getType())*/\r\n /* Update branch targets and insert various attributes.  \r\n         * Insert our exceptionHandlers\r\n         * into a sorted list, so they can be added in order later.\r\n         */\r\n /* Make copies of all instructions, append them to the new list\r\n     * and associate old instruction references with the new ones, i.e.,\r\n     * a 1:1 mapping.\r\n     */\r\n /* private */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AroundVarBug":"     ","Button":" actionPerformed click actionPerformed doClick actionPerformed handleClick actionPerformed clicked actionPerformed clicked setCommand actionPerformed clicked actionPerformed clicked setMediator defaultBackgroundColor defaultForegroundColor defaultText successor command mediator observer.Button ca.ubc.cs.spl.aspectPatterns.examples.chainOfResponsibility.aspectj.Button ca.ubc.cs.spl.aspectPatterns.examples.chainOfResponsibility.java.Button ca.ubc.cs.spl.aspectPatterns.examples.command.aspectj.Button ca.ubc.cs.spl.aspectPatterns.examples.command.java.Button ca.ubc.cs.spl.aspectPatterns.examples.mediator.aspectj.Button ca.ubc.cs.spl.aspectPatterns.examples.mediator.java.Button  /*\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n*/\r\n","ConstantLong":" accept dump getBytes setBytes toString getConstantValue bytes org.aspectj.apache.bcel.classfile.ConstantLong  ","Bottom3":" main runit  Bottom3  ","Bottom4":" main  Bottom4  ","Bottom1":" main publicMethod protectedMethod defaultMethod privateMethod main  Bottom1 Bottom1  ","Bottom2":" main publicMethod_voidReturn publicMethod_StringReturn publicMethod_IntegerReturn  Bottom2 Bottom2  ","XLintWarningTest":"     ","Aspects14":" aspectOf aspectOf aspectOf hasAspect hasAspect hasAspect getSingletonOrThreadAspectOf getPerObjectAspectOf getPerTypeWithinAspectOf checkAspectOf getSingletonOrThreadHasAspect getPerObjectHasAspect getPerTypeWithinHasAspect checkHasAspect EMPTY_CLASS_ARRAY PEROBJECT_CLASS_ARRAY PERTYPEWITHIN_CLASS_ARRAY EMPTY_OBJECT_ARRAY ASPECTOF HASASPECT org.aspectj.lang.Aspects14  e.getCause());\r\n  e.getCause());\r\n  e.getCause());\r\n ","AspectOf":"     ","StringToType":" commaSeparatedListToTypeArray stringToType makeParameterizedType  org.aspectj.internal.lang.reflect.StringToType  outer:\r\n  could be a type variable\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","FieldPatterns":"     ","AjcTest":" addTestStep runTest canRunOnThisVM getComment setComment getDir setDir getKeywords setKeywords getPr setPr getTitle setTitle setVm getVmLevel unwrapSpec unwrapCompilerRunSpec iterationCompleted getTitles getTitles makeTitlesList parseTitlesList readTitlesFile initClone clone setSuiteDir getSuiteDir setBugId getBugId setTestDirOffset getTestDirOffset makeRunIterator writeXml doAdoptParentValues countTests getTests makeSandbox clone setSuiteDir setSuiteDirFile getSuiteDirFile makeRunIterator toString is13VMOrGreater is14VMOrGreater is15VMOrGreater testSteps dir pr title keywords comment vmLevel XMLNAME NAMES OPTION_PREFIX VALID_OPTIONS TITLE_LIST TITLE_FAIL_LIST TITLE_CONTAINS REQUIRE_KEYWORDS SKIP_KEYWORDS PICK_PR VALID_SUFFIXES TITLES suiteDir testDirOffset bugId spec XMLNAME suiteDir org.aspectj.testing.AjcTest org.aspectj.testing.harness.bridge.AjcTest  JLS 20.18.7\r\n  import org.aspectj.bridge.*;\r\n  XXX messages\r\n  XXX messages\r\n  XXX revert to private after fixes\r\n  if no one set suiteDir, see if we have a source location\r\n  in order to defer initialization to nextRun()\r\n  all other options handled as comma-delimited lists\r\n  String.equals()\r\n  XXX also throw Error on empty specs...\r\n  null, null, null, null, \"\", null, \"\", \"\", true, true, false);\r\n  do not skip this even if children skip\r\n  return \"Suite.Spec(\" + suiteDir + \", \" + nKids + \" tests)\";\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer, \r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Removed.delete.20":" main  Removed  ","LinkCheck":" main getParser addLinkToCheck run makeURL checkLink handleAsRef addKnownNamedAnchor info fail uncommentedReference notTextContentType noContentType checkingLinks checkingLink acceptingUncheckedLink namedReferenceNotFound malformedUrl cantOpenConnection exceptionReading nullLink emptyLink handleStartTag handleSimpleTag registerIfNamedAnchor check check getProtocolChecker equals hashCode toString check check COMMAND_LINE messages parser linksToCheck checkedUrls validRefs refsToCheck checkExists checkContents handler doc addingLinks FALSE_CHECKER list doc url toString org.aspectj.testing.util.LinkCheck  pwd as base?\r\n  XXX dumb swing\r\n  XXX untested - stateful\r\n  Link\r\n  String (URL.toString)\r\n  String (URL.toString)\r\n  String (URL.toString)\r\n  messages.addingNullLinkFrom(doc);\r\n  equals overridden\r\n  now check that all named references are accounted for\r\n  get bad urls to fail on read before skipping by type\r\n  XXX canonicalize?\r\n  add pseudo-link to force reading of ref'd doc XXX hmm\r\n  XXX bug?\r\n  XXX find all references to this unfound named reference\r\n  only info if redirect from http to https\r\n  XXX use position to emit context?\r\n  exact class\r\n  XXX\r\n /*\r\n  * Known issues:\r\n  * - main interface only, though API's easily upgraded\r\n  * - https MalformedUrlExceptions on redirect\r\n  * - Swing won't quit without System.exit\r\n  * - single-threaded\r\n  */\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","AjcTaskCompileCommand":" waitUntilMessagesQuiet quit runCommand repeatCommand doCommand makeAjcTask updateIncrementalFile COMPILE_SECONDS_WITHOUT_MESSAGES COMPILE_MAX_SECONDS messages ajcTask incrementalFile incrementalCompileThread org.aspectj.testing.taskdefs.AjcTaskCompileCommand  import java.awt.Frame;\r\n  import java.lang.reflect.*;\r\n  final Thread thread = Thread.currentThread();\r\n  check for new messages every .5 to 3 seconds\r\n  delay until next check\r\n  single-threaded driver\r\n  XXX requires downcast from ICommand, need validator,IMessageHandler interface\r\n  signal task to quit, thread to die\r\n  XXX need for cleanup?\r\n  --------- ICommand interface\r\n  first incremental compile\r\n  normal, non-incremental case\r\n  because tools.ajc.Main privileges it over tagfile\r\n  CommandController.TAG_FILE_OPTION = \"-XincrementalFile\";\r\n  these should be impossible...\r\n  do not throw BuildException on error\r\n  XXX warn in verbose mode?\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","Break2":" a main main methodCaller method newM2 newM3 prefix Break2 M  this() is used for matching but not binding\r\n ","Break1":" a main main method prefix Break1 M  ","BinaryFormsTestCase":" testJar1  org.aspectj.ajdt.internal.compiler.batch.BinaryFormsTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","InstConstraintVisitor":" stack locals constraintViolated setFrame setConstantPoolGen setMethodGen indexOfInt referenceTypeIsInitialized valueOfInt arrayrefOfArrayType _visitStackAccessor visitLoadClass visitStackConsumer visitStackProducer visitCPInstruction visitFieldInstruction visitInvokeInstruction visitStackInstruction visitLocalVariableInstruction visitLoadInstruction visitStoreInstruction visitReturnInstruction visitAALOAD visitAASTORE visitACONST_NULL visitALOAD visitANEWARRAY visitARETURN visitARRAYLENGTH visitASTORE visitATHROW visitBALOAD visitBASTORE visitBIPUSH visitBREAKPOINT visitCALOAD visitCASTORE visitCHECKCAST visitD2F visitD2I visitD2L visitDADD visitDALOAD visitDASTORE visitDCMPG visitDCMPL visitDCONST visitDDIV visitDLOAD visitDMUL visitDNEG visitDREM visitDRETURN visitDSTORE visitDSUB visitDUP visitDUP_X1 visitDUP_X2 visitDUP2 visitDUP2_X1 visitDUP2_X2 visitF2D visitF2I visitF2L visitFADD visitFALOAD visitFASTORE visitFCMPG visitFCMPL visitFCONST visitFDIV visitFLOAD visitFMUL visitFNEG visitFREM visitFRETURN visitFSTORE visitFSUB visitGETFIELD visitGETSTATIC visitGOTO visitGOTO_W visitI2B visitI2C visitI2D visitI2F visitI2L visitI2S visitIADD visitIALOAD visitIAND visitIASTORE visitICONST visitIDIV visitIF_ACMPEQ visitIF_ACMPNE visitIF_ICMPEQ visitIF_ICMPGE visitIF_ICMPGT visitIF_ICMPLE visitIF_ICMPLT visitIF_ICMPNE visitIFEQ visitIFGE visitIFGT visitIFLE visitIFLT visitIFNE visitIFNONNULL visitIFNULL visitIINC visitILOAD visitIMPDEP1 visitIMPDEP2 visitIMUL visitINEG visitINSTANCEOF visitINVOKEINTERFACE visitINVOKESPECIAL visitINVOKESTATIC visitINVOKEVIRTUAL visitIOR visitIREM visitIRETURN visitISHL visitISHR visitISTORE visitISUB visitIUSHR visitIXOR visitJSR visitJSR_W visitL2D visitL2F visitL2I visitLADD visitLALOAD visitLAND visitLASTORE visitLCMP visitLCONST visitLDC visitLDC_W visitLDC2_W visitLDIV visitLLOAD visitLMUL visitLNEG visitLOOKUPSWITCH visitLOR visitLREM visitLRETURN visitLSHL visitLSHR visitLSTORE visitLSUB visitLUSHR visitLXOR visitMONITORENTER visitMONITOREXIT visitMULTIANEWARRAY visitNEW visitNEWARRAY visitNOP visitPOP visitPOP2 visitPUTFIELD visitPUTSTATIC visitRET visitRETURN visitSALOAD visitSASTORE visitSIPUSH visitSWAP visitTABLESWITCH GENERIC_ARRAY frame cpg mg org.aspectj.apache.bcel.verifier.structurals.InstConstraintVisitor  Stack values are always consumed first; then produced.\r\n  Stack values are always consumed first; then produced.\r\n  null means \"no class is loaded\"\r\n  A FieldInstruction may be: GETFIELD, GETSTATIC, PUTFIELD, PUTSTATIC\r\n  the o.getClassType(cpg) type has passed pass 2; see visitLoadClass(o).\r\n  LOAD instructions must not read Type.UNKNOWN\r\n  [suppose some instruction put an int at N+1--- our double at N is defective]\r\n  we deal with an ALOAD\r\n  LOAD instructions must read the correct type.\r\n  LOAD instructions must have enough free stack slots.\r\n  Don't bother about 1 or 2 stack slots used. This check is implicitely done below while type checking.\r\n  we deal with ASTORE\r\n  the other xSTORE types are singletons in BCEL.\r\n  of an uninitialized object type.\r\n  not derived from an ArrayType, it follows that 'objectref' must be of an ObjectType or Type.NULL.\r\n  NULL is a subclass of every class, so to speak.\r\n  The objectref must be of type reference.\r\n  pool item at the index must be a symbolic reference to a class, array, or interface type.\r\n  stack().peek(1).getSize == 1.\r\n  Form 2, okay.\r\n  stack().peek().getSize() == 1.\r\n  Form 2, okay.\r\n  stack top is of size 1\r\n  Form 2\r\n  Form 1\r\n  Form 3\r\n  stack top is of size 1\r\n  Form 2\r\n  stack top size is 2, next-to-top's size is 1\r\n  Form 4\r\n  TODO: Could go into Pass 3a.\r\n  Mhhh. In BCEL, at this time \"IINC\" is not a LocalVariableInstruction.\r\n  The objectref must be of type reference.\r\n  pool item at the index must be a symbolic reference to a class, array, or interface type.\r\n  0 to nargs-1\r\n  could be a ReturnaddressType\r\n  1 for the objectref\r\n  Don't init an object twice.\r\n  0 to nargs-1\r\n  using a \"wider cast object type\".\r\n  could be a ReturnaddressType\r\n  0 to nargs-1\r\n  instead of a \"wider cast object type\" created during verification.\r\n  0 to nargs-1\r\n  of a single \"wider cast object type\" created during verification.\r\n  could be a ReturnaddressType\r\n  Dimensions argument is okay: see Pass 3a.\r\n  e.g.: Don't instantiate interfaces\r\n  Comment it out if you encounter problems. See also the analogon at visitPUTSTATIC.\r\n  TODO: Could go into Pass 3a.\r\n  Comment it out if you encounter problems. See also the analogon at visitPUTFIELD.\r\n  If we leave an <init> method\r\n ","Line":" getP1 setP1 getP2 setP2 move toString contains getLine2D getShape getP1 setP1 getP2 setP2 move toString contains getLine2D getShape getP1 setP1 getP2 setP2 move toString contains getLine2D getShape getP1 setP1 getP2 setP2 move toString contains getLine2D getShape getP1 getP2 move toString contains getLine2D getShape getP1 getP2 setP1 setP2 moveBy _p1 _p2 THRESHHOLD _p1 _p2 THRESHHOLD _p1 _p2 THRESHHOLD _p1 _p2 THRESHHOLD _p1 _p2 THRESHHOLD p1 p2 figures.composites.Line figures.composites.BoundedLine figures.Line figures.Line figures.Line figures.Line figures.Line figures.Line figures.composites.Line figures.composites.BoundedLine  /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","InnerInterfaceAccess":"     ","AnnotationPointcutsTests":" suite getSpecFile test001_usingAnnotationsInPointcuts test002_AtAnnotationMatching test003_Within_Code test004_Within  org.aspectj.systemtest.ajc150.AnnotationPointcutsTests  before(): call(@SimpleAnnotation * *(..)) { }\r\n ","FactorialCflow":"     ","RunTime":"     ","AjcTests":" aspectjrtClasspath suite  org.aspectj.tools.ajc.AjcTests  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg       initial implementation \r\n * ******************************************************************/\r\n","Proceed":" resolveType findEnclosingAround inInner org.aspectj.ajdt.internal.compiler.ast.Proceed  ??? this could in theory be done by the parser, but that appears to be hard\r\n  binding.returnType;\r\n  binding.returnType;\r\n  pr 53981 only match \"bare\" calls to proceed\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n *               2004 contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation\r\n *     IBM      ongoing maintenance \r\n * ******************************************************************/\r\n","AjdeModuleTests":" suite  org.aspectj.ajde.AjdeModuleTests  ","AFewVars":" main  AFewVars  ","EnumElementValue":" dump stringifyValue getEnumTypeString getEnumValueString getValueIndex getTypeIndex typeIdx valueIdx org.aspectj.apache.bcel.classfile.annotation.EnumElementValue  For enum types, these two indices point to the type and value\r\n  u1 type of value (ENUM_CONSTANT == 'e')\r\n  u2\r\n  u2\r\n  Utility.signatureToString(cu8.getBytes());\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","Incr__0":" main  Incr  ","Incr__2":" main  Incr  ","IF_ACMPNE":" negate accept  org.aspectj.apache.bcel.generic.IF_ACMPNE  ","IllegalCflowCE":"     ","Chars":" main realMain  Chars  ","TestBuildListener":" reset compileStarted compileFinished compileAborted getBuildFinished getBuildSucceeded buildFinished buildSucceeded org.aspectj.ajde.TestBuildListener  int timeInSeconds = buildTime /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AbstractDerived":"     ","INVOKESTATIC":" getExceptions accept  org.aspectj.apache.bcel.generic.INVOKESTATIC  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","DominatesTypePattern":"     ","InstructionContext":" getTag setTag execute getOutFrame getInstruction getSuccessors getExceptionHandlers  org.aspectj.apache.bcel.verifier.structurals.InstructionContext  ","Breaks":" main m m1 m2 sawTrue sawFalse Breaks  ","Incr__4":" main  Incr  ","AroundInlineMungerTest":" main suite testAccessNonPublicFromAroundAdvice target  ataspectj.AroundInlineMungerTest  ","PointcutWizard":"  serialVersionUID jPanel1 jPanel2 jPanel4 jLabel1 borderLayout1 borderLayout2 borderLayout3 jLabel4 jPanel3 jCheckBox5 jCheckBox4 jCheckBox3 jCheckBox2 jCheckBox1 cancel_button ok_button jPanel5 org.aspectj.ajde.ui.swing.PointcutWizard  import java.awt.event.ActionEvent;\r\n  this.signatures = signatures;\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CatchClauseSignatureImpl":" getParameterType getParameterName createToString parameterType parameterName org.aspectj.runtime.reflect.CatchClauseSignatureImpl  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Utils":" verifyClass getClassFrom createRepos debugVerification org.aspectj.testing.Utils  ","SynchroInterface":"     ","MainExecStartLines":" main go  app.MainExecStartLines  12\r\n  6\r\n  6\r\n  6\r\n  20\r\n ","BREAKPOINT":" accept  org.aspectj.apache.bcel.generic.BREAKPOINT  ","PointcutEvaluationExpenseComparator":" compare getScore MATCHES_NOTHING WITHIN ATWITHIN STATICINIT ADVICEEXECUTION HANDLER GET_OR_SET WITHINCODE ATWITHINCODE EXE_INIT_PREINIT CALL ANNOTATION THIS_OR_TARGET AT_THIS_OR_TARGET ARGS AT_ARGS CFLOW IF OTHER org.aspectj.weaver.patterns.PointcutEvaluationExpenseComparator  important property for a well-defined comparator\r\n  sort by hashCode\r\n  a higher score means a more expensive evaluation\r\n /*not allowed if ne*/\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","AbstractTreeWriter":" generateLevelInfo printExtendsImplements printDominationInfo generateTree seenAspect aspectMode org.aspectj.tools.doclets.standard.AbstractTreeWriter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","IntroducedAssertion":"     ","ArrayFieldDeclarationCE":"     ","Around":"     ","RegexpFilterReader":" setErrorSink preWrite accept process postWrite close process process getResults visitLines write main setFilter readLine errSink appendNewlines writer closed filter results filter org.aspectj.testing.compare.StringDumper org.aspectj.testing.compare.FilteredDumper org.aspectj.testing.compare.FilteredAccumulator org.aspectj.testing.compare.RegexpFilterReader  closed = false;\r\n  todo: ok to close since System.in underlies?\r\n  todo: ok to close since System.out underlies?\r\n  ---------------------------------------------- constructors\r\n  ---------------------------------------------- instance fields\r\n  ---------------------------------------------- instance methods\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","TjpMistake":"     ","IModelFilter":" processFilelocation wantsHandleIds  org.aspectj.asm.IModelFilter  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","WarningTest":"     ","SimpleAutoboxing":" method_takes_Integer main  SimpleAutoboxing  ","BaseClass":" main run1 run2 run3 count BaseClass  ","Visiting":"     ","TestingClientModuleTests":" suite  org.aspectj.testing.TestingClientModuleTests  ","PointcutDeclaration":" getPointcut parseStatements postParse isAtAspectJ addAtAspectJAnnotations getPointcutText buildArgNameRepresentation setGenerateSyntheticPointcutMethod resolve resolvePointcut resolveStatements makeResolvedPointcutDefinition makeAttribute generateCode addVersionAttributeIfNecessary generateInfoAttributes printReturnType printBody getDesignator setDesignator getName setName propertyDescriptors internalStructuralPropertiesForType internalGetSetIntProperty internalGetSetChildProperty internalGetChildListProperty internalJavadocProperty internalModifiersProperty internalModifiers2Property getNodeType0 clone0 subtreeMatch0 accept0 parameters memSize treeSize mangledPrefix pointcutDesignator declaredModifiers declaredName generateSyntheticPointcutMethod world resolvedPointcutDeclaration weaverVersionChars pointcutName NAME_PROPERTY pointcutDesignator DESIGNATOR_PROPERTY PARAMETERS_PROPERTY JAVADOC_PROPERTY MODIFIERS_PROPERTY MODIFIERS2_PROPERTY PROPERTY_DESCRIPTORS_2_0 PROPERTY_DESCRIPTORS_3_0 parameters org.aspectj.ajdt.internal.compiler.ast.PointcutDeclaration org.aspectj.org.eclipse.jdt.core.dom.PointcutDeclaration  if (mangleSelector) {\r\n  no need to check abstract class as JDT does that\r\n  check for @Aspect\r\n  has been wrecked by resolution, try to reconstruct from tokens\r\n  coming from an @Pointcut declaration\r\n  now at the 'right' time.\r\n  System.out.println(\"resolved: \" + getPointcut() + \", \" + getPointcut().state);\r\n  ??? might want to use null\r\n  System.out.println(\"pc: \" + getPointcut() + \", \" + getPointcut().state);\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  lazy init must be thread-safe for readers\r\n  allow default implementation to flag the error\r\n  allow default implementation to flag the error\r\n  allow default implementation to flag the error\r\n  ajh02: hmmmmmmm.. should make a POINTCUT_DECLARATION thing\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration#printBody(int, java.lang.StringBuffer)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t * @since 3.0\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n","IntroducingMethodsOnPlusImplementedInterfaces":"     ","Const":"     ","TestScope":"   org.aspectj.weaver.patterns.TestScope  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","LongStringAjc":" main STRING LongStringAjc  line 21\r\n  500\r\n  line 21\r\n  1000\r\n  sed -n ' ","DelegatingOutputStream":" close flush write write write add remove isVerbose setVerbose verbose target delegates org.aspectj.tools.ajc.DelegatingOutputStream  ","BuildProgressPanel":" setProgressText setConfigFile setProgressBarVal setProgressBarMax getProgressBarMax incrementProgressBarVal finish jbInit cancel_button_actionPerformed serialVersionUID MAX_VAL borderLayout1 cancel_panel cancel_button jPanel2 progress_label configFile_label borderLayout3 jPanel1 compile_progressBar org.aspectj.ajde.ui.swing.BuildProgressPanel  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CompareUtil":" notSame compare compare compare compare  org.aspectj.testing.compare.CompareUtil  known to be same\r\n  unknown whether equal or not\r\n  known to be same\r\n  first to not have an element loses\r\n  they both have them\r\n  use lhs as standard\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","WeaveTestCase":" setUp tearDown getAdviceTag weaveTest weaveTest weaveTestInner makeClassPath makeUnwovenClassFile checkClass genClass realCheckClass makeConcreteAdvice makeConcreteAdvice makeConcreteAdvice makeAdviceField makeAdviceAll makeAdviceAll makePointcutAll makePointcutNoZeroArg makePointcutPrintln makeConcretePointcut makeResolvedPointcut getStandardTargets getTraceJar weaveTest weaveTest addLexicalOrder checkShadowSet regenerate runTests behave15 outDir outDirPath world classDir TESTDATA_DIR org.aspectj.weaver.bcel.WeaveTestCase  continue to use BCEL for these tests.\r\n  static String classDir = \"..  int preErrors = currentResult.errorCount();\r\n  new LazyClassGen(classType);\r\n  ClassGen b = getJavaClass(outDir, className);\r\n  ----\r\n  System.err.println(((KindedPointcut)myMunger.getPointcut().getPointcut()).getKind());\r\n  + \"_staticinitialization()\"));\r\n  inner:\r\n  XXX cut-and-paster from IdWeaveTestCase\r\n /*\"classes\"*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","MarkerAnnotation":"     ","Finals":"     ","ITokenSource":" next peek peek getIndex setIndex getSourceContext  org.aspectj.weaver.patterns.ITokenSource  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","DeowTest":" hello hi target onHello onHi ataspectj.DeowTest  ","InputAnnotation2":"     ","ConvertToUnchecked":"     ","MegaTrace":"     ","StoreInstruction":" accept  org.aspectj.apache.bcel.generic.StoreInstruction  ","AbstractAspectNPEParent":" method main  ataspectj.bugs.AbstractAspectNPEParent  NPE at AJC time\r\n ","FieldGetOn":" getDeclaringType accept m_declaringType org.aspectj.weaver.ast.FieldGetOn  ","Six":"     ","KnownMessageSend":" manageSyntheticAccessIfNecessary resolveMethodBinding toStringExpression generateCode  org.aspectj.ajdt.internal.compiler.ast.KnownMessageSend  System.out.println(\"about to generate: \"  +this + \" args: \" + Arrays.asList(arguments));\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","RunStatus":" setIdentifier setValidator reset reset start finish abort thrown completeAbruptly runResult hasAnyMessage getMessages handleMessage isIgnoring dontIgnore hasAnyMessage getMessages numMessages started isCompleted aborted getResult getAbortRequest getThrown getUnmodifiableListView getMessages getIdentifier clearMessages getRunner addChild registerParent getChildren getParent toString toLongString INDEX name evaluated started completed id result abortRequest thrown messageHolder children parent runner validator org.aspectj.testing.run.RunStatus  set only in starting()\r\n  set only in completed(boolean)\r\n  XXX configurable\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PerCFlowCompileFromJarTest":"     ","Configurable":"     ","Sandbox":" canRead canWrite iaxWrite iaxRead assertState getToStringLeader toString toLongString setCommand clearCommand reportClassDiffs getCommand getCommand getTestBaseSrcDir findFiles getTestBaseSrcDir defaultTestBaseSrcDir readableDir compilerRunInit javaRunInit setTestBaseSrcDir setAspectpath setBootclasspath setClasspath getClasspathDirectories getClasspathJars aspectpathToString classpathToString getBootclasspath getBootclasspath accept RUN_DIR CLASSES_DIR testBaseDir sandboxDir workingDir classesDir runDir stagingDir validator testBaseSrcDir compileClasspath bootClasspath aspectpath gotClasspath command gotCommand toStringLeader compilerRunInit names org.aspectj.testing.harness.bridge.Sandbox  XXX required after completing tests?\r\n  XXX not really iax\r\n  XXX urk!\r\n  need to add ICommand.quit()\r\n  If locked by suite, we can't.\r\n  XXX move to more general in FileUtil\r\n  default to aspectjrt.jar?\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ConstructorDocImpl":" isConstructor qualifiedName name  org.aspectj.tools.ajdoc.ConstructorDocImpl  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","EnumAnnotationValue":" getType stringify toString type value org.aspectj.weaver.EnumAnnotationValue  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","PreInitialization":"     ","IncCompilerRun":" setupAjcRun doStaging doStaging run toString initClone clone setFresh setTag setCheckModel toString addDirChanges makeRunIterator writeXml setClassesAdded setClassesUpdated setClassesRemoved addItems spec sandbox numCopies numDeletes numFails XMLNAME fresh classesAdded classesRemoved classesUpdated checkModel tag org.aspectj.testing.harness.bridge.IncCompilerRun  import java.util.*;\r\n  import org.aspectj.bridge.IMessage;\r\n  nonfinal later to make re-runnable\r\n  sigh - delay until after last last-mod-time\r\n  arbitrary resource extension\r\n  arbitrary resource extension\r\n  XXX around advice or template method  setup failed\r\n  more debugging context in case of failure\r\n  XXX weak - actual messages not reported in real-time, no fast-fail\r\n  urk\r\n  final long startTime = System.currentTimeMillis();\r\n  XXX disabled LangUtil.throwIaxIfNotAllAssignable(actualRecompiled, File.class, \"recompiled\");\r\n  handler does not verify sandbox...\r\n  XXX copy  XXX need name\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ImportWithinClassBody":"     ","OptimizedFullPathHandleProvider":" getKey createHandleIdentifier createHandleIdentifier getFileForHandle getLineNumberForHandle getOffSetForHandle createHandleIdentifier dependsOnLocation initialize ID_DELIM kToF key org.aspectj.asm.internal.OptimizedFullPathHandleProvider  skip over the file\r\n  skip over the file\r\n  skip over the line number\r\n  skip over the column\r\n  return true;\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","Big":" main m  Big  ","ExceptionHandlers":" getExceptionHandlers exceptionhandlers org.aspectj.apache.bcel.verifier.structurals.ExceptionHandlers  ","TestDiffs":" main compareResults append print trimByName split readTestResults safeList compare equals compare equals toString expected actual missing added broken fixed expectedPassed expectedFailed actualPassed actualFailed stillPassing stillFailing BY_PASSNAME BY_NAME FIELDSEP test config pass toString org.aspectj.testing.util.TestDiffs  XXX\r\n  otherwise, unexpected-[pass|fail] look like [fixes|broken]\r\n  fixed tests show up in results as unexpected-pass or missing-fail\r\n  int i = 0;\r\n  ignore\r\n  XXX fix elision in test name rendering by -traceTestsMin?\r\n  expected[Passed|Failed]\r\n  actual[Passed|Failed]\r\n  stillPassing: expected.passed w  stillFailing: expected.failed w  private static final ArrayList TESTS = new ArrayList();\r\n  XXX pretty dumb implementation\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","XLintTypeArgsPCD":"     ","MoodIndicator":" getMood getMood main HAPPY mood introduced Mood Moody MoodyImpl MoodIndicator C  this interface can be outside of the aspect\r\n  this implementation can be outside of the aspect\r\n  the field type must be the introduced interface. It can't be a class.\r\n ","XLintTests":" suite getSpecFile test001 test002 test003 test004 test005 test006 test007 test008 test009 test010 test011 test012 test013 test014 test015 test016 test017 test018 test019 test020 test021 test022 test023 test024 test025 test026 test027 test028 test029 test030  org.aspectj.systemtest.xlint.XLintTests  the following five tests check various scenarios around the lazyTjp XLint message\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","ICONST":" getValue getType accept value org.aspectj.apache.bcel.generic.ICONST  Even works for i == -1\r\n ","TargetObjectReplacement":"     ","EnsureOverriding":"     ","FieldInnerAccess":" main mib m mi lock lock FieldInnerAccess Base Derived  ","IXOption":"   com.test.IXOption  ","MessageListXmlReaderTest":" setUp tearDown testNothingOthersSkipped skiptestMessageReading checkXmlRoundTrip tempFiles org.aspectj.testing.xml.MessageListXmlReaderTest  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Main3":" main  p1.Main3  ","Main1":" main main  Main1 p1.Main1  ","PR61658":"     ","AndExpression":" evaluate evaluate replace copy expression1 expression2 expression1 expression2 ca.ubc.cs.spl.aspectPatterns.examples.interpreter.aspectj.AndExpression ca.ubc.cs.spl.aspectPatterns.examples.interpreter.java.AndExpression  ","Main2":" main test main  dk.infimum.aspectjtest.Main2 p1.Main2  swap following lines to change behavior\r\n  Tester.checkEqual(new p1.Foo().getClass().getName(), \"p1$Foo\");\r\n ","HashablePoint":"     ","AdviceOnInheritedMethod":"     ","AjdtAjcTests":" suite TESTDATA_PATH TESTDATA_DIR org.aspectj.ajdt.ajc.AjdtAjcTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","HierarchyDependsTestCase":" testToDo  org.aspectj.weaver.bcel.HierarchyDependsTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","SimpleGenericsUsage":" main main  SimpleGenericsUsage SimpleGenericsUsage  ","AspectX4":"     ","AspectX1":"     ","AspectX3":"     ","AspectX2":"     ","TypeVisitor":" visit visitAnnotation visitAttribute visitInnerClass visitField visitMethod visitSource visitOuterClass visitEnd setDelegateFieldsForAnnotationTarget relatedDelegate methodsList fieldsList attributes annotations name AnnotationRetention AnnotationTarget org.aspectj.weaver.asm.TypeVisitor  state on the relatedDelegate as appropriate\r\n  <E:Ljava  relatedDelegate.erasureSignature=name;        System.err.println(\"encountered attribute \"+attr.type);\r\n  wtf? (see testIterator in WorldTestCase)\r\n  param not used\r\n  Aspect\r\n  System.err.println(\"Processing:\"+element);\r\n  Aspect\r\n  For annotations, retention policy should default to CLASS if not set.\r\n  Retention\r\n  Target\r\n  Should only be one nvpair, thats the value\r\n  ---\r\n /*AnnotationNameValuePair*/\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","AfterLock":"     ","RuntimeAnnotations":" getAnnotations areVisible readAnnotations inflate writeAnnotations isInflated suite getSpecFile test01 test02 test03 test04 test05 test06 test07 test08 test09 test10 test11 test12 test13 test14 test15 test16 test17 test18 test19 test20 test21 test22 test23 test24 test25 test26 test27 test28 test29 annotations visible inflated annotation_data org.aspectj.apache.bcel.classfile.annotation.RuntimeAnnotations org.aspectj.systemtest.ajc150.RuntimeAnnotations  Keep just a byte stream of the data until someone actually asks for it\r\n /*Annotation*/\r\n","Mutex":" isMethodIn getMethodState testExclusion enterExclusion exitExclusion printNames isMethodIn getMethodState testExclusion enterExclusion exitExclusion printNames isMethodIn getMethodState testExclusion enterExclusion exitExclusion printNames isMethodIn getMethodState testExclusion enterExclusion exitExclusion printNames isMethodIn getMethodState testExclusion enterExclusion exitExclusion printNames methodNames methodStates prettyName methodNames methodStates prettyName methodNames methodStates prettyName methodNames methodStates prettyName methodNames methodStates prettyName coordination.Mutex coordination.Mutex coordination.Mutex coordination.Mutex coordination.Mutex  \r\n  \r\n  \r\n  \r\n  \r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","MarkedType":"   MarkedType MarkedType  ","BusObj":"   model.BusObj  ","PathVFS":"     ","MultiArgHelloWorld":" main foo  org.aspectj.weaver.test.MultiArgHelloWorld  /* Copyright (c) 2002 Contributors.\r\n * \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n */\r\n","AllRuntime":"     ","AroundNames":"     ","IAjTerminalSymbols":"   org.aspectj.ajdt.compiler.IAjTerminalSymbols  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","CflowBindingOrig":"     ","DefaultTarget":" publicMethod protectedMethod defaultMethod privateMethod readDefaultTarget publicDefaultInnerMethod protectedDefaultInnerMethod defaultDefaultInnerMethod privateDefaultInnerMethod readDefaultInnerTarget publicStaticInt protectedStaticInt defaultStaticInt privateStaticInt publicInt protectedInt defaultInt privateInt publicStaticDefaultInnerInt protectedStaticDefaultInnerInt defaultStaticDefaultInnerInt privateStaticDefaultInnerInt publicDefaultInnerInt protectedDefaultInnerInt defaultDefaultInnerInt privateDefaultInnerInt pack.DefaultTarget  /* def */\r\n /* default */\r\n /* default */\r\n /* copy/paste of PublicTarget with mods to default */\r\n","BadParameterBinding":" logEntry logExit logException  BadParameterBinding  ","ThisAndModifiers":"     ","RuntimePerformanceTest":" setUp tearDown testToString invokeSignatureToString warmUp makeMethodSig timer TIMEOUT ITERATIONS WARMUP_ITERATIONS EXPECTED_RATIO factory savedUseCaches method signature task abort org.aspectj.runtime.reflect.RuntimePerformanceTest  /* Save default state */\r\n /* If a test takes too long we can kill it and fail */\r\n /* Restore default state */\r\n","InOneFile":" hello hi target onHello onHi pkg2.InOneFile  ","TestingArgsAnnotations":" setExpectedMatches expected main myMethod doSomething doSomething doSomething doSomething expected index TestingArgsAnnotations A B C D E  now make some calls...\r\n ","SerialVersionUIDTests":" testTheBasics testTheBasicsWithLint testHorrible suite getSpecFile  org.aspectj.systemtest.ajc151.SerialVersionUIDTests  \r\n ","StaticCodeInstructionOperandConstraintException":"   org.aspectj.apache.bcel.verifier.exc.StaticCodeInstructionOperandConstraintException  ","IF_ACMPEQ":" negate accept  org.aspectj.apache.bcel.generic.IF_ACMPEQ  ","CannotMakeRootDocException":"   org.aspectj.tools.ajdoc.CannotMakeRootDocException  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","AfterStaticCall":"     ","EmptyVisitor":" visitCode visitCodeException visitConstantClass visitConstantDouble visitConstantFieldref visitConstantFloat visitConstantInteger visitConstantInterfaceMethodref visitConstantLong visitConstantMethodref visitConstantNameAndType visitConstantPool visitConstantString visitConstantUtf8 visitConstantValue visitDeprecated visitExceptionTable visitField visitInnerClass visitInnerClasses visitJavaClass visitLineNumber visitLineNumberTable visitLocalVariable visitLocalVariableTable visitMethod visitSignature visitSourceFile visitSynthetic visitUnknown visitStackMap visitStackMapEntry visitEnclosingMethod visitRuntimeVisibleAnnotations visitRuntimeInvisibleAnnotations visitRuntimeVisibleParameterAnnotations visitRuntimeInvisibleParameterAnnotations visitAnnotationDefault visitLocalVariableTypeTable visitStackInstruction visitLocalVariableInstruction visitBranchInstruction visitLoadClass visitFieldInstruction visitIfInstruction visitConversionInstruction visitPopInstruction visitJsrInstruction visitGotoInstruction visitStoreInstruction visitTypedInstruction visitSelect visitUnconditionalBranch visitPushInstruction visitArithmeticInstruction visitCPInstruction visitInvokeInstruction visitArrayInstruction visitAllocationInstruction visitReturnInstruction visitFieldOrMethod visitConstantPushInstruction visitExceptionThrower visitLoadInstruction visitVariableLengthInstruction visitStackProducer visitStackConsumer visitACONST_NULL visitGETSTATIC visitIF_ICMPLT visitMONITOREXIT visitIFLT visitLSTORE visitPOP2 visitBASTORE visitISTORE visitCHECKCAST visitFCMPG visitI2F visitATHROW visitDCMPL visitARRAYLENGTH visitDUP visitINVOKESTATIC visitLCONST visitDREM visitIFGE visitCALOAD visitLASTORE visitI2D visitDADD visitINVOKESPECIAL visitIAND visitPUTFIELD visitILOAD visitDLOAD visitDCONST visitNEW visitIFNULL visitLSUB visitL2I visitISHR visitTABLESWITCH visitIINC visitDRETURN visitFSTORE visitDASTORE visitIALOAD visitDDIV visitIF_ICMPGE visitLAND visitIDIV visitLOR visitCASTORE visitFREM visitLDC visitBIPUSH visitDSTORE visitF2L visitFMUL visitLLOAD visitJSR visitFSUB visitSASTORE visitALOAD visitDUP2_X2 visitRETURN visitDALOAD visitSIPUSH visitDSUB visitL2F visitIF_ICMPGT visitF2D visitI2L visitIF_ACMPNE visitPOP visitI2S visitIFEQ visitSWAP visitIOR visitIREM visitIASTORE visitNEWARRAY visitINVOKEINTERFACE visitINEG visitLCMP visitJSR_W visitMULTIANEWARRAY visitDUP_X2 visitSALOAD visitIFNONNULL visitDMUL visitIFNE visitIF_ICMPLE visitLDC2_W visitGETFIELD visitLADD visitNOP visitFALOAD visitINSTANCEOF visitIFLE visitLXOR visitLRETURN visitFCONST visitIUSHR visitBALOAD visitDUP2 visitIF_ACMPEQ visitIMPDEP1 visitMONITORENTER visitLSHL visitDCMPG visitD2L visitIMPDEP2 visitL2D visitRET visitIFGT visitIXOR visitINVOKEVIRTUAL visitFASTORE visitIRETURN visitIF_ICMPNE visitFLOAD visitLDIV visitPUTSTATIC visitAALOAD visitD2I visitIF_ICMPEQ visitAASTORE visitARETURN visitDUP2_X1 visitFNEG visitGOTO_W visitD2F visitGOTO visitISUB visitF2I visitDNEG visitICONST visitFDIV visitI2B visitLNEG visitLREM visitIMUL visitIADD visitLSHR visitLOOKUPSWITCH visitDUP_X1 visitFCMPL visitI2C visitLMUL visitLUSHR visitISHL visitLALOAD visitASTORE visitANEWARRAY visitFRETURN visitFADD visitBREAKPOINT visit visitEnum visitAnnotation visitArray visitEnd  org.aspectj.apache.bcel.classfile.EmptyVisitor org.aspectj.apache.bcel.generic.EmptyVisitor org.aspectj.weaver.asm.EmptyVisitor  J5SUPPORT:\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","ClassImplementsClass":"     ","ReferencePointcut":" getName setName propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty clone0 subtreeMatch0 accept0 treeSize couldMatchKinds fastMatch matchInternal toString write read resolveBindings postRead findResidueInternal concretize1 parameterizeWith shouldCopyLocationForConcretize equals hashCode accept pointcutName NAME_PROPERTY onType onTypeSymbolic name arguments typeVariableMap concretizing org.aspectj.org.eclipse.jdt.core.dom.ReferencePointcut org.aspectj.weaver.patterns.ReferencePointcut  $NON-NLS-1$\r\n  lazy init must be thread-safe for readers\r\n  allow default implementation to flag the error\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  ??? do either of these match methods make any sense???\r\n  XXX ignores onType\r\n  in this case we've already signalled an error\r\n  make this a static reference\r\n  if we're not a static reference, then do a lookup of outers\r\n  check visibility\r\n  the type parameters presented\r\n  if (onType == null) onType = pointcutDef.getDeclaringType();\r\n  we are allowed to bind to pointcuts which use subtypes as this is type safe\r\n  ??? This is not thread safe, but this class is not designed for multi-threading\r\n  Thread.currentThread().dumpStack();\r\n  in the declaring type\r\n  Thread.currentThread().dumpStack();\r\n  System.err.println(\"start: \" + searchStart);\r\n  as we don't know about any new parents added via decp.\r\n  the type parameters presented\r\n  and not one in a subtype that happens to have the same name.\r\n  We want to keep the original source location, not the reference location\r\n  XXX needs check that arguments contains no WildTypePatterns\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","PR83563_2":"     ","MissingPackageCE":"     ","RunIterator":" init init isHoistable init init abortOnFailure hasNextRun iterationCompleted nextRun toString name iter run org.aspectj.testing.run.RunIterator  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","LinkedListItem":"     ","PR83563_1":"     ","TestVarargs":" testVarargs  TestVarargs  /*extends TestCase */\r\n","ReweavableTestCase":" setUp testNonReweavableCompile testReweavableCompile testReweavableCompressCompile testReweavableSimpleCompile testForReweavableSimpleErrorCompile testErrorScenario2Compile testWorkingScenario2Compile start setProgressText setProgressBarVal incrementProgressBarVal setProgressBarMax getProgressBarMax finish checkFor compilerAdapter PROJECT_DIR debugTests binDir indir1Name indir2Name injarName outjarName org.aspectj.ajde.ReweavableTestCase  /*\r\n\t * Ensure the output directpry in clean\r\n\t */\r\n /*nonreweavesize_CalculatePI = (int)*/\r\n /*nonreweavesize_Logger = (int)*/\r\n /*reweavablesize_CalculatePI = (int)*/\r\n /*reweavablesize_Logger = (int)*/\r\n /* *******************************************************************\r\n * Copyright (c) 2004 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     Initial version\r\n * ******************************************************************/\r\n","IntertypeOverrides2":"     ","SingletonAspectBindingsTest":" log main suite hello hello testExecutionWithThisBinding testExecutionWithArgBinding aaround around2 before after before s_log s ataspectj.SingletonAspectBindingsTest  assertEquals(\"around2_ around_  before hello after _around _around2 \", s_log.toString());\r\n  assert clinit has run when singleton aspectOf reaches that\r\n  2 ","AfterReturningHandler":"     ","Statics":" type where label where label name name advice classes classes aspects types getPreQualifiedClassLink printPreQualifiedClassLink I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c org.aspectj.tools.doclets.standard.Statics Statics  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","InterfaceAndInnerHelper":"   InterfaceAndInnerHelper  ","AllLTWTests":" suite main  ataspectj.AllLTWTests  ","LocalVariable":" accept dump getConstantPool getLength getName getNameIndex getSignature getSignatureIndex getIndex getStartPC setConstantPool setLength setNameIndex setSignatureIndex setIndex setStartPC toString copy start_pc length name_index signature_index index constant_pool org.aspectj.apache.bcel.classfile.LocalVariable  Range in which the variable is valid\r\n  Index in constant pool of variable name\r\n  Index of variable signature\r\n ","MarkMyMethods":"     ","decwStrings":"     ","CFlowThreads":"     ","Result":" isTestingJar isTestingDir isTestingModule getResult getResults KINDS iaxUnlessNormal iaxUnlessAssembly kind isAssembly isNormal toString getName getOutputFile clearOutOfDate outOfDate findJarRequirements getClasspathVariables getRequired getExportedLibJars getLibJars getSrcDirs getModule getKind toLongString toString safeList safeResults initSrcDirs initLibJars assertKind initRequiredResults initClasspathVariables initExportedLibJars requiredDone NORMAL ASSEMBLE RELEASE RELEASE_ALL TEST TEST_ALL KINDS nameToResult name normal assemble outputFile requiredResults libJars classpathVariables toLongString exportedLibJars srcDirs requiredDone outOfDate outOfDateSet kind module name org.aspectj.internal.tools.build.Result  trim testing source directories\r\n  trim testing libraries\r\n  externally-required:\r\n  from non-testing modules\r\n  testing builds can rely on other release and test results\r\n  no difference\r\n  no difference\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg       initial implementation \r\n * ******************************************************************/\r\n","SoftException":" getWrappedThrowable getCause printStackTrace printStackTrace printStackTrace HAVE_JAVA_14 inner org.aspectj.lang.SoftException  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC),\r\n *               2004 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Autoboxing":" suite getSpecFile testSimpleBoxing testIntegerBoxing testCharacterBoxing testDoubleBoxing testFloatBoxing testShortBoxing testLongBoxing testBooleanBoxing testByteBoxing testBoxingAfterReturning  org.aspectj.systemtest.ajc150.Autoboxing  ","DREM":" accept  org.aspectj.apache.bcel.generic.DREM  ","D2F":" accept  org.aspectj.apache.bcel.generic.D2F  ","D2I":" accept  org.aspectj.apache.bcel.generic.D2I  ","NotAnnotationTypePattern":" matches resolve resolveBindings parameterizeWith write read equals hashCode toString getNegatedPattern accept traverse negatedPattern org.aspectj.weaver.patterns.NotAnnotationTypePattern  /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.AnnotationTypePattern#matches(org.aspectj.weaver.AnnotatedElement)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.AnnotationTypePattern#resolve(org.aspectj.weaver.World)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.AnnotationTypePattern#resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings, boolean)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PatternNode#write(java.io.DataOutputStream)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","D2L":" accept  org.aspectj.apache.bcel.generic.D2L  ","BrowserUIAdapter":" displayStatusInformation  org.aspectj.tools.ajbrowser.BrowserUIAdapter  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ColumnUpdateEmitter":" startElement startElement numColumns width namePool foURI numColumns width namePool foURI com.nwalsh.saxon.ColumnUpdateEmitter com.nwalsh.saxon.ColumnUpdateEmitter  ","DADD":" accept  org.aspectj.apache.bcel.generic.DADD  ","Boo":"     ","NotAspect":" main  ataspectj.bugs.NotAspect  ","ThisJoinPointVisitor":" computeJoinPointParams isRef isRef endVisit canTreatAsStatic visit replaceEffectivelyStaticRef getEquivalentStaticBinding removeUnusedExtraArguments removeParameter removeParameter removeLocalBinding needsDynamic needsStatic needsStaticEnclosing hasEffectivelyStaticRef thisJoinPointDec thisJoinPointStaticPartDec thisEnclosingJoinPointStaticPartDec thisJoinPointDecLocal thisJoinPointStaticPartDecLocal thisEnclosingJoinPointStaticPartDecLocal replaceEffectivelyStaticRefs method inBlockThatCantRun org.aspectj.ajdt.internal.compiler.ast.ThisJoinPointVisitor  walk my body to see what is needed\r\n  replace effectively static refs with thisJoinPointStaticPart\r\n  System.err.println(\"check:  \"+ hasEffectivelyStaticRef + \", \" + needsDynamic);\r\n  System.err.println(\"check ref: \" + ref + \" is \" + System.identityHashCode(ref));\r\n  System.err.println(\"has static reg\");\r\n  Don't continue if the call binding is null, as we are going to report an error about this line of code!\r\n  thisJoinPointStaticPartDec;\r\n  TypeBinding[] parameters = method.binding.parameters;\r\n  ??? for performance we should do this in-place\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Box":" getP0 getP1 getP2 getP3 move checkBoxness toString getShape getP0 getP1 getP2 getP3 move checkBoxness toString getShape getP0 getP1 getP2 getP3 move checkBoxness toString getShape getP0 getP1 getP2 getP3 move checkBoxness toString getShape getP0 getP1 getP2 getP3 move checkBoxness toString getShape _p0 _p1 _p2 _p3 _p0 _p1 _p2 _p3 _p0 _p1 _p2 _p3 _p0 _p1 _p2 _p3 _p0 _p1 _p2 _p3 figures.Box figures.Box figures.Box figures.Box figures.Box  /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","CompilerWrapper":" main hasErrors INSTANCE org.aspectj.tools.ajdoc.CompilerWrapper  /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","SubWriterHolderWriter":" printSummaryMember getPreQualifiedClassLink printPreQualifiedClassLink  org.aspectj.tools.doclets.standard.SubWriterHolderWriter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","StructureModelUtilTest":" main suite testPackageViewUtil setUp tearDown CONFIG_FILE_PATH org.aspectj.ajde.ui.StructureModelUtilTest  TODO-path\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ParameterImpl":" name type typeName equals formalDec org.aspectj.tools.ajdoc.ParameterImpl  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","ResolvedMemberImpl":" getJoinPointSignatures shouldWalkUpHierarchyFor accumulateTypesInBetween accumulateMembersMatching isVisibleTo getModifiers getModifiers getExceptions getExceptions getAssociatedShadowMunger isAjSynthetic setAjSynthetic hasAnnotations hasAnnotation getAnnotationTypes getAnnotations setAnnotationTypes addAnnotation isBridgeMethod isVarargsMethod setVarargsMethod isSynthetic write getGenericSignature writeArray readResolvedMember readResolvedMemberArray resolve getSourceContext getParameterNames setParameterNames getParameterNames getEffectiveSignature getSourceLocation getEnd getSourceContext getStart setPosition setDeclaringType setSourceContext isAbstract isPublic isProtected isNative isDefault isVisible setCheckedExceptions setAnnotatedElsewhere isAnnotatedElsewhere getGenericReturnType getGenericParameterTypes parameterizedWith parameterizedWith setTypeVariables getTypeVariables parameterize getErasure hasBackingGenericMember getBackingGenericMember resetName resetKind resetModifiers resetReturnTypeToObjectArray withSubstituteDeclaringType matches getParameterSigWithBoundsRemoved getParameterSigErasure appendSigWithTypeVarBoundsRemoved toDebugString toGenericString getTypeVariableNamed evictWeavingState parameterNames checkedExceptions backingGenericMember annotationTypes isAnnotatedElsewhere isAjSynthetic typeVariables start end sourceContext myErasure calculatedMyErasure myParameterSignatureWithBoundsRemoved myParameterSignatureErasure showParameterNames org.aspectj.weaver.ResolvedMemberImpl  this field is not serialized.\r\n  generic methods have type variables\r\n  these three fields hold the source location of this member\r\n  XXX deprecate this in favor of the constructor below\r\n  first defining type\r\n  focus on one problem at a time...\r\n  every type between the firstDefiningMember and the root defining member.\r\n  declaring type can be unresolved if the member can from an ITD...\r\n  typesAlreadyVisited.add(declaringType);\r\n  ??? true or false?\r\n  this type - BcelField  this type - BcelField  FIXME asc only allows for annotation types, not instances - should it?\r\n  do we know better?\r\n  Write out any type variables...\r\n  make sure all the pieces of a resolvedmember really are resolved\r\n  System.err.println(\"no context: \" + this);\r\n  System.out.println(\"get context: \" + this + \" is \" + sourceContext);\r\n  isParameterized &&  <-- might need this bit...\r\n  type variables to their first bound.\r\n  the same value as the type variables real name.\r\n  The component type might be a type variable (pr150095)\r\n  if the type variable comes from the method (and not the type) thats OK\r\n  this member may be defined by one of them... we need to find out.\r\n  now get the erasure of it\r\n  this next test is fast, and the result is cached.\r\n  try erasure\r\n  comparison.\r\n  comparison.\r\n  modifiers\r\n  remove synthetic (added in the ASM case but not in the BCEL case...)\r\n  remove interface (added in the BCEL case but not in the ASM case...)\r\n  remove deprecated (added in the ASM case but not in the BCEL case...)\r\n  type variables\r\n  'declaring' type\r\n  name\r\n  parameter signature if a method\r\n  SECRETAPI - controlling whether parameter names come out in the debug string (for testing purposes)\r\n  Check locally...\r\n  check the declaring type!\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ConstantClass":" accept dump getNameIndex setNameIndex getConstantValue getBytes toString name_index org.aspectj.apache.bcel.classfile.ConstantClass  Identical to ConstantString except for the name\r\n ","Eleven":"     ","AjdocTestCase":" setUp tearDown initialiseProject getWorkingDir getAbsoluteProjectDir getAbsolutePathOutdir copy runAjdoc runAjdoc runAjdoc runAjdoc runAjdoc runAjdoc testdataSrcDir sandboxDir docOutdir projectDir org.aspectj.tools.ajdoc.AjdocTestCase  Create a sandbox in which to work\r\n  create the ajdocworkdingdir in the sandbox\r\n  reset where ajdocworkingdir is created\r\n ","ConstantCP":" dump getClassIndex getNameAndTypeIndex setClassIndex getClass setNameAndTypeIndex toString class_index name_and_type_index org.aspectj.apache.bcel.classfile.ConstantCP  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","InterfaceAndClass":" main type p.InterfaceAndClass p.I  ","ThisJoinPointAndVerifier":"     ","ClassWithInnerEnum":" somemethod  pack.ClassWithInnerEnum  ","Constant":" accept dump getTag toString copy clone readConstant tag org.aspectj.apache.bcel.classfile.Constant  Read tag byte\r\n /* In fact this tag is redundant since we can distinguish different\r\n   * `Constant' objects by their type, i.e., via `instanceof'. In some\r\n   * places we will use the tag for switch()es anyway.\r\n   *\r\n   * First, we want match the specification as closely as possible. Second we\r\n   * need the tag as an index to select the corresponding class name from the \r\n   * `CONSTANT_NAMES' array.\r\n   */\r\n","LDC":" setSize dump setIndex initFromFile getValue getType getExceptions accept  org.aspectj.apache.bcel.generic.LDC  Fits in one byte?\r\n  Adjust to proper size\r\n  Applies for LDC_W\r\n  Never reached\r\n  Never reached\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","RecursiveCCutSpecifier":"     ","AllModuleTests":" suite  AllModuleTests  does not include compiler tests, i.e., tests ","Main-1":" main  Main  ","PackagesAndAdvice":"     ","CombiningPCDs2":"     ","Iterators":" get filter dupFilter array mapOver recur append append1 snoc one hasNext next remove seen fresh peek i len delegate delegate last1 avail EMPTY org.aspectj.weaver.Iterators  should have weak ptrs?\r\n  garbage collection\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Main-2":"     ","GOTO_W":" dump initFromFile accept  org.aspectj.apache.bcel.generic.GOTO_W  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","TTT":" foo foo getFirst  TTT TTT  ","CombiningPCDs1":"     ","MessageListXmlReader":" writeMessages setLogLevel readMessages setupDigester addMessage getMessages setMessageList INLINE_DOCTYPE LOG logLevel XMLNAME messages list org.aspectj.testing.xml.MessageListXmlReader  XXX\r\n  trace debug XXX\r\n  XXX supply sax parser to ignore white space?\r\n  element names come from the element components\r\n  handle messages the same at any level\r\n  - if property exists, map will not be used\r\n  ---- when subelements are created, add to parent\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","IntMap":" directlyInAdvice getEnclosingAdvice pushEnclosingDefinition popEnclosingDefinitition peekEnclosingDefinition directlyInAdvice getEnclosingAdvice setEnclosingAdvice getAdviceSignature getConcreteAspect setConcreteAspect copyContext put get hasKey idMap toString EMPTY concreteAspect enclosingAdvice enclosingDefinition MISSING map org.aspectj.weaver.IntMap  XXX possible\r\n  XXX begin hack to avoid a signature refactoring in Pointcut\r\n  ??? better expansion function\r\n /*ResolvedPointcutDefinition*/\r\n /* assert (val >= 0 && key >= 0) */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ClassSubWriter":" printMembersSummary printMembers navSummaryLink navDetailLink setDelegator delegateClass getMemberKind printSummaryType printModifierAndType mw org.aspectj.tools.doclets.standard.ClassSubWriter  XXX hack!!!\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Debug":"     ","TraceJoinPoints":"     ","DeclareErrorOrWarningImpl":" getDeclaringType getPointcutExpression getMessage isError toString pc msg isError declaringType org.aspectj.internal.lang.reflect.DeclareErrorOrWarningImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareErrorOrWarning#getPointcutExpression()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareErrorOrWarning#getMessage()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareErrorOrWarning#isError()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","StaticInitCE":"     ","AdviceDocImpl":" adviceDec crosscuts overriddenAspect returnType isAdvice isAbstract isThrowing isReturning extraType createCrosscuts name crosscuts org.aspectj.tools.ajdoc.AdviceDocImpl  todo: silent introduced members\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","SubAspectsCantExtendNonAbstractAspects":"     ","DisjunctVarBinding":"     ","PrivateSuperInnerAccess":" main foo x PrivateSuperInnerAccess Outer  ","Trace":" initStream traceEntry traceExit printEntering printExiting printIndent enter enter exit exit exit event event debug info warn warn error error fatal fatal enter enter exit isTraceEnabled setTraceEnabled TRACELEVEL stream callDepth tracing.version1.Trace org.aspectj.weaver.tools.Trace  /*\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n*/\r\n /*\r\n\t * Convenience methods\r\n\t */\r\n","PerClauseKind":"     /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","TaskdefTests":" suite  org.aspectj.testing.taskdefs.TaskdefTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","CombinedAnnotation":"     ","MyXOption":"   com.test.MyXOption  ","PR102210":"     ","InstanceOf":"     ","LocalInners2":" main foo arglen LocalInners2  ","LocalInners3":" main  LocalInners3  ","SimpleAfter":" main m before s SimpleAfter  ","DeferredResolvedPointcutDefinition":"   org.aspectj.weaver.reflect.DeferredResolvedPointcutDefinition  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer          Initial implementation\r\n * ******************************************************************/\r\n","NewVoid":"     ","StringVisitor":" accept  org.aspectj.testing.util.StringVisitor  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PointcutDesignatorHandlerBasedPointcut":" getPointcutKind fastMatch couldMatchKinds matchInternal resolveBindings concretize1 findResidueInternal parameterizeWith write accept matcher world org.aspectj.weaver.internal.tools.PointcutDesignatorHandlerBasedPointcut  could be more efficient here!\r\n  no-op?\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#getPointcutKind()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#fastMatch(org.aspectj.weaver.patterns.FastMatchInfo)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#couldMatchKinds()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#matchInternal(org.aspectj.weaver.Shadow)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#concretize1(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.ResolvedType, org.aspectj.weaver.IntMap)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#findResidueInternal(org.aspectj.weaver.Shadow, org.aspectj.weaver.patterns.ExposedState)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#parameterizeWith(java.util.Map)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PatternNode#write(java.io.DataOutputStream)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PatternNode#accept(org.aspectj.weaver.patterns.PatternNodeVisitor, java.lang.Object)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","OverloadedPointcutsInAspect":"     ","BetaException":"   org.aspectj.weaver.BetaException  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AnnotationTypePattern":" matches fastMatches remapAdviceFormals resolve parameterizeWith isAny resolveBindings read fastMatches matches write resolve toString accept isAny parameterizeWith matches write resolve toString accept parameterizeWith ANY ELLIPSIS EXACT BINDING NOT OR AND ELLIPSIS_KEY ANY_KEY WILD org.aspectj.weaver.patterns.AnnotationTypePattern org.aspectj.weaver.patterns.AnyAnnotationTypePattern org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern  /*name -> ResolvedType*/\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","Parse3":"     ","Parse4":"     ","Parse5":"     ","Parse6":"     ","LineNumberTag":" getLineNumber toString equals hashCode lineNumber org.aspectj.apache.bcel.generic.LineNumberTag  /* *******************************************************************\r\n * Copyright (c) 2002 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC         initial implementation \r\n *   Andy Clement   pushed down into bcel module\r\n * ******************************************************************/\r\n","AjcMemberMaker":" ajcPreClinitMethod ajcPostClinitMethod noAspectBoundExceptionInit noAspectBoundExceptionInit2 noAspectBoundExceptionInitWithCause perCflowPush perCflowField perSingletonField initFailureCauseField perObjectField perTypeWithinField perTypeWithinWithinTypeField isSerializableAspect perObjectBind perTypeWithinGetInstance perTypeWithinCreateAspectInstance perObjectInterfaceType perObjectInterfaceGet perObjectInterfaceSet perTypeWithinLocalAspectOf perSingletonAspectOfMethod perSingletonHasAspectMethod perCflowAspectOfMethod perCflowHasAspectMethod perObjectAspectOfMethod perObjectHasAspectMethod perTypeWithinAspectOfMethod perTypeWithinHasAspectMethod privilegedAccessMethodForMethod privilegedAccessMethodForFieldGet privilegedAccessMethodForFieldSet superAccessMethod inlineAccessMethodForMethod inlineAccessMethodForFieldGet inlineAccessMethodForFieldSet cflowStackPeekInstance cflowStackPushInstance cflowStackIsValid cflowStackInit aroundClosurePreInitializationField aroundClosurePreInitializationGetter preIntroducedConstructor postIntroducedConstructor itdAtDeclareParentsField interConstructor interFieldInitializer makePublicNonFinal interFieldSetDispatcher interFieldGetDispatcher interFieldClassField interFieldInterfaceField interFieldInterfaceSetter interFieldInterfaceGetter interMethod bridgerToInterMethod interMethodDispatcher interMethodBody addCookieTo toObjectConversionMethod interfaceConstructor PUBLIC_STATIC_FINAL PRIVATE_STATIC PUBLIC_STATIC VISIBILITY CFLOW_STACK_TYPE AROUND_CLOSURE_TYPE CONVERSIONS_TYPE NO_ASPECT_BOUND_EXCEPTION ASPECT_ANNOTATION BEFORE_ANNOTATION AROUND_ANNOTATION AFTERRETURNING_ANNOTATION AFTERTHROWING_ANNOTATION AFTER_ANNOTATION POINTCUT_ANNOTATION DECLAREERROR_ANNOTATION DECLAREWARNING_ANNOTATION DECLAREPRECEDENCE_ANNOTATION DECLAREIMPLEMENTS_ANNOTATION DECLAREPARENTS_ANNOTATION TYPEX_JOINPOINT TYPEX_PROCEEDINGJOINPOINT TYPEX_STATICJOINPOINT TYPEX_ENCLOSINGSTATICJOINPOINT org.aspectj.weaver.AjcMemberMaker  PTWIMPL ResolvedMember for aspect instance field, declared in matched type\r\n  (holds typename for which aspect instance exists)\r\n  return value\r\n  private static a.X ajc$getInstance(java.lang.Class)\r\n  PTWIMPL ResolvedMember for getInstance() method, declared in aspect\r\n  return value\r\n  public static a.X ajc$createAspectInstance(java.lang.String)\r\n  perTypeWithinInterfaceType(aspectType),\r\n  PTWIMPL ResolvedMember for localAspectOf() method, declared in matched type\r\n  PTWIMPL ResolvedMember for aspectOf(), declared in aspect\r\n  PTWIMPL ResolvedMember for hasAspect(), declared in aspect\r\n  Modifier.PUBLIC | (field.isStatic() ? Modifier.STATIC : 0),\r\n  Modifier.PUBLIC | (field.isStatic() ? Modifier.STATIC : 0),\r\n  ??? can eclipse handle a transform this weird without putting synthetics into the mix\r\n  ??? what about privileged and super access\r\n  ???Modifier.PUBLIC | (method.isStatic() ? Modifier.STATIC : 0),\r\n  Modifier.PUBLIC | (field.isStatic() ? Modifier.STATIC : 0),\r\n  Modifier.PUBLIC | (field.isStatic() ? Modifier.STATIC : 0),\r\n  {\r\n  System.out.println(\"ret: \" + ret + \" mods: \" + Modifier.toString(modifiers));\r\n  AMC next two lines should not be needed when sig for generic type is changed\r\n  -- common types we use. Note: Java 5 dependand types are refered to as String\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","PointcutsCW":"     ","DesignTests":" suite getSpecFile test001 test002 test003 test004 test005 test006 test007 test008 test009 test010 test011 test012 test013  org.aspectj.systemtest.design.DesignTests  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","DeclarationCollisionCE":"     ","EachObjectNoThis":"     ","Sub":" method test  Sub com.aspectj.test.Sub  ","BasicSimulation":" main report  telecom.BasicSimulation  /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","InPackage":"   pkg.InPackage  ","ConstructorExecutionWarning":"     ","NullIdeTaskListManager":" addSourcelineTask addSourcelineTask addProjectTask hasWarning clearTasks getSourceLineTasks getContainedMessage toString sourceLineTasks hasWarning debugTests message org.aspectj.ajde.NullIdeTaskListManager  /* Guard against null source locations e.g. JAR file messages */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Ajc2":" hasExcludes hasIncludes setThreads getThreads setNocomments getNocomments setNosymbols getNosymbols setPreprocess getPreprocess setWorkingdir getWorkingdir setArgfiles createArgfile getArgfiles setFile getFile toString createInclude createExclude setIncludes setExcludes getAdapterClass execute executeAfterPrepare prepare useDefaultSrcdir scanDir expandArgfile ADAPTER_CLASS threads nocomments nosymbols preprocess workingdir argfiles haveExcludes haveIncludes file org.aspectj.tools.ant.taskdefs.Ajc2  Save the old build.compiler property\r\n  If oldBuildCompiler is null try to resolve it\r\n  Set the new adapter\r\n  Reset to the old compiler\r\n  If we caught an exception executing throw it\r\n  Add the files listed in the argfiles to the includes\r\n  Otherwise we want to add all .java files to the compileList\r\n  If we do this, we need to re-read files from the directory scanner\r\n  Add the new included files\r\n  This is the same behavior found in Javac\r\n  All paths are relative to the parent\r\n  Sanity check\r\n  Read the file\r\n  Skip blank lines\r\n  Allow '#' and '  Source file\r\n  Another argfile\r\n  If there are stars we'll try to resolve the file here\r\n  Argument\r\n /* *******************************************************************\r\n * Copyright (c) 2000-2001 Xerox Corporation. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AnnotationElementValueGen":" dump stringifyValue getElementValue getAnnotation a org.aspectj.apache.bcel.generic.annotation.AnnotationElementValueGen  For annotation element values, this is the annotation\r\n  u1 type of value (ANNOTATION == '@')\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","MemberInitializationsAfterExplicitConstructorCalls":" main go init member MemberInitializationsAfterExplicitConstructorCalls  passes - no constructor call to this\r\n  fails - constructor call to this\r\n ","TheAspect":"  implementedInterface theapp.AnnotationMoodIndicator  ","IllegalForwardReference":" main j i IllegalForwardReference  ","FancyHelloWorld":" main getName  org.aspectj.weaver.test.FancyHelloWorld  /* Copyright (c) 2002 Contributors.\r\n * \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n */\r\n","LogAdapter":"     ","AsmDeclarationsTest":" testRoot testAspectAccessibility testStaticModifiers testFileInPackageAndDefaultPackage testDeclares testInterTypeMemberDeclares testPointcuts testAbstract testAdvice setUp tearDown model CONFIG_FILE_PATH org.aspectj.ajde.AsmDeclarationsTest  TODO-path\r\n  check the next two relative to this one\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","LenientTest":" m main  LenientTest  CE 6 in -lenient only\r\n  CE 6 in -lenient only\r\n ","CVS":" localTime localTime localTime  com.nwalsh.saxon.CVS com.nwalsh.saxon.CVS com.nwalsh.xalan.CVS  A cvsDate has the following form \"$Date: 2002  A cvsDate has the following form \"$Date: 2002  A cvsDate has the following form \"$Date: 2002 ","AJDBThreads":" main go fork start run currentThread sleep name thread num AJDBThreads ThreadForker NamedThread  ","LowerAndUpper":" main  LowerAndUpper A a  ","InitializerFlowCf":"   InitializerFlowCf  ERR initializer can't complete normally\r\n  ERR static initializer can't complete normally\r\n ","AroundAdviceOnMethodsCalledInAroundAdvice":"     ","BImpl":" g main  b_impl.BImpl  ","GenericTreeNodesVisitorI":" visit  org.aspectj.testing.compare.GenericTreeNodesVisitorI  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","MakeTestClass":" main addTest makeTestClass getDigester HEADER BODY_1 BODY_2 BODY_3 FOOTER tests className suiteFile org.aspectj.testing.MakeTestClass  /*\r\n * Created on 02-Aug-2004\r\n *\r\n * TODO To change the template for this generated file go to\r\n * Window - Preferences - Java - Code Style - Code Templates\r\n */\r\n","DisjunctVarBinding_3":"     ","BadValue":"     ","Bug":" length elementAt elements mj.compiler.ast.Sequence mj.compiler.ast.AST  super(element);\r\n ","Exclusion":" testExclusion enterExclusion exitExclusion printNames testExclusion enterExclusion exitExclusion printNames testExclusion enterExclusion exitExclusion printNames testExclusion enterExclusion exitExclusion printNames testExclusion enterExclusion exitExclusion printNames  coordination.Exclusion coordination.Exclusion coordination.Exclusion coordination.Exclusion coordination.Exclusion  for debug    !!!\r\n  for debug    !!!\r\n  for debug    !!!\r\n  for debug    !!!\r\n  for debug    !!!\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","WithinAndWithinCodeTests":"     ","IMPDEP2":" accept  org.aspectj.apache.bcel.generic.IMPDEP2  ","AjBuildManagerTest":" assertCompileMessagesValid testSimpleStructure outputWriter messageWriter source1 source2 source3 org.aspectj.ajdt.internal.core.builder.AjBuildManagerTest  import java.io.FileOutputStream;\r\n  permit aspectjrt.jar warning\r\n /*, CoreException */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","EmptyStack":"     ","IMPDEP1":" accept  org.aspectj.apache.bcel.generic.IMPDEP1  ","DisjunctVarBinding_2":" m m foo main  A B DisjunctVarBinding_2  ","Bullet":" getSize handleCollision clockTick getSize handleCollision clockTick getSize handleCollision clockTick getSize handleCollision clockTick getSize handleCollision clockTick SIZE LIFETIME lifeLeft SIZE LIFETIME lifeLeft SIZE LIFETIME lifeLeft SIZE LIFETIME lifeLeft SIZE LIFETIME lifeLeft spacewar.Bullet spacewar.Bullet spacewar.Bullet spacewar.Bullet spacewar.Bullet  Can't be changed for now!!!\r\n  Can't be changed for now!!!\r\n  Can't be changed for now!!!\r\n  Can't be changed for now!!!\r\n  Can't be changed for now!!!\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nBullet.java\r\nPart of the Spacewar game.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nBullet.java\r\nPart of the Spacewar game.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nBullet.java\r\nPart of the Spacewar game.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nBullet.java\r\nPart of the Spacewar game.\r\n\r\n*/\r\n","SystemPropertiesTest":" main  SystemPropertiesTest  ","PR573_1":"     ","PR573_2":"     ","HelloMethodInterceptor":" invoke runCount org.aspectj.aopalliance.tests.HelloMethodInterceptor  /* (non-Javadoc)\r\n\t * @see org.aopalliance.intercept.MethodInterceptor#invoke(org.aopalliance.intercept.MethodInvocation)\r\n\t */\r\n","ScreenObserver":"     ","SuperDisambiguatingType":" main test testC checkC testI checkI fieldC fieldI fieldC fieldI intField SuperDisambiguatingType I C IClass CClass Super Sub  hiding super\r\n ","ParsingFloatCE":"     ","ForeignChildAspect":"     ","Event":"   Event  ","NotFoundTypeNameInDirectory2":"   a.b.c.NotFoundTypeNameInDirectory2  ","ExpandedMethodSigs":"     ","WithinCodeAnnotationPointcut":" getAnnotationTypePattern couldMatchKinds parameterizeWith fastMatch matchInternal resolveBindings concretize1 findResidueInternal getBindingAnnotationTypePatterns getBindingTypePatterns write read equals hashCode buildDeclarationText toString accept annotationTypePattern munger declarationText matchedShadowKinds org.aspectj.weaver.patterns.WithinCodeAnnotationPointcut  only set after concretization\r\n  if we weren't going to find the annotation\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#fastMatch(org.aspectj.weaver.patterns.FastMatchInfo)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#match(org.aspectj.weaver.Shadow)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#concretize1(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.IntMap)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#findResidue(org.aspectj.weaver.Shadow, org.aspectj.weaver.patterns.ExposedState)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingAnnotationTypePatterns()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingTypePatterns()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PatternNode#write(java.io.DataOutputStream)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","BcelWorld":" makeDefaultClasspath getPathEntries addPath shadowMunger parseIds makeBcelType makeBcelTypes makeBcelTypesAsClassNames fromBcel fromBcel resolve isNotOnPackageRestrictedList resolveDelegate buildAsmDelegate buildBcelDelegate lookupJavaClass addSourceObjectType deleteSourceObjectType makeFieldJoinPointSignature makeJoinPointSignature makeJoinPointSignatureFromMethod makeJoinPointSignatureForMonitorEnter makeJoinPointSignatureForMonitorExit makeJoinPointSignatureForArrayConstruction makeJoinPointSignatureForMethodInvocation makeMungerMethodSignature toString createAdviceMunger concreteTypeMunger makeCflowStackFieldAdder makeCflowCounterFieldAdder makePerClauseAspect getBcelObjectType tidyUp findClass loadClass storeClass removeClass loadClass clear validateType isAnnotationStyleAspect applyDeclareParents applyDeclareAtType checkTargetOK weaveInterTypeDeclarations classPath delegate fallbackToLoadingBcelDelegatesForAspects packageRestrictionsForFastDelegates packagePrefixRestrictionList ZERO_STRINGS org.aspectj.weaver.bcel.BcelWorld  System.err.println(\"classpath: \" + classPath);\r\n  this.aspectPath = new ClassPathManager(aspectPath, handler);\r\n  Tell BCEL to use us for resolving any classes\r\n  Tell BCEL to use us for resolving any classes\r\n  Tell BCEL to use us for resolving any classes\r\n  now, we resolve\r\n  SECRETAPI: used for testing ASM loading of delegates...\r\n  0=dontknow 1=no  2=yes\r\n  System.err.println(\"Not creating fast delegate for \"+s);\r\n  Create a BCEL delegate\r\n  worrying situation ?!?\r\n  worrying situation ?!?\r\n  if (classFile != null) jc = classFile.getJavaClass();\r\n  what on earth is it then? See pr 112243\r\n  we found it\r\n  look for the method there\r\n  see #104212\r\n  buf.append(shadowMungerMap);\r\n  System.err.println(\"concrete advice: \" + signature + \" context \" + sourceContext);\r\n  At end of compile, close any open files so deletion of those archives is possible\r\n  We haven't heard of it yet\r\n  cant need resetting\r\n  assume it is one as a best effort\r\n  on a code style aspect by the annotation visitor\r\n  (like transform super calls) - that is done in BcelTypeMunger.mungeNewParent()\r\n  System.err.println(\"need to do declare parents for: \" + onType);\r\n  already has it\r\n  check the annotation is suitable for the target\r\n  Perhaps it would have matched if a 'dec @type' had modified the type\r\n  First pass - apply all decp mungers\r\n  Still first pass - apply all dec @type mungers\r\n  doesn't need to produce errors /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n *     Alexandre Vasseur    perClause support for @AJ aspects\r\n * ******************************************************************/\r\n","AfterThrowing":"     ","BridgeTests":" suite  org.aspectj.bridge.BridgeTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","TestEmptyPointcutAtAspect2":" scope m main foo s i TestEmptyPointcutAtAspect2 A  ","LocalInner":"     ","AjbrowserModuleTests":" suite  org.aspectj.tools.ajbrowser.AjbrowserModuleTests  ","IndeterminateArgs":"     ","BogusMessage2":" tracingScope  BogusMessage2  ","Ajde":" init getDefault setConfigurationManager setMessageHandler getMessageHandler getBuildManager getEditorAdapter getStructureViewManager getStructureSearchManager getConfigurationManager getProjectProperties getTaskListManager getIdeUIAdapter setIdeUIAdapter getErrorHandler getVersion enableLogging disableLogging isLogging getStructureModelManager logEvent runInSameVM runInNewVM currConfigChanged configsListUpdated compileStarted compileFinished compileAborted setErrorHandler INSTANCE NOT_INITIALIZED_MESSAGE isInitialized compatibilityLevel buildManager editorAdapter structureViewManager structureSearchManager configurationManager projectProperties taskListManager ideUIAdapter errorHandler logPrintStream messageHandler STRUCTURE_UPDATE_CONFIG_LISTENER BUILD_STATUS_LISTENER mainClass classpath args valid org.aspectj.ajde.Ajde  Used by org.aspectj.ajde upgrade task\r\n  private EditorManager editorManager;\r\n  allow provision of custom handler\r\n  INSTANCE.editorManager = new EditorManager(editorAdapter);\r\n  error already handled\r\n  error already handled\r\n  setup to run asynchronously, pipe streams through, and report errors\r\n  no errors\r\n  handle errors\r\n  now run the process\r\n  String configFilePath = projectProperties.getDefaultBuildConfigFile();\r\n  XXX really run arbitrary handler in constructor? hmm.\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DeclarePrecedence":" getDeclaringType getPrecedenceOrder accept parameterizeWith toString equals hashCode write read resolve getPatterns matchingIndex compare isAdviceLike getNameSuffix patterns org.aspectj.lang.reflect.DeclarePrecedence org.aspectj.weaver.patterns.DeclarePrecedence  Cannot do a dec prec specifying a non-aspect types unless suffixed with a '+'\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ShowWeaveMessagesTestCase":" setUp tearDown testWeaveMessagesAdvice testWeaveMessagesITD testWeaveMessagesDeclare testWeaveMessagesDeclareExtends testWeaveMessagesDeclareSoft testWeaveMessagesDeclareAnnotation testWeaveMessagesDeclareAnnotationWeaveInfoOff testWeaveMessagesBinaryAdvice testWeaveMessagesBinaryITD testWeaveMessagesBinaryDeclare testWeaveMessagesBinaryDeclareSoft testWeaveMessagesBinaryAdviceInPackageFromJar testWeaveMessagesBinaryAdviceInPackage testWeaveMessagesBinaryAdviceNoDebugInfo testWeaveMessagesBinaryITDNoDebugInfo testWeaveMessagesBinaryDeclareNoDebugInfo testWeaveMessagesBinaryDeclareSoftNoDebugInfo start setProgressText setProgressBarVal incrementProgressBarVal setProgressBarMax getProgressBarMax finish verifyWeavingMessages compareWeaveMessages stringify saveWeaveMessages regenerate debugTests compilerAdapter PROJECT_DIR binDir expectedResultsDir org.aspectj.ajde.ShowWeaveMessagesTestCase  'expected weaving messages' files.\r\n  annotation classes won't be about pre 15\r\n  Verify the file matches what we have\r\n  Create the file\r\n  Load the file in\r\n  See if the messages match\r\n /*\r\n\t * Ensure the output directory in clean\r\n\t */\r\n /*List l = */\r\n /*List l = */\r\n /*List l = */\r\n /*List l = */\r\n /*List l = */\r\n /*List l = */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     Initial version\r\n * ******************************************************************/\r\n","ExecutionTestCase":" testVersionMatch testFailingBuild  org.aspectj.tools.ajdoc.ExecutionTestCase  /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","CompositeProtocol":"     ","Program":" main b c d main m1 m2 main printHello  Program Program Program  ... that does something ...\r\n  ... that includes try  ... with nested synchronized blocks ...\r\n ","MultiArrays":" test main data MultiArrays  ","FakeStackChecker":" setBaseDepth checkDepth  FakeStackChecker  ","EnsureShipIsAlive":"     ","LexerAspect":"     ","StarDecorator":" print  ca.ubc.cs.spl.aspectPatterns.examples.decorator.java.StarDecorator  ","MatchingArgumentsInCflow":"     ","XLintTypeTargetPCD":"     ","JavaLangTypeToResolvedTypeConverter":" getWorld fromType fromTypes typeVariablesInProgress world org.aspectj.weaver.reflect.JavaLangTypeToResolvedTypeConverter  Used to prevent recursion - we record what we are working on and return it if asked again *whilst* working on it\r\n  check if we are already working on this type\r\n  record what we are working on, for recursion case\r\n  we have finished working on it\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","NestedSynchronized":" bug main lockA lockB NestedSynchronized  ","AnnotatedType":" main method1 method2 main m  AnnotatedType AnnotatedType  ","LALOAD":" accept  org.aspectj.apache.bcel.generic.LALOAD  ","MessageWriter":" handleMessage isIgnoring dontIgnore render writer abortOnFailure org.aspectj.bridge.MessageWriter  XXX share MessageHandler implementation in superclass\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AjAST":" newAjAST convertCompilationUnit newAspectDeclaration newAjTypeDeclaration newAfterAdviceDeclaration newAfterReturningAdviceDeclaration newAfterThrowingAdviceDeclaration newBeforeAdviceDeclaration newAroundAdviceDeclaration newDeclareAtConstructorDeclaration newDeclareAtFieldDeclaration newDeclareAtMethodDeclaration newDeclareAtTypeDeclaration newDeclareErrorDeclaration newDeclareParentsDeclaration newDeclarePrecedenceDeclaration newDeclareSoftDeclaration newDeclareWarningDeclaration newInterTypeFieldDeclaration newInterTypeMethodDeclaration newPointcutDeclaration newAndPointcut newCflowPointcut newNotPointcut newOrPointcut newPerCflow newPerObject newPerTypeWithin newReferencePointcut newDefaultPointcut newDefaultTypePattern newSignaturePattern  org.aspectj.org.eclipse.jdt.core.dom.AjAST  AspectJ extension - use the factory\r\n  create a new AjAst - difference between this method in AjAST and AST\r\n ","IWeaver":"  CLOSURE_CLASS_PREFIX SYNTHETIC_CLASS_POSTFIX org.aspectj.weaver.IWeaver  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","TraceHello":"     ","Options":" parse missedMatchError freeze isFrozen addOption acceptInput checkFrozen firstMatch OPTION_15 OPTION_lazyTjp OPTION_noWarn OPTION_noWarnNone OPTION_proceedOnError OPTION_verbose OPTION_reweavable OPTION_noinline OPTION_addSerialVersionUID OPTION_hasMember OPTION_pinpoint OPTION_showWeaveInfo OPTIONVALUED_messageHandler OPTIONVALUED_Xlintfile OPTIONVALUED_Xlint OPTIONVALUED_joinpoints OPTIONVALUED_Xset java5 lazyTjp hasMember optionalJoinpoints noWarn proceedOnError verbose notReWeavable noInline addSerialVersionUID showWeaveInfo pinpoint messageHandler lint lintFile xSet FROZEN options stopAtFirstMatch frozen org.aspectj.weaver.loadtime.Options org.aspectj.testing.util.options.Options  notReweavable is default for LTW\r\n  the first option wins\r\n  do a first round on the message handler since it will report the options themselves\r\n  handled in first round\r\n  configure the other options\r\n  refine message handler configuration\r\n  default to notReweavable for LTW (faster)\r\n  messageHandler = new DefaultMessageHandler();  private static final boolean verifying = false;\r\n  ArrayList list = new ArrayList();\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","MyEnum":"     ","CflowTest":" log main suite hello startCflow testCflow before s_log ataspectj.CflowTest  public static final CFlowCounter ajc$cflowCounter$0 = new CFlowCounter();\r\n ","GotoInstruction":"   org.aspectj.apache.bcel.generic.GotoInstruction  ","CodeDocImpl":" createAdvice dec getFormals getThrows codeDec codeDec org.aspectj.tools.ajdoc.CodeDocImpl  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","JRockitAgent":" preProcess empty peek push pop initialValue preProcessor stack org.aspectj.weaver.loadtime.JRockitAgent  /*\r\n\t * This is used to implement the recursion protection offered by JVMTI\r\n\t * but not by JRockit JMAPI. I we are called to preProcess a class while\r\n\t * already preProcessing another we will return immediately\r\n\t */\r\n","AjTypeDeclFactory":" createTypeFor  org.aspectj.ajdt.core.dom.AjTypeDeclFactory  ","IteratorWrapperTest":" testIteratorWrapper checkIteratorWrapper checkEquals  org.aspectj.testing.util.IteratorWrapperTest  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DirChangesTest":" skip_testSameExpDir testNothingForAntJUnit skip_testDiffExpDir skip_testWriteEmpty skip_testWriteExpDir skip_testWriteAdded checkWrite doCheck checkDirChanges assertSameMessages find main PRINTING EXPECTED_NAME meaningOfLife meaningOfLife org.aspectj.testing.harness.bridge.DirChangesTest DirChangesTest  actual = baseDir\r\n  expected = srcBaseDir + spec.expDir\r\n  toprint[0].getISourceLocation().getSourceFile();\r\n  assertTrue(!shouldPass);\r\n  exiting after (XXX) undertested expected failure?\r\n  assertTrue(!shouldPass);\r\n  XXX WEAK upgrade to read expected-diffs from file in directory\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ErroneousExceptionConversion":"     ","ChangeSubject":" addObserver removeObserver notifyObservers  ca.ubc.cs.spl.aspectPatterns.examples.observer.java.ChangeSubject  ","LTWWorld":" getClassLoader resolveDelegate resolveIfBootstrapDelegate resolveReflectionTypeDelegate loadedClass getAnnotationFinder resolve makeConcurrentMap makeConcurrentMapClass isRunMinimalMemory completeBinaryType completeHierarchyForType needsCompletion isLocallyDefined completeNonLocalType annotationFinder loader weavingContext concurrentMapClass bootstrapTypes serialVersionUID typeCompletionInProgress typesForCompletion org.aspectj.weaver.ltw.LTWWorld  weavingContext?\r\n  use reflection delegates for all bootstrap types\r\n  first check for anything available in the bootstrap loader: these types are just defined from that without allowing nondelegation\r\n  should we share these, like we do the BCEL delegates?\r\n  cheaper than imminent string startsWith tests\r\n  are queued up\r\n  who knows ?!?\r\n /*<String, WeakReference<ReflectionBasedReferenceTypeDelegate>>*/\r\n /* (non-Javadoc)\r\n     * @see org.aspectj.weaver.reflect.IReflectionWorld#resolve(java.lang.Class)\r\n     */\r\n /*ResolvedType*/\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Ron Bodkin\t\tInitial implementation\r\n * ******************************************************************/\r\n","PkgVisibleClass":"     ","MethodSignature":" getReturnType getMethod  org.aspectj.lang.reflect.MethodSignature  /* name is consistent with reflection API */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CompoundMessage":"     ","SuperAspect":"     ","StructureSearchManager":" findMatches findMatchesHelper  org.aspectj.ajde.ui.StructureSearchManager  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ClassSet":" add remove empty toArray getClassNames _map org.aspectj.apache.bcel.util.ClassSet  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","PseudoTokens":" parsePointcut checkEof reportError maybeParseDominatesPattern parsePerClause parseDeclare parseAnnotationDeclare postParse print tokenSource tokens endToken org.aspectj.ajdt.internal.compiler.ast.PseudoTokens  XXX this is redundant with the field above\r\n  there is no eof check here\r\n  \r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.ast.ASTNode#print(int, java.lang.StringBuffer)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Billing":"     ","ReturnTypeTester":" getId getId main set set ReturnTypeTester ReturnTypeTester  ","TestNPE2":"   a.TestNPE2  ","NameBindingPointcut":" exposeStateForVar getBindingTypePatterns getBindingAnnotationTypePatterns  org.aspectj.weaver.patterns.NameBindingPointcut  unchecked warning already issued...\r\n /*<BindingTypePattern>*/\r\n /*<BindingAnnotationTypePattern>*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","TestNPE3":"   a.TestNPE3  ","AjdtCommandTestCase":" delete testIncrementalHandler testIncrementalOption testBadOptionAndUsagePrinting testHelpUsagePrinting testVersionOutput testNonExistingLstFile setUp tearDown tempFiles outputWriter messageWriter counter org.aspectj.ajdt.ajc.AjdtCommandTestCase  import org.aspectj.ajdt.internal.core.builder.AjBuildConfig;\r\n  private AjdtCommand command = new AjdtCommand();\r\n  in runCommand and repeatCommand\r\n  setup initial compile\r\n  do initial compile\r\n  do repeat compile, introducing an error\r\n  verify failed, no effect on first holder, error in second\r\n  usage printed by caller to genBuildConfig now...\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Diffs":" compare compare compare accept makeDiffs makeDiffs getLine getLine getSourceFile makeDiffs makeDiffs expectingFile expectingMessage expectingSourceLocations expectingSourceLocation expectingText getExcept harden report toString accept KIND_PRIORITY SORT_SOURCELOC MESSAGE_LINEKIND ACCEPT_ALL label missing unexpected different org.aspectj.testing.util.Diffs  new line - get all messages expected for it\r\n  now check actual against all expected on that line\r\n  unexpected: any actual result not found\r\n  missing: all expected results not found\r\n  expected something\r\n  no expectations\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AdviceOnAdviceRecursion":"     ","SerialFieldTagImpl":" description fieldName fieldType fieldTypeDoc compareTo kind resolveNames description fieldName fieldType fieldTypeDoc org.aspectj.tools.ajdoc.SerialFieldTagImpl  TODO: implement\r\n  \r\n  Find the first char in the field-name\r\n  Find the rest of the field-name\r\n  Found the field-name\r\n  Find the first char in the field-type\r\n  Find the rest of the field-name\r\n  Found the field-type\r\n  The rest is the field-description\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","FormalMatching":"     ","Child":" main main  jar2.Child Child  ","UseThisAspectForLinkCheckToo":"     ","PerClauseInheritanceTest":" log main suite hello testInheritance pc abefore s_log COUNT ataspectj.PerClauseInheritanceTest  perFromSuper\r\n  perFromSuper\r\n ","CatchClauseSignature":" getParameterType getParameterName  org.aspectj.lang.reflect.CatchClauseSignature  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","TypeImpl":" getInstance getInstance getInstance getInstance isPrimitive toString typeName qualifiedTypeName dimension asClassDoc toString typeName qualifiedTypeName asClassDoc dimension equals getInstance getInstance name voidType booleanType byteType charType shortType intType longType floatType doubleType type dimension factory org.aspectj.tools.ajdoc.TypeImpl  TODO: tune this later\r\n  TODO\r\n  implements org.aspectj.ajdoc.Type {\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","AroundAdvice":"     ","FormatGraphicCallout":" formatCallout formatCallout formatCallout graphicsPath graphicsExt graphicsMax graphicsPath graphicsExt graphicsMax graphicsPath graphicsExt graphicsMax com.nwalsh.saxon.FormatGraphicCallout com.nwalsh.saxon.FormatGraphicCallout com.nwalsh.xalan.FormatGraphicCallout  FIXME: this could be a problem...\r\n ","AroundAdvicePassingPjpAsArgToSuper":" takesApjp passesPjp main foo  a.b.c.ASuperClass a.b.c.AroundAdvicePassingPjpAsArgToSuper a.b.c.C  ","OverloadedITDNPE":"     ","OptionsTest":" getOptions testDebugCase testNegDebugCase testOptionsPositive testOptionsNegative testMissedMatches checkMissedMatches testComplexOptionsPositive testMultiArgOptionsPositive testMultiArgOptionsNegative testMultipleInput getOptionChecker OPTIONS localOptionChecker org.aspectj.testing.util.options.OptionsTest  treating multi-arg as single - extrinsic flatten  suffix options (a) -warn:... (b) -g, -g:...\r\n  treating multi-arg as single - intrinsic flatten  private boolean verbose;\r\n  duplicates redundant, not colliding\r\n  null in [0]\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","Arguments":" main go args Arguments  ","BIPUSH":" dump toString initFromFile getValue getType accept b org.aspectj.apache.bcel.generic.BIPUSH  ","BooleanInterpretation":"     ","Perf":" main timeASM timeBcel  org.aspectj.weaver.bcel.Perf  if (n[0].equals(\"BCEL\")) {\r\n  } else {\r\n  entries!!\");\r\n  \"+f.getAbsolutePath(),f.exists());\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","IntroducedModifiers":"     ","Minimal":"     ","LOR":" accept  org.aspectj.apache.bcel.generic.LOR  ","DefaultBuildProgressMonitor":" start setProgressText setProgressBarVal incrementProgressBarVal setProgressBarMax getProgressBarMax finish progressDialog dialog org.aspectj.ajde.ui.swing.DefaultBuildProgressMonitor  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","StackChecker":" setBaseDepth checkDepth baseStackDepth StackChecker  XXX 1.4 only\r\n ","Conversions":" intObject shortObject byteObject charObject longObject floatObject doubleObject booleanObject voidObject intValue longValue floatValue doubleValue byteValue shortValue charValue booleanValue voidValue  org.aspectj.runtime.internal.Conversions  Can't make instances of me\r\n  we might want to keep a cache of small integers around\r\n  !!! this may be an error in the future\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AttributeReader":" createAttribute  org.aspectj.apache.bcel.classfile.AttributeReader  ","FormatUnicodeCallout":" formatCallout formatCallout formatCallout unicodeMax unicodeStart unicodeFont unicodeMax unicodeStart unicodeFont unicodeMax unicodeStart com.nwalsh.saxon.FormatUnicodeCallout com.nwalsh.saxon.FormatUnicodeCallout com.nwalsh.xalan.FormatUnicodeCallout  ","PartialOrder":" compareTo fallbackCompareTo hasNoSmallerObjects removeSmallerObject addDirectedLinks toString addNewPartialComparable removeFromGraph sort compareTo fallbackCompareTo toString main object smallerObjects biggerObjects s org.aspectj.util.PartialOrder  +smallerObjects+biggerObjects;\r\n  ??? smaller ones\r\n  lists of size 0 or 1 don't need any sorting\r\n  objects.size());\r\n  List ret = new ArrayList(objects.size());\r\n  System.out.println(so);\r\n /*SortObject*/\r\n /*SortObject*/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PUSH":" getInstructionList getInstruction toString instruction org.aspectj.apache.bcel.generic.PUSH  Use ICONST_n\r\n  Use BIPUSH\r\n  Use SIPUSH\r\n  If everything fails create a Constant pool entry\r\n  Create a Constant pool entry\r\n  Create a Constant pool entry\r\n  Create a Constant pool entry\r\n  Create a Constant pool entry\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","ReverseIterator":" hasNext remove next current list ca.ubc.cs.spl.aspectPatterns.examples.iterator.java.ReverseIterator  ","InterTypeConstructors":"     ","IntroductionFailsWithInnerClass":"     ","IntroduceInnerInterfaceCF":"     ","ajcDeclareEoW":"     /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","NulIOException":" main  Super NulIOException  parms: IOException\r\n  reference: expect CE here, not IOException\r\n  super parms: expect CE here, not IOException\r\n ","IntroduceInnerInterfaceCP":"     ","Complex":"  field1 field2 field3 Complex  ","ISTORE":" accept  org.aspectj.apache.bcel.generic.ISTORE  ","ArrayIncCE":"     ","ajcITD":"     /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","Pointcuts":"     ","BindingArgumentsInWithincode":"     ","ConstantInteger":" accept dump getBytes setBytes toString getConstantValue bytes org.aspectj.apache.bcel.classfile.ConstantInteger  ","PerSingleton":" accept couldMatchKinds fastMatch matchInternal resolveBindings parameterizeWith findResidueInternal concretize write readPerClause getKind toString toDeclarationString equals hashCode  org.aspectj.weaver.patterns.PerSingleton  if (!Ajc5MemberMaker.isSlowAspect(inAspect)) {\r\n  aspect before we are bound\r\n  dig: \"can't be Serializable  ATAJ: add a munger to add the aspectOf(..) to the @AJ aspects\r\n  ATAJ inline around advice support\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AdviceImpl":" getDeclaringType getGenericParameterTypes getParameterTypes getExceptionTypes getKind getName getPointcutExpression toString AJC_INTERNAL kind adviceMethod pointcutExpression hasExtraParam genericParameterTypes parameterTypes exceptionTypes org.aspectj.internal.lang.reflect.AdviceImpl  no-op\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","CFlowObjects":"     ","LineCountEmitter":" reset lineCount characters comment endDocument endElement processingInstruction setDocumentLocator setEscaping setNamePool setUnparsedEntity setWriter startDocument startElement reset lineCount characters comment endDocument endElement processingInstruction setDocumentLocator setEscaping setNamePool setUnparsedEntity setWriter startDocument startElement numLines numLines com.nwalsh.saxon.LineCountEmitter com.nwalsh.saxon.LineCountEmitter  If there are any characters at all, there's at least one line\r\n  If there are any characters at all, there's at least one line\r\n ","TypeVariableReferenceTypeTestCase":" testConstructionByNameAndVariable setUp testConstructionByNameAndVariable setUp javaLangClass javaLangObject extendsClass superClass extendsWithExtras world javaLangClass javaLangObject extendsClass superClass extendsWithExtras world org.aspectj.weaver.TypeVariableReferenceTypeTestCase org.aspectj.weaver.TypeVariableReferenceTypeTestCase  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","PointcutParserTest":" needToSkipPointcutParserTests setUp testGetAllSupportedPointcutPrimitives testEmptyConstructor testSetConstructor testParsePointcutExpression testParseExceptionErrorMessages testParseIfPCD testParseCflowPCDs testParseReferencePCDs testParseUnsupportedPCDs testFormals testXLintConfiguration handleMessage isIgnoring dontIgnore needToSkip org.aspectj.weaver.tools.PointcutParserTest  ReflectionBasedReferenceTypeDelegate.class.getClassLoader());\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","ReflectionWorld":" makeAnnotationFinderIfAny getClassLoader getAnnotationFinder resolve resolve resolveDelegate createAdviceMunger makeCflowStackFieldAdder makeCflowCounterFieldAdder makePerClauseAspect concreteTypeMunger handleMessage isIgnoring dontIgnore classLoader annotationFinder serialVersionUID org.aspectj.weaver.reflect.ReflectionWorld  not so good\r\n  classes that represent arrays return a class name that is the signature of the array type, ho-hum...\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.reflect.IReflectionWorld#resolve(java.lang.Class)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.World#resolveDelegate(org.aspectj.weaver.ReferenceType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.World#createAdviceMunger(org.aspectj.weaver.AjAttribute.AdviceAttribute, org.aspectj.weaver.patterns.Pointcut, org.aspectj.weaver.Member)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.World#makeCflowStackFieldAdder(org.aspectj.weaver.ResolvedMember)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.World#makeCflowCounterFieldAdder(org.aspectj.weaver.ResolvedMember)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.World#makePerClauseAspect(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.patterns.PerClause.Kind)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.World#concreteTypeMunger(org.aspectj.weaver.ResolvedTypeMunger, org.aspectj.weaver.ResolvedType)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","SignaturePatternImpl":" asString toString sigPattern org.aspectj.internal.lang.reflect.SignaturePatternImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.SignaturePattern#asString()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","FieldJoinPointsInAroundAdvice":"     ","TransitiveHull":" update main indent org.aspectj.apache.bcel.verifier.TransitiveHull  avoid swapping if possible.\r\n  System.exit(1);\r\n  System.exit(1);\r\n  System.exit(1);\r\n  System.exit(1);\r\n  the observer is called back and does the actual trick.\r\n /* Implementing VerifierFactoryObserver. */\r\n","TestServlet":" service booleanTest invert1a invert1b invert2 invert3 invert4 invert5 isTrue isFalse  test.TestServlet  ","Tag":" containsTarget updateTarget copy  org.aspectj.ajdoc.Tag org.aspectj.apache.bcel.generic.Tag  ---- from InstructionTargeter\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n *   Andy Clement   pushed down into bcel module\r\n * ******************************************************************/\r\n","DocImpl":" locale setErr err setComment getComment compareTo firstSentenceTags getRawCommentText setRawCommentText inlineTags seeTags tags tags commentText setIncluded isClass isConstructor isError isException isField isIncluded isInterface isMethod isOrdinaryClass isPointcut isAdvice isIncluded comment err isInterface locale org.aspectj.tools.ajdoc.DocImpl  TODO\r\n  XXX\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Gamma":"     ","StackMapType":" setType getType setIndex getIndex dump hasIndex printIndex toString copy getConstantPool setConstantPool type index constant_pool org.aspectj.apache.bcel.classfile.StackMapType  Index to CONSTANT_Class or offset\r\n ","SimpleIntf1":" getString getInteger  SimpleIntf1  ","Client":" main foo main main main main  client.Client client.C Client C Client Client Client C  ","DecoratedClass":" m  DecoratedClass  ","SlothfulPoint":" setX setY move toString getShape setX setY move toString getShape setX setY move toString getShape setX setY move toString getShape getX getY setX setY move toString getShape _x _y _x _y _x _y _x _y _x _y figures.SlothfulPoint figures.SlothfulPoint figures.SlothfulPoint figures.SlothfulPoint figures.SlothfulPoint  /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","AALOAD":" accept  org.aspectj.apache.bcel.generic.AALOAD  ","CallNotTarget":"     ","DeclareSoftDynamicPCDs":"     ","CompareFiles":" setLhsFile setRhsFile setOutput setFilterSpec setCollapseWhitespace setTrimWhitespace setIgnoreCase execute setOutput setCollapseWhitespace setTrimWhitespace setIgnoreCase setFilterSpec initFilter dodiff worker lhsFile rhsFile spec org.aspectj.testing.taskdefs.CompareFiles org.aspectj.testing.taskdefs.Worker  /*\r\n      Unable to implement multiple inheritance except by delegation:\r\n      - Task subclass must be outer or ant throws InstantiationException\r\n      - if/since outer, the subclass getter/setters cannot refer to \r\n        protected fields in worker superclass absent inner worker \r\n        subclass delegate methods.  yuck.\r\n      - getting access errors when trying to use the RuntimeConfigurable\r\n        to initialize the task.  Looking at the Ant code, it does not\r\n        appear to be used for tasks??  I found none using it and the\r\n        initialization seems wrong...\r\n    */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PlainWithin":" foo foo  PlainWithin NotAnnotated  ","OutputComparator":" compareFilesByLine  common.OutputComparator  ","PrivilegeBeyondScope":"     ","StructureViewNodeFactory":" createNode createNode createLink createRelationship createDeclaration acceptNode iconRegistry org.aspectj.ajde.ui.StructureViewNodeFactory  once under clinit field-set nodes and once under the field declaration.\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","TryFinallyInAround":"     ","CompilationResult":" getArgs getStandardOutput getStandardError hasMessages hasInfoMessages hasErrorMessages hasWarningMessages hasFailMessages hasWeaveMessages getInfoMessages getErrorMessages getWarningMessages getFailMessages getWeaveMessages toString args stdOut stdErr infoMessages errorMessages warningMessages failMessages weaveMessages org.aspectj.tools.ajc.CompilationResult  /*IMessage*/\r\n /*IMessage*/\r\n /*IMessage*/\r\n /*IMessage*/\r\n /*IMessage*/\r\n /*IMessage*/\r\n /*IMessage*/\r\n /*IMessage*/\r\n /*IMessage*/\r\n /*IMessage*/\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer, \r\n * ******************************************************************/\r\n","AroundCall":"     ","SIPUSH":" dump toString initFromFile getValue getType accept b org.aspectj.apache.bcel.generic.SIPUSH  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","FileUtil":" main dirDiffs visitZipEntries visitZipEntries descendFileTree descendFileTree directoryToString zipFileToString isZipFile renderZipEntry createJarFile createManifest addFileToZip returnTempDir isResourcePath render report copyFile copyURL copy deleteDirectory getPaths accept accept signal signal error accept accept toString accept toString accept accept isZipFile zipSuffixLength zipSuffixLength hasSourceSuffix hasSourceSuffix sourceSuffixLength sourceSuffixLength canReadDir canReadFile canWriteDir canWriteFile throwIaxUnlessCanReadFile throwIaxUnlessCanReadDir throwIaxUnlessCanWriteFile throwIaxUnlessCanWriteDir getPaths getPaths fileToClassName normalizedPath flatten flatten normalizedPath weakNormalize getBestFile getBestFile getBestPath getAbsolutePaths deleteContents deleteContents deleteContents copyDir copyDir copyDir copyDir listFiles accept listFiles getBaseDirFiles getBaseDirFiles newFile copyFiles copyFile ensureParentWritable copyValidFiles copyStream copyStream copyStream makeNewChildDir getTempDir getFileURLs getFileURL writeAsString readBooleanArray writeBooleanArray readIntArray writeIntArray readStringArray writeStringArray readAsString readAsString readAsByteArray readAsByteArray randomFileString getStreamFromZip extractJar lineSeek lineSeek makeOutputStream sleepPastFinalModifiedTime listFiles isValidFileName listFiles makeClasspath setSnoop run halt totalWritten getThrown completing DEFAULT_URL_FILENAME DELETE_DIRS DELETE_FILES parentDir out filter DEFAULT_PARENT SOURCE_SUFFIXES ZIP_FILTER SOURCE_FILTER INT_RA ALL DIRS_AND_WRITABLE_CLASSES PERMIT_CVS aspectjSourceFileFilter FILECHARS in out sleep snoop totalWritten thrown halt closeInput closeOutput finishStream done org.aspectj.testing.util.FileUtil org.aspectj.testing.util.Log org.aspectj.testing.util.ZipAccumulator org.aspectj.util.FileUtil  normalize sources to ignore\r\n  normalized...\r\n  found - do not add to unexpected\r\n  found - do not add to unexpected\r\n  File.equals(..) does lexical compare\r\n  add if is file, right time, and have or don't need suffix\r\n  skip if not file or not right time\r\n  gather, normalize paths changed\r\n  report any unexpected changes\r\n  XXX too complicated, weak prefix checking\r\n  XXX too complicated, weak prefix checking\r\n  ignore\r\n  go through files first\r\n  now recurse to handle directories\r\n  readable directory (ignore unreadable ones)\r\n  ZipFile.OPEN_READ| ZipFile.OPEN_DELETE); delete is 1.3 only\r\n  todo\r\n  todo ignored\r\n  XXX convert to Error\r\n  todo ignoring\r\n  todo: use filesep\r\n  todo: move\r\n  todo\r\n  todo untested.\r\n  add actual parm to labels?\r\n  util\r\n  preserves absolute?\r\n  todo\r\n  XXX user.dir?\r\n  treat as default package\r\n  int before = collector.size();\r\n  both file-dir and dir-dir copies\r\n  target file exists\r\n  file-file\r\n  existing directory\r\n  dir-dir\r\n  file-dir\r\n  XXX dangerous non-copy...\r\n  TODO AV - was toURI.toURL that does not works on Java 1.3\r\n  ignored\r\n  System.err.println(\"parent: \" + outFile.getParentFile());\r\n  ignore\r\n  hack https:  true after completing() completes\r\n  TODO this blocks, hanging the harness\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2000 Xerox Corporation. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n /*boolean ret = */\r\n /*File toFileParent = */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PointcutBasedPerClause":" getPointcutExpression  org.aspectj.lang.reflect.PointcutBasedPerClause  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","MatchingContext":" hasContextBinding getBinding  org.aspectj.weaver.tools.MatchingContext  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","Basic":" main methodWithSyncBlock1 staticMethodWithSyncBlock1 methodWithSyncBlock2 staticMethodWithSyncBlock2  Basic  ","InterfaceMethods":"     ","AtAj":" p m  AtAj  ","WildcardForReturns":"     ","WebInstall":" main driver printError install render getArgs EOL SYNTAX ARGS packages org.aspectj.testing.util.WebInstall  todo where is this defined?\r\n  ignore\r\n  System.err.println(\"before: \" + render(args));\r\n  System.err.println(\"after: \" + render(args));\r\n  todo: dependency on class name\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2000 Xerox Corporation. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DeprecatedListWriter":" generate generateDeprecatedListFile printDeprecatedFooter printRestOfDeprecatedListFile deprecatedListFile builder org.aspectj.tools.doclets.standard.DeprecatedListWriter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","LibraryClass":"   lib.LibraryClass  ","Bean":" getName setName getName setName getName setName getName setName getId setId name name name name package1.Bean package2.Bean Bean Bean Bean Bean Bean Bean  ","ProtectedFieldIntro":"     ","EachObjectInDeepPackage":"     ","AmbiguousClassReference3CE":" main f AmbiguousClassReference3CE Foo Foo Bar  expect: \"duplicate type name\"\r\n  expect: \"duplicate type name\"\r\n ","TargetClass":" getThis getboolean getbyte getchar getshort getint getlong getfloat getdouble getstring doVoid getType main valid run newInner cast instanceOf run run run result_inner result_cast Type TargetClass PureJava typepatternmatch.pack2.TargetClass  X X_3 = (X) this.getX();\r\n  if (!((doVoid()) instanceof Void)) { Tester.check(false,\"void\"); }\r\n  ---------- field initializer\r\n  X X_3 = (X) this.getX();\r\n  PR#TODO\r\n ","Oxford":"     ","AssertInIntro":"     ","NestedInterfaceTest":"  A NestedInterfaceTest  ","ArrayInc3CE":" getIRA getObject testObjectIncrementingCE IRA OBJECT ArrayInc3CE  CE + not applied to int[], int\r\n  CE + not applied to Object, int\r\n  CE unary + not applied to int[]\r\n  CE unary + not applied to int[]\r\n  CE string + not applied to String[], String\r\n ","JDTLikeHandleProvider":" createHandleIdentifier getParameters getCount convertCount getFileForHandle getLineNumberForHandle getOffSetForHandle createHandleIdentifier createHandleIdentifier dependsOnLocation initialize initializerCounter empty countDelim backslash emptyString org.aspectj.asm.internal.JDTLikeHandleProvider  because this information cannot be gained from the ipe.\r\n  therefore just return it\r\n  <root> or the .lst file\r\n  want to miss out '#import declaration' in the handle\r\n  add the handle for the parent\r\n  add the correct delimiter for this ipe\r\n  (initializer's names are '...')\r\n  kind in the aspect\r\n  its a parameterized type\r\n  its an array\r\n  it's a file node that's been created with no children and no parent\r\n  it's a file node that's been created with no children and no parent\r\n  it's a file node that's been created with no children and no parent\r\n  handles are independent of soureLocations therefore return false\r\n  same handle as JDT for initializers.\r\n ","MoreThanOneTargetAnnotation":"     ","Fruit":"     ","CyclicPointcuts":"     ","Service":" setContext srvContext Service  ","ExecutionVisitor":" stack locals setConstantPoolGen setFrame visitAALOAD visitAASTORE visitACONST_NULL visitALOAD visitANEWARRAY visitARETURN visitARRAYLENGTH visitASTORE visitATHROW visitBALOAD visitBASTORE visitBIPUSH visitCALOAD visitCASTORE visitCHECKCAST visitD2F visitD2I visitD2L visitDADD visitDALOAD visitDASTORE visitDCMPG visitDCMPL visitDCONST visitDDIV visitDLOAD visitDMUL visitDNEG visitDREM visitDRETURN visitDSTORE visitDSUB visitDUP visitDUP_X1 visitDUP_X2 visitDUP2 visitDUP2_X1 visitDUP2_X2 visitF2D visitF2I visitF2L visitFADD visitFALOAD visitFASTORE visitFCMPG visitFCMPL visitFCONST visitFDIV visitFLOAD visitFMUL visitFNEG visitFREM visitFRETURN visitFSTORE visitFSUB visitGETFIELD visitGETSTATIC visitGOTO visitGOTO_W visitI2B visitI2C visitI2D visitI2F visitI2L visitI2S visitIADD visitIALOAD visitIAND visitIASTORE visitICONST visitIDIV visitIF_ACMPEQ visitIF_ACMPNE visitIF_ICMPEQ visitIF_ICMPGE visitIF_ICMPGT visitIF_ICMPLE visitIF_ICMPLT visitIF_ICMPNE visitIFEQ visitIFGE visitIFGT visitIFLE visitIFLT visitIFNE visitIFNONNULL visitIFNULL visitIINC visitILOAD visitIMUL visitINEG visitINSTANCEOF visitINVOKEINTERFACE visitINVOKESPECIAL visitINVOKESTATIC visitINVOKEVIRTUAL visitIOR visitIREM visitIRETURN visitISHL visitISHR visitISTORE visitISUB visitIUSHR visitIXOR visitJSR visitJSR_W visitL2D visitL2F visitL2I visitLADD visitLALOAD visitLAND visitLASTORE visitLCMP visitLCONST visitLDC visitLDC_W visitLDC2_W visitLDIV visitLLOAD visitLMUL visitLNEG visitLOOKUPSWITCH visitLOR visitLREM visitLRETURN visitLSHL visitLSHR visitLSTORE visitLSUB visitLUSHR visitLXOR visitMONITORENTER visitMONITOREXIT visitMULTIANEWARRAY visitNEW visitNEWARRAY visitNOP visitPOP visitPOP2 visitPUTFIELD visitPUTSTATIC visitRET visitRETURN visitSALOAD visitSASTORE visitSIPUSH visitSWAP visitTABLESWITCH frame cpg org.aspectj.apache.bcel.verifier.structurals.ExecutionVisitor  pop the index int\r\n  Pop Array type\r\n  Do nothing stackwise --- a NullPointerException is thrown at Run-Time\r\n  count\r\n  so doing predict the ClassCastException at run-time.\r\n  t.getSize() is 1\r\n  t.getSize() is1\r\n  t.getSize() is 1\r\n  objectref\r\n  method.\r\n  objectref\r\n  method.\r\n  method.\r\n  objectref\r\n  method.\r\n  key\r\n ","IOutputClassFileNameProvider":" getOutputClassFileName  org.aspectj.ajdt.internal.compiler.IOutputClassFileNameProvider  ","CounterTest01":"     ","CounterTest03":"     ","CounterTest02":"     ","CounterTest05":"     ","CounterTest04":"     ","CompilationAndWeavingContextTest":" testEnteringPhase testDoubleEntry testEntryEntryExit testEntryExitTop setUp formatEntry prefix org.aspectj.bridge.context.CompilationAndWeavingContextTest  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","TypedInstruction":" getType  org.aspectj.apache.bcel.generic.TypedInstruction  ","GammaA.30":"     ","InvalidNewQualifier16CE":" test  InvalidNewQualifier16CE Outer OuterInterface OuterOuter  new OuterOuter.Inner(){}.new OuterOuter.Inner.I(){};   CE 16 new qualification bad\r\n  ok\r\n ","Ten":"     ","InnerClassNaming":"     ","WideJumps":"     ","DeclareSoftImpl":" getDeclaringType getSoftenedExceptionType getPointcutExpression toString declaringType pointcut exceptionType missingTypeName org.aspectj.internal.lang.reflect.DeclareSoftImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareSoft#getDeclaringType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareSoft#getSoftenedExceptionType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareSoft#getPointcutExpression()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ILifecycleAware":" buildStarting buildFinished  org.aspectj.bridge.ILifecycleAware  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","RecognizeAspectCE":"     ","StaticCodeInstructionConstraintException":"   org.aspectj.apache.bcel.verifier.exc.StaticCodeInstructionConstraintException  ","PR573":"     ","AndOrNotTestCase":" testMatch makePointcut checkEquals checkSerialization world org.aspectj.weaver.patterns.AndOrNotTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","WeavingURLClassLoaderTest":" testLoadClass testLoadWovenClass testWeaveWovenClass testWeavingURLClassLoader testWeaveAdvice testWeaveAdviceWithVerbose testWeaveAdviceWithWeaveInfo testWeaveDeclareWarningAdvice testWeaveDeclareErrorAdvice testWeaveAroundClosure testWeavingITD testWeavingPer testWeavingAspects testJunkJar testJunkAspectJar testAddURL testParentChild testIncompletePath testPackage testZipAspects testJarAspects testClassAspects testZipJarAspectsTest testWeavingURLClassLoaderOddJars testWeavingURLClassLoaderMissingJars doTestZipAspects doTestZipAspectsTest failWithException invokeMain setSystemProperty copyProperty setUp tearDown ASPECTJRT CLASSES_JAR WOVEN_JAR JUNK_JAR ADVICE_ASPECTS DW_ADVICE_ASPECTS DE_ADVICE_ASPECTS AROUNDCLOSURE_ASPECTS ITD_ASPECTS PER_ASPECTS TEST_BASE NULL savedProperties org.aspectj.weaver.loadtime.WeavingURLClassLoaderTest  expecting error\r\n  expecting error\r\n  expecting error - seems to be wrapped wrong\r\n  bug: doTestZipAspects(\"\") attempts to load packag.Aspect?\r\n /*\r\n\t * We won't get an exception because the aspect path is empty and there is \r\n\t * no aop.xml file so the weaver will be disabled and no reweaving will \r\n\t * take place \r\n\t */\r\n /*\r\n\t * We get an exception because the class was not built reweavable\r\n\t */\r\n /*\r\n\t * Aspects on ASPECTPATH but missing from CLASSPATH\r\n\t */\r\n /*\r\n\t * Ensure package object is correct\r\n\t */\r\n /* Restore system properties */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Matthew Webster     initial implementation \r\n * ******************************************************************/\r\n","Clock":" update  clock.Clock  ","MONITORENTER":" getExceptions accept  org.aspectj.apache.bcel.generic.MONITORENTER  ","A1":" staticMethod instanceMethod a main main method prefix A1 A1 M  Simple - don't attempt to alter target for proceed, just change the arg\r\n ","IndeterminateHandlerArg":"     ","A2":" a main main method prefix A2 A2 M  Bind the target but forget to pass it on the proceed call\r\n  too few arguments to proceed?\r\n ","A3":" a main main method prefix A3 A3 M  Bind the target but pass args in wrong order on proceed\r\n ","A4":" a main main method prefix A4 M  Bind the target and pass in the right order\r\n ","A5":" a main main method newM prefix A5 M  Bind the target and pass in the right order - but pass in a different target\r\n ","A6":" a main main method newM prefix A6 M  Bind the target but make it the third arg rather than the second\r\n  System.err.println(\"advice from ataj aspect\");\r\n ","A7":" a main main methodCaller method newN prefix A7 N M  Bind the this on a call and change it with proceed... makes no difference\r\n ","GreetingScreen":" drawGreeting drawGreeting  ca.ubc.cs.spl.aspectPatterns.examples.bridge.aspectj.GreetingScreen ca.ubc.cs.spl.aspectPatterns.examples.bridge.java.GreetingScreen  ","A8":" a main main methodCaller method newM prefix A8 M  Bind the this on a call and change it with proceed... works\r\n ","BoundedReferenceTypeTestCase":" testSignature testExtendsBounds testSuperBounds testIsExtends testIsSuper testGetDeclaredInterfacesNoAdditions testGetDeclaredInterfacesWithInterfaceBounds testGetDeclaredMethodsExtends testGetDeclaredMethodsSuper setUp testSignature testExtendsBounds testSuperBounds testIsExtends testIsSuper testGetDeclaredInterfacesNoAdditions testGetDeclaredInterfacesWithInterfaceBounds testGetDeclaredMethodsExtends testGetDeclaredMethodsSuper setUp javaLangClass javaLangObject extendsClass superClass extendsWithExtras javaLangClass javaLangObject extendsClass superClass extendsWithExtras org.aspectj.weaver.BoundedReferenceTypeTestCase org.aspectj.weaver.BoundedReferenceTypeTestCase  representative test\r\n  representative test\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","A9":" a main main methodCaller method newM2 newM3 prefix A9 M  Bind this and target on execution and change it with proceed\r\n ","ParserAspect":"     ","Changed.20":" main  Changed  ","TestAspect2":"     ","PR584":" main staticFoo getFoo foo baz staticBaz PR584 Foo  ","AjNaiveASTFlattenerTest":" testNoPointcutArgs testOneIntPointcutArg testOneIntOneDoublePointcutArg testOneTypedPointcutArg testTwoTypedPointcutArgs testOneTypedAndOneIntPointcutArg testOneIntAndOneTypedPointcutArg testOneIntOneDoubleAndOneTypedPointcutArg check  org.aspectj.tools.ajc.AjNaiveASTFlattenerTest  ","GeneratingDuplicateNamedAdviceMethodsInAbstractAspects":"     ","B1":" staticMethod instanceMethod  configs.moduleB.B1 B1  inherited via decp\r\n  inherited via decp\r\n ","B2":" main  configs.moduleB.B2 B2  ","TraceFactoryTest":" testGetTraceFactory testGetTrace  org.aspectj.weaver.TraceFactoryTest  ","B3":"   configs.moduleB.B3  ","CallReference":"     ","AjcTestCaseTest":" testCompile testIncrementalCompile  org.aspectj.tools.ajc.AjcTestCaseTest  prepare for increment\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer, \r\n * ******************************************************************/\r\n","BinaryTreeLeaf":" getValue accept getValue value value ca.ubc.cs.spl.aspectPatterns.examples.visitor.aspectj.BinaryTreeLeaf ca.ubc.cs.spl.aspectPatterns.examples.visitor.java.BinaryTreeLeaf  ","Point.30":" getX getY getTheta getRho setRectangular setPolar rotate offset makePolar makeRectangular toString main x y theta rho polar rectangular introduction.Point  /*\r\n  Copyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\n  Use and copying of this software and preparation of derivative works based\r\n  upon this software are permitted.  Any distribution of this software or\r\n  derivative works must comply with all applicable United States export control\r\n  laws.\r\n\r\n  This software is made available AS IS, and Xerox Corporation makes no warranty\r\n  about the software, its performance or its conformity to any specification.\r\n*/\r\n","ImplicitThisMissing":" main  ImplicitThisMissing  ","InterfaceConstructor":"     ","Af":"     ","PR590":"     ","Aj":" initialize preProcess getWeaver initialize getWeavingAdaptor getNamespace generatedClassesExist flushGeneratedClasses weavingContext trace weavingAdaptors weavingAdaptor isInitialized org.aspectj.weaver.loadtime.Aj  skip boot loader or null classes (hibernate)\r\n  TODO AV needs to doc that\r\n  would make sense at least in test f.e. see TestHelper.handleMessage()\r\n  within the synchronized block\r\n  we don't weave reflection generated types at all!\r\n  perform the initialization\r\n ","ThreadStackFactoryImpl":" initialValue getThreadStack getNewThreadStack initialValue getThreadCounter inc dec isNotZero getNewThreadCounter value org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","AjdtBatchTests":" suite  org.aspectj.ajdt.internal.compiler.batch.AjdtBatchTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","C1":" m bar m mString mi logMe logMe m1 m2 m1 m2 method1 method1 map l s si i i configs.moduleB.moduleC.C1 C C1 p1.C1 p1.C1 p1.Helper protectedAccess.p1.C1 pack.C1 pack.C1 p.C1 p.C1 pack.C1 pack.C1 p1.C1  ","C2":" m bar getAddress main getAddress test main logMe2  configs.moduleB.moduleC.C2 C2 p1.p2.C2 C2 t.C2 pack.C2  ","Ap":"     ","ParentUsingChild":" battle main  Child Parent ParentUsingChild  order matters - must be after Child\r\n ","Output":" print  ca.ubc.cs.spl.aspectPatterns.examples.decorator.java.Output  ","AroundAMain":" main  AroundAMain  System.out.println(\"run with: \" + Arrays.asList(args));\r\n  was $AroundA$46\r\n  was $AroundA$46\r\n  was $AroundA$46\r\n  was $AroundA$46\r\n  was $AroundA$46\r\n  Was $AroundA$c5\r\n  Was $AroundA$c5\r\n  Was $AroundA$c5\r\n  Was $AroundA$c5\r\n  Was $AroundA$c5\r\n  Was $AroundA$150\r\n  Was $AroundA$150\r\n  Was $AroundA$150\r\n  Was $AroundA$150\r\n  Was $AroundA$150\r\n ","BeanTestCase":" propertyChange main testPropertyChange propertyChange main testPropertyChange  BeanTestCase BeanTestCase  ","ClassPathManager":" addPath find toString getAllClassFiles getInputStream getPath close find getAllClassFiles getInputStream close getPath find getAllClassFiles toString getInputStream close getPath getZipFile find getAllClassFiles ensureOpen isReallyOpen closeSomeArchives close toString hasClassExtension closeArchives getSystemPropertyWithoutSecurityException entries openArchives maxOpenArchives MAXOPEN_DEFAULT trace file fis dirPath entry zipFile is file zipFile org.aspectj.weaver.bcel.ClassPathManager  and it defaults to 1000\r\n  heuristic-only: ending with .jar or .zip means probably a zip file\r\n  this is NOT an error: it's valid to have missing classpath entries\r\n  This zip will be closed when necessary...\r\n  if (ret.isEmpty()) close();\r\n  Close 10% of those open\r\n  this means the zip file is closed...\r\n  this will fail if the file has been closed for\r\n  some reason;\r\n  Copes with the security manager\r\n /* private */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Audit":" getLastUpdatedBy setLastUpdatedBy  Audit  ","Enforcement":"     ","Delta":" foo  secondary.Delta  ","CompilationResultDestinationManager":" getOutputLocationForClass getOutputLocationForResource  org.aspectj.ajdt.internal.compiler.CompilationResultDestinationManager  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","AspectJBuildManager":" buildFresh buildStructure build dobuild buildFresh build dobuild abortBuild isStructureDirty setStructureDirty addListener removeListener notifyCompileFinished notifyCompileStarted getBuildOptions run getFormattedOptionsString formatSet formatOptionalString setBuildModelMode getCompilerAdapter compilerAdapter compilerMessages progressMonitor buildOptions compilerListeners configFile lastConfigFile lastCompileTime buildModelMode org.aspectj.ajde.internal.AspectJBuildManager  private boolean buildStructureOnly = false;\r\n  even in incremental mode\r\n  have to full build\r\n  have to full build\r\n  Check if we need to dig out an old incremental state\r\n  AMC - updated for AspectJ 1.1 options\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","StaticMethods":"     ","MethodInvocationClosure":" getMethod  org.aspectj.aopalliance.MethodInvocationClosure  /* (non-Javadoc)\r\n\t * @see org.aopalliance.intercept.MethodInvocation#getMethod()\r\n\t */\r\n","DeclareParents":" getDeclaringType getTargetTypesPattern isExtends isImplements getParentTypes testVerifyOrderOfProcessingIrrelevant1 testVerifyOrderOfProcessingIrrelevant2 testSimpleDeclareParents test_SuperCtorCall test_SuperMethodCall test_missingCtorInIntroducedClass test_cantMakeInheritedInstanceMethodsStatic xxxtest_cantExtendFinalClass test_cantReduceVisibilityOfOverriddenMethods_1 test_cantReduceVisibilityOfOverriddenMethods_2 test_overriddenMethodsCantHaveIncompatibleReturnTypes test_inheritedAbstractMethodsMustBeImplemented_1 test_interfaceMethodsImplemented test_inheritedAbstractMethodsMustBeImplemented_2 test_inheritedAbstractMethodsMustBeImplemented_3 test_missingCtorAddedViaITD runSourceAndBinaryTestcase runSourceAndBinaryTestcase mergeOptions getWeaveMessages setUp verify runClass match accept parameterizeWith toString equals hashCode write read parentsIncludeInterface parentsIncludeClass resolve getParents getChild isExtends isAdviceLike maybeGetNewParent verifyNoInheritedAlternateParameterization findMatchingNewParents getNameSuffix verbose PROJECT_DIR baseDir child parents isWildChild isExtends org.aspectj.lang.reflect.DeclareParents org.aspectj.ajdt.internal.compiler.batch.DeclareParents org.aspectj.weaver.patterns.DeclareParents  XXX removed test, need to discuss with andy how to repair...\r\n  Do a compile of everything together from source ...\r\n  Execute: \"ajc <classes> <aspects> -showWeaveInfo\"\r\n  Execute: \"ajc <classes> -g -d classes\"\r\n  Execute: \"ajc <aspects> -g -outjar aspects.jar -classpath classes -proceedOnError\"\r\n  Execute: \"ajc -inpath classes -showWeaveInfo -d classes2 -aspectpath aspects.jar\"\r\n  Check the error messages are comparable (allow for differing orderings)\r\n  Check the weaving messages are comparable\r\n  Check weaving messages are comparable\r\n  avoid swapping.\r\n  extends and implements are treated equivalently\r\n  ??? cache this\r\n  }\r\n  }\r\n  ScopeWithTypeVariables resolutionScope = new ScopeWithTypeVariables(typeVariablesInScope,scope);\r\n  note - will always return true after deserialization, this doesn't affect weaver\r\n  already had an error here\r\n  Let's take a look at the parents we already have\r\n  alternate parameterization of the generic type on it\r\n  already a parent\r\n  Enum types that are targetted for decp through a wild type pattern get linted\r\n  Annotation types that are targetted for decp through a wild type pattern get linted\r\n  1. Can't use decp to make an enum  2. Can't use decp to change supertype of an enum  3. Can't use decp to declare java.lang.Enum  already a parent\r\n  new parent is a parameterized type, but this is a raw type\r\n  If the generic types are compatible but the parameterizations aren't then we have a problem\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /*<ResolvedType>*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","InterfaceDefinition":" main run  pack.InterfaceDefinition  User Eric Jain reported that interface was somehow bad...\r\n ","LREM":" getExceptions accept  org.aspectj.apache.bcel.generic.LREM  ","MultiTernaryOps":" main realMain c c c e e t f x b c z cur expect MultiTernaryOps  b?e:e\r\n  b ? (b : e : e) : e\r\n  b ? ( b : e : e) : e\r\n  b ? (b ? (b ? e : e) : e) : e\r\n  b ? (b ? (b ? (b ? e : e) : e) : e) : e\r\n  b ? e : (b ? e : e)\r\n  b ? e : (b ? e : (b ? e : e))\r\n  b ? (b ? (b ? e : e) : (b ? e : e)) : e\r\n  b?e:e\r\n  b ? (b : e : e) : e\r\n  b ? ( b : e : e) : e\r\n  b ? (b ? (b ? e : e) : e) : e\r\n  b ? (b ? (b ? (b ? e : e) : e) : e) : e\r\n  b ? e : (b ? e : e)\r\n  b ? e : (b ? e : (b ? e : e))\r\n  b ? (b ? (b ? e : e) : (b ? e : e)) : e\r\n  += b ? e : e\r\n  b ? e + (b ? e : e) : e\r\n  b ? e + (b ? e : e) : (b ? e : e)\r\n  problems\r\n  problems\r\n ","ExpectedMessageSpec":" toMessage getDetails setDetails getFile setFile getKind setKind getLine setLine getText setText kind line text file details org.aspectj.testing.ExpectedMessageSpec  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer, \r\n * ******************************************************************/\r\n","LADD":" accept  org.aspectj.apache.bcel.generic.LADD  ","PR535":"     ","MyClass_ch16":" foo main  MyClass_ch16  Create an instance of MyClass\r\n  Make the call to foo\r\n ","GetCauseOnSoftException":"     ","SeeTagImpl":" label referencedPackageName referencedPackage referencedClassName referencedClass referencedMemberName referencedMember kind ajc debugState look dolook lookForMember paramNames fieldDoc pointcutDoc methodDoc constructorDoc adviceDoc parametersMatch classDoc findNextChar resolve getPackageName getClassName getMemberName getLabel packageName className memberName packageDoc classDoc memberDoc label ajc looked org.aspectj.tools.ajdoc.SeeTagImpl  as a starting point...\r\n  If we found an inner class, don't look for a member\r\n  one is found set the member name to nul\r\n  up the full name\r\n  ..and try to find the class from there\r\n  to the referenced class\r\n  package elsewhere\r\n  then set the referenced package to the current doc\r\n  referenced package to that class's contained package\r\n  a package name\r\n  class's contained package\r\n  Look for the member if the member name wasn't null\r\n  [3] pointcut\r\n  Crop out the parameters\r\n  Convert the raw parameters to an array\r\n  [4] advice\r\n  XXX warn or error\r\n  XXX to Util\r\n  XXX wrong message\r\n  XXX but does not handle URLs?\r\n  membername plus parameters\r\n  seeking initial: [type|memberName]\r\n  reading initial [type|memberName]\r\n  start reading membername (field only?)\r\n  reading qualified type name\r\n  reading membername\r\n  start reading parms\r\n  reading parm (or type?)\r\n  reading qualified parameter type .\r\n  reading end of []\r\n  maybe completed parameter type\r\n  completed parm type?\r\n  reading parm type?\r\n  looking for next parm?\r\n  seeking parms or label\r\n  start reading parms\r\n  start reading label\r\n  start reading parms\r\n  type name (or identifier)\r\n  reading parms\r\n  seeking label\r\n  reading label - may have internal spaces\r\n  XXX known limitation - labels may only be ident + whitespace (no -)\r\n  hack to remove spaces between method name and parms\r\n  when does this happen?\r\n  test-only methods\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","AbstractClass":" getModifiers handleFieldChanged getModifiers handleFieldChanged2 foo  AbstractClass pkg.AbstractClass pkg.AbstractClass pkg.AbstractClass pkg.AbstractClass  }\r\n ","ThisOrTargetAnnotationPointcut":" getAnnotationTypePattern couldMatchKinds parameterizeWith fastMatch matchInternal isThis resolveBindings verifyRuntimeRetention concretize1 findResidueInternal couldMatch getBindingAnnotationTypePatterns getBindingTypePatterns write read equals hashCode buildDeclarationText toString accept isThis alreadyWarnedAboutDEoW annotationTypePattern munger declarationText thisKindSet targetKindSet org.aspectj.weaver.patterns.ThisOrTargetAnnotationPointcut  a subtype may match at runtime\r\n  it's a formal with a binding error\r\n  if annotationType does not have runtime retention, this is an error\r\n  we'll deal with this next check when the type var is actually bound...\r\n  Enforce rule about which designators are supported in declare\r\n  Are annotations being bound?\r\n  change check to verify if its the 'generic' annVar that is being used\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#fastMatch(org.aspectj.weaver.patterns.FastMatchInfo)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#match(org.aspectj.weaver.Shadow)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#concretize1(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.IntMap)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingAnnotationTypePatterns()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingTypePatterns()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PatternNode#write(java.io.DataOutputStream)\r\n\t */\r\n /* (non-Javadoc)\r\n     * @see java.lang.Object#equals(java.lang.Object)\r\n     */\r\n /* (non-Javadoc)\r\n     * @see java.lang.Object#hashCode()\r\n     */\r\n /* (non-Javadoc)\r\n     * @see java.lang.Object#toString()\r\n     */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","Persisted":"     ","ConstructorFlow":" run main runner nonfinal one ConstructorFlow  remove final and compile succeeds\r\n  incorrect CE: Field runner might not have a value\r\n  expecting NPE\r\n ","SourceLocationWithinExprHard":"     ","NotFoundTypeNameInDirectory":"   NotFoundTypeNameInDirectory  ","BcelFieldRef":" toString createLoad createStore createCopyFrom className fieldName org.aspectj.weaver.bcel.BcelFieldRef  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","MyAnnotation":"     ","AtAspectJAnnotationFactory":" createAspectAnnotation createPrivilegedAnnotation createBeforeAnnotation createAfterAnnotation createAfterReturningAnnotation createAfterThrowingAnnotation createAroundAnnotation createPointcutAnnotation createDeclareErrorOrWarningAnnotation createDeclareParentsAnnotation createDeclareSoftAnnotation createDeclareAnnAnnotation createITDAnnotation createDeclarePrecedenceAnnotation makeSingleStringMemberAnnotation addAnnotation org aspectj lang internal annotation value aspect privileged before after afterReturning afterThrowing around pointcut declareErrorOrWarning declareParents declareSoft declarePrecedence declareAnnotation itdAnnotation org.aspectj.ajdt.internal.compiler.ast.AtAspectJAnnotationFactory  we have to set the value\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ClassFieldOnPrimitiveType":" main test checkVoid checkBoolean checkChar checkByte checkShort checkInt checkLong checkFloat checkDouble checkIntArray  ClassFieldOnPrimitiveType  ","DeclareSoft2":"     ","PointcutBinding":" bindingType readableName kind  org.aspectj.ajdt.internal.compiler.lookup.PointcutBinding  /* (non-Javadoc)\r\n\t * @see org.aspectj.org.eclipse.jdt.internal.compiler.lookup.Binding#kind()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","TypeXTestCase":" testUnresolvedTypes testNameAndSigWithInners testNameAndSigWithParameters testTypexGenericSignatureProcessing testTypeXForParameterizedTypes checkTX isPrimitiveTest sizeTest arrayTest nameSignatureTest  org.aspectj.weaver.TypeXTestCase  basic equality\r\n  no funny types pre 1.5\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","EditorListener":" currentFileChanged  org.aspectj.ajde.EditorListener  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CovariantDeclaredParent":"     ","MissingAccessor":"     ","XLintTypeDeclareField":"     ","CASTORE":" accept  org.aspectj.apache.bcel.generic.CASTORE  ","Cl2":" main  Cl2  ","Cl1":" main  Cl1  ","ErasureTestData":" getData getData  ErasureTestData ErasureTestData  ","Cl3":" callPrint  Cl3  ","AspectInheritance":"     ","CharOperation":" subarray lastIndexOf contains indexOf concat equals replace  org.aspectj.util.CharOperation  ","LockSignature":"   org.aspectj.lang.reflect.LockSignature  ","PR83303":"     ","AspectStaticInit":"     ","PerTypeWithinTargetTypeMunger":" equals hashCode write getAspectType getTestPointcut matches isWithinType aspectType testPointcut hashCode org.aspectj.weaver.PerTypeWithinTargetTypeMunger  Does not match if the target is an interface\r\n  PTWIMPL Target type munger adds the localAspectOf() method\r\n /* *******************************************************************\r\n * Copyright (c) 2005 IBM, Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","BuildSpec":" isProduct isModule isValid toString DEFAULT_VERSION baseDir moduleDir jarDir tempDir stagingDir buildConfig version rebuild trimTesting assembleAll failonerror verbose productDir createInstaller distDir module org.aspectj.internal.tools.build.BuildSpec  shared\r\n  building products\r\n  building modules\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC),\r\n *               2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","MethodIntroductionSubWriter":" keyName printInheritedSummaryAnchor printInheritedSummaryLabel printInheritedSummaryLink getMembers printCrosscuts printSummaryCrosscuts hasCrosscuts  org.aspectj.tools.doclets.standard.MethodIntroductionSubWriter  method);\r\n  XXX added for balance\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","PR559":"     ","PR558":" main  PR558  expecting compiler error that PR558 is a bad symbol\r\n ","BeforeLock":"     ","ExecutionMonitor":"     ","BridgeUtilTest":" testChildString checkChildString  org.aspectj.testing.util.BridgeUtilTest  \"incomplete\" variants\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PR555":"     ","MethodSubWriter":" printMembersSummary printMembers navSummaryLink navDetailLink setDelegator printSummaryMember delegateClass getMemberKind printSummaryType printSignature propertyName mw org.aspectj.tools.doclets.standard.MethodSubWriter  XXX hack!!!\r\n  TODO: Put in Access...\r\n  hacks\r\n  printReturnType((MethodDoc)member);\r\n  printExceptions(member);\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","PR554":"     ","PR560":"     ","Condition":" checkit checkit checkit checkit checkit  coordination.Condition coordination.Condition coordination.Condition coordination.Condition coordination.Condition  /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","HierMain":" main  HierMain  ","TopmostImplements":"     ","CflowBinding":"     ","Checker":" concretize specializeOn implementOn parameterizeWith match compareTo getThrownExceptions mustCheckExceptions equals hashCode isError getResolvedDeclaringAspect msg isError hashCode org.aspectj.weaver.Checker  id\r\n  source start  pr134471 - remove when handles are improved to be independent of location\r\n  XXX this perhaps ought to take account of the other fields in advice ...\r\n  The aspect which declares this deow is the declaring type\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","RootDocMaker":" makeRootDoc  org.aspectj.tools.ajdoc.RootDocMaker  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","AjAttribute":" write getNameString getNameChars getBytes getAllBytes read getNameString write getNameString write reify getNameString write reify getNameString write read getMajorVersion getMinorVersion getCurrentWeaverMajorVersion getCurrentWeaverMinorVersion setBuildstamp getBuildstamp toString toCurrentVersionString getNameString write read getLineBreaks getSourceFileName getNameString getLineNumber getOffset write read toString getNameString write reify getNameString write getDeclare getNameString read write reify toString getExtraParameterFlags getKind getPointcut getDeclaredExceptions getFormalsUnchangedToProceed getProceedCallSignatures isProceedInInners getEnd getSourceContext getStart getNameString reify reifyFromAtAspectJ write setResolutionScope getNameString write getAccessedMembers read getNameString write read getEffectiveSignature toString getShadowKind isWeaveBody AttributePrefix AttributeName AttributeName munger AttributeName kind AttributeName WEAVER_VERSION_MAJOR_UNKNOWN WEAVER_VERSION_MINOR_UNKNOWN WEAVER_VERSION_MAJOR_AJ121 WEAVER_VERSION_MINOR_AJ121 WEAVER_VERSION_MAJOR_AJ150M4 WEAVER_VERSION_MAJOR_AJ150 WEAVER_VERSION_MINOR_AJ150 CURRENT_VERSION_MAJOR CURRENT_VERSION_MINOR UNKNOWN major_version minor_version buildstamp AttributeName sourceFileName lineBreaks AttributeName lineNumber offset AttributeName pointcutDef AttributeName declare AttributeName kind pointcut extraParameterFlags start end sourceContext proceedInInners proceedCallSignatures formalsUnchangedToProceed declaredExceptions AttributeName perClause resolutionScope AttributeName accessedMembers AttributeName effectiveSignature shadowKind weaveBody org.aspectj.weaver.AjAttribute  shouldn't happen with ByteArrayOutputStreams\r\n  shouldn't happen with ByteArrayOutputStreams\r\n  We have to tell the user about this...\r\n  private ResolvedTypeMunger munger;\r\n  When we don't know ... (i.e. pre 1.2.1)\r\n  These are the weaver major  These are the weaver major  These are the weaver major  These are the versions read in from a particular class file.\r\n  Default ctor uses the current version numbers\r\n  build used to construct the class...\r\n  AV: added in 1.5 M3 thus handling cases where we don't have that information\r\n  these are only used by around advice\r\n  size == # of proceed calls in body\r\n  size == formals.size\r\n  XXXperClause.concretize(inAspect);\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ParsingSubtypesIntroductions":"     ","SimpleList":" count append remove get count append remove get  ca.ubc.cs.spl.aspectPatterns.examples.iterator.aspectj.SimpleList ca.ubc.cs.spl.aspectPatterns.examples.iterator.java.SimpleList  ","FieldSignature":" getFieldType getField  org.aspectj.lang.reflect.FieldSignature  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","IfPseudoToken":" maybeGetParsedPointcut postParse makeMethod makeArguments expr testMethod pointcut counter org.aspectj.ajdt.internal.compiler.ast.IfPseudoToken  XXX need to implement correctly\r\n  XXX static state bad\r\n  XXX todo: make sure that errors in Arguments only get displayed once\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AsmElementFormatter":" genLabelAndKind genDecaLabel genPrecedenceListLabel setParameters acceptArgument genTypePatternLabel translatePointcutName  org.aspectj.ajdt.internal.core.builder.AsmElementFormatter  Note: AV: implicit single advice type support here (should be enforced somewhere as well (APT etc))\r\n  TODO AV - all are considered anonymous - is that ok?\r\n  ??? how to : node.getParent().getKind().equals(IProgramElement.Kind.ASPECT)) {\r\n  InterTypeConstructorDeclaration itcd = (InterTypeConstructorDeclaration)methodDeclaration;\r\n  returnTypeToString(0));\r\n  if (details.length()!=0)\r\n  String argType = \"<UnknownType>\";   TODO: fix this way of determing ajc-added arguments, make subtype of Argument with extra info\r\n  !!! move or replace\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC                     initial implementation\r\n *     Alexandre Vasseur        support for @AJ style\r\n * ******************************************************************/\r\n","Caching":"     ","TestBean":" m m main implementationInterface a.b.c.I a.b.c.Impl a.b.c.TestBeanAdvice a.b.c.TestBean a.b.c.BeansException  simple version - we go bang if Impl doesnt implement I...\r\n ","ResolvedMember":" getModifiers getModifiers getExceptions getExceptions getAssociatedShadowMunger isAjSynthetic hasAnnotations hasAnnotation getAnnotationTypes setAnnotationTypes addAnnotation isBridgeMethod isVarargsMethod isSynthetic write getSourceContext getParameterNames setParameterNames getParameterNames getEffectiveSignature getSourceLocation getEnd getSourceContext getStart setPosition setSourceContext isAbstract isPublic isProtected isNative isDefault isVisible setCheckedExceptions setAnnotatedElsewhere isAnnotatedElsewhere toGenericString toDebugString hasBackingGenericMember getBackingGenericMember getGenericReturnType getGenericParameterTypes parameterizedWith parameterizedWith setTypeVariables getTypeVariables getErasure matches resetName resetKind resetModifiers resetReturnTypeToObjectArray evictWeavingState NONE org.aspectj.weaver.ResolvedMember  ??? true or false?\r\n  like toString but include generic signature info\r\n  but if !isParameterized List<T> will turn into List.\r\n  this is used for processing ITDs that share type variables with their target generic type\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n *               2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation\r\n *     AMC      extracted as interface \r\n * ******************************************************************/\r\n","LibraryClassAspect":"     ","AnnotationThrowsPattern":"     ","AnnotationX":" getBcelAnnotation getSignature toString getTypeName getTypeSignature allowedOnAnnotationType specifiesTarget allowedOnRegularType stringify getValidTargets retrieveAnnotationOnAnnotation ensureAtTargetInitialized getTargets allowedOnField isRuntimeVisible print NONE theRealBcelAnnotation theRealASMAnnotation mode MODE_ASM MODE_BCEL signature lookedForAtTargetAnnotation atTargetAnnotation supportedTargets org.aspectj.weaver.AnnotationX  @target meta-annotation related stuff, built lazily\r\n  if no target specified, then return true\r\n  if no target specified, then return true\r\n  if no target specified, then return true\r\n /* of String */\r\n","TestProperties":" load  test.TestProperties  System.out.println(\"? load() in=\" + in);\r\n /*\r\n * Created on 30-Jul-03\r\n *\r\n * To change this generated comment go to \r\n * Window>Preferences>Java>Code Generation>Code and Comments\r\n */\r\n","PointcutsTest":"     ","BooleanUnitTest":" main test1 assertEquals invert1a invert1b invert2 invert3 invert4 invert5 isTrue isFalse main test1 assertEquals invert1a invert1b invert2 invert3 invert4 invert5 isTrue isFalse  test.BooleanUnitTest test.BooleanUnitTest  ","PlaceHolder":"  L org.aspectj.lang.internal.lang.PlaceHolder  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg       initial implementation \r\n * ******************************************************************/\r\n","TargetITDClass":"   bar.TargetITDClass  ","StackInstruction":" getType  org.aspectj.apache.bcel.generic.StackInstruction  ","I1":" method1 main  aPack.I1 I1 I1  ","Parsing1":"     ","I2":" main  I2  ","Parsing2":"     ","UtilModuleTests":" suite  org.aspectj.util.UtilModuleTests  ","AntTaskTester":" getAntFile info throwable error error want have dont clear verbose log printSummary checkAfterTask check check runTests runProject runProject beforeTasks afterTasks taskMethod afterMethod beforeMethod beforeEveryTask init afterEveryTask setProperties setProperties setUserProperties getUserProperties getProperties loadProject execute write verbosity verbosities buildFinished buildStarted messageLogged targetFinished targetStarted taskFinished taskStarted out err project taskname errors wants haves donts verbose buf AntTaskTester  todo wes: was (i)?\r\n  BuildListener\r\n /*Project.MSG_VERBOSE,*/\r\n","NegativeSourceLocation":"     ","AtAjLTWTests":" suite getSpecFile testRunThemAllWithJavacCompiledAndLTW testAjcLTWPerClauseTest_XterminateAfterCompilation testAjcLTWPerClauseTest_Xreweavable testJavaCAjcLTWPerClauseTest testAjcLTWAroundInlineMungerTest_XterminateAfterCompilation testAjcLTWAroundInlineMungerTest_Xreweavable testAjcLTWAroundInlineMungerTest testAjcLTWAroundInlineMungerTest_XnoInline_Xreweavable testAjcLTWAroundInlineMungerTest2 testLTWDumpNone testLTWDump testLTWDumpBeforeAndAfter testLTWDumpClosure testLTWDumpProxy testAjcAspect1LTWAspect2_Xreweavable testLTWLogSilent testLTWLogVerbose testLTWLogVerboseAndShow testLTWLogMessageHandlerClass testLTWUnweavable testLTWDecp testLTWDecp2 testCompileTimeAspectsDeclaredToLTWWeaver testConcreteAtAspect testConcreteAspect testConcretePrecedenceAspect testAspectOfWhenAspectNotInInclude testAspectOfWhenAspectExcluded_pr152873 testAspectOfWhenNonAspectExcluded_pr152873 testAppContainer testCflowBelowStack accept getCount count org.aspectj.systemtest.ajc150.ataspectj.AtAjLTWTests  tidy up...\r\n  before\r\n  after\r\n  tidy up...\r\n  tidy up...\r\n  The working directory is different because this test must be forked\r\n  tidy up...\r\n  actually test that we do LTW proxy and jit classes\r\n ","HW":" main callPrint check println main message HW HW  ","LoadInstruction":" accept  org.aspectj.apache.bcel.generic.LoadInstruction  ","Annotations":" suite getSpecFile testCompilingAnnotation testCompilingAnnotatedFile testCompilingUsingWithinAndAnnotationTypePattern testBugWithAnnotationsLostOnWovenMethods testAnnotatedAnnotations testSimpleAnnotatedAspectMembers testAnnotatedAspectMembersWithWrongAnnotationType testAnnotatedITDs testAnnotatedITDs2 testAnnotatedITDs3 testAnnotatedITDs4 testAnnotatedITDsWithWrongAnnotationType testAnnotatedAdvice testAnnotatedAdviceWithWrongAnnotationType testAnnotatedPointcut testBasicDeclareAnnotation testAJDKAnnotatingAspects testAJDKAnnotatingAspects2 testAnnotationPatterns testAnnotationTypePatterns testAnnotationSigPatterns testAnnotationRuntimeMatching testAnnotationRetentionChecking testAnnotationInheritance testAnnotationDEOW testAnnotationDecp testAnnotationDecPrecedence testAnnotationDecAnnotation testAnnotationsAndITDs createRepos getClassFrom  org.aspectj.systemtest.ajc150.Annotations  more implementation work needed before this test passes\r\n ","WeavingURLClassLoader":" getAspectPath getClassPath getURLs addURL defineClass createAdaptor getBytes getAspectURLs acceptClass WEAVING_CLASS_PATH WEAVING_ASPECT_PATH aspectURLs adaptor initializingAdaptor generatedClasses org.aspectj.weaver.loadtime.WeavingURLClassLoader  System.out.println(\"> WeavingURLClassLoader.WeavingURLClassLoader() classURLs=\" + Arrays.asList(classURLs));\r\n  return adaptor.findClass(name);\r\n /*\r\n\t * This constructor is needed when using \"-Djava.system.class.loader\". \r\n\t */\r\n /* If either we nor our parent is using an ASPECT_PATH use a new-style\r\n\t\t * adaptor\r\n\t\t */\r\n /* Need to defer creation because of possible recursion during constructor execution */\r\n /* Avoid recursion during adaptor initialization */\r\n /* Ensures consistent LTW messages for testing */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Matthew Webster, Adrian Colyer, \r\n *     Martin Lippert     initial implementation \r\n * ******************************************************************/\r\n","GenericSignatureInformationProvider":" getGenericParameterTypes getGenericReturnType isBridge isVarArgs isSynthetic  org.aspectj.weaver.reflect.GenericSignatureInformationProvider  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","PackageTreeWriter":" print generateLevelInfo generateTree generate del org.aspectj.tools.doclets.standard.PackageTreeWriter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","CflowPointcut":" getBody setBody isCflowBelow setIsCflowBelow propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty clone0 subtreeMatch0 accept0 treeSize isCflowBelow couldMatchKinds getEntry fastMatch matchInternal write read parameterizeWith resolveBindings equals hashCode toString findResidueInternal concretize1 clearCaches getKey getCflowfield putCflowfield accept clearCaches wipeKeys body BODY_PROPERTY isCflowBelow entry isBelow freeVars cflowFields cflowBelowFields CFLOW_MARKER org.aspectj.org.eclipse.jdt.core.dom.CflowPointcut org.aspectj.weaver.patterns.CflowPointcut  $NON-NLS-1$\r\n  allow default implementation to flag the error\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  The pointcut inside the cflow() that represents the 'entry' point\r\n  Is this cflowbelow?\r\n  System.err.println(\"Building cflow pointcut \"+entry.toString());\r\n  enh 76055\r\n  ??? this is not maximally efficient\r\n  ??? for if's sake we might need to be more careful here\r\n  Enforce rule about which designators are supported in declare\r\n  make this remap from formal positions to arrayIndices\r\n  int formalIndex = bindings.get(freeVar);\r\n  This block concretizes the pointcut within the cflow pointcut\r\n  ??? this means that we will store some state that we won't actually use, optimize this later\r\n  Is there a useful enclosing pointcut?\r\n  XXX getting the exposed state right\r\n  No state, so don't use a stack, use a counter.\r\n  Create a counter field in the aspect\r\n  Create type munger to add field to the aspect\r\n  Create shadow munger to push stuff onto the stack\r\n  Remember it\r\n  Use the one we already have\r\n  Check if we have already got a counter for this cflow pointcut\r\n  System.err.println(\"Retrieving for key \"+key+\" returning \"+o);\r\n  System.err.println(\"Storing cflow field for key\"+key);\r\n  System.err.println(\"Wiping entries starting \"+aspectType.getName());\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","DeclareParentsImplementsReweavableTestAspect":"  i2 ataspectj.DeclareParentsImplementsReweavableTestAspect  ","ParamTagImpl":" parameterComment parameterName kind parameterComment parameterName org.aspectj.tools.ajdoc.ParamTagImpl  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","DALOAD":" accept  org.aspectj.apache.bcel.generic.DALOAD  ","IHasPosition":" getStart getEnd  org.aspectj.weaver.IHasPosition  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","DOUBLE_Upper":" theInstance singleInstance org.aspectj.apache.bcel.verifier.statics.DOUBLE_Upper  ","AfterAdviceOnConstructorsOnTheWrongType":"     ","AJInstaller":" setHtmlSrc setResourcesSrc setMainclass setInstallerclassjar addToContents getFiles getCopyTask finishZipOutputStream writeContents writeManifest setZipfile setBasedir setCompress initZipOutputStream zipDir zipFile zipFile setupTempDir execute writeDirs writeFiles INCLUDE_CLASSES MAIN_CLASS CONTENTS_FILE htmlSrc resourcesSrc mainclass installerClassJar contentsNames contentsBytes NEWLINE zipFile baseDir doCompress archiveType org.aspectj.internal.tools.ant.taskdefs.AJInstaller  XXX INCLUDES CODE FROM ANT -- UNDER APACHE LICENSE\r\n  ds.setIncludes(new String [] {pattern});\r\n  installer class files\r\n  move the correct resource files into the jar\r\n  move the correct resource files into the jar\r\n  now move these files into the jar\r\n  and delete the tmp dir\r\n  write to a StringBuffer\r\n  write to a StringBuffer\r\n  XXX cut-and-paste from Zip super-class (under apache license)\r\n  Store data into a byte[]\r\n  }\r\n  close up\r\n  deletes temp dir\r\n /*\r\n         * XXX ZipOutputStream.putEntry expects the ZipEntry to know its\r\n         * size and the CRC sum before you start writing the data when using\r\n         * STORED mode.\r\n         *\r\n         * This forces us to process the data twice.\r\n         *\r\n         * I couldn't find any documentation on this, just found out by try\r\n         * and error.\r\n         */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AroundAll":"     ","CollectionUtil":" getListInMap getSortedSetInMap getSetInMap getMapInMap NO_STRINGS org.aspectj.util.CollectionUtil  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","RuntimeVisibleParameterAnnotations":" accept copy  org.aspectj.apache.bcel.classfile.annotation.RuntimeVisibleParameterAnnotations  ","NamePatternTestCase":" testMatch checkMatch checkMatch testSerialization checkSerialization checkSerialization matchAll match1 match2 org.aspectj.weaver.patterns.NamePatternTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","CflowOrder":"     ","GenericPerTypeWithin3":"     ","GenericPerTypeWithin2":"     ","BcweaverTests":" getOutdir removeOutDir suite TESTDATA_PATH OUTDIR_PATH org.aspectj.weaver.BcweaverTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Timing":"     ","If":"     ","ThrowsMatching":"     ","SourceLocation":" validLine validColumn getSourceFile getLine getColumn getEndLine getContext toString getOffset setOffset getSourceFileName getWithinType getFileName getLine getColumn serialVersionUID UNKNOWN sourceFile startLine column endLine offset context noColumn sourceFileName org.aspectj.bridge.SourceLocation org.aspectj.lang.reflect.SourceLocation  \"\" + startLine + \"-\" + endLine);\r\n  ctors at the moment! It needs sorting out.\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Tricky1":"     ","AbstractMultiProjectIncrementalAjdeInteractionTestbed":" setUp tearDown build fullBuild constructUpToDateLstFile checkForError collectUpFiles initialiseProject copy VERBOSE org.aspectj.systemtest.incremental.tools.AbstractMultiProjectIncrementalAjdeInteractionTestbed  +1 captures extra separator\r\n  ,false);\r\n  if (VERBOSE) System.err.println(\"Copying \"+f+\" to \"+t);\r\n ","Ajc150Tests":" suite getSpecFile testMixingCodeStyles_pr121385 testTypeVars_pr121575 testTypeVars_pr121575_2 testTypeVars_pr121575_3 testTypeVars_pr121575_4 testDecps1 testDecps1b testDecps2 testDecps2b testDecps3 testDecps3b testDecps3c testVarargsNPE_pr120826 testNamedPointcutPertarget_pr120521 testDollarClasses_pr120474 testGenericPTW_pr119539_1 testGenericPTW_pr119539_2 testGenericPTW_pr119539_3 testIncorrectSignatureMatchingWithExceptions_pr119749 testGeneratingCodeForAnOldRuntime_pr116679_1 testGeneratingCodeForAnOldRuntime_pr116679_2 testAmbiguousMethod_pr118599_1 testAmbiguousMethod_pr118599_2 testAroundAdviceArrayAdviceSigs_pr118781 testAtDeclareParents_pr117681 testPrivilegeProblem_pr87525 testRangeProblem_pr109614 testGenericAspects_pr115237 testClassFormatError_pr114436 testParserException_pr115788 testPossibleStaticImports_pr113066_1 testPossibleStaticImports_pr113066_2 testPossibleStaticImports_pr113066_3 testITDCtor_pr112783 testAnnotatedITDFs_pr114005_1 testAnnotatedITDFs_pr114005_2 testCantCallSuperMethods_pr90143 testBrokenDecp_pr112476 testUnboundFormal_pr112027 testNPEScopeSetup_pr115038 testCCEGenerics_pr113445 testMatthewsAspect_pr113947_1 testMatthewsAspect_pr113947_2 testFieldGet_pr114343 testFieldGet_pr114343_2 testFieldGet_pr114343_3 testCaptureBinding_pr114744 testAutoboxingAroundAdvice_pr119210_1 testAutoboxingAroundAdvice_pr119210_2 testAutoboxingAroundAdvice_pr119210_3 testBadDecp_pr110788_1 testBadDecp_pr110788_2 testBadDecp_pr110788_3 testBadDecp_pr110788_4 testSpuriousOverrideMethodWarning_pr119570_1 testSpuriousOverrideMethodWarning_pr119570_2 testBrokenSwitch_pr117854 testVarargsITD_pr110906 testBadRenderer_pr86903 testLintForAdviceSorting_pr111667 testIncompatibleClassChangeError_pr113630_1 testIncompatibleClassChangeError_pr113630_2 testFieldGetProblemWithGenericField_pr113861 testAccesstoPrivateITDInNested_pr118698 testDeclareAnnotationOnNonExistentType_pr99191_1 testDeclareAnnotationOnNonExistentType_pr99191_2 testDeclareAnnotationOnNonExistentType_pr99191_3 testDeclareAnnotationOnNonExistentType_pr99191_4 testDeclareAnnotationOnNonExistentType_pr99191_5 testBadGenericSigAttribute_pr110927 test_typeProcessingOrderWhenDeclareParents test_aroundMethod test_aroundMethodAspect test_ambiguousBindingsDetection test_ambiguousArgsDetection testIncorrectExceptionTableWhenBreakInMethod_pr78021 testIncorrectExceptionTableWhenReturnInMethod_pr79554 testMissingDebugInfoForGeneratedMethods_pr82570 testCanOverrideProtectedMethodsViaITDandDecp_pr83303 testPerTypeWithin_pr106554 testPerTypeWithinMissesNamedInnerTypes testPerTypeWithinMissesAnonymousInnerTypes testPerTypeWithinIncorrectlyMatchingInterfaces test051_arrayCloningInJava5 testBadASMforEnums npeOnTypeNotFound testNoRuntimeExceptionSoftening testRuntimeNoSoftenWithHandler testSyntaxError testVarargsInConsBug testAspectpathdirs testIntroSample testPTWInterface testEnumCalledEnumEtc testInternalCompilerError_pr86832 testCloneMethod_pr83311 testIfEvaluationExplosion_pr94086 testReflectNPE_pr94167 testStaticImports_pr84260 testGenerics_pr99089 testGenerics_pr95993 testItdGenerics_pr99228 testItdGenerics_pr98320 testItdGenerics_pr100227 testItdGenerics_pr100260 testSyntaxErrorNPE_pr103266 testFinalAbstractClass_pr109486 testComplexBinding_pr102210 testIllegalStateExceptionOnNestedParameterizedType_pr106634 testParseErrorOnAnnotationStarPlusPattern test_pr106130_tooManyLocals testMissingNamePattern_pr106461 testMissingNamePattern_pr107059 testIntermediateAnnotationMatching testBadRuntimeTestGeneration testErrorMessageOnITDWithTypePatterns testAjKeywordsAsIdentifiers testAjKeywordsAsIdentifiers2 testNoBeforeReturningAdvice testDetectVoidFieldType testPointcutOverriding testAtSuppressWarnings testDEOWWithBindingPointcut testAroundAdviceAndInterfaceInitializer testGoodErrorMessageOnUnmatchedMemberSyntax testITDWithNoExceptionAndIntermediary testAnonymousInnerClasses testMultipleAnonymousInnerClasses testPrivilegedMethodAccessorsGetRightExceptions_pr82989 testAnonymousInnerClassWithMethodReturningTypeParameter_pr107898 testMatchingOfObjectArray testMultipleAnonymousInnerClasses_pr108104 testSignatureMatchingInMultipleOverrideScenario testWildcardAnnotationMatching_pr108245 testInnerTypesAndTypeVariables testAtAfterThrowingWithNoFormal testParameterizedVarArgsMatch testFieldAccessInsideITDM testTypeVarWithTypeVarBound testEnumSwitchInITD testInnerTypeOfGeneric testDeclareParentsIntroducingCovariantReturnType testInnerClassPassedToVarargs testInlinedFieldAccessInProceedCall testVisibiltyInSignatureMatchingWithOverridesPart1 testVisibiltyInSignatureMatchingWithOverridesPart2 testVisibiltyInSignatureMatchingWithOverridesPart3 testArgsGeneratedCorrectlyForAdviceExecution testNoUnusedWarningsOnAspectTypes testSyntheticArgumentsOnITDConstructorsNotUsedInMatching testParsingOfGenericTypeSignature testOverrideAndCovarianceWithDecPRuntime testOverrideAndCovarianceWithDecPRuntimeMultiFiles testOverrideAndCovarianceWithDecPRuntimeMultiFilesBinaryWeaving testAbstractSynchronizedITDMethods testSynchronizedITDInterfaceMethods testNoWarningOnUnusedPointcut testITDOnInterfaceWithExistingMember testFinalITDMOnInterface testPrivatePointcutOverriding testAdviceOnCflow testNoTypeMismatchOnSameGenericTypes testSuperCallInITD testSuperCallInITDPart2 testAtAnnotationBadTest_pr103740 testNoUnusedParameterWarningsForSyntheticAdviceArgs testNoVerifyErrorWithSetOnInnerType testCantFindTypeErrorWithGenericReturnTypeOrParameter testNoVerifyErrorOnGenericCollectionMemberAccess testRawAndGenericTypeConversionITDCons testAtAnnotationBindingWithAround testUnableToBuildShadows_pr109728 testMessageOnMissingTypeInDecP testParameterizedGenericMethods testIllegalChangeToPointcutDeclaration_pr111915 testCantProvideDefaultImplViaITD_pr110307_1 testCantProvideDefaultImplViaITD_pr110307_2 testCantProvideDefaultImplViaITD_pr110307_3 testCantProvideDefaultImplViaITD_pr110307_4 testCantProvideDefaultImplViaITD_pr110307_5 testCantProvideDefaultImplViaITD_pr110307_7 testCallJoinPointsInAnonymousInnerClasses testNoRequirementForUnwovenTypesToBeExposedToWeaver testArrayCloneCallJoinPoints testDebugInfoForAroundAdvice testCCEWithGenericWildcard_pr112602 testAdviceInStructureModelWithAnonymousInnerClass_pr77269 testAdviceInStructureModelWithNamedInnerClass_pr77269 testDWInStructureModelWithAnonymousInnerClass_pr77269 testVarArgsIITDInConstructor testWeaveInfoMessageForDeclareAtMethodOnITDdMethod testITDCWithNoExplicitConsCall testJava5SpecificFeaturesUsedAtJava14OrLower testAnonymousTypes testAdviceExecutionJPToStringForms testAssertWithinPointcutExpression testNoVerifyErrorWithTwoThisPCDs_pr113447 testNoVerifyErrorWithTwoAtThisPCDs_pr113447 testNoVerifyErrorWithAtWithinPCDs_pr113447 testNoVerifyErrorWithAtWithincodePCDs_pr113447 testNoVerifyErrorWithAtAnnotationPCDs_pr113447 testNoVerifyErrorWithTwoArgsPCDs_pr113447 testNoStackOverflowWithCircularPCDInGenericAspect testNoStackOverflowWithCircularPCDInGenericAspect2 testNPEInThisJoinPointStaticPart testPointcutParsingOfCompiledPointcuts testReflectionOfAbstractITDs testDeclareSoftWithAdviceExecution testDeclareSoftWithExclusions testReturningObjectBinding testPerTargetAndNegation testParameterizedPointcutAndAdvice testDoublyParameterizedAbstractType testArgNamesInAdviceAnnotations testNPEinWeavingAdaptor_pr116626 testXlintMessageForImproperAnnotationType_pr115252_Exact testXlintMessageForImproperAnnotationType_pr115252_OR testXlintMessageForImproperAnnotationType_pr115252_AND testXlintMessageForImproperAnnotationType_pr115252_Return testXlintMessageForImproperAnnotationType_pr115252_Declaring testXlintMessageForImproperAnnotationType_pr115252_Parameter testXlintMessageForImproperAnnotationType_pr115252_Throws testXlintMessageForImproperAnnotationType_pr115252_MoreThanOne testDeclareAtTypeInStructureModel_pr115607 testNoNPEWhenInaccessibleMethodIsCalledWithinITD_pr119019 testNoNPEWithOrPointcutAndMoreThanOneArgs_pr118149 testNoSOBWithGenericInnerAspects_pr119543 testIllegalAccessErrorWithAroundAdvice_pr119657 testIllegalAccessErrorWithAroundAdviceNotSelf_pr119657 testIllegalAccessErrorWithAroundAdviceTerminateAfterCompilationLTW_pr119657 testIllegalAccessErrorWithAroundAdviceLTW_pr119657 testIllegalAccessErrorWithAroundAdviceNotSelfLTW_pr119657 testIllegalAccessErrorWithAroundAdviceSelfAndNotSelfLTW_pr119657 testIllegalAccessErrorWithAroundAdviceLTWNoInline_pr119657 testReflectOnCodeStyleITDs testReflectOnAtAspectJDecP testModifierOverrides testAbstractPerThisInAtAspectJ testNPEInBcelAdviceWithConcreteAspect_pr121385 createRepos getClassFrom  org.aspectj.systemtest.ajc150.Ajc150Tests  public void testIllegalInitialization_pr118326_2() { runTest(\"illegal initialization - 2\");}\r\n  of time - if you see it hanging, someone has messed with the optimization.\r\n  AsmManager.setReporting(\"c:  the structure model\r\n  AsmManager.setReporting(\"c:  the structure model\r\n  AsmManager.setReporting(\"c: /*\r\n  public void testBrokenDispatchByITD_pr72834() { runTest(\"broken dispatch\");}\r\n  public void testMissingAccessor_pr73856() { runTest(\"missing accessor\");}\r\n  public void testCunningDeclareParents_pr92311() { runTest(\"cunning declare parents\");}\r\n  public void testGenericITDsAndAbstractMethodError_pr102357() { runTest(\"generic itds and abstract method error\");}\r\n  */\r\n /*\r\n   * Load-time weaving bugs\r\n   */\r\n","Tricky2":"     ","Tricky3":"     ","NameConvertorTest":" testBoolean testByte testChar testDouble testFloat testInt testLong testShort testString testType testListPameterizedWithString testClassParameterizedWithStringAndType testStringArray testTwoDimensionalStringArray testIntArray checkConversion  org.aspectj.util.NameConvertorTest  ","ShadowMatch":" alwaysMatches maybeMatches neverMatches matchesJoinPoint setMatchingContext  org.aspectj.weaver.tools.ShadowMatch  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","PatternsTestCase":" testSimpleExample  org.aspectj.tools.ajdoc.PatternsTestCase  File file1 = new File(\"testdata  \"-XajdocDebug\",\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","SimpleType":" setI getI setI getI i i SimpleType SimpleType  ","Target":" run staticMethod staticMethod main run run run run run publicStaticMethod  delete.Target Target Target Target delete.Target main.Target delete.Target delete.Target pack1.Target  CE 6 after DeleteMe deleted\r\n  CE 6 after DeleteMe deleted\r\n  CE 6 after DeleteMe deleted\r\n ","XLintTypeDeclareMethod":"     ","StrictFpReceptions":"     ","StubReplace":"     ","IfPointcut2Test":" log testSome main suite test test2 test3 testONE testTWO beforeMULTI doBefore doBefore2 doBefore3 doo doo dooMulti s_log ISON ataspectj.IfPointcut2Test  will require JP flags\r\n  -- if && if thru reference\r\n  -- basic\r\n ","ClinitTest":" run main i b ClinitTest  ","OverloadedPointcutsInClass":"     ","StringList":" add add addAll addAll clear contains containsAll get indexOf isEmpty iterator lastIndexOf listIterator listIterator remove remove removeAll retainAll set size subList toArray toArray add add addAll addAll clear contains containsAll get indexOf isEmpty iterator lastIndexOf listIterator listIterator remove remove removeAll retainAll set size subList toArray toArray  StringList StringList  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n ","ThisInIntroFieldInit":"     ","BuildModule":" main pathToFile setModuledir setModule setVersion setBasedir setJardir setTrimtesting setAssembleall setRebuild setFailonerror setCreateinstaller setVerbose setBuildConfig setProductdir setTempdir setDistdir execute build buildByScript buildSpec org.aspectj.internal.tools.ant.taskdefs.BuildModule  quickie hack...\r\n  XXX handle multiple modules, same builder\r\n  try using script first if not a product\r\n  XXXFileLiteral\r\n  quickie hack...\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Strings":"     ","ArrayInitializerType":"  i ArrayInitializerType  ","TypeExprErrors":" f ff m sm s b a TypeExprErrors A  not actually an error\r\n ","FieldInitializerJoinPoints":"     ","ByteSequence":" getIndex unreadByte getPosition unreadByte byte_stream org.aspectj.apache.bcel.util.ByteSequence  is protected in ByteArrayInputStream\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","Quietable":" quiet speak  org.aspectj.tools.ajdoc.Quietable  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Trg":" main  Trg  ","TraceSets":"     ","OrExpression":" evaluate evaluate replace copy expression1 expression2 expression1 expression2 ca.ubc.cs.spl.aspectPatterns.examples.interpreter.aspectj.OrExpression ca.ubc.cs.spl.aspectPatterns.examples.interpreter.java.OrExpression  ","DeclarationFactory":" createMethodDeclaration createConstructorDeclaration createProceed createAspect setPrivileged setPerClauseFrom setDominatesPatternFrom createPseudoTokensFrom createPointcutDeclaration createAroundAdviceDeclaration createAfterAdviceDeclaration createBeforeAdviceDeclaration createPointcutDesignator setPointcutDesignatorOnAdvice setPointcutDesignatorOnPointcut setExtraArgument isAfterAdvice setAfterThrowingAdviceKind setAfterReturningAdviceKind createDeclareDeclaration createDeclareAnnotationDeclaration createInterTypeFieldDeclaration createInterTypeMethodDeclaration createInterTypeConstructorDeclaration setSelector setDeclaredModifiers setInitialization setOnType createPseudoToken createIfPseudoToken setLiteralKind shouldTryToRecover  org.aspectj.ajdt.internal.compiler.parser.DeclarationFactory  For the ast support: currently the below line is not finished! The start is set incorrectly\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createMethodDeclaration(org.eclipse.jdt.internal.compiler.CompilationResult)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createConstructorDeclaration(org.eclipse.jdt.internal.compiler.CompilationResult)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createProceed(org.eclipse.jdt.internal.compiler.ast.MessageSend)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createAspect(org.eclipse.jdt.internal.compiler.CompilationResult)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#setPrivileged(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, boolean)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#setPerClauseFrom(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.ast.ASTNode)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#setDominatesPatternFrom(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.ast.ASTNode)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createPseudoTokensFrom(org.eclipse.jdt.internal.compiler.ast.ASTNode[], org.eclipse.jdt.internal.compiler.CompilationResult)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createPointcutDeclaration(org.eclipse.jdt.internal.compiler.CompilationResult)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createAroundAdviceDeclaration(org.eclipse.jdt.internal.compiler.CompilationResult)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createAfterAdviceDeclaration(org.eclipse.jdt.internal.compiler.CompilationResult)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createBeforeAdviceDeclaration(org.eclipse.jdt.internal.compiler.CompilationResult)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createPointcutDesignator(org.eclipse.jdt.internal.compiler.parser.Parser, org.eclipse.jdt.internal.compiler.ast.ASTNode)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#setPointcutDesignator(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration, org.eclipse.jdt.internal.compiler.ast.ASTNode)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#setPointcutDesignator(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration, org.eclipse.jdt.internal.compiler.ast.ASTNode)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#setExtraArgument(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration, org.eclipse.jdt.internal.compiler.ast.Argument)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#isAfterAdvice(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#setAfterThrowingAdviceKind(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#setAfterReturningAdviceKind(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createDeclareDeclaration(org.eclipse.jdt.internal.compiler.CompilationResult, org.eclipse.jdt.internal.compiler.ast.ASTNode)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createDeclareAnnotationDeclaration(org.aspectj.org.eclipse.jdt.internal.compiler.CompilationResult, org.aspectj.org.eclipse.jdt.internal.compiler.ast.ASTNode, org.aspectj.org.eclipse.jdt.internal.compiler.ast.Annotation, org.aspectj.org.eclipse.jdt.internal.compiler.parser.Parser)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createInterTypeFieldDeclaration(org.eclipse.jdt.internal.compiler.CompilationResult, org.eclipse.jdt.internal.compiler.ast.TypeReference)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createInterTypeMethodDeclaration(org.eclipse.jdt.internal.compiler.CompilationResult)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createInterTypeConstructorDeclaration(org.eclipse.jdt.internal.compiler.CompilationResult)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#setSelector(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration, char[])\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#setDeclaredModifiers(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration, int)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#setInitialization(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration, org.eclipse.jdt.internal.compiler.ast.Expression)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#setOnType(org.eclipse.jdt.internal.compiler.ast.MethodDeclaration, org.eclipse.jdt.internal.compiler.ast.TypeReference)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createPseudoToken(org.eclipse.jdt.internal.compiler.parser.Parser, java.lang.String, boolean)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#createIfPseudoToken(org.eclipse.jdt.internal.compiler.parser.Parser, org.eclipse.jdt.internal.compiler.ast.Expression)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#setLiteralKind(org.eclipse.jdt.internal.compiler.ast.ASTNode, java.lang.String)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.parser.Parser.IDeclarationFactory#shouldTryToRecover(org.eclipse.jdt.internal.compiler.ast.ASTNode)\r\n\t */\r\n","WeaverAdapter":" getClassFileIterator getRequestor isApplyAtAspectJMungersOnly hasNext next remove processingReweavableState addingTypeMungers weavingAspects weavingClasses weaveCompleted acceptResult finishedWith removeFromMap recordProgress recordProgress compilerAdapter resultIterator classFileIndex nowProcessing lastReturnedResult weaverMessageHandler progressListener finalPhase localIteratorCounter progressMaxTypes progressPhasePrefix fromPercent toPercent progressCompletionCount org.aspectj.ajdt.internal.compiler.WeaverAdapter  Fields related to progress monitoring\r\n  sets up indices correctly\r\n  we're done with the lastReturnedResult\r\n  weaverMessageHandler.handleMessage(new Message(\"weaving \" + nowProcessing.fileName(),IMessage.INFO, null, null));\r\n  Assume weaving takes 50% of the progress bar...\r\n  weave phases as indicated by bcelWeaver...\r\n  (for accurate progress reporting)\r\n  progress reporting logic\r\n  Start counting from *now*\r\n  progress reporting logic\r\n  System.err.println(progressPhasePrefix+result.getClassName()+\" (from \"+nowProcessing.fileName()+\")\");\r\n  Smoothly take progress from 'fromPercent' to 'toPercent'\r\n  the same array, not having the same content.\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.IClassFileProvider#getClassFileIterator()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.IClassFileProvider#getRequestor()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.util.Iterator#hasNext()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.util.Iterator#next()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.util.Iterator#remove()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.IWeaveRequestor#acceptResult(org.aspectj.weaver.bcel.UnwovenClassFile)\r\n\t */\r\n","LocalInterfaceCE":"     ","AjcBuildOptions":" getUseJavacMode setUseJavacMode getWorkingOutputPath setWorkingDir getPreprocessMode setPreprocessMode getCharacterEncoding setCharacterEncoding getSourceOnePointFourMode setSourceOnePointFourMode getIncrementalMode setIncrementalMode getLenientSpecMode setLenientSpecMode getStrictSpecMode setStrictSpecMode getPortingMode setPortingMode getVerboseMode setVerboseMode getNonStandardOptions setNonStandardOptions getComplianceLevel setComplianceLevel getSourceCompatibilityLevel setSourceCompatibilityLevel getWarnings setWarnings getDebugLevel setDebugLevel getNoImportError setNoImportError getPreserveAllLocals setPreserveAllLocals getBooleanOptionVal setBooleanOptionVal toWarningSet fromWarningSet toDebugSet fromDebugSet getJavaOptionsMap preferencesAdapter AJC USE_JAVAC_MODE WORKING_DIR PREPROCESS_MODE CHARACTER_ENCODING SOURCE_ONE_POINT_FOUR_MODE LENIENT_MODE STRICT_MODE PORTING_MODE VERBOSE_MODE NONSTANDARD_OPTIONS INCREMENTAL_MODE COMPLIANCE_LEVEL SOURCE_LEVEL WARNINGS DEBUG_OPTIONS NO_IMPORT_ERROR PRESERVE_LOCALS DEFAULT org.aspectj.ajde.ui.internal.AjcBuildOptions  1.1 constants added by AMC\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     AMC 01.20.2003 extended to support AspectJ 1.1 options,\r\n * \t\t\t\t\t  bugzilla #29769\r\n * ******************************************************************/\r\n","AsmManager":" setRelationshipMap setHierarchy createNewASM getHierarchy getDefault getRelationshipMap fireModelUpdated getInlineAnnotations getAllStructureChildren addListener removeStructureListener removeAllListeners notifyListeners getHandleProvider setHandleProvider writeStructureModel readStructureModel genExternFilePath getCanonicalFilePath get setReporting setReporting isReporting setDontReport reportModelInfo dumptree dumptree dumprels dumprelsStderr removeStructureModelForFiles flushModelCache fixupStructureModel processDelta removeRelationshipsTargettingThisType sameType repairRelationships removeSingleNode removeNode verifyAssumption verifyAssumption walkModel countNode toString getProperties recordStat summarizeModel setCreatingModel isCreatingModel setCompletingTypeBindings isCompletingTypeBindings INSTANCE handleProvider structureListeners hierarchy mapper creatingModel dumpModelPostBuild attemptIncrementalModelRepairs dumpModel dumpRelationships dumpDeltaProcessing modelFilter dumpFilename reporting completingTypeBindings canonicalFilePathMap MAX_SIZE pathMap nodeTypeCount extraProperties org.aspectj.asm.AsmManager  below to the AjState for a compilation and recover it if switching between projects.\r\n  Dumping the model is expensive\r\n  SECRETAPI asc pull the secret options together into a system API you lazy fool\r\n  dump the model - see the method setReporting()\r\n  to give handleProviders the chance to reset any state\r\n  back to executing at a reasonable speed.\r\n  Store the program element tree\r\n  Store the relationships\r\n  That is OK\r\n  Might be an old format sym file that is missing its relationships\r\n  e.printStackTrace();\r\n  }\r\n  SECRETAPI\r\n  Found it, let's remove it\r\n  List files = config.getFiles();\r\n  Found it, let's remove it\r\n  bugs in binary weaving.\r\n  Are we recording this ?\r\n  Let's remove all the files that are deleted on this compile\r\n  etime1-stime = time to fix up the model\r\n  etime2-stime = time to repair the relationship map\r\n  fw.write(\"Target handles processed=\"+tgthandlecounter+\"\\n\");\r\n  1. the file has fundamental errors and so doesn't exist in the model (-proceedOnError probably forced us to weave)\r\n  when the type is woven)\r\n  worth continuing as there may be a relationship to remove\r\n  these relationships are added at compile time, argh\r\n  we want 'affected by' relationships - (e.g. advised by)\r\n  all the relationships can be removed, regardless of the target(s)\r\n  Now, were any relationships emptied during that processing and so need removing for this source handle\r\n  System.err.println(\"  source handle: all relationships have gone for \"+hid);\r\n  If the relationship was hanging off a 'code' node, delete it.\r\n  Remove sources that have no valid relationships any more\r\n  did we do anything?\r\n  removing 'affects' relationships\r\n  Iterate over the source handles in the relationships map\r\n  these relationships are added at compile time, argh\r\n  Does this point to the same type?\r\n  find targets that target the type we are interested in, they need removing\r\n  Remove all the targets that are no longer valid\r\n  Are we removing *all* of the relationships for this source handle?\r\n  Now, were any relationships emptied during that processing and so need removing for this source handle\r\n  System.err.println(\"  source handle: all relationships have gone for \"+hid);\r\n  If the relationship was hanging off a 'code' node, delete it.\r\n  Remove sources that have no valid relationships any more\r\n  these four possibilities should really be FIXED so we don't have this situation\r\n  System.err.println(\"Checked: \"+containingType.getKind()+\" \"+containingType);\r\n  file does not exist (i.e. its not in the filemap) then any handle inside that file cannot exist.\r\n  Now sort out the relationships map\r\n  Cache of handles that we *know* are invalid\r\n  These are source handles\r\n  We better check if it actually exists\r\n  Ok, so the source is valid, what about the targets?\r\n  We better check\r\n  Do we already know it doesn't exist?\r\n  Iterate through the targets for this relationship\r\n  Remove all the targets that are no longer valid\r\n  TODO Should only remove this relationship for the srchid?\r\n  Should have already been caught above, but lets double check ...\r\n  Are we removing *all* of the targets for this relationship (i.e. removing the relationship)\r\n  Do we have some targets that need removing?\r\n  Iterate through the relationships against this source handle\r\n  MEMORY LEAK - we don't remove the relationships !!\r\n  We know they are all going to go, so just delete the source handle.\r\n  Are we removing *all* of the relationships for this source handle?\r\n  Now, were any relationships emptied during that processing and so need removing for this source handle\r\n  No, so delete this relationship\r\n  Speed up a bit you swine\r\n  Did we find it?\r\n  Do we already know this handle points to nowhere?\r\n  System.err.println(\"Deleting code node\");\r\n  If the relationship was hanging off a 'code' node, delete it.\r\n  Remove sources that have no valid relationships any more\r\n  System.err.println(flightrecorder.toString());\r\n  boolean deleteOK = false;\r\n  flightrecorder.append(\"Parent of it is \"+parent+\"\\n\");\r\n  deleteOK=true;\r\n  flightrecorder.append(\"Comparing with \"+kids.get(i)+\"\\n\");\r\n  flightrecorder.append(\"Which has \"+kids.size()+\" kids\\n\");\r\n  System.err.println(\"Deleting parent:\"+parent);\r\n  Are there any kids left for this node?\r\n  StringBuffer flightrecorder = new StringBuffer();\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n *    Andy Clement     incremental support and switch on/off state\r\n * ******************************************************************/\r\n","Bug104212":" main suite testStaticMethodFromSuperClass foo doSome before s_i ataspectj.Bug104212  this is the bug\r\n  was: call(Bug104212.Child.foo())\r\n ","CompilerMessagesCellRenderer":" getListCellRendererComponent serialVersionUID org.aspectj.ajde.ui.swing.CompilerMessagesCellRenderer  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","NameAspect":"     ","LSTORE":" accept  org.aspectj.apache.bcel.generic.LSTORE  ","ClassA":"     ","AbstractCompilerAdapter":" getResultsPendingWeave acceptResult afterAnalysing afterCompiling afterDietParsing afterGenerating afterProcessing afterResolving beforeAnalysing beforeCompiling beforeGenerating beforeProcessing beforeResolving  org.aspectj.ajdt.internal.compiler.AbstractCompilerAdapter  /*InterimResult*/\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     Andy Clement                 initial implementation\r\n * ******************************************************************/\r\n","InterfaceCast":" main main foo  InterfaceCast A B A I B InterfaceCast  ","DeclareErrorOrWarningTestCase":" testParse testStartAndEndPositionSet parse checkSerialization  org.aspectj.weaver.patterns.DeclareErrorOrWarningTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Player":" keyPressed keyReleased keyTyped keyPressed keyReleased keyTyped keyPressed keyReleased keyTyped keyPressed keyReleased keyTyped keyPressed keyReleased keyTyped keyMapping rotation_direction thrust_on keyMapping1 keyMapping2 left right thrust fire keyMapping rotation_direction thrust_on keyMapping1 keyMapping2 left right thrust fire keyMapping rotation_direction thrust_on keyMapping1 keyMapping2 left right thrust fire keyMapping rotation_direction thrust_on keyMapping1 keyMapping2 left right thrust fire keyMapping rotation_direction thrust_on keyMapping1 keyMapping2 left right thrust fire spacewar.Player spacewar.KeyMapping spacewar.Player spacewar.KeyMapping spacewar.Player spacewar.KeyMapping spacewar.Player spacewar.KeyMapping spacewar.Player spacewar.KeyMapping  current rotation key\r\n  opposite direction\r\n  opposite direction\r\n  stop rotation\r\n  engine off\r\n  current rotation key\r\n  opposite direction\r\n  opposite direction\r\n  stop rotation\r\n  engine off\r\n  current rotation key\r\n  opposite direction\r\n  opposite direction\r\n  stop rotation\r\n  engine off\r\n  current rotation key\r\n  opposite direction\r\n  opposite direction\r\n  stop rotation\r\n  engine off\r\n  current rotation key\r\n  current thrust\r\n  opposite direction\r\n  opposite direction\r\n  stop rotation\r\n  engine off\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\n*/\r\n","DefaultWeavingContext":" getResources getBundleIdFromURL getClassLoaderName getFile getId getSuffix isLocallyDefined loader shortName org.aspectj.weaver.loadtime.DefaultWeavingContext  ","ConfigParser":" getFiles parseCommandLine parseConfigFile parseConfigFileHelper getCurrentDir stripSingleLineComment stripWhitespaceAndComments addFile addFileOrPattern addFiles parseOption showWarning showError parseArgs removeArg removeStringArg isSourceFileName parseOneArg parseImportedConfigFile makeFile makeFile setValue setLocation getValue getLocation getFile getDirectory getLine toString getFile getDirectory getLine toString getFile getDirectory getLine toString getLine getFile location relativeDirectory files fileParsed CONFIG_MSG location value line file location org.aspectj.util.ConfigParser  for nested arg files;\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","IYOption":"   com.test.IYOption  ","QualifiedSuperClassConstructorInvocations_PR401":" main s QualifiedSuperClassConstructorInvocations_PR401 S Outer ChildOfInner  ","InstanceofWithoutClass":"     ","Class1":" method1 method2 doIt doIt doItToClass2 doIt doItToClass2 print FOO Class1 Class1A pkg.Class1 packagevisibility.testPackage.Class1 packagevisibility.testPackage.Class1 testPackage.subPackage.Class1  Aspect1 pkg = Aspect1.aspectOf(this);\r\n ","IRunListener":" runStarting runCompleted addingChild  org.aspectj.testing.run.IRunListener  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Class2":" doIt doIt BAR aPack.Class2 packagevisibility.testPackage.Class2 packagevisibility.testPackage.Class2  ","Class3":" doNothingAtAll  bPack.cPack.Class3  ","BcelCflowAccessVar":" toString createLoad createStore createCopyFrom appendLoad createLoadInstructions appendLoadAndConvert insertLoad stackField index org.aspectj.weaver.bcel.BcelCflowAccessVar  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","CoverageTests":" suite getSpecFile failing org.aspectj.systemtest.ajc150.ataspectj.coverage.CoverageTests  set to false to debug tests\r\n ","MisplacedThisInAnnonymousInnerClasses":" main realMain  MisplacedThisInAnnonymousInnerClasses  shouldn't become this.outer(0)\r\n  shouldn't become this.outer(1)\r\n  this.outer(2)\r\n /*\r\n * Calls to methods declared in outer annonymous classes\r\n * are being qualified with this when they shouldn't.\r\n */\r\n","SWAP":" accept  org.aspectj.apache.bcel.generic.SWAP  ","BrowserStructureViewToolPanel":" initToolBar createFilterMenu createRelationsMenu createGranularityMenu actionPerformed actionPerformed jbInit separator_button_actionPerformed view_comboBox_actionPerformed serialVersionUID currentView viewPanel borderLayout1 border1 border2 granularityCombo filterCombo relationsCombo buttons_panel spacer_panel borderLayout2 borderLayout3 view_panel view_comboBox view_label borderLayout4 serialVersionUID granularity serialVersionUID accessibility kind modifiers sorting relation org.aspectj.ajde.ui.swing.BrowserStructureViewToolPanel  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Singleton":"     ","ClassConstraintException":"   org.aspectj.apache.bcel.verifier.exc.ClassConstraintException  ","OptionsPanel":" loadOptions saveOptions  org.aspectj.ajde.ui.swing.OptionsPanel  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","File":" toString getSize toString add remove getChild getChildCount getSize name size name size ca.ubc.cs.spl.aspectPatterns.examples.composite.aspectj.File ca.ubc.cs.spl.aspectPatterns.examples.composite.java.File  ","IntroErrorLocation":"     ","MainVerboseAndShow":" target main  ataspectj.ltwlog.MainVerboseAndShow  ","BrowserViewPanel":" setActiveNode setActiveNode updateView updateTree initDepthSlider view_comboBox_actionPerformed jbInit serialVersionUID treeManager view_comboBox borderLayout1 view_toolBar depth_slider tree_ScrollPane tree_panel borderLayout2 org.aspectj.ajde.ui.swing.BrowserViewPanel  private int depthSliderVal = 0;\r\n  , visibleView);\r\n  updateTree(DECLARATION_VIEW);\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","LAND":" accept  org.aspectj.apache.bcel.generic.LAND  ","Pr51322":"     ","OuterAbstract_PR408":" go go  OuterAbstract_PR408  ","VerifierAppFrame":" jbInit processWindowEvent classNamesJList_valueChanged verify newFileMenuItem_actionPerformed pass3aJList_valueChanged pass3bJList_valueChanged aboutMenuItem_actionPerformed whatisMenuItem_actionPerformed contentPane jSplitPane1 jPanel1 jPanel2 jSplitPane2 jPanel3 classNamesJList gridLayout1 messagesPanel gridLayout2 jMenuBar1 jMenu1 jScrollPane1 messagesScrollPane jScrollPane3 gridLayout4 jScrollPane4 cardLayout1 JUSTICE_VERSION current_class gridLayout3 pass1TextPane pass2TextPane messagesTextPane newFileMenuItem jSplitPane3 jSplitPane4 jScrollPane2 jScrollPane5 jScrollPane6 jScrollPane7 pass3aJList pass3bJList pass3aTextPane pass3bTextPane jMenu2 whatisMenuItem aboutMenuItem org.aspectj.apache.bcel.verifier.VerifierAppFrame  setIconImage(Toolkit.getDefaultToolkit().createImage(Frame1.class.getResource(\"[Ihr Symbol]\")));\r\n  Don't cache the verification result for this class.\r\n  Must be VERIFIED_OK, Pass 1 does not know VERIFIED_NOTYET\r\n  must be Verified_OK, because Pass1 was OK (cannot be Verified_NOTYET).\r\n  let observers do the rest.\r\n ","NullIdeManager":" getIdeManager init getCompilationSourceLineTasks getProjectProperties setProjectProperties isInitialized ideManager taskListManager projectProperties initialized org.aspectj.ajde.NullIdeManager  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC       initial implementation \r\n *     AMC  03.27.2003  changed to allow access to NullIdeManager\r\n * \t\t\t\t\t\tas a singleton - needed for verifying\r\n * \t\t\t\t\t\tcompiler warning and error messages.\r\n * ******************************************************************/\r\n","ThreadStackFactory":" getNewThreadStack getNewThreadCounter  org.aspectj.runtime.internal.cflowstack.ThreadStackFactory  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","CallsToArray":"     ","PackJoinPointFields":"     ","FLOAD":" accept  org.aspectj.apache.bcel.generic.FLOAD  ","TestInterface":" testMethod  TestInterface ataspectj.TestInterface  ","AsmModuleTests":" suite testNothing  org.aspectj.asm.AsmModuleTests  ","Declares":"     ","DUP":" accept  org.aspectj.apache.bcel.generic.DUP  ","AfterAdviceDeclaration":" clone0 subtreeMatch0 accept0  org.aspectj.org.eclipse.jdt.core.dom.AfterAdviceDeclaration  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n","AjStateTest":" testNoChange testAddEntryToClasspath testRemoveEntryFromClasspath testReorderClasspath testAddEntryToAspectpath testRemoveEntryFromAspectpath testReorderAspectpath testAddEntryToInpath testRemoveEntryFromInpath testReorderInpath testAddEntryToInjars testRemoveEntryFromInjars testReorderInjars setUp aRightState oldConfig newConfig org.aspectj.ajdt.internal.core.builder.AjStateTest  /* (non-Javadoc)\r\n     * @see junit.framework.TestCase#setUp()\r\n     */\r\n","AjcSpecTest":" sameAjcSuiteSpec sameAjcTestSpec sameAbstractRunSpec normal same sameRA normal normal sameListSize sameList sameIAjcRun sameSpec sameDirChangesList sameDirChangesSpec sameMessages sameMessage sameSourceLocations sameSourceLocation testMinimal NOTSAME org.aspectj.testing.harness.bridge.AjcSpecTest  description, options, paths, comments, keywords\r\n  XXX sameList(lhs.globalOptions, rhs.globalOptions, a);\r\n  XXX also sourceLocations?\r\n  Assert a = reporter;\r\n  XXX normalize?\r\n  order matters here\r\n  ok, do order-dependent check..\r\n  empty  full  XXX need to test that more differences are detected\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","InjarTwoMain":" main main  InjarTwoMain InjarTwoMain  ","FuzzyBoolean":" alwaysTrue alwaysFalse maybeTrue maybeFalse and or not alwaysFalse alwaysTrue maybeFalse maybeTrue and not or toString alwaysFalse alwaysTrue maybeFalse maybeTrue and not or toString alwaysFalse alwaysTrue maybeFalse maybeTrue and not or toString alwaysFalse alwaysTrue maybeFalse maybeTrue and not or toString fromBoolean fromBoolean toString YES NO MAYBE NEVER name YES NO MAYBE org.aspectj.util.FuzzyBoolean org.aspectj.weaver.tools.FuzzyBoolean  Note :- this implementation is not safe under serialization  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n *               2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","InDefaultPackage":"  mumble pubfield privfield InDefaultPackage  ","Parse1":"     ","PatternWeaveTestCase":" testPublic checkPointcut checkSerialize none org.aspectj.weaver.bcel.PatternWeaveTestCase  \r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","IntroducedSuperDocImpl":" dec isImplements types name createTypes introducedSuperDec types org.aspectj.tools.ajdoc.IntroducedSuperDocImpl  XXX unimplemented\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Parse2":"     ","BadHello":" main m  BadHello  ","StructureModelUtil":" checkModel getLinesToAspectMap getAspectsAffectingPackage getPackagesInModel getPackagesHelper getFilesInPackage serialVersionUID org.aspectj.ajde.ui.StructureModelUtil  Break toCheck into pieces and check each exists\r\n  }\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AfterReturningParamMatching":"     ","AsmInterTypeRelationshipProvider":" addRelationship getDefault setDefault INSTANCE INTER_TYPE_DECLARES INTER_TYPE_DECLARED_BY org.aspectj.ajdt.internal.compiler.lookup.AsmInterTypeRelationshipProvider  /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","AfterFinally":"     ","Or":" accept toString equals getLeft getRight left right org.aspectj.weaver.ast.Or  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","VerifierConstraintViolatedException":" extendMessage getMessage detailMessage org.aspectj.apache.bcel.verifier.exc.VerifierConstraintViolatedException  Not that important\r\n ","VariousConstructors":" main  VariousConstructors AbstractC  ","BigRigAspect":"   apples.BigRigAspect BigRigAspect  ","MethodGen":" getHighestlinenumber addLocalVariable addLocalVariable removeLocalVariable removeLocalVariables sort getLocalVariables getLocalVariableTable addLineNumber removeLineNumber removeLineNumbers getLineNumbers getLineNumberTable addExceptionHandler removeExceptionHandler removeExceptionHandlers getExceptionHandlers getCodeExceptions addException removeException removeExceptions getExceptions getExceptionTable addCodeAttribute addAnnotationsAsAttribute addParameterAnnotationsAsAttribute removeCodeAttribute removeCodeAttributes getCodeAttributes getMethod removeNOPs setMaxLocals getMaxLocals setMaxStack getMaxStack getClassName setClassName setReturnType getReturnType setArgumentTypes getArgumentTypes setArgumentType getArgumentType setArgumentNames getArgumentNames setArgumentName getArgumentName getInstructionList setInstructionList getSignature setMaxStack setMaxLocals stripAttributes push pop visit visited getMaxStack addObserver removeObserver update toString copy getAnnotationsOnParameter ensureExistingParameterAnnotationsUnpacked makeMutableVersion addParameterAnnotation class_name arg_types arg_names max_locals max_stack il strip_attributes highestLineNumber variable_vec line_number_vec exception_vec throws_vec code_attrs_vec param_annotations hasParameterAnnotations haveUnpackedParameterAnnotations target stackDepth branchTargets visitedTargets observers org.aspectj.apache.bcel.generic.MethodGen  Array of lists containing AnnotationGen objects\r\n  Names for variables provided?\r\n  il.findHandle(end_pc);\r\n  Make it inclusive\r\n  May happen, because end_pc is exclusive\r\n  -\r\n  so move back one... (findHandle can't cope with mid-instruction indices)\r\n  Repair malformed handles\r\n  Lets have a go at creating Tags directly\r\n  abracadabra, lets create tags rather than linenumbergens.\r\n  Overwrite if necessary\r\n  Overwrite if necessary\r\n  Swap elements\r\n  Swap elements\r\n  Swap elements\r\n  Never occurs\r\n  Every entry takes 8 bytes\r\n  Remove any stale code attribute\r\n  prologue byte code\r\n  exceptions\r\n  attributes\r\n  Add `Exceptions' if there are \"throws\" clauses\r\n  Undo effects of adding attributes\r\n  J5TODO: Remove the annotation attributes that may have been added\r\n  check for instructions that terminate the method.\r\n  push next instruction, with stack depth reduced by 1.\r\n  explore all of the select's targets. the default target is handled below.\r\n  nothing to fall through to.\r\n  jsr  choose the next instruction based on whether current is a branch.\r\n  normal case, go to the next instruction.\r\n  if we have no more instructions, see if there are any deferred branches to explore.\r\n  Find attributes that contain parameter annotation data\r\n  Initialize param_annotations\r\n  This returns Annotation[] ...\r\n  ... which needs transforming into an AnnotationGen[] ...\r\n  ... then add these to any we already know about\r\n /* may be overridden anyway */\r\n /*\r\n   * If the range of the variable has not been set yet, it will be set to be valid from\r\n   * the start to the end of the instruction list.\r\n   * \r\n   * @return array of declared local variables sorted by index\r\n   */\r\n /*\r\n   * @return array of line numbers\r\n   */\r\n /*\r\n   * @return array of declared exception handlers\r\n   */\r\n /*\r\n   * @return array of thrown exceptions\r\n   */\r\n /* Also updates positions of instructions, i.e., their indices\r\n     */\r\n /* Create LocalVariableTable and LineNumberTable attributes (for debuggers, e.g.)\r\n     */\r\n /* Each attribute causes 6 additional header bytes\r\n     */\r\n /* Check branch instructions.\r\n       */\r\n /* Initially, populate the branch stack with the exception\r\n     * handlers, because these aren't (necessarily) branched to\r\n     * explicitly. in each case, the stack will have depth 1,\r\n     * containing the exception object.\r\n     */\r\n /*AnnotationGen*/\r\n","Beta":" main  primary.Beta  ","Main.50":" main main main  Main Main Main  ","PrivateCall3":" test main  def.PrivateCall3  ","TypePatternBasedPerClauseImpl":" getTypePattern toString typePattern org.aspectj.internal.lang.reflect.TypePatternBasedPerClauseImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.TypePatternBasedPerClause#getTypePattern()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","WildAnnotationTypePattern":" getTypePattern matches resolve resolveBindings parameterizeWith write read equals hashCode toString accept typePattern resolved VERSION org.aspectj.weaver.patterns.WildAnnotationTypePattern  matched by the typePattern.\r\n  nothing to do...\r\n  rev if ser. form changes\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.AnnotationTypePattern#matches(org.aspectj.weaver.AnnotatedElement)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.AnnotationTypePattern#resolve(org.aspectj.weaver.World)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PatternNode#write(java.io.DataOutputStream)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#equals(java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#hashCode()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#toString()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","PrivateCall2":"     ","SampleGatherer":" main gather trimCommentEnd doGather isSource gatherFromFile abort compare compare toString getKind size addSample getSortedSamples getSortedSamples render startList startAnchorName render endAnchorName endList startAnchorName startList render doRenderAuthor renderStandardHeader renderXML renderHTML renderPre endAnchorName endList prepareXMLSample prepareHTMLSample prepareCodeSample renderHeading doContentTree renderAuthorIndex simpleRender getJavaFile renderCodePath commonPrefix smallerSize splitAnchorName splitAnchorName replace render EOL START END AUTHOR FLAG serialVersionUID ASPECTJ_TEAM NAME_SOURCE_COMPARER AUTHOR_NAME_SOURCE_COMPARER anchorName anchorTitle author sampleCode sourcePath startLine endLine kind flags SOURCE_SUFFIXES XML HTML PROGRAM SCRIPT TEXT OTHER samples ME EOL INFO COPYRIGHT ME doHierarchical doFlags tableOfContents sampleSection lastAnchor currentAnchor currentAuthor SAMPLE_BASE_DIR_NAME path javaPath prefix thrown org.aspectj.internal.tools.build.SampleGatherer org.aspectj.internal.tools.build.Sample org.aspectj.internal.tools.build.Samples org.aspectj.internal.tools.build.SamplesRenderer org.aspectj.internal.tools.build.HTMLSamplesRenderer org.aspectj.internal.tools.build.SampleUtil  XXX\r\n  seeking\r\n  not seeking\r\n  found start?\r\n  found end?\r\n  back to seeking start\r\n  found author?\r\n  found flag comment?\r\n  reading?\r\n  }\r\n  List theFlags;\r\n  XXX\r\n  XXX move these\r\n  ---- now do anchor\r\n  do heading then code\r\n  XXX starting same as pre\r\n  authors don't span anchors\r\n  unwind to common prefix, if necessary\r\n  ---- handle trees\r\n  String[] lastAnchor = (String[]) lastAnchors.peek();\r\n  unwind to common prefix, if necessary\r\n  build up prefix\r\n  emit leading headers, but not anchor itself\r\n  can be null...\r\n /*\r\n * A quickie hack to extract sample code from testable sources.\r\n * This could reuse a lot of code from elsewhere, \r\n * but currently doesn't, \r\n * to keep it in the build module which avoids dependencies.\r\n * (Too bad we can't use scripting languages...)\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","ICrossReferenceHandler":" addCrossReference  org.aspectj.weaver.ICrossReferenceHandler  ","AnnotatedParameters":" main foo main foo  AnnotatedParameters AnnotatedParameters  ","ComparablePoint":"     ","AnnotationMoodImplementor":"   theapp.AnnotationMoodImplementor moody.AnnotationMoodImplementor  ","PointcutRewriterTest":" testDistributeNot testPullUpDisjunctions assertEquals equals testRemoveDuplicatesInAnd testNotRemoveNearlyDuplicatesInAnd testAAndNotAinAnd testIfFalseInAnd testMatchesNothinginAnd testMixedKindsInAnd testDetermineKindSetOfAnd testKindSetOfExecution testKindSetOfCall testKindSetOfAdviceExecution testKindSetOfGet testKindSetOfSet testKindSetOfHandler testKindSetOfInitialization testKindSetOfPreInitialization testKindSetOfStaticInitialization testKindSetOfThis testKindSetOfTarget testKindSetOfArgs testKindSetOfAnnotation testKindSetOfWithin testKindSetOfWithinCode testKindSetOfIf testKindSetOfCflow testKindSetInNegation testKindSetOfOr testOrderingInAnd testOrderingInSimpleOr testOrderingInNestedOrs testOrderingInOrsWithNestedAnds getPointcut setUp prw tokenIndex org.aspectj.weaver.patterns.PointcutRewriterTest  assertEquals(\"(this(Foo) || (this(Boo) && this(Goo)))\",prw.rewrite(rightOr).toString());\r\n  assertEquals(\"((this(Boo) && this(Foo)) || (this(Foo) && this(Goo)))\",prw.rewrite(leftAnd).toString());\r\n  assertEquals(\"((this(Boo) && this(Foo)) || (this(Foo) && this(Goo)))\",prw.rewrite(rightAnd).toString());\r\n  assertEquals(\"((this(Boo) || this(Foo)) || this(Goo))\",prw.rewrite(nestedOrs).toString());\r\n  prw.rewrite(nestedAnds).toString());\r\n  + @\r\n  + @\r\n  + @\r\n  + @\r\n  + @\r\n  [below]\r\n /*\r\n\t * @see TestCase#setUp()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","AndTypePattern":" couldEverMatchSameTypesAs matchesInstanceof matchesExactly matchesExactly matchesStatically setIsVarArgs setAnnotationTypePattern write read resolveBindings parameterizeWith toString getLeft getRight equals hashCode accept traverse left right org.aspectj.weaver.patterns.AndTypePattern  ?? we override all methods that care about includeSubtypes\r\n  don't dive into ands yet....\r\n  ??? if these had side-effects, this sort-circuit could be a mistake\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#hashCode()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","InterfaceMembersCf":"     ","BadIntroductionDesignator":"     ","AjTypeSystem":" getAjType ajTypes org.aspectj.lang.reflect.AjTypeSystem  neither key nor value was found\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","AbstractAspectsExtendingAbstractAspectsGeneratesMethodsWithTheSameName_PR464":"     ","Two":"  i2 Two  ","DeclareAnnotation":" getDeclaringType getKind getSignaturePattern getTypePattern getAnnotation getAnnotationAsText hashCode equals toString getAnnotationString isExactPattern getAnnotationMethod toString accept resolve parameterizeWith isAdviceLike setAnnotationString setAnnotationMethod equals hashCode write read matches matches setAspect getAspect copyAnnotationTo getAnnotationX ensureAnnotationDiscovered getTypePattern getSignaturePattern isStarredAnnotationPattern getKind isDeclareAtConstuctor isDeclareAtMethod isDeclareAtType isDeclareAtField getAnnotationTypeX isAnnotationAllowedOnField getPatternAsString couldEverMatch getNameSuffix AT_TYPE AT_FIELD AT_METHOD AT_CONSTRUCTOR kind typePattern sigPattern annotationMethod annotationString containingAspect annotation id s org.aspectj.lang.reflect.DeclareAnnotation org.aspectj.weaver.patterns.DeclareAnnotation  for declare @type\r\n  for declare @field,@method,@constructor\r\n  }\r\n  we can update the test as appropriate.\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PatternNode#write(java.io.DataOutputStream)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer     initial implementation \r\n *      Andy Clement     got it working\r\n * ******************************************************************/\r\n","Inners":"     ","Main.60":" main foo Main  ","ElementNameValuePair":" toString dump getNameIndex getNameString getValue toShortString nameIdx value cpool org.aspectj.apache.bcel.classfile.annotation.ElementNameValuePair  u2 name of the element\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","OverridingInterfaceObjectMethod":"     ","CoordinationAction":" doit doit doit doit doit  coordination.CoordinationAction coordination.CoordinationAction coordination.CoordinationAction coordination.CoordinationAction coordination.CoordinationAction  /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","ArrayInc2CE":" testObjectIncrementingCE  ArrayInc2CE  CE prefix ++ cannot be applied to int[]\r\n  CE prefix ++ cannot be applied to Object\r\n  CE postfix ++ cannot be applied to int[]\r\n  CE postfix ++ cannot be applied to Object\r\n ","InterfaceMethodDeclarationAbstract":"     ","BcelTestCase":" createTestdataFile getClassFromJar getMethod wipe wipe createRepos findAttribute findAttribute dumpAnnotations dumpAnnotations dumpAttributes createFruitAnnotation verbose org.aspectj.apache.bcel.classfile.tests.BcelTestCase  Why does this not succeed? stupid thing\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","MessageTest":" main checkListOrder testKindOrder testKind_isSameOrLessThan testMessageHandler checkEmptyMessageHolder testMessage make make roundTrip roundTripCheck equals testKindSet setKind checkExpectedKind checkKindSet checkKindMethods ME KINDS KINDLIST UNSET expected kind org.aspectj.bridge.MessageTest org.aspectj.bridge.KindTest  XXX\r\n  XXX util\r\n  first briefly validate the checker\r\n  { INFO, DEBUG, WARNING, ERROR, FAIL, ABORT }));\r\n  for make(...)\r\n  -- kind variants\r\n  -- throwable\r\n  -- source location\r\n  XXX unchecked\r\n  -- input error tests - null kind, null input (factory-dependent)\r\n  XXX ignored for now\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","BcelCflowStackFieldAdder":" munge getMatchingSyntheticMember getSignature matches existsToSupportShadowMunging cflowStackField org.aspectj.weaver.bcel.BcelCflowStackFieldAdder  StaticInitializer();\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","pr109614":"     ","NullPointerOnGetsSimple":"     ","Main.30":" main main main main main main main  Main main.Main Main Main Main main.Main Main  ","CannotReferenceSuper":" main go go go go go  CannotReferenceSuper  ","MyTrace":"     ","RunInjarMains.30":"     ","IdeUIAdapter":" displayStatusInformation  org.aspectj.ajde.ui.IdeUIAdapter  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","FlyweightProtocol":"     ","HandlerSignature":"     ","TreeViewBuildConfigEditor":" openFile buildTree saveModel jbInit getModelNode setModelNode mousePressed isCheckBox getTreeCellRendererComponent cancel_button_actionPerformed save_button_actionPerformed serialVersionUID root model selectedEntries borderLayout1 jPanel1 jLabel1 jPanel2 cancel_button borderLayout2 save_button jScrollPane buildConfig_tree serialVersionUID checkBox modelNode tree checkBoxProto width serialVersionUID org.aspectj.ajde.ui.swing.TreeViewBuildConfigEditor  private ConfigTreeNode currNode;\r\n  sourcePath = new File(new File(configFile).getParent());\r\n  jPanel2.add(cancel_button, null);\r\n  if (isCheckBox(x, tree.getPathBounds(path).x)) {\r\n  if (leaf)  {\r\n  if (TreeViewBuildConfigEditor.selectedEntries.contains(ctn.getSourceFile())) {\r\n  }\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","IBinarySourceProvider":" getBinarySourcesForThisWeave  org.aspectj.ajdt.internal.compiler.IBinarySourceProvider  /* fileName |-> List<UnwovenClassFile> */\r\n","Lib":" hello main f main f main f main f  lib.Lib lib.Lib lib.Lib lib.Lib lib.Lib  ","BcelCflowCounterFieldAdder":" munge getMatchingSyntheticMember getSignature matches existsToSupportShadowMunging cflowCounterField org.aspectj.weaver.bcel.BcelCflowCounterFieldAdder  Only munge one type!\r\n  Something like: \"public static final CflowCounter ajc$cflowCounter$0;\"\r\n  StaticInitializer();\r\n ","BranchHandle":" getBranchHandle addHandle getPosition setPosition updatePosition setTarget updateTarget getTarget setInstruction bi bh_list org.aspectj.apache.bcel.generic.BranchHandle  An alias in fact, but saves lots of casts\r\n  List of reusable handles\r\n /* Override InstructionHandle methods: delegate to branch instruction.\r\n   * Through this overriding all access to the private i_position field should\r\n   * be prevented.\r\n   */\r\n","Figure":" makePoint makeLine elements figures.Figure  ","Main.40":" main main foo Main Main  ","NonSerializableTest":" run main i NonSerializableTest  ","Writer":" write write  ca.ubc.cs.spl.aspectPatterns.examples.adapter.aspectj.Writer ca.ubc.cs.spl.aspectPatterns.examples.adapter.java.Writer  ","Other":" returns1 returns2  samenames.Other  ","XMLBasedAjcTestCase":" loadSuite getSpecFile getSuiteTests runTest getCurrentTest addTest pushClearTestAfterRun popClearTestAfterRun clearTestAfterRun clearTest getDigester setUp nextIncrement copyFile copyFileAndDoIncrementalBuild copyFileAndDoIncrementalBuild deleteFile deleteFileAndDoIncrementalBuild deleteFileAndDoIncrementalBuild assertAdded assertDeleted assertUpdated testMap suiteLoaded currentTest clearTestAfterRun org.aspectj.testing.XMLBasedAjcTestCase  /* (non-Javadoc)\r\n\t\t\t * @see junit.extensions.TestSetup#setUp()\r\n\t\t\t */\r\n /* (non-Javadoc)\r\n\t\t\t * @see junit.extensions.TestSetup#tearDown()\r\n\t\t\t */\r\n /*\r\n\t * Return a map from (String) test title -> AjcTest\r\n\t */\r\n /*\r\n\t * The rules for parsing a suite spec file. The Digester using bean properties to match attributes\r\n\t * in the XML document to properties in the associated classes, so this simple implementation should\r\n\t * be very easy to maintain and extend should you ever need to.\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.tools.ajc.AjcTestCase#setUp()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer, \r\n * ******************************************************************/\r\n","EmptyInterface":"     ","WeaverMetrics":" reset dumpInfo recordFastMatchTypeResult recordFastMatchResult recordMatchResult fastMatchOnTypeAttempted fastMatchOnTypeTrue fastMatchOnTypeFalse fastMatchOnShadowsAttempted fastMatchOnShadowsTrue fastMatchOnShadowsFalse matchTrue matchAttempted org.aspectj.weaver.WeaverMetrics  Level 1 of matching is at the type level, which types can be dismissed?\r\n  Level 2 of matching is fast matching on the shadows in the remaining types\r\n  Level 3 of matching is slow matching on the shadows (more shadows than were fast matched on!)\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation and others.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement         initial implementation\r\n * ******************************************************************/\r\n","BadReferences":"     ","Label":" colleagueChanged  ca.ubc.cs.spl.aspectPatterns.examples.mediator.aspectj.Label ca.ubc.cs.spl.aspectPatterns.examples.mediator.java.Label  ","CommentSyntax":" main  CommentSyntax  ","Injar":" run  injar.Injar  ","MethodSignatures":"     ","InterfaceMethodDeclarationNone":"     ","IVerificationRequired":" verify  org.aspectj.weaver.patterns.IVerificationRequired  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","ConstructorNameWarning":" ConstructorNameWarning  ConstructorNameWarning  ","DeprecationWarning":" main  DeprecationWarning  deprecated class\r\n  CW 11 deprecated class\r\n ","OptionsFrame":" addOptionsPanel removeOptionsPanel showPanel loadOptions saveOptions close apply_button_actionPerformed ok_button_actionPerformed cancel_button_actionPerformed jbInit serialVersionUID ABOUT_TEXT main_tabbedPane button_panel apply_button cancel_button ok_button titledBorder1 titledBorder2 titledBorder3 titledBorder4 titledBorder5 titledBorder6 titledBorder7 border4 titledBorder8 border5 titledBorder9 titledBorder10 border7 titledBorder11 border8 titledBorder12 about_panel borderLayout9 jTextArea1 jPanel1 version_label jLabel1 borderLayout1 border9 built_label org.aspectj.ajde.ui.swing.OptionsFrame  import javax.swing.ButtonGroup;\r\n  XXX using \\n b  private Border border1;\r\n  private Border border2;\r\n  private Border border3;\r\n  private Border border6;\r\n  private ButtonGroup views_buttonGroup = new ButtonGroup();\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ArrayFieldDeclaration":"     ","ScopeIssues":"     ","AroundReturnType":"     ","SoftWithin":"     ","ArgNameFinder":" getParameterNames  org.aspectj.weaver.reflect.ArgNameFinder  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","Main.20":" main run main main run main run main main run main main run main run main main main main main  main.Main main.Target main.Main main.Main main.Target main.Main Main main.Main main.Target main.Main main.Main main.Target main.Main app.Main packageOne.Main Main app.Main packageOne.Main  bug: unable to resolve lib.Lib after change\r\n  bug: unable to resolve lib.Lib after change\r\n  bug: unable to resolve lib.Lib after change\r\n  bug: unable to resolve lib.Lib after change\r\n ","StackProducer":" produceStack  org.aspectj.apache.bcel.generic.StackProducer  ","Main.22":" main go  packageOne.Main  newly-generated event\r\n ","JRockitAgentTest":" setUp tearDown testJRockitAgent testPreProcess testJrockitRecursionProtection encode findClass defineClass loadClassFromFile loadBytesFromZipEntry readBytes debug path agent preProcess org.aspectj.weaver.loadtime.JRockitAgentTest  private com.bea.jvm.ClassPreProcessor agent;\r\n /* Needed by Commons Logging */\r\n /* Use extensions loader */\r\n /* Get rid of escaped characters */\r\n","InnerClass":" accept dump getInnerAccessFlags getInnerClassIndex getInnerNameIndex getOuterClassIndex setInnerAccessFlags setInnerClassIndex setInnerNameIndex setOuterClassIndex toString toString copy inner_class_index outer_class_index inner_name_index inner_access_flags org.aspectj.apache.bcel.classfile.InnerClass  ","TaskListManager":" addSourcelineTask addSourcelineTask hasWarning addProjectTask clearTasks  org.aspectj.ajde.TaskListManager  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Bunny":" doIt  fluffy.bunny.Bunny  ","Factory":" makeThread makeClass makeSJP makeSJP makeSJP makeESJP makeESJP makeESJP makeEncSJP makeJP makeJP makeJP makeJP makeMethodSig makeMethodSig makeMethodSig makeConstructorSig makeConstructorSig makeConstructorSig makeFieldSig makeFieldSig makeFieldSig makeAdviceSig makeAdviceSig makeAdviceSig makeInitializerSig makeInitializerSig makeInitializerSig makeCatchClauseSig makeCatchClauseSig makeCatchClauseSig makeLockSig makeLockSig makeLockSig makeUnlockSig makeUnlockSig makeUnlockSig makeSourceLoc lexicalClass lookupClassLoader filename prims NO_ARGS com.company.lib.Factory org.aspectj.runtime.reflect.Factory  XXX there should be a better return value for this\r\n  array types to be created and loaded correctly. (pr70404)\r\n  System.out.println(\"making\r\n /* The documentation of Class.forName explains why this is the right thing\r\n             * better than I could here.\r\n             */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *    Alex Vasseur    new factory methods for variants of JP\r\n * ******************************************************************/\r\n","IStructureViewNode":" getStructureNode getIcon add add remove getChildren getKind getRelationshipName toString readResolve serialVersionUID DECLARATION RELATIONSHIP LINK ALL name nextOrdinal ordinal org.aspectj.ajde.ui.IStructureViewNode  The 4 declarations below are necessary for serialization\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CircularPlusImplementsIntros":"     ","XMLWriter":" attributeValue makeAttribute flattenFiles flattenFiles unflattenList addFlattenedItems flattenList flattenList setMaxWidth printElement startElement startElement endElement printAttribute endAttributes printComment close println outPrintln SP TAB MAX_WIDTH DEFAULT_WIDTH out stack attributesDone indent maxWidth buffer name numChildren org.aspectj.testing.xml.XMLWriter  }\r\n  output on subelement\r\n  output on subelement\r\n  int level = stack.size();\r\n  at least print old attributes; maybe also new\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","NullIdeEditorAdapter":" showSourceLine showSourceLine showSourceLine getCurrFile saveContents pasteToCaretPos showSourcelineAnnotation  org.aspectj.ajde.NullIdeEditorAdapter  /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","AdviceInAClass":" doSomething  AdviceInAClass  ","LstBuildConfigManager":" accept accept buildModel addProblemEntries writeModel writePaths addFilesToConfig removeFilesFromConfig relativizeFilePaths buildDirTree addFilesToDirTree pruneEmptyDirs getActiveConfigFile setActiveConfigFile addListener removeListener notifyConfigChanged sortModel compare listeners fileUpdater currConfigFilePath SOURCE_FILE_FILTER DIR_FILTER ALPHABETICAL_COMPARATOR org.aspectj.ajde.internal.LstBuildConfigManager  private List configFiles = new ArrayList();\r\n  if (pe.getFile() != null) filePath = pe.getFile().getAbsolutePath();\r\n  && !files[j].getName().endsWith(\".lst\")) {\r\n  kind = BuildConfigNode.Kind.FILE_LST;\r\n  foundMatch = true;\r\n  dir.getChildren().clear();\r\n  boolean foundMatch = false;\r\n  if (!foundMatch)\r\n  && !files[i].getName().endsWith(\".lst\")) {\r\n  String name = new File(path).getName();\r\n  getDefaultConfigFile();\r\n  getDefaultConfigFile();\r\n  \r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AroundClosure":" getFlags getState getPreInitializationState run linkClosureAndJoinPoint linkClosureAndJoinPoint state bitflags preInitializationState org.aspectj.runtime.internal.AroundClosure  bit6 being 1 means the flags haven't been initialized\r\n  TODO is this cast safe ?\r\n  TODO is this cast safe ?\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *    Alex Vasseur    wired up for @AJ proceeding\r\n *    Andy Clement 23-06-06 added extras for @AJ\r\n * ******************************************************************/\r\n","AnalogClock":" update draw  clock.AnalogClock  ","X1":"     ","X2":"     ","X3":"     ","X4":"     ","X5":"     ","X6":"     ","X7":"     ","AjdocModuleTests":" suite suite  org.aspectj.tools.ajdoc.AjdocModuleTests AjdocModuleTests  ","X8":"     ","X9":"     ","CircularPrecedence":"     ","UnresolvedTypeVariableReferenceType":" setTypeVariable resolve isTypeVariableReference getTypeVariable toString toDebugString write getErasureSignature typeVariable org.aspectj.weaver.UnresolvedTypeVariableReferenceType  constructor used as place-holder when dealing with circular refs such as Enum\r\n  aTypeVariable.getUpperBound().getSignature();\r\n  only used when resolving circular refs...\r\n  FIXME asc remove this when the shared type var stuff is sorted\r\n  FIXME asc correct thing to do is go bang, but to limp along, lets cope with the scope missing\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","PlainWithinTests":"     ","AroundLock":"     ","ZipTestCase":" setUp tearDown zipTest zipTest testSmall testSmallWithAspects testSmallWithAspectsNoWeave testBig testBigWithEasyNoTrace xtestBigWithHardNoTrace xtestBigWithAspects outDir org.aspectj.weaver.bcel.ZipTestCase  BcelWeaver weaver1 = new BcelWeaver(world);\r\n  ensure that a fast cpu doesn't complete file write within 1000ms of start\r\n  ???\r\n  1000 milliseconds after the start of the test, hence the 1000ms delay added above.\r\n  this is something we test every now and again.\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ShadowMunger":" concretize specializeOn implementOn match parameterizeWith fallbackCompareTo getEnd getStart getSourceLocation getHandle getPointcut setPointcut setDeclaringType getDeclaringType getThrownExceptions mustCheckExceptions getResolvedDeclaringAspect createHierarchy addChildNodes addChildNodes getBinarySourceLocation getBinaryFile isBinary pointcut start end sourceContext sourceLocation binarySourceLocation binaryFile handle declaringType NONE isBinary checkedIsBinary org.aspectj.weaver.ShadowMunger  these three fields hold the source location of this munger\r\n  the type that declared this munger.\r\n  pointcut may be updated during rewriting...\r\n  continue to fault in the model.\r\n  create the class file node\r\n  create package ipe if one exists....\r\n  it's parent node\r\n  added the structure for this aspect\r\n  check that there doesn't already exist a node with this name\r\n  it's parent node\r\n  added the structure for this aspect\r\n  note packages themselves have no source location\r\n  add and create empty import declaration ipe\r\n  add and create aspect ipe\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","SynchronizationTests":" testTheBasics_1 testTheBasics_2 testTheBasics_3 testTheBasics_4 testTheBasics_5 testParsing_1 testParsing_2 testParsing_errors_1 testParsing_errors_2 testParsingAndMatching_1 testParsingAndMatching_2 testParsingAndMatching_3 testParsingAndMatching_4 testParsingAndMatching_5 testParsingAndMatching_6 testUsingWithLTW_MissingFlag_1 testUsingWithLTW_MissingFlag_2 testUsingWithLTW_1 testUsingWithLTW_2 testCombiningPCDs_1 testCombiningPCDs_2 testUseful_1 testUseful_2 testThisJoinPoint_1 testThisJoinPoint_2 testDoubleMessagesOnUnlock testBeforeAdvice_1 testBeforeAdvice_2 testAfterAdvice_1 testAfterAdvice_2 testAroundAdvice_1 testAroundAdvice_2 testLockingTJP checkModel1 suite getSpecFile  org.aspectj.systemtest.ajc152.SynchronizationTests  testing the new join points for monitorenter  this null in static context\r\n  target null in static context?\r\n  testing parsing of the new PCDs lock  testing parsing and matching with the new PCDs\r\n  using the new PCDs in a LTW environment\r\n  multiple PCDs\r\n  just uses within  uses lock  all the methods of thisJoinPoint\r\n  AsmManager.setReporting(\"c:  different advice kinds\r\n  Verifies only one unlock relationship, not two\r\n  that seems to be the case anyway (peculiar...)\r\n  ---\r\n ","DeclareAtTypeDeclaration":" clone0 subtreeMatch0 accept0 internalModifiersProperty internalModifiers2Property internalJavadocProperty propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty internalPatternNodeProperty internalAnnotationNameProperty JAVADOC_PROPERTY PATTERN_PROPERTY ANNOTATION_NAME_PROPERTY PROPERTY_DESCRIPTORS org.aspectj.org.eclipse.jdt.core.dom.DeclareAtTypeDeclaration  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  allow default implementation to flag the error\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - therefore\r\n\t * we don't do anything with this\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - therefore\r\n\t * we don't do anything with this\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on BodyDeclaration.\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on ASTNode.\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on DeclareAnnotationDeclaration.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on DeclareAnnotationDeclaration.\r\n\t */\r\n","WithinPointcut":" getTypePattern isWithinType couldMatchKinds parameterizeWith fastMatch matchInternal write read resolveBindings postRead couldEverMatchSameJoinPointsAs equals hashCode toString findResidueInternal concretize1 accept typePattern org.aspectj.weaver.patterns.WithinPointcut  look for parameterized type patterns which are not supported...\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ParenPrimitive":" main typenameFor  ParenPrimitive  ","Five":"     ","InterfaceMembers":"     ","ConcreteCflowPointcut":" couldMatchKinds fastMatch matchInternal getUsedFormalSlots write resolveBindings parameterizeWith equals hashCode toString findResidueInternal concretize1 accept equals toString cflowField slots usesCounter cflowStackIsValidMethod cflowCounterIsValidMethod formalIndex formalType arrayIndex org.aspectj.weaver.patterns.ConcreteCflowPointcut  exposed for testing\r\n  Can either use a counter or a stack to implement cflow.\r\n  to create the residue\r\n  used by weaver when validating bindings\r\n  System.out.println(\"slot: \" + slot.formalIndex);\r\n  null for cflows managed by counters\r\n  System.out.println(\"find residue: \" + this);\r\n /*Slot*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","InstructionTargeter":" containsTarget updateTarget  org.aspectj.apache.bcel.generic.InstructionTargeter  ","XLintTypeDeclareParent":"     ","IINC":" dump setWide initFromFile toString setIndex getIncrement setIncrement getType accept wide c org.aspectj.apache.bcel.generic.IINC  Default behaviour of LocalVariableInstruction causes error\r\n  May set wide as side effect\r\n  Need WIDE prefix ?\r\n  wide byte included\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","PointcutVisibilityTest":" testCoveragePublicMode testCoverageProtectedMode testCoveragePrivateMode  org.aspectj.tools.ajdoc.PointcutVisibilityTest  Check that this is the case......\r\n  check the contents of the pointcut summary\r\n  Check that this is the case......\r\n  check the contents of the pointcut summary\r\n  Check that this is the case......\r\n  check the contents of the pointcut summary\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","Within":"     ","HarnessJUnitUtil":" suite isEmpty render reportResult reportResultToJUnit safeTestName cleanTestName readBooleanSystemProperty getSuiteSpec add addAll addAll add remove fail getChildren getAjcTestSpec ONE_ERROR_PER_TEST FLATTEN_RESULTS PRINT_OTHER_MESSAGES ME children org.aspectj.testing.drivers.HarnessJUnitUtil  import org.aspectj.bridge.MessageHandler;\r\n  XXX not doing incomplete\r\n  have to throw failure\r\n  XXX incomplete...\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation\r\n * ******************************************************************/\r\n","TestA_generictype":"   TestA_generictype  ","FALOAD":" accept  org.aspectj.apache.bcel.generic.FALOAD  ","ProceedingJoinPoint":" set$AroundClosure proceed proceed  org.aspectj.lang.ProceedingJoinPoint  ","AOPAllianceAdapterTest":" testHello  org.aspectj.aopalliance.tests.AOPAllianceAdapterTest  ","PUTSTATIC":" consumeStack getExceptions accept  org.aspectj.apache.bcel.generic.PUTSTATIC  ","AjCompiler":"     ","BooleanExpression":" evaluate replace copy evaluate replace copy  ca.ubc.cs.spl.aspectPatterns.examples.interpreter.aspectj.BooleanExpression ca.ubc.cs.spl.aspectPatterns.examples.interpreter.java.BooleanExpression  ","AjcMessageHandler":" init handleMessage setRecompiled getCompilerDiffs passed expectingCommandTrue report toString expecting getMessagesWithoutExpectedFails expectedMessagesHasMatchFor getList render accept COMP_IMessage COMP_File expectedMessagesAsList expectedMessages numExpectedFailed expectingCommandTrue expectedRecompiled ignoreWarnings actualRecompiled diffs SKIP_UNEXPECTED_INFO messages recompiled different org.aspectj.testing.harness.bridge.AjcMessageHandler  import org.aspectj.bridge.IMessage.Kind;\r\n  but we do test for expected ones\r\n  XXX extract old API's after shake-out period\r\n  fyi, when expecting any info messages, have to expect all\r\n  do all messages\r\n  XXX cache toString\r\n  text matches on same line. Return true if any matches.\r\n  remove all expected fail+ (COSTLY)\r\n  ok, don't add\r\n  see if this failure was expected\r\n  LangUtil instead?\r\n  LangUtil instead?\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","BuildArgParser":" getUsage getXOptionUsage genBuildConfig populateBuildConfig printVersion printUsage getOtherMessages setDebugOptions collectSourceRootFiles getBootclasspath getClasspath addExtDirs addClasspath getUnparsedArgs parseOption dirLookahead showError showWarning makeFile BUNDLE_NAME LOADED_BUNDLE stringWriter errorSink handler bootclasspath classpath extdirs unparsedArgs buildConfig handler org.aspectj.ajdt.ajc.BuildArgParser  sets filenames to be non-null in order to make sure that file paramters are ignored\r\n  Without dontIgnore() on the IMessageHandler interface, we have to do this *blurgh*\r\n  Now jump through firey hoops to turn them on  ??? might want to instead override getDefaultOptions()\r\n  TODO fix org.eclipse.jdt.internal.compiler.batch.Main so this hack isn't needed\r\n  XXX ?? unparsed but set?\r\n  $NON-NLS-1$\r\n  from super...\r\n  $NON-NLS-1$\r\n  ??? we're brave and believe we don't need it\r\n  classpathCollector.add(tokenizer.nextToken());\r\n  XXX assumes unique\r\n  now default - MINOR could be pushed down and made default at a lower level\r\n  (Actually, -noExit grabbed by Main)\r\n  CompilerOptions.GENERATE);\r\n  XXX relax restriction on props file suffix?\r\n  do nothing as this is now on by default\r\n  remove it as it's already been handled in org.aspectj.tools.ajc.Main\r\n  remove it as it's already been handled in org.aspectj.tools.ajc.Main\r\n  buildConfig.getAjOptions().put(AjCompilerOptions.OPTION_OutJAR, CompilerOptions.GENERATE);\r\n /*\r\n\t\t\t * Ensure we don't overwrite injars, inpath or aspectpath with outjar\r\n\t\t\t * bug-71339 \r\n\t\t\t */\r\n /* Search injars */\r\n /* Search inpath */\r\n /* Search aspectpath */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","LazyTjpTest2":"     ","LazyTjpTest3":"     ","CompilerRunSpecTest":" duplicate haveProperty testSetupArgs testCompliance checkMessages testTarget testSource testSourceOverride testTargetOverride testCompilerOptions checkCompilerOption testSpecOptions checkSourceTargetOverride checkSourceTargetVersionConversion runTest checkSetupArgs PRINTING SETUP_JAVA13 SETUP_JAVA14 org.aspectj.testing.harness.bridge.CompilerRunSpecTest  1.3 should work\r\n  1.3 should work with collision?\r\n  1.4 should work\r\n  XXX snoop\r\n  help,\r\n  normal\r\n  force-on\r\n  force-off\r\n  global - (set) does not change local-set\r\n  global ^ (force-off) to disable\r\n  global ! (force-on) does not change local-set\r\n  global (unset) does not change local-set\r\n  global ^ (force-off) conflicts with local force-on\r\n  global ! (force-on) does not change local force-on\r\n  global - (set) does not change local force-on\r\n  global (unset) does not change local force-on\r\n  global ^ (force-off) does not change local force-off\r\n  global ! (force-on) conflicts with local force-off\r\n  global - (set) overridden by local force-off\r\n  global (unset) does not change local force-off\r\n /*MessageHandler handler =*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC),\r\n *               2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Wes Isberg     2003 modifications\r\n * ******************************************************************/\r\n","LazyTjpTest1":"     ","XLintcflow":"     ","MultipleBindingTest":" log main suite testMultipleJoinPoint testMultipleProceedingJoinPoint dump dump2 before around s_log ataspectj.MultipleBindingTest  ","StatisticsTypeImpl":" main  StatisticsType StatisticsTypeImpl UofwStatisticsType  ","LazyTjpTest4":"     ","AccessFlags":" getAccessFlags getModifiers setAccessFlags setModifiers setFlag isPublic isPublic isPrivate isPrivate isProtected isProtected isStatic isStatic isFinal isFinal isSynchronized isSynchronized isVolatile isVolatile isTransient isTransient isNative isNative isInterface isInterface isAbstract isAbstract isStrictfp isStrictfp isVarargs isVarargs isBridge isBridge access_flags org.aspectj.apache.bcel.classfile.AccessFlags  Set flag ?\r\n  Flag not set\r\n  Delete flag ?\r\n  Flag is set already\r\n ","Fail":"     ","LazyTjpTest5":"     ","Client1":" main m m  client.Client1 client.C1 client.FooMarkMe  ","Log":" traceObject log logClassName getString clear traceObject log logClassName getString clear traceObject log logClassName getString clear traceObject log logClassName getString clear write getData clear data data data data data support.Log Log figures.support.Log figures.support.Log support.Log  /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","Definition":" getWeaverOptions getDumpPatterns setDumpBefore shouldDumpBefore getIncludePatterns getExcludePatterns getAspectClassNames getAspectExcludePatterns getAspectIncludePatterns getConcreteAspects appendWeaverOptions m_weaverOptions m_dumpPatterns m_dumpBefore m_includePatterns m_excludePatterns m_aspectClassNames m_aspectExcludePatterns m_aspectIncludePatterns m_concreteAspects name extend precedence pointcuts name expression org.aspectj.weaver.loadtime.definition.Definition  make sure extend set to null if \"\"\r\n ","Local":"   telecom.Local  /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","Seven":"     ","ClassUseMapper":" generate mapper restore finish mapExecutable refList add classToAdviceReturn classToAdviceArgs classToPointcutReturn classToPointcutArgs classToFieldIntroductions classToClassIntroductions classToInterfaceIntroductions classToAdvisors classToDominatees classToDominators mapper saved classToPackageSave org.aspectj.tools.doclets.standard.ClassUseMapper  TODO: This probably sucks!!!\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","BcelVar":" toString getSlot createLoad createStore appendStore appendLoad appendLoadAndConvert insertLoad createCopyFrom appendConvertableArrayLoad appendConvertableArrayStore createConvertableArrayStore createConvertableArrayLoad getPositionInAroundState setPositionInAroundState positionInAroundState slot NONE org.aspectj.weaver.bcel.BcelVar  fact is used in the subtypes\r\n  this is an array var\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ClassElementValueGen":" getElementValue getIndex getClassString stringifyValue dump idx org.aspectj.apache.bcel.generic.annotation.ClassElementValueGen  For 'class' this points to the class entry in the cpool\r\n  this.idx = cpool.addClass(t);\r\n  idx = cpool.addClass(value.getClassString());\r\n  u1 kind of value\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","BooleanConstant":" evaluate evaluate replace copy value value ca.ubc.cs.spl.aspectPatterns.examples.interpreter.aspectj.BooleanConstant ca.ubc.cs.spl.aspectPatterns.examples.interpreter.java.BooleanConstant  ","ReflectBilling":" main  ReflectBilling  ","DeclareError":"     /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ajcDeclareParents":"     /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","LocalVariableInfoInconsistentException":"   org.aspectj.apache.bcel.verifier.exc.LocalVariableInfoInconsistentException  ","AspectItd":"     ","FinalFields":" main SUCCESS FinalFields  ","AllTests":" suite suite suite suite skipSupportModules org.aspectj.apache.bcel.classfile.tests.AllTests org.aspectj.aopalliance.tests.AllTests AllTests org.aspectj.systemtest.AllTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n  default package\r\n  suite.addTest(LibModuleTests.suite());\r\n  $JUnit-BEGIN$\r\n  suite.addTest(KnownLimitationsTests.class);\r\n  suite.addTest(PureJavaTests.class);\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n /*\r\n * Created on 03-Aug-2004\r\n *\r\n * TODO To change the template for this generated file go to\r\n * Window - Preferences - Java - Code Style - Code Templates\r\n */\r\n","AttributeTestClassEM01":" main main  AttributeTestClassEM01 AttributeTestClassEM01  ","Consts3":"  A_CONST a.Consts3  should be ok, TestNPE3 is a subclass of Consts\r\n ","Consts2":"  A_CONST a.Consts2  Should get error in TestNPE - it can't see this to import it.\r\n ","InvalidMethodException":"   org.aspectj.apache.bcel.verifier.exc.InvalidMethodException  ","AttributeTestClassEM02":" run main run main r r AttributeTestClassEM02 AttributeTestClassEM02  ","CflowCycles":"     ","JoinPoint":" toString toShortString toLongString getThis getTarget getArgs getSignature getSourceLocation getKind getSignature getSourceLocation getKind toString toShortString toLongString getStaticPart METHOD_EXECUTION METHOD_CALL CONSTRUCTOR_EXECUTION CONSTRUCTOR_CALL FIELD_GET FIELD_SET STATICINITIALIZATION PREINITIALIZATION INITIALIZATION EXCEPTION_HANDLER SYNCHRONIZATION_LOCK SYNCHRONIZATION_UNLOCK ADVICE_EXECUTION org.aspectj.lang.JoinPoint  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ParentsAndPointcuts":"     ","AroundInnerCalls13":"     ","TriTestMethodLookup":" foo foo main byteAsInt shortAsInt byteType shortType notTrue TriTestMethodLookup  ","Finalizer":"     ","UndefinedInner":"     ","RegexpFilter":" log invoke invoke invoke invoke invoke invoke toString handleErr handleErr handleErr handle handle handle main init init setFile getFile getOperationList process replace addFile addOperation operations makeReplaceOperation isValidSearch isValidReplace matches replace LOG DEFAULT INFO WARN HALT ABORT EXIT name NO_STRINGS ignoreCase collapseWhitespace trimWhitespace replace operations handler file list repeat search replace regexp replaceBuffer handler org.aspectj.testing.compare.D org.aspectj.testing.compare.ErrHandler org.aspectj.testing.compare.RegexpFilter org.aspectj.testing.compare.ReplaceOperation  todo: non-distribution license?\r\n  unflagged argument, need file - should be input file\r\n  have args\r\n  grab tokens, accumulating if \\ escapes ; delimiter\r\n  todo: use Point p = isValidOperation(operation);\r\n  todo: too weak to be useful now\r\n  todo: too weak to be useful now\r\n  ------------------------------------------------- constructors\r\n  group 0 is whole; if not same as input, print prefix  true if \\ escaping special char, esp. replace \\[0-9]\r\n  only 0-9 supported\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","BridgeUtil":" makeSourceLocation readSourceLocation makeMessage readMessage writeMessage compareNull compareStringsSoftly compare compare compare compare compare makeSourceLocation makeSourceLocation makeSourceLocation convert convert childString toShortString NULL_MESSAGE_OUTPUT NULL_MESSAGE_INPUT KIND_DELIM MESSAGE_DELIM WEAK_File WEAK_ISourceLocation MEDIUM_ISourceLocation WEAK_IMessage MEDIUM_IMessage org.aspectj.testing.util.BridgeUtil  XXX implement\r\n  check if normalize needed\r\n  one but not other is null\r\n  both null\r\n  neither null\r\n  XXX only for testing, not production\r\n  SourceLocation result = null;\r\n  first try line only\r\n  throw new IllegalArgumentException(\"too short: \" + input);\r\n  if not a line - must be > 2 characters\r\n  windows drive ambiguates \":\" file:line:col separator\r\n  2 to get past windows drives...\r\n  1+ colon => file:line   2+ colon => col\r\n  do not trim message\r\n  no colon; only path (number handled above)\r\n  XXX removed message  from numeric -> non-numeric\r\n  prefix loop\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CollectorFileFilter":" accept add getFiles EMPTY files filter alwaysTrue org.aspectj.testing.util.CollectorFileFilter  /*\r\n     * @param filter the FileFilter delegate - may be null\r\n    * @param alwaysTrue return false from accept only when !alwaysTrue \r\n     * and filter is null or fails \r\n    */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2000 Xerox Corporation. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Ajc10xTests":" suite getSpecFile test001 test002 test003 test004 test005 test006 test007 test008 test009 test010 test011 test012 test013 test014 test015 test016 test017 test018 test019 test020 test021 test022 test023 test024 test025 test026 test027 test028 test029 test030 test031 test032 test033 test034 test035 test036 test037 test038 test039 test040 test041 test042 test043 test044 test045 test046 test047 test048 test049 test050 test051 test052 test053 test054 test055 test056 test057 test058 test059 test060 test061 test062 test063 test064 test065 test066 test067 test068 test069 test070 test071 test072 test073 test074 test075 test076 test077 test078 test079 test080 test081 test082 test083 test084 test085 test086 test087 test088 test089 test090 test091 test092 test093 test094 test095 test096 test097 test098 test099 test100 test101 test102 test103 test104 test105 test106 test107 test108 test109 test110 test111 test112 test113 test114 test115 test116 test117 test118 test119 test120 test121 test122 test123 test124 test125 test126 test127 test128 test129 test130 test131 test132 test133 test134 test135 test136 test137 test138 test139 test140 test141 test142 test143 test144 test145 test146 test147 test148 test149 test151 test152 test153 test154 test155 test156 test157 test158 test159 test160 test161 test162 test163 test164 test165 test166 test167 test168 test169 test170 test171 test172 test173 test174 test175 test176 test177 test178 test179 test180 test181 test182 test183 test184 test185 test186 test187 test188 test189 test190 test191 test192 test193 test194 test195 test196 test197 test198 test199 test200 test201 test202 test203 test204 test205 test206 test207 test208 test209 test210 test211 test212 test213 test214 test215 test216 test217 test218 test219 test220 test221 test222 test223 test224 test225 test226 test227 test228 test229 test230 test231 test232 test233 test234 test235 test236 test237 test238 test239 test240 test241 test242 test243 test244 test245 test246 test247 test248 test249 test250 test251 test252 test253 test254 test255 test256 test257 test258 test259 test260 test261 test262 test263 test264 test265 test266 test267 test268 test269 test270 test271 test272 test273 test274 test275 test276 test277 test278 test279 test280 test281 test282 test283 test284  org.aspectj.systemtest.ajc10x.Ajc10xTests  FIXME AV - infinite loop on JRockit in m5 advice - don't know why\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","DeclareClassExtendsInterface":"     ","MonitorBusObj":"     ","DSUB":" accept  org.aspectj.apache.bcel.generic.DSUB  ","Persist":"     ","LocalsFromInnerCE":" f sf f sf run m m f f run run  LocalsFromInnerCE  CE 6 nonfinal variable\r\n  CE 13 nonfinal variable\r\n  CE 19 nonfinal variable\r\n  CE 25 nonfinal variable\r\n  CE 32 nonfinal variable\r\n  CE 40 nonfinal variable\r\n  CE 51 nonfinal variable\r\n  CE 61 nonfinal variable\r\n  CE 67 nonfinal variable\r\n  CE 75 nonfinal variable\r\n  CE 81 nonfinal variable\r\n ","PrivilegedAccessMunger":" write getMember getMatchingSyntheticMember equals hashCode existsToSupportShadowMunging  org.aspectj.weaver.PrivilegedAccessMunger  System.err.println(\"sig: \" + getSignature());\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AsmRelationshipMapExtensionTest":" testDeclares setUp addDeclareParentsRelationship  org.aspectj.samples.AsmRelationshipMapExtensionTest org.aspectj.samples.DeclareInfoProvider  ","GeneratedClassHandler":" acceptClass  org.aspectj.weaver.tools.GeneratedClassHandler  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Matthew Webster, Adrian Colyer, \r\n *     Martin Lippert     initial implementation \r\n * ******************************************************************/\r\n","PointcutsTests":" suite  org.aspectj.lib.pointcuts.PointcutsTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg       initial implementation \r\n * ******************************************************************/\r\n","AnAspect":"     ","ImportFromUnnamed":" main test  ImportFromUnnamed  ","StaticContexts":" m s foo  StaticContexts C  ERR: inner class can't have static member\r\n ","LTWeaver":"   org.aspectj.weaver.ltw.LTWeaver  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","AjBuildManager":" accept getWeaver getBcelWorld environmentSupportsIncrementalCompilation doGenerateModel batchBuild incrementalBuild doBuild stringifyList openOutputStream closeOutputStream copyResourcesToDestination copyResourcesFromJarFile copyResourcesFromDirectory copyResourcesFromFile writeResource writeManifest acceptResource writeOutxmlFile setupModel initBcelWorld getWorld addAspectClassFilesToWeaver getLibraryAccess getProblemFactory getCompilationUnits extractDestinationPathFromSourceFile performCompilation getInterimResultRequestor getBatchRequestor proceedOnError setBuildConfig makeClasspathString checkRtJar toString setStructureModel getStructureModel getProgressListener setProgressListener getOutputClassFileName getAdapter populateCompilerOptionsFromLintSettings getBinarySourcesForThisWeave getAsmHierarchyBuilder setAsmHierarchyBuilder getState setState formatEntry wasFullBuild CROSSREFS_FILE_NAME CANT_WRITE_RESULT MANIFEST_NAME COPY_INPATH_DIR_RESOURCES FAIL_IF_RUNTIME_NOT_FOUND binarySourceFilter asmHierarchyBuilder progressListener environmentSupportsIncrementalCompilation compiledCount sourceFileCount zos batchCompile environment binarySourcesForTheNextCompile structureModel buildConfig ignoreOutxml wasFullBuild state handler org.aspectj.ajdt.internal.core.builder.AjBuildManager  FIXME asc should this really be in here?\r\n  true if last build was a full build rather than an incremental build\r\n  retry as batch?\r\n  XXX duplicate, no? remove?\r\n  if (batch) {\r\n  if (buildConfig.isEmacsSymMode() || buildConfig.isGenerateModelMode()) {\r\n  }\r\n  System.err.println(\"XXXX start inc \");\r\n  rebuild.  But what case causes this?\r\n  System.err.println(\"XXXX batch: \" + buildConfig.getFiles());\r\n  we don't want these hanging around...\r\n  XXX not in Mik's incremental\r\n  for bug 113554: support ajsym file generation for command line builds\r\n  have to tell state we succeeded or next is not incremental\r\n  XXX weaved not in Mik's incremental\r\n  resources that we need to copy are contained in the injars and inpath only\r\n  Get a list of all files (i.e. everything that isnt a directory)\r\n  or we are in trouble...\r\n  For each file, add it either as a real .class file or as a resource\r\n  ??? get compression scheme right\r\n  AsmManager.getDefault().getRelationshipMap().clear();\r\n  pr145693\r\n  cp.addAll(buildConfig.getClasspath());\r\n  ??? incremental issues\r\n  class file changes in indirs.\r\n  the weaver method can actually handle dirs, but we don't call it, see next block\r\n  check for org.aspectj.runtime.JoinPoint\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  a classpathDirectory object that will attempt to look for source when it can't find binary.\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  System.err.println(\"got files: \" + files);\r\n  System.err.println(\"filename: \" + this.filenames);\r\n  System.out.println(\"compiling\");\r\n  TODO turn off when not needed\r\n  cleanup\r\n  free up references to AjClassFile instances\r\n  this is either a jar file or a file in a directory\r\n  ??? get compression scheme right\r\n  System.err.println(\"? writeAspectName() type=\" + type);\r\n  MessageUtil.info(holder, \"running development version of aspectj compiler\");\r\n  omitting dev info\r\n  p.getAbsolutePath());\r\n  assume that users of development aspectjrt.jar know what they're doing\r\n  this is the \"OK\" return value!\r\n  pr112830, allow variations on aspectjrt.jar of the form aspectjrtXXXXXX.jar\r\n  last error found in potentially matching jars...\r\n  complete compiler config and return a suitable adapter...\r\n  IOutputFilenameProvider\r\n  IBinarySourceProvider\r\n  IOutputFilenameProvider\r\n  IBinarySourceProvider\r\n /* String -> List<UCF>*/\r\n /* Ensure we don't write an incomplete JAR bug-71339 */\r\n /*\r\n\t * If we are writing to an output directory copy the manifest but only\r\n\t * if we already have one\r\n\t */\r\n /*\r\n\t *  Build the set of compilation source units\r\n\t */\r\n /*\r\n\t * Answer the component to which will be handed back compilation results from the compiler\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.ajdt.internal.compiler.AjCompiler.IOutputClassFileNameProvider#getOutputClassFileName(char[])\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.ICompilerAdapterFactory#getAdapter(org.eclipse.jdt.internal.compiler.Compiler)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.ajdt.internal.compiler.IBinarySourceProvider#getBinarySourcesForThisWeave()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","PrivilegedAspect":"     ","PrecedenceTest":" log main suite hello testRuntimeVisible testPrecedence before before before s_log ataspectj.PrecedenceTest  ","LocalsFromInnerCP":" main f sf f sf run m m f f run run registerAll register signal globali LocalsFromInnerCP  static init\r\n  >> pureJava ","BuildConfigManager":" getActiveConfigFile setActiveConfigFile addListener removeListener buildModel writeModel writePaths addFilesToConfig removeFilesFromConfig CONFIG_FILE_SUFFIX DEFAULT_CONFIG_LABEL org.aspectj.ajde.BuildConfigManager  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ImportingStaticInnerInterfacesStars3_PR386":" main  ImportingStaticInnerInterfacesStars3_PR386 I1  ","DummyAspect":"     ","PrivilegedParsing":"     ","AnnotationPatternMatchingTestCase":" loadType initAnnotationTypePatterns testAnnotationPatternMatchingOnTypes handleMessage isIgnoring dontIgnore testReferenceToNonAnnotationType testReferenceViaFormalToNonAnnotationType makeSimpleScope testUnresolvedAnnotationTypes testAnnotationPatternMatchingOnMethods testAnnotationPatternMatchingOnFields testAnnotationTypeResolutionOnTypes testAnnotationTypeResolutionOnMethods testAnnotationTypeResolutionOnFields testWildPatternMatchingOnTypes world fooTP simpleAnnotationTP messages org.aspectj.weaver.patterns.AnnotationPatternMatchingTestCase  One should match\r\n  inits the world\r\n  inits the world\r\n  One should match\r\n  One should match\r\n  Let's create something wild\r\n /*\r\n * Sample types that this program uses are:\r\n \r\nimport p.SimpleAnnotation;\r\n\r\n@SimpleAnnotation(id=2)\r\npublic class AnnotatedClass {\r\n\r\n  @SimpleAnnotation(id=3)\r\n  public void m1() { }\r\n\r\n  @SimpleAnnotation(id=4)\r\n  int i;\r\n}\r\n\r\n * with SimpleAnnotation defined as:\r\n\r\npackage p;\r\nimport java.lang.annotation.*;\r\n\r\n@Retention(RetentionPolicy.RUNTIME)\r\npublic @interface SimpleAnnotation {\r\n  int id();\r\n  String fruit() default \"bananas\";\r\n}\r\n\r\n*NOTE NOTE NOTE NOTE NOTE NOTE NOTE*\r\nIf you need to rebuild the test data code, run 'ant -f build-15.xml' in the \r\ntestdata directory.\r\n\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","AmbiguousClassReference2CE":" main  AmbiguousClassReference2CE  ERR: importing same name different types\r\n  bug: expect ~ambiguous~ not \"no method getLength...\"\r\n ","ArgsInCflow":"     ","FunkyAnnotations":" main m  FunkyAnnotations  ","pr111915":"     ","UtilityTestCase":" disassembleTest testHelloWorld testFancyHelloWorld main  org.aspectj.weaver.bcel.UtilityTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","FramedFactory":" createLabel createButton getName createLabel createButton getName  ca.ubc.cs.spl.aspectPatterns.examples.abstractFactory.aspectj.FramedFactory ca.ubc.cs.spl.aspectPatterns.examples.abstractFactory.java.FramedFactory  ","Params":" getString getInt getBoolean  com.nwalsh.xalan.Params  Params.java - Read stylesheet parameters in Xalan\r\n ","TransactionTest":"     ","AbstractMethodCall":" abstractMethod abstractMethodCall abstractMethod main  AbstractClass AbstractMethodCall  expecting compiler error: cannot access directly\r\n ","IREM":" getExceptions accept  org.aspectj.apache.bcel.generic.IREM  ","BindingInterfaces":"     ","Declaration1":"     ","ReferringToPointcutsInAspect_PR316":"     ","Java14GenericSignatureInformationProvider":" getGenericParameterTypes getGenericReturnType isBridge isVarArgs isSynthetic  org.aspectj.weaver.reflect.Java14GenericSignatureInformationProvider  /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.reflect.GenericSignatureInformationProvider#getGenericParameterTypes(org.aspectj.weaver.reflect.ReflectionBasedResolvedMemberImpl)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.reflect.GenericSignatureInformationProvider#getGenericReturnType(org.aspectj.weaver.reflect.ReflectionBasedResolvedMemberImpl)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.reflect.GenericSignatureInformationProvider#isBridge()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.reflect.GenericSignatureInformationProvider#isVarArgs()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.reflect.GenericSignatureInformationProvider#isSynthetic()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ConstantObject":" getConstantValue  org.aspectj.apache.bcel.classfile.ConstantObject  ","ReflectionBasedReferenceTypeDelegate":" initialize getBaseClass getWorld buildGenericType addAnnotation isAspect isAnnotationStyleAspect isInterface isEnum isAnnotation isAnnotationWithRuntimeRetention getRetentionPolicy canAnnotationTargetType getAnnotationTargetKinds isClass isGeneric isAnonymous isNested isExposedToWeaver hasAnnotation getAnnotations getAnnotationTypes getDeclaredFields getDeclaredInterfaces getDeclaredMethods getDeclaredPointcuts getTypeVariables getPerClause getDeclares getTypeMungers getPrivilegedAccesses getModifiers getSuperclass getWeaverState getResolvedTypeX doesNotExposeShadowMungers getDeclaredGenericSignature ensureDelegateConsistent createResolvedMemberFor getSourcefilename getSourceContext BootClassLoader myClass classLoader world resolvedType fields methods interfaces org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegate  we could do better than this in Java 5 by looking at the annotations on the type...\r\n  we could do better than this in Java 5 by looking at the annotations on the type...\r\n  cant be an enum in Java 1.4 or prior\r\n  cant be an annotation in Java 1.4 or prior\r\n  cant be an annotation in Java 1.4 or prior\r\n  cant be an annotation in Java 1.4 or prior\r\n  cant be generic in 1.4\r\n  FIXME this is *wrong* but isMemberClass() doesnt exist in pre-1.5... (same deal as isAnonymous above...)\r\n  reflection based types are never exposed to the weaver\r\n  in Java 1.4 we cant have an annotation\r\n  no annotations in Java 1.4\r\n  no annotations in Java 1.4\r\n  no type variables in Java 1.4\r\n  no per clause...\r\n  no declares\r\n  no type mungers\r\n  no aspect members..., not used for weaving\r\n  no generic sig in 1.4\r\n  crappy guess..\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#addAnnotation(org.aspectj.weaver.AnnotationX)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#isAspect()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#isAnnotationStyleAspect()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#isInterface()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#isEnum()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#isAnnotation()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#isAnnotationWithRuntimeRetention()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#isClass()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#isGeneric()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#isExposedToWeaver()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#hasAnnotation(org.aspectj.weaver.UnresolvedType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getAnnotations()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getAnnotationTypes()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getDeclaredFields()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getDeclaredInterfaces()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getDeclaredMethods()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getDeclaredPointcuts()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getTypeVariables()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getPerClause()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getDeclares()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getTypeMungers()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getPrivilegedAccesses()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getModifiers()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getSuperclass()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getWeaverState()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getResolvedTypeX()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#doesNotExposeShadowMungers()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ReferenceTypeDelegate#getDeclaredGenericSignature()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","Declaration2":"     ","IADD":" accept  org.aspectj.apache.bcel.generic.IADD  ","EmptyTest1":" main  EmptyTest1  ","EmptyTest2":" main  EmptyTest2  ","AdviceFormalsCf":"     ","TypeAnnotationAccessVar":" toString createLoad createStore createCopyFrom appendLoad createLoadInstructions appendLoadAndConvert insertLoad target org.aspectj.weaver.bcel.TypeAnnotationAccessVar  /* *******************************************************************\r\n * Copyright (c) 2005 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement   initial implementation \r\n * ******************************************************************/\r\n","PR113447a":"     ","PR113447b":"     ","Message":" getKind isError isWarning isDebug isTaskTag isInfo isAbort getDeclared isFailed getMessage getThrown getSourceLocation toString getDetails getExtraSourceLocations getID getSourceStart getSourceEnd message kind thrown sourceLocation details extraSourceLocations declared id sourceStart sourceEnd org.aspectj.bridge.Message  Is it a DEOW ?\r\n /*SourceLocation*/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PR113447c":"     ","PR113447d":"     ","SingletonInheritanceTest":" log main suite hello hello2 testInheritance testStaticRef pc2 pc abefore abefore2 s_log ataspectj.SingletonInheritanceTest  ","StructureViewProperties":" setSorting getRelations setRelations addRelation removeRelation setFilteredMemberAccessibility getFilteredMemberAccessibility addFilteredMemberAccessibility removeFilteredMemberAccessibility getFilteredMemberModifiers setFilteredMemberModifiers addFilteredMemberModifiers removeFilteredMemberModifiers getSorting setSorting getFilteredMemberKinds setFilteredMemberKinds addFilteredMemberKind removeFilteredMemberKind getGrouping setGrouping addGrouping removeGrouping getGranularity setGranularity getName toString toString readResolve toString readResolve toString readResolve toString readResolve SORT_DECLARATIONAL relations filteredMemberAccessibility filteredMemberModifiers filteredMemberKinds grouping sorting granularity DECLARATION CROSSCUTTING INHERITANCE ALL name nextOrdinal ordinal KIND VISIBILITY ALL name nextOrdinal ordinal ALPHABETICAL DECLARATIONAL ALL name nextOrdinal ordinal PACKAGE FILE TYPE MEMBER DECLARED_ELEMENTS ALL name nextOrdinal ordinal org.aspectj.ajde.ui.StructureViewProperties  The 4 declarations below are necessary for serialization\r\n  The 4 declarations below are necessary for serialization\r\n  The 4 declarations below are necessary for serialization\r\n  The 4 declarations below are necessary for serialization\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PR113447e":"     ","Basic2":"     ","Basic3":"     ","Basic4":"     ","Basic5":"     ","AjType":" getName getPackage getInterfaces getModifiers getJavaClass getSupertype getGenericSupertype getEnclosingMethod getEnclosingConstructor getEnclosingType getDeclaringType getPerClause getAjTypes getDeclaredAjTypes getConstructor getConstructors getDeclaredConstructor getDeclaredConstructors getDeclaredField getDeclaredFields getField getFields getDeclaredMethod getMethod getDeclaredMethods getMethods getDeclaredPointcut getPointcut getDeclaredPointcuts getPointcuts getDeclaredAdvice getAdvice getAdvice getDeclaredAdvice getDeclaredITDMethod getDeclaredITDMethods getITDMethod getITDMethods getDeclaredITDConstructor getDeclaredITDConstructors getITDConstructor getITDConstructors getDeclaredITDField getDeclaredITDFields getITDField getITDFields getDeclareErrorOrWarnings getDeclareParents getDeclareSofts getDeclareAnnotations getDeclarePrecedence getEnumConstants getTypeParameters isEnum isInstance isInterface isLocalClass isMemberClass isArray isPrimitive isAspect isMemberAspect isPrivileged  org.aspectj.lang.reflect.AjType  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","BindingNullPointer":" run go main run go main ran s1 r1 ran s1 r1 BindingNullPointer BindingNullPointer  ","AddObjectOnAbstract":"     ","Basic1":"     ","DecaType3":"     ","DecaType2":"     ","DecaType1":"     ","OrTypePattern":" getRight getLeft couldEverMatchSameTypesAs matchesInstanceof matchesExactly matchesExactly matchesStatically setIsVarArgs setAnnotationTypePattern write read resolveBindings parameterizeWith toString equals hashCode accept traverse left right org.aspectj.weaver.patterns.OrTypePattern  ??? we override all methods that care about includeSubtypes\r\n  don't dive at the moment...\r\n  ??? if these had side-effects, this sort-circuit could be a mistake\r\n  ??? if these had side-effects, this sort-circuit could be a mistake\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.TypePattern#couldEverMatchSameTypesAs(org.aspectj.weaver.patterns.TypePattern)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#equals(java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#hashCode()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AdviceFormalsCp":"     ","AbstractReferenceTypeDelegate":" isClass doesNotExposeShadowMungers isExposedToWeaver getResolvedTypeX stringifyDelegate getSourcefilename setSourcefilename getSourceLocation getSourceContext setSourceContext UNKNOWN_SOURCE_FILE sourcefilename exposedToWeaver resolvedTypeX sourceContext org.aspectj.weaver.AbstractReferenceTypeDelegate  Just randomly picked, happens to match BCEL javaclass default\r\n  Sourcefilename is stored only here\r\n  Sort the damn things\r\n  });\r\n  public boolean hasAnnotation(UnresolvedType ofType);\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n *     Andy Clement - June 2005 - separated out from ResolvedType\r\n * ******************************************************************/\r\n","Gamma.delete.50":"     ","StaticMembersImports_PR421":" main realMain  StaticMembersImports_PR421  --- Statics\r\n  Statics.NestedStaticClass\r\n  Statics.NestedStaticInterface\r\n  Statics.NestedInterface\r\n  --- p1.P1Statics\r\n  p1.P1Statics.NestedStaticClass\r\n  p1.P1Statics.NestedStaticInterface\r\n  p1.P1Statics.NestedInterface\r\n  --- p1.p2.P1P2Statics\r\n  p1.p2.P1P2Statics.NestedStaticClass\r\n  p1.p2.P1P2Statics.NestedStaticInterface\r\n  p1.p2.P1P2Statics.NestedInterface\r\n ","AjLookupEnvironment":" completeTypeBindings verifyAnyTypeParametersMeetBounds doSupertypesFirst collectAllITDsAndDeclares weaveIntertypes doPendingWeaves addAdviceLikeDeclares addCrosscuttingStructures resolvePointcutDeclarations couldBeAnnotationStyleAspectDeclaration buildInterTypeAndPerClause isAspect weaveInterTypeDeclarations weaveInterTypeDeclarations weaveInterTypeDeclarations processTypeMungersFromExistingWeaverState doDeclareParents stringifyTargets doDeclareAnnotations createAnnotationFromBcelAnnotation isAnnotationTargettingSomethingOtherThanAnnotationOrNormal reportDeclareParentsMessage getShortname addParent warnOnAddedInterface createBinaryTypeFrom anonymousTypeBindingCreated factory pendingTypesToWeave dangerousInterfaces pendingTypesToFinish inBinaryTypeCreationAndWeaving processingTheQueue org.aspectj.ajdt.internal.compiler.lookup.AjLookupEnvironment  private boolean builtInterTypesAndPerClauses = false;\r\n  pendingTypesToWeave = new ArrayList();\r\n  would like to gather up all TypeDeclarations at this point and put them in the factory\r\n  told about them when they turn up.\r\n  this MUST be done in order from super-types to subtypes\r\n  removes types from the list as they are processed...\r\n  now do weaving\r\n  DECAT\r\n  System.err.println(\"Working on \"+new String(units[i].getFileName()));\r\n  Order isn't important\r\n  A side effect of weaveIntertypes() is that the processed type is removed from the collection\r\n  release unnecessary reference to the parsed unit\r\n  ??? duplicates some of super's code\r\n  Type {0} does not meet the specification for type parameter {1} ({2}) in generic type {3}\r\n  Don't need to check if it was used in its RAW form or isnt generic\r\n  If its a PTB we need to pull the SourceTypeBinding out of it.\r\n  Look at the supertype first\r\n  look out our direct supertype\r\n  now check our membertypes (pr119570)\r\n  Look at the supertype first\r\n  System.err.println(\"Recursing to supertype \"+new String(superType.getFileName()));\r\n  Then look at the superinterface list\r\n  System.err.println(\"Recursing to superinterface \"+new String(binding.getFileName()));\r\n  force initialization\r\n  test classes don't extend aspects\r\n  AMC we shouldn't need this when generic sigs are fixed??\r\n  matched this type.\r\n  report a problem if it is.\r\n  annotation patterns then they might match later...remember that...\r\n  now lets loop over and over until we have done all we can\r\n  System.out.println(\"applying: \" + munger + \" to \" + new String(sourceType.sourceName));\r\n  Get the annotation specified in the declare\r\n  much nicer, its a real SourceTypeBinding so we can stay in eclipse land\r\n  ensure resolved\r\n  this is what to add\r\n  pr148536\r\n  could assert this ...\r\n  annotation that isn't allowed on a type being put on a type.\r\n  Might have to retrieve the annotation through BCEL and construct an eclipse one for it.\r\n  on the weaver type temporarily\r\n  Simple checks on the bits\r\n  error will have been already reported\r\n  multiple times if we have cause to loop through here\r\n  this means it specifies something other than annotation or normal type - error will have been already reported, just resolution process above\r\n  remember the current set (rememberAnnotations only does something the first time it is called for a type)\r\n  pr149293 - not bulletproof...\r\n  yuck - is this OK in all cases?\r\n  ann.memberValuePairs = mvps;\r\n  The parent is missing, it will be reported elsewhere.\r\n  more entries to the pendingTypesToFinish list.\r\n  Start processing the list...\r\n  if you need the bytes to pass to validate, here they are:((ClassFileReader)binaryType).getReferenceBytes()\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Oneway":"     ","TriTestTypecheck":" main byteCall shortCall charCall intCall longCall floatCall doubleCall booleanCall aCall eCall gCall foo  A G E TriTestTypecheck  ","Loadtime5ModuleTests":" suite main  org.aspectj.loadtime.Loadtime5ModuleTests  ","AroundAdviceDeclaration":" propertyDescriptors internalGetSetChildProperty internalGetChildListProperty typeParameters getReturnType internalGetReturnType setReturnType internalSetReturnType getReturnType2 setReturnType2 clone0 treeSize subtreeMatch0 accept0 aroundRETURN_TYPE_PROPERTY aroundRETURN_TYPE2_PROPERTY aroundTYPE_PARAMETERS_PROPERTY aroundJAVADOC_PROPERTY aroundPARAMETERS_PROPERTY aroundPOINTCUT_PROPERTY aroundTHROWN_EXCEPTIONS_PROPERTY aroundBODY_PROPERTY aroundPROPERTY_DESCRIPTORS_2_0 aroundPROPERTY_DESCRIPTORS_3_0 returnType returnType2Initialized typeParameters org.aspectj.org.eclipse.jdt.core.dom.AroundAdviceDeclaration  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  ajh02: move to aroundAdvice\r\n  more efficient than just calling unsupportedIn2() to check\r\n  lazy init must be thread-safe for readers\r\n  lazy init must be thread-safe for readers\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n /*package*/\r\n /*package*/\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n","UserPreferencesAdapter":" getGlobalPreference getGlobalMultivalPreference setGlobalPreference setGlobalMultivalPreference getProjectPreference getProjectMultivalPreference setProjectPreference setProjectMultivalPreference  org.aspectj.ajde.ui.UserPreferencesAdapter  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","LCONST":" getValue getType accept value org.aspectj.apache.bcel.generic.LCONST  ","PointcutDesignatorHandler":" getDesignatorName parse  org.aspectj.weaver.tools.PointcutDesignatorHandler  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","IRunStatus":" setIdentifier reset start finish abort thrown completeAbruptly hasAnyMessage getMessages started isCompleted aborted runResult getRunner getResult getAbortRequest getThrown getMessages getIdentifier addChild registerParent getChildren getParent VOID PASS FAIL ABORT ABORT_NORUN EMPTY_NEST org.aspectj.testing.run.IRunStatus  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DefaultMatchingContext":" hasContextBinding getBinding addContextBinding removeContextBinding contextMap org.aspectj.weaver.tools.DefaultMatchingContext  /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.tools.MatchingContext#hasContextParameter(java.lang.String)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.tools.MatchingContext#get(java.lang.String)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ConstantPushInstruction":" getValue  org.aspectj.apache.bcel.generic.ConstantPushInstruction  ","Callout":" compareTo getArea getLine getColumn getCallout compareTo getArea getLine getColumn getCallout compareTo getArea getLine getColumn getCallout getType getOtherType callout area line col callout area line col callout area line col type otherType CALS_PAIR LINE_COLUMN LINE_COLUMN_PAIR LINE_RANGE OTHER com.nwalsh.saxon.Callout com.nwalsh.saxon.Callout com.nwalsh.xalan.Callout  ","PR109486":"     ","SummationVisitor":" visitNode visitLeaf report visitNode visitLeaf report sum sum ca.ubc.cs.spl.aspectPatterns.examples.visitor.aspectj.SummationVisitor ca.ubc.cs.spl.aspectPatterns.examples.visitor.java.SummationVisitor  ","TypeVariableReferenceType":" getDelegate getUpperBound getLowerBound setAdditionalInterfaceBoundsFromTypeVar getAdditionalBounds getTypeVariable isTypeVariableReference toString isGenericWildcard isAnnotation getSignature write typeVariable resolvedIfBounds fixedUp org.aspectj.weaver.TypeVariableReferenceType  at the right time).  Wonder if we can fix it up late?\r\n  if (!fixedUp) throw new BCException(\"ARGH\");   annotation itself does not have the annotation flag set in Java!\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","TestA_class":" main  TestA_class  ","AfterReturningInterfaceConstructorCE":"     ","QualifiedThisExactness":" main  Nimbo QualifiedThisExactness  ","SampleExceptionHandling1":"     ","CallsAndLocalClasses":"     ","PrivateFields":" main m one two PrivateFields Outer  ","Generating":"     ","AbstractPointcutIndirectCE":"     ","AbstractionImplementation":"     ","AbstractSubWriter":" printSummaryMember printCrosscuts delegateClass setDelegator del setDelegator findDelegate getMemberKind printSummaryLabel printSummaryAnchor printInheritedSummaryAnchor printSummaryType printSummaryLink printInheritedSummaryLink printHeader printBodyHtmlEnd printMember nonfinalPrintMember printDeprecatedLink printNavSummaryLink printNavDetailLink propertyName keyName lowercase printInheritedSummaryLabel printIntroducedSummaryLabel printIntroducedSummaryAnchor summaryLabel summaryAnchor summaryLabel summaryAnchor navKey navKey navLink navSummaryLink navDetailLink header printCrosscuts printSummaryCrosscuts hasCrosscuts printHead nointros printMembersSummary printSummaryLinkComment printIntroducedSummaryHeader printIntroducedSummaryFooter printIntroducedSummaryMember printIntroducedSummaryLink printIntroducedMembersSummary printMembers navSummaryLink navDetailLink members getMembers del nointros org.aspectj.tools.doclets.standard.AbstractSubWriter  ?? always\r\n /*abstract*/\r\n /*final*/\r\n /*abstract*/\r\n /*abstract*/\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","StringConstExpr":" accept getType getStringConst m_stringConst org.aspectj.weaver.ast.StringConstExpr  ","StreamPrintWriter":" getContents flushBuffer print print print print println println println println write write write write write contents org.aspectj.util.StreamPrintWriter  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","IntroducingPrivateMethodsOnInterfaces":"     ","SubTypeComparator":" contains getComparators addComparator compare hashCode equals runTest print test main comparators cache accepts comparator org.aspectj.testing.compare.adapters.SubTypeComparator  for testing code\r\n  todo: sync on comparators\r\n  not found - throw ClassCastException\r\n  heterogeneous - pick Object\r\n  todo move elsewhere\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","HtmlDecorator":" decorateHTMLFromInputFiles decorateHTMLFromIPEs decorateHTMLFromIPE constructNestedTypeName decorateHTMLFile addAspectDocumentation insertDeclarationsSummary declsAboveVisibilityExist isAboveVisibility genAccessibility insertDeclarationsDetails findSummaryIndex findDetailsIndex decorateDocWithRel decorateMemberDocumentation generateDeclaredBy generateAffects getRelativePathFromHere generateModifierInformation generateIntroductionSignatures generateSignatures generateSummaryComment generateDetailsComment generateHREFName generateAffectsHREFLink getFormattedComment getProgramElements accept read POINTCUT_DETAIL ADVICE_DETAIL DECLARE_DETAIL ADVICE_SUMMARY POINTCUT_SUMMARY DECLARE_SUMMARY ITD_METHOD_SUMMARY ITD_FIELD_SUMMARY ITD_CONSTRUCTOR_SUMMARY visibleFileList declIDTable rootDir docVisibilityModifier ADVISES ADVISED_BY MATCHED_BY MATCHES_DECLARE DECLARED_ON ASPECT_DECLARATIONS SOFTENS SOFTENED_BY ANNOTATES ANNOTATED_BY USES_POINTCUT POINTCUT_USED_BY org.aspectj.tools.ajdoc.HtmlDecorator  \".\" +\r\n  XXX only one level of nexting\r\n  ---DeclID sits in the .html file                                 ---\r\n  file for the given IProgramElement\r\n  file corresponding to the IProgramElement\r\n  we're still in the file for a parent IPE\r\n  the case with an inner aspect not having the title \"Aspect\"\r\n  add the 'aspect declarations' information against the type\r\n  add the 'annotated by' information against the type\r\n  add the 'advised by' information against the type\r\n  insert the head of the table\r\n  insert the table row accordingly\r\n  insert the entry\r\n  insert the body of the table\r\n  insert the end of the table\r\n  everything\r\n  package\r\n  insert the table heading\r\n  insert the table row accordingly\r\n  If we did this for declare statements we get two repeated lines\r\n  insert the entry\r\n  insert the details\r\n  *this* type (i.e. the advised) is in the package structure.\r\n  form parentClass.nestedAspect.html\r\n  currDecl.getName() and wouldn't both appear in the ajdoc\r\n  for 'matches declare' relationship\r\n  The hrefLink needs to just be the corresponding aspect\r\n  !!! don't replace\r\n  for ensuring that we don't add duplciates\r\n  promote to enclosing\r\n  *this* type (i.e. the advisor) is in the package structure.\r\n  !!! don't replace\r\n  don't care about the token value\r\n  !!!\r\n  string the leading whitespace and '*' characters at the beginning of each line\r\n  }\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Mik Kersten\t  port to AspectJ 1.1+ code base\r\n * ******************************************************************/\r\n","KnownfailuresTests":" suite getSpecFile test001  org.aspectj.systemtest.knownfailures.KnownfailuresTests  /* *******************************************************************\r\n* Copyright (c) 2005 Contributors\r\n* All rights reserved.\r\n* This program and the accompanying materials are made available\r\n* under the terms of the Eclipse Public License v1.0\r\n* which accompanies this distribution and is available at\r\n* http://www.eclipse.org/legal/epl-v10.html \r\n* \r\n* Contributors:\r\n*   Andrew Huff             initial implementation\r\n* ******************************************************************/\r\n","AnnotationGenTest":" setUp createClassGen testConstructMutableAnnotation testVisibleInvisibleAnnotationGen checkSerialize tearDown  org.aspectj.apache.bcel.classfile.tests.AnnotationGenTest  Create the containing class\r\n  Create the simple primitive value '4' of type 'int'\r\n  Give it a name, call it 'id'\r\n  Check it looks right\r\n  Build an annotation of type 'SimpleAnnotation' with 'id=4' as the only value :)\r\n  Check we can save and load it ok\r\n  Create the containing class\r\n  Create the simple primitive value '4' of type 'int'\r\n  Give it a name, call it 'id'\r\n  Check it looks right\r\n  Build a RV annotation of type 'SimpleAnnotation' with 'id=4' as the only value :)\r\n  Build a RIV annotation of type 'SimpleAnnotation' with 'id=4' as the only value :)\r\n ","DeclareParentsImpl":" getDeclaringType getTargetTypesPattern isExtends isImplements getParentTypes toString declaringType targetTypesPattern parents parentsString firstMissingTypeName isExtends parentsError org.aspectj.internal.lang.reflect.DeclareParentsImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareParents#getDeclaringType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareParents#getTargetTypesPattern()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareParents#isExtends()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareParents#isImplements()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareParents#getParentTypes()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ConstructorMain":"     ","FieldInstruction":" toString getFieldSize getType getFieldType getFieldName  org.aspectj.apache.bcel.generic.FieldInstruction  ","PerObjectMap":"   org.aspectj.runtime.internal.PerObjectMap  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AroundDoubleAssignment":"     ","NonConstants":" main A B C D E NonConstants  ERR\r\n  ERR\r\n  ERR\r\n ","JoinPointClosureTest":" testGetThis testProceed  org.aspectj.aopalliance.tests.JoinPointClosureTest  /*\r\n * Created on 07-May-2004\r\n *\r\n * TODO To change the template for this generated file go to\r\n * Window - Preferences - Java - Code Generation - Code and Comments\r\n */\r\n","BrowserProperties":" getLastOpenSourceFilePath setLastOpenSourceFilePath getLastOpenSourceLineNumber setLastOpenSourceLineNumber getBuildConfigFiles getDefaultBuildConfigFile getLastActiveBuildConfigFile getProjectName getClassToExecute setClassToExecute getRootProjectDir getExecutionArgs getProjectSourceFiles getVmArgs getProjectSourcePath getBootClasspath setAjcOptions getAjcOptions getOutputPath setOutputPath getOutputLocationManager getUserClasspath getClasspath setClasspath getInJars getInpath getOutJar getSourceRoots getAspectPath getSourcePathResources preferencesAdapter org.aspectj.tools.ajbrowser.BrowserProperties  1.1 options\r\n  XXX unimplemented\r\n  XXX unimplemented\r\n  XXX unimplemented\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * \t   AMC 01.20.2003 extended for new AspectJ 1.1 project options\r\n * ******************************************************************/\r\n","InjectName":"     ","LRETURN":" accept  org.aspectj.apache.bcel.generic.LRETURN  ","WithincodeNPE01":"     ","AbstractListSupport":"     ","LDC2_W":" getType getValue accept  org.aspectj.apache.bcel.generic.LDC2_W  Never reached\r\n  Never reached\r\n ","TestUtil":" isLibDir is15VMOrGreater aspectjrtPath fileToURL filesToPath urlsToPath filesOrurlsToPath toPath parseBoolean parseBoolean aspectjrtJarFile aspectjrtJarURL testingClientJarFile testingClientJarURL libFile libURL assertArrayEquals assertSetEquals assertSetEquals assertSetEquals assertCommutativeEquals assertHashEquals runMain runMethod assertMultiLineStringEquals showContext readNonBlankLine sameDirectoryContents sameFiles sameFiles doSameFile cleanTestName skipTest testNamed loadTestsReflectively errorSuite errorSuite countTestCases run getCause printStackTrace printStackTrace printStackTrace getLines toString getLines lineate lineate lineate haveDisassembler disassemble getMissed clear getLines println print println println print print println print println JAVA_5_VM ASPECTJRT_KEY TESTING_CLIENT_KEY BAD_URL LIB_DIR LIB_RPATHS LIB_ENTRIES ASPECTJRT_PATH thrown thrown TEXT CLASS NO_LINES canonical line sb missed sink org.aspectj.testing.util.TestUtil  TODO support changing entries, etc.\r\n  comment to include comments when reading\r\n  XXX permit user to specify lineator\r\n  JDiff\r\n  String m = render(handler, edits, flines[0], flines[1]);\r\n  XXX confirm with jdiff that null means no edits\r\n  could printStackTrace to give more context if needed...\r\n  capture file as FileLine[]\r\n  }\r\n  e.printStackTrace(System.err);\r\n  XXX need test to detect when this is refactored\r\n  XXX use reflection utilities to invoke dissassembler?\r\n  ---------- PrintStream overrides\r\n /* String path = */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","BcelAttributes":" readAjAttributes bcelAttribute  org.aspectj.weaver.bcel.BcelAttributes  first pass, look for version\r\n  'o'rg.aspectj\r\n  bcel to AjAttribute.\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AjcTestCase":" matches hasAMatch toString setInfoComparison isIgnoringInfoMessages getCommand getStdOut getStdErr toString assertNoMessages assertNoMessages assertMessages assertMessages newMessageList newMessageList newMessageList newMessageList ajc getSandboxDirectory setShouldEmptySandbox getLastRunResult testNothingForAntJUnit run run run createWeavingClassLoader getURLs substituteSandbox fixupArgs adaptToPlatform copyAll compare addMissing addExtra getAnyJars startCapture stopCapture getBoolean setUp tearDown lastRunResult ajc DEFAULT_CLASSPATH_ENTRIES JAVA5_CLASSPATH_ENTRIES err out delegatingErr delegatingOut DEFAULT_VERBOSE DEFAULT_ERR_VERBOSE DEFAULT_OUT_VERBOSE line text sourceFileName seeAlsos EMPTY_MESSAGE_SET ignoreInfos fails infos warnings errors weaves command stdOut stdErr org.aspectj.tools.ajc.AjcTestCase  bin directories.  This means for the necessary types to be found we have to put these jars on the classpath:\r\n  hmmm, this next one should perhaps point to an aj-build jar...\r\n  allow replacing this special variable, rather than copying all files to allow tests of jars that don't end in .jar\r\n  ClassLoader aspectjLoader = new URLClassLoader(getURLs(DEFAULT_CLASSPATH_ENTRIES),parent);\r\n  the main method threw an exception...\r\n  the longhand form of the non 1.3 API: classpath.replace(\"$sandbox\", ajc.getSandboxDirectory().getAbsolutePath());\r\n  ret = ret.replace(':',File.pathSeparatorChar);\r\n  add any jars in the directory to the classpath\r\n  new RuntimeException(\"*** AjcTestCase.<clinit>()\").printStackTrace();\r\n /*\r\n\t * Save reference to real stderr and stdout before starting redirection\r\n\t */\r\n /* Sandbox + AspectJ -> Extension -> Bootstrap */\r\n /*\r\n\t\t\t * Create a new AspectJ class loader using the existing test CLASSPATH \r\n\t\t\t * and any missing Java 5 projects \r\n\t\t\t */\r\n /* Sandbox -> AspectJ -> Extension -> Bootstrap */\r\n /* Frameworks like XML use context class loader for dynamic loading */\r\n /* Must create weaving class loader reflectively using new parent so we \r\n\t * don't have a reference to a World loaded from CLASSPATH which won't\r\n\t * be able to resolve Java 5 specific extensions and may cause\r\n\t * ClassCastExceptions\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see junit.framework.TestCase#setUp()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see junit.framework.TestCase#tearDown()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer, \r\n * ******************************************************************/\r\n","ObjectForInt":"     ","NulIOException3":" main main  NulIOException3 TodoClassFormatError nul subnul  @testcase nul as class literal\r\n  @testcase nul as constructor  no ref to this in NulIOException3 - VM fails to load nul\r\n  @testcase nul as class name\r\n  @testcase nul as reference to class name\r\n ","NulIOException2":" main  Super NulIOException2  @testcase nul as identifier\r\n ","ACONST_NULL":" getType accept  org.aspectj.apache.bcel.generic.ACONST_NULL  ","Queue":" insert getFirst removeFirst setState insert getFirst removeFirst setState state state ca.ubc.cs.spl.aspectPatterns.examples.state.aspectj.Queue ca.ubc.cs.spl.aspectPatterns.examples.state.java.Queue  Removes the first element from the queue\r\n ","Unchanged":" main  Unchanged  ","MyAspect2":"     ","IntroAnon":"     ","FieldGet":" getType toString accept getField getResolvedType field resolvedType org.aspectj.weaver.ast.FieldGet  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","FieldGen":" setValue setInitValue setInitValue setInitValue setInitValue setInitValue setInitValue setInitValue setInitValue setInitValue cancelInitValue checkType getField addAnnotationsAsAttribute addConstant getSignature addObserver removeObserver update getInitValue toString copy value observers org.aspectj.apache.bcel.generic.FieldGen  Short cuts to constant pool\r\n ","VeryLongBranch":"     ","SpacewarTestCase":" setUp testSimpleExample testPublicModeExample testPr134063 dirs org.aspectj.tools.ajdoc.SpacewarTestCase  /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","InterTypeScope":" getAnyAliasForTypeVariableBinding makeSourceTypeBinding invocationType addDepth findTypeVariable getRecoveryAliases onType aliases usedAliases org.aspectj.ajdt.internal.compiler.lookup.InterTypeScope  Used later when reconstructing the resolved member\r\n  Problem will have already been reported, cant ITD on a type variable.\r\n  this method depends on the fact that BinaryTypeBinding extends SourceTypeBinding\r\n /* real type variable > alias letter */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","CallTypesI":"     ","AllTracingTests":" suite  org.aspectj.weaver.AllTracingTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n ","VerifyDialog":" actionPerformed connEtoC1 connEtoC2 connEtoC3 connEtoC4 flushButton_ActionPerformed getFlushButton getJDialogContentPane getPass1Button getPass1Panel getPass2Button getPass2Panel getPass3Button getPass3Panel handleException initConnections initialize main pass1Button_ActionPerformed pass2Button_ActionPerformed pass4Button_ActionPerformed ivjJDialogContentPane ivjPass1Panel ivjPass2Panel ivjPass3Panel ivjPass1Button ivjPass2Button ivjPass3Button ivjEventHandler class_name classes_to_verify ivjFlushButton org.aspectj.apache.bcel.verifier.VerifyDialog  user code end\r\n  user code end\r\n  user code end\r\n  user code end\r\n  user code end\r\n  user code end\r\n  user code end\r\n  user code end\r\n  Make sure it will be reloaded.\r\n  user code end\r\n  user code end\r\n  user code end\r\n  user code end\r\n  user code end\r\n  user code end\r\n  user code end\r\n  user code end\r\n  user code end\r\n  user code end\r\n  user code begin {2}\r\n /* Uncomment the following lines to print uncaught exceptions to stdout */\r\n","decwStringsErroneous":"     ","IfPCDExprJoinPointVisibleCE":"     ","Jdk14TraceTest":" setUp testJdk14Trace testSetTraceEnabled  org.aspectj.weaver.Jdk14TraceTest  ","AmbiguousFormal":"     ","BadConstructorName":"   BadConstructorName  ","FieldGetCall":" accept getArgs getMethod getField field method args org.aspectj.weaver.ast.FieldGetCall  assert m.return value is boolean\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Types":"   org.abc.E org.abc.F org.xyz.C org.xyz.D org.xyz.G  ","RequestBlocking":"     ","SimpleEnum":"     ","InterTypeConstructorDeclarationImpl":" getParameterTypes getGenericParameterTypes getExceptionTypes toString baseMethod org.aspectj.internal.lang.reflect.InterTypeConstructorDeclarationImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeConstructorDeclaration#getParameters()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeConstructorDeclaration#getGenericParameters()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeConstructorDeclaration#getDeclaredExceptionTypes()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","DirChanges":" start end compareDir setFileComparer exists exists failMessage checkFile setDirToken setExpDir setDelay setDefaultSuffix setAdded setRemoved setUpdated setUnchanged setFastfail hasFileList writeXml writeXml DELAY_NAME DELAY EXISTS spec startTime baseDir fileChecker handler XMLNAME dirToken defaultSuffix expDir delayInMilliseconds fastFail added removed updated unchanged org.aspectj.testing.harness.bridge.DirChanges  ensure tests don't complete in < 1 second, otherwise can confuse fast machines.\r\n  deferring comparison to end...\r\n  variant 1: compare expected directory\r\n  System.err.println(\"XXX comparing actDir=\" + actDir + \" expDir=\" + expDir);\r\n  boolean expectStartEarlier = true;\r\n  : new File(baseDir, spec.expDir));\r\n  XXX default to class?\r\n  let NumberFormatException propogate up\r\n  XXX need to permit defaults here...\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","SuperIsWeird":"     ","Harness":" makeHarness main getOptionAliases readArgs runMain doEndSuite doStartSuite run report logln getLogStream isSuiteFile aliasOptions acceptOption readSuite addFeature removeFeature listFeatureNames printSyntax printAliases toString run logln getLogStream printSyntax acceptOption getStreamHider mkdirs getFileContents createSrcFile createArgFile run makeTest toString accept extractSubstrings accept runPassed runPassed gotMessage runStarted doRunStarted doStartSuite doEndSuite runCompleted lastRunOk toString doRunCompleted doRunCompleted doRunCompleted runStarting doEndSuite doStartSuite doRunCompleted runStarting doRunCompleted isFailLabel isPassLabel renderId main SYNTAX_PAD OPTION_DELIM JAVA_VERSION ASPECTJ_VERSION optionAliases verboseHarness quietHarness silentHarness features keepTemp killTemp logResults exitOnFailure status numIncomplete clazz listener name ALIASES streamsHandler streamHider captureLogger testMaker ME substrings caseSensitive validator PUBLIC_TYPE_ERROR kind sought orGreater ALL FAIL PASS runValidator label logOnPass logOnNotPass streamsHandler lastRunOk lastRun suite junitOutput startTimeMillis numTests numFails timeFormatter logStreams printer runtime startTime startMemoryFree verbose org.aspectj.testing.drivers.Harness org.aspectj.testing.drivers.FeatureHarness org.aspectj.testing.drivers.TestMaker org.aspectj.testing.drivers.StringRunner org.aspectj.testing.drivers.SubstringRunner org.aspectj.testing.drivers.SourcePathValidator org.aspectj.testing.drivers.MessageRunValidator org.aspectj.testing.drivers.TestCompleteListener org.aspectj.testing.drivers.XmlLogger org.aspectj.testing.drivers.JUnitXMLLogger org.aspectj.testing.drivers.RunLogger org.aspectj.testing.drivers.TestTraceLogger org.aspectj.testing.Harness  read arguments\r\n  run suites read from each file\r\n  awful  validator is used for all setup in entire tree...\r\n  --------------- delegate methods\r\n  skip bad input\r\n  boolean result = false;\r\n  final boolean LOGSTREAMS = true;\r\n  print when validator true\r\n  print when validator true\r\n  hmmm\r\n  XXX find discovered EOL\r\n  static - no run needed\r\n  XXX hoist common\r\n  static - no run needed\r\n  hmm\r\n  hmm\r\n  XXX small memory leak - cache hashcode instead?\r\n  XXX add label?\r\n  junitOutput.println(result.err);\r\n  junit reporter doesn't like \".xml\" on the end\r\n /*\r\n         * For each run, initialize the runner and validator,\r\n         * create a new set of IRun{Iterator} tests,\r\n         * and run them. \r\n         * Delete all temp files when done.\r\n         */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.testing.drivers.TestCompleteListener#doRunCompleted(org.aspectj.testing.run.IRunStatus, org.aspectj.testing.util.StreamsHandler.Result)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.testing.drivers.TestCompleteListener#runStarted(org.aspectj.testing.run.IRunStatus)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.testing.drivers.TestCompleteListener#doEndSuite(java.io.File, long)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.testing.drivers.TestCompleteListener#doStartSuite(java.io.File)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC),\r\n *               2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Wes Isberg     2003 changes.\r\n * ******************************************************************/\r\n /* -*- Mode: Java; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the compiler and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n *\r\n * Contributor(s):\r\n */\r\n","ExecutableMemberDocImpl":" createAdvice getFormals getThrows makeParameters makeThrownExceptions advice thrownExceptions parameters flatSignature signature isSynchronized isNative throwsTags paramTags toString createParameters createThrownExceptions weakEquals advice parameters thrownExceptions signature flatSignature org.aspectj.tools.ajdoc.ExecutableMemberDocImpl  return getModifiers().isSynchronized();\r\n  return (modifierSpecifier() & Modifiers.NATIVE) != 0;\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Hello":" sayHello main main main sayHello sayWorld main sayHello main getName main main main main main main defaultConsExecuted paramConsExecuted sayHelloCount msg org.aspectj.aopalliance.tests.Hello pkg.Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello Hello  System.out.println(\"main\");\r\n ","Version":" main DEVELOPMENT NOTIME text time_text time SIMPLE_DATE_FORMAT org.aspectj.bridge.Version  if not DEVELOPMENT version, read time text using format used to set time\r\n /* ********************************************************************\r\n * Copyright (c) 1998-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n * \r\n * Contributors:\r\n *     Xerox/PARC     initial implementation\r\n * *******************************************************************/\r\n","DivOpMustHappen":" main i j DivOpMustHappen  ","EMA":"     ","FieldGetJoinPointsInAroundAdvice":"     ","PR413":" main realMain field field PR413 Interface Abstract AbstractConflictingClass NonAbstractConflictingClass NonAbstractClass NonAbstractExtendingClass AbstractConflictingClassThatRedefinesInnerClass NonAbstractConflictingClassThatRedefinesInnerClass  ","FieldSignatureImpl":" getFieldType createToString getField fieldType field org.aspectj.runtime.reflect.FieldSignatureImpl  nothing we can do, caller will see null\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.runtime.reflect.MemberSignatureImpl#createAccessibleObject()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PR415":"     ","BadContinueTarget":" main  BadContinueTarget  ","BuildConfigEditor":" openFile  org.aspectj.ajde.ui.BuildConfigEditor  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CastingFoldedValues":" foo foo main i foundChar CastingFoldedValues  ","OptionChecker":" assertionFailed checkAssertion checkOptions checkOptions checkOptionsNegative checkOptionsNegative getValuesNegative getValuesNegative getValues checkContains safeString checkEqual isEqual options org.aspectj.testing.util.options.OptionChecker  Value.render(values);\r\n  actually never executed\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","AtAspectTestConcreteMethods":"   AtAspectTestConcreteMethods AtAspectTestConcreteMethods AtAspectTestConcreteMethods AtAspectTestConcreteMethods  ","TestSourceLines":"     ","RegistrySynchronization":"     ","CircularDominates":"     ","IdentityOzonator":" readMethodExecution readMethodExecution  ajtest2.IdentityOzonator com.codesrc.ozonator.identity.IdentityOzonator  ","StructuralCodeConstraintException":"   org.aspectj.apache.bcel.verifier.exc.StructuralCodeConstraintException  ","AbstractInherited":"     ","UnconditionalBranch":"   org.aspectj.apache.bcel.generic.UnconditionalBranch  ","AnonymousClassName":"     ","AsmRelationshipMapUsageTest":" testFindAdvisedMethods testListFilesAffectedByInterTypeDecs setUp  org.aspectj.samples.AsmRelationshipMapUsageTest  /* *******************************************************************\r\n * Copyright (c) 2004 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","PassVerifier":" verify do_verify addMessage getMessages messages verificationResult org.aspectj.apache.bcel.verifier.PassVerifier  Type of elements: String\r\n  create messages if not already done (cached!)\r\n ","VerySimpleAnnotation":"     ","FileSystemComposition":"     ","IClassWeaver":" weave  org.aspectj.weaver.IClassWeaver  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","UnambiguousClassReference3CP":" main  UnambiguousClassReference3CP  not ambiguous\r\n ","MultipleCompileTestCase":" testA1  org.aspectj.ajdt.internal.compiler.batch.MultipleCompileTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AppleCrate":" isSellable isSellable isSellable crateContents crateContents crateContents apples.AppleCrate AppleCrate AppleCrate  ","Failing2":"     ","AccessForInlineVisitor":" endVisit endVisit endVisit endVisit endVisit endVisit endVisit getAccessibleField getAccessibleMethod getSuperAccessMethod isPublic isPublic makePublic endVisit endVisit visit handler inAspect world isInlinable originalMethod accessMethod org.aspectj.ajdt.internal.compiler.ast.AccessForInlineVisitor  import org.aspectj.org.eclipse.jdt.internal.compiler.AbstractSyntaxTreeVisitorAdapter;\r\n  alias for inAspect.world\r\n  ??? A better answer would be to transform these into inlinable forms\r\n  !!! understand and fix this case later\r\n  don't continue if we come across a problem\r\n  XXX TBD\r\n  getTypeBinding(scope));     getTypeBinding(scope));    System.err.println(\"checking field: \" + binding);\r\n  ???\r\n  pr124999\r\n  runtime this will be satisfied by the super).\r\n  where we are.\r\n  these are always effectively public to the inliner\r\n  these are always effectively public to the inliner\r\n  has already produced an error\r\n  ???\r\n  we don't want to transform any local anonymous classes as they won't be inlined\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","FinalStatic":" main realMain i FinalStatic  ","LocalVariableTag":" getName getSlot getType getRealType updateSlot isRemapped toString equals hashCode type signature name slot startPos remapped hashCode org.aspectj.apache.bcel.generic.LocalVariableTag  not always known, in which case signature has to be used\r\n  have different start positions.\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n *   Andy Clement   pushed down into bcel module\r\n * ******************************************************************/\r\n","BeforeWeaveTestCase":" testBefore  org.aspectj.weaver.bcel.BeforeWeaveTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Number":" getValue compareTo i Number  ","CircularAdvice":"     ","Rainbow":"     ","AnnotationParameterType":"     ","TypePatternTestCase":" testStaticMatch testImportResolve testImportMatch testImportMatchWithInners checkImportMatch makeResolvedWildTypePattern resolve testInstanceofMatch testArrayMatch checkIllegalInstanceofMatch checkInstanceofMatch makeTestScope makeTypePattern checkMatch checkPatternMatch testSerialization checkSerialization world ZERO_STRINGS org.aspectj.weaver.patterns.TypePatternTestCase  checkMatch(\"java..reflect..Modifier\", \"java.lang.reflect.Modxifier\", false);\r\n  only giving this wild-type patterns\r\n  System.out.println(\"type: \" + p);\r\n  System.out.println(\"type: \" + type);\r\n /*FuzzyBoolean result = */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Aspect111":"     ","LoadtimeTests":" testPremain  org.aspectj.weaver.loadtime.LoadtimeTests  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg       initial implementation \r\n * ******************************************************************/\r\n","BuildArgParserTestCase":" genBuildConfig testDefaultClasspathAndTargetCombo testPathResolutionFromConfigArgs testAjOptions testAspectpath testInJars testBadInJars testBadPathToSourceFiles testMultipleSourceRoots getCanonicalPath testSourceRootDir testBadSourceRootDir testSourceRootDirWithFiles testExtDirs testBootclasspath testOutputJar testCombinedOptions testOutputDirectorySetting testClasspathSetting testArgInConfigFile testNonExistentConfigFile testXlint testXlintfile testSource15 testOptions testLstFileExpansion testAjFileInclusion testOutxml testOutxmlfile testNonstandardInjars testNonstandardInpath testNonstandardAspectpath testNonstandardClasspath testNonstandardBootpath checkPathSubset testNonstandardOutjar testNonstandardOutputDirectorySetting setupNonstandardPath setUp tearDown TEST_DIR messageWriter NONSTANDARD_JAR_DIR org.aspectj.ajdt.ajc.BuildArgParserTestCase  do finally to avoid messing up classpath for other tests\r\n  see finally below\r\n  !!!assertTrue(err, null == err);\r\n  !!!assertTrue(err, null == err);\r\n  !!!assertTrue(err, null == err);\r\n  assertTrue(\"expected errors for missing jars\", null != err);\r\n  should have three entries, resolved relative to location of .lst file\r\n  config.getAjOptions().get(AjCompilerOptions.OPTION_InJARs).equals(CompilerOptions.PRESERVE));\r\n  ??? we've decided not to make this an error\r\n  config.getAjOptions().get(AjCompilerOptions.OPTION_OutJAR).equals(CompilerOptions.GENERATE));\r\n  XXX shouldn't need -1.4 to get this to pass\r\n  AjdtCommand command = new AjdtCommand();\r\n  String badLintFile = \"lint.props\";\r\n  assertTrue(\"should be in 1.5 mode\",config.getJave5Behaviour());\r\n  AjdtCommand command = new AjdtCommand();\r\n /*String err = */\r\n /*err = */\r\n /*AjBuildConfig config = */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","TwoPublics":"     ","ExecutableMemberDoc":" advice  org.aspectj.ajdoc.ExecutableMemberDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","LSHL":" accept  org.aspectj.apache.bcel.generic.LSHL  ","LocalVariables":" clone get getClone maxLocals set equals merge merge toString initializeObject locals org.aspectj.apache.bcel.verifier.structurals.LocalVariables  System.out.println(this.locals[i]+\" is not \"+lv.locals[i]);\r\n  compare vmspec2, 4.9.4, last paragraph.\r\n  Even harder, what about _different_ uninitialized object types?!\r\n  If we just didn't know that it was initialized, we have now learned.\r\n  needed in case of two UninitializedObjectType instances\r\n  We should have checked this in Pass2!\r\n /*\r\n\t * Fulfills the general contract of Object.equals().\r\n\t */\r\n /*TODO\r\n\t\t\t\tif ((locals[i] instanceof org.aspectj.apache.bcel.generic.ReturnaddressType) && (lv.locals[i] instanceof org.aspectj.apache.bcel.generic.ReturnaddressType)){\r\n\t\t\t\t\t//System.err.println(\"merging \"+locals[i]+\" and \"+lv.locals[i]);\r\n\t\t\t\t\tthrow new AssertionViolatedException(\"Merging different ReturnAddresses: '\"+locals[i]+\"' and '\"+lv.locals[i]+\"'.\");\r\n\t\t\t\t}\r\n*/\r\n","IAND":" accept  org.aspectj.apache.bcel.generic.IAND  ","FigurePanel":" actionPerformed log println addPoint addLine paint mousePressed mouseDragged mouseReleased mouseMoved mouseClicked mouseExited mouseEntered findFigureElement log println addPoint addLine paint mousePressed mouseDragged mouseReleased mouseMoved mouseClicked mouseExited mouseEntered findFigureElement log println addPoint addLine paint mousePressed mouseDragged mouseReleased mouseMoved mouseClicked mouseExited mouseEntered findFigureElement actionPerformed log println addPoint addLine paint mousePressed mouseDragged mouseReleased mouseMoved mouseClicked mouseExited mouseEntered findFigureElement bp fs cp msgs text BACKGROUND canvas lastX lastY pressX pressY first point1 bp fs cp msgs text BACKGROUND canvas lastX lastY pressX pressY first point1 bp fs cp msgs text BACKGROUND canvas lastX lastY pressX pressY first point1 bp fs cp msgs text BACKGROUND canvas lastX lastY pressX pressY first point1 figures.gui.FigurePanel figures.gui.FigurePanel figures.gui.FigurePanel figures.gui.FigurePanel  }));\r\n  }));\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","InternalUseOnlyPointcutParser":" resolvePointcutExpression concretizePointcutExpression  org.aspectj.weaver.reflect.InternalUseOnlyPointcutParser  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer          Initial implementation\r\n * ******************************************************************/\r\n","BindingTestCase":" testResolveBindings checkBindingFailure checkBindings makeSimpleScope world org.aspectj.weaver.patterns.BindingTestCase  checkBindings(\"args(a,..,b, ..)\", all);\r\n  System.out.println(\"expected exception: \" + re);\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","CoreTest":" main setUp testCreate testSetPoint testMoveLine1 testMoveLine2 bb p1 p2 l1 sloth1 g tests.CoreTest  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","LSHR":" accept  org.aspectj.apache.bcel.generic.LSHR  ","WatchSetters":"     ","AjdeWidgetStyles":"  DEFAULT_LABEL_FONT DEFAULT_BORDER LOWERED_BEVEL_BORDER RAISED_BEVEL_BORDER DEFAULT_BACKGROUND_COLOR LINK_NODE_COLOR LINK_NODE_NO_SOURCE_COLOR org.aspectj.ajde.ui.swing.AjdeWidgetStyles  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Aspect120":"     ","Command":" executeCommand executeCommand isExecutable  ca.ubc.cs.spl.aspectPatterns.examples.command.java.Command ca.ubc.cs.spl.aspectPatterns.patternLibrary.Command  ","Nine":"     ","RunTheseBeforeYouCommitTests":" suite  RunTheseBeforeYouCommitTests  unit tests\r\n  compiler tests\r\n ","Aspect121":"     ","NotFound":" main  NotFound  ERR: can't find type foo.bar.Bax\r\n  ERR: can't find package a.b.c\r\n  ERR: method g() not found\r\n  ERR: type Mumble not found\r\n  ERR: type Mumble not found\r\n  ERR: type Mumble not found\r\n  ERR: type Mumble not found\r\n  ERR: CONST not found\r\n ","AspectInInterfaceCP":"     ","Target.40":" staticMethod  Target  ","NonStmtInFor":" foo main  NonStmtInFor  ","LibraryInterface":"   lib.LibraryInterface lib.LibraryInterface  ","Abstracts":" main m m n m log Abstracts C D  ","Sorter":" show  ca.ubc.cs.spl.aspectPatterns.examples.strategy.aspectj.Sorter ca.ubc.cs.spl.aspectPatterns.examples.strategy.java.Sorter  ","Doc":" isAdvice isPointcut  org.aspectj.ajdoc.Doc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","F2D":" accept  org.aspectj.apache.bcel.generic.F2D  ","NonstaticInnerClassesInAspects":"     ","TestMessageHolder":" hasAnyMessage numMessages getMessages getUnmodifiableListView clearMessages handleMessage isIgnoring dontIgnore  org.aspectj.tools.ajc.TestMessageHolder  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n  TODO Auto-generated method stub\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHolder#hasAnyMessage(org.aspectj.bridge.IMessage.Kind, boolean)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHolder#numMessages(org.aspectj.bridge.IMessage.Kind, boolean)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHolder#getMessages(org.aspectj.bridge.IMessage.Kind, boolean)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHolder#getUnmodifiableListView()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHolder#clearMessages()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHandler#handleMessage(org.aspectj.bridge.IMessage)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHandler#isIgnoring(org.aspectj.bridge.IMessage.Kind)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHandler#dontIgnore(org.aspectj.bridge.IMessage.Kind)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","Jdk14TraceFactory":" getTrace  org.aspectj.weaver.tools.Jdk14TraceFactory  ","AtArgsAspect":"     ","ThrowsClause":" m m m  C Sup Sub  ERROR Integer is not a Throwable\r\n  ERROR C is not a Throwable\r\n ","F2I":" accept  org.aspectj.apache.bcel.generic.F2I  ","ConstructorDoc":"   org.aspectj.ajdoc.ConstructorDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","OutjarTest":" setUp testOutjarInInjars testOutjarInInpath testOutjarInAspectpath testOutjarDeletedOnError PROJECT_DIR injarName aspectjarName outjarName baseDir org.aspectj.ajdt.internal.core.builder.OutjarTest  System.out.println(result);\r\n  System.out.println(result);\r\n  System.out.println(result);\r\n  System.out.println(result);\r\n ","F2L":" accept  org.aspectj.apache.bcel.generic.F2L  ","Messages":"     ","Messager":" log error logException  org.aspectj.internal.tools.build.Messager  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","BaseTypes2":" main m  BaseTypes A B C  ","Position":" getEnd getStart start end org.aspectj.weaver.Position  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Doo":"     ","AjASTConverterFactory":" getASTConverter  org.aspectj.ajdt.core.dom.AjASTConverterFactory  ","Reflection":" invokestatic invokestatic invokestatic invokestatic invokestaticN invoke invoke invoke invokeN getMatchingMethod isCompatible getStaticField runMainInSameVM runMainInSameVM runMainInSameVM makeURL MAIN_PARM_TYPES org.aspectj.util.Reflection  ignore methods with overloading other than lengths\r\n  }\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Target.50":" staticMethod  Target  ","ConstantUtf8":" accept dump getBytes setBytes toString bytes org.aspectj.apache.bcel.classfile.ConstantUtf8  ","ConstantFloat":" accept dump getBytes setBytes toString getConstantValue bytes org.aspectj.apache.bcel.classfile.ConstantFloat  ","TestHelper":" runAndThrowOnFailure handleMessage  ataspectj.TestHelper  be catched by the weaver anyway\r\n ","ClassLoaderWeavingAdaptor":" initialize parseDefinitions registerDefinitions getClassLoaderName registerOptions registerAspectExclude registerAspectInclude lint getContextId registerAspects registerIncludeExclude looksLikeStartsWith registerDump accept acceptAspect shouldDump getNamespace generatedClassesExistFor flushGeneratedClasses defineClass AOP_XML initialized m_dumpTypePattern m_dumpBefore m_includeTypePattern m_excludeTypePattern m_includeStartsWith m_excludeStartsWith m_aspectExcludeTypePattern m_aspectExcludeStartsWith m_aspectIncludeTypePattern m_aspectIncludeStartsWith namespace weavingContext trace org.aspectj.weaver.loadtime.ClassLoaderWeavingAdaptor  super(null);  could be done lazily using the hook\r\n  TODO when the world works in terms of the context, we can remove the loader...\r\n  TODO when the world works in terms of the context, we can remove the loader...\r\n  for tools only\r\n  register the definitions\r\n  after adding aspects\r\n  will allow very fast skip in shouldWeave()\r\n  TODO av dev mode needed ? TBD -Daj5.def=...\r\n  will allow very fast skip in shouldWeave()\r\n  will allow very fast skip in shouldWeave()\r\n  AV - code duplicates AspectJBuilder.initWorldAndWeaver()\r\n  AMC - autodetect as per line below, needed for AtAjLTWTests.testLTWUnweavable\r\n  FIXME should be AjBuildConfig.AJLINT_DEFAULT but yetanother deps..\r\n  warn(\"aspect excluded: \" + aspectClassName);\r\n  generate key for SC\r\n  exclude if in any of the exclude list\r\n  generate key for SC\r\n  exclude if in any of the exclude list - note that the user defined name matters for that to happen\r\n  and that \"charsss.*\" will not neither\r\n  no \"..\" before last sequence\r\n  no \"*\" before last sequence\r\n  avoid ResolvedType if not needed\r\n  still try to avoid ResolvedType if we have simple patterns\r\n  defaults to false if no fast include\r\n  BAD: weaver.getWorld().resolve(UnresolvedType.forName(className), true);\r\n  exclude match - skip\r\n  exclude are \"AND\"ed\r\n  defaults to true if no include\r\n  avoid ResolvedType if not needed\r\n  EXCLUDE: if one match then reject\r\n  INCLUDE: if one match then accept\r\n  needs further analysis\r\n  exclude match - skip\r\n  exclude are \"AND\"ed\r\n  defaults to true if no include\r\n  this can be nice but very dangerous as well to change that\r\n  Don't dump before weaving unless asked to\r\n  avoid ResolvedType if not needed\r\n  TODO AV - optimize for className.startWith only\r\n  dump match\r\n  dump\r\n  System.out.println(\"ClassLoaderWeavingAdaptor.getNamespace() classloader=\" +  weavingContext.getClassLoaderName() + \", namespace=\" + namespace);\r\n  System.err.println(\"? ClassLoaderWeavingAdaptor.generatedClassesExist() classname=\" + className + \", size=\" + generatedClasses);\r\n  System.err.println(\"? ClassLoaderWeavingAdaptor.flushGeneratedClasses() generatedClasses=\" + generatedClasses);\r\n  TODO av protection domain, and optimize\r\n /* First load defaults */\r\n /* Second overlay LTW defaults */\r\n /* Third load user file using -Xlintfile so that -Xlint wins */\r\n /* Fourth override with -Xlint */\r\n /*ResolvedType aspect = */\r\n /*ResolvedType aspect = */\r\n /* We didn't register any aspects so disable the adaptor */\r\n /* \r\n         * Bug 120363\r\n         * If we have an exclude pattern that cannot be matched using \"starts with\"\r\n         * then we cannot fast accept\r\n         */\r\n","AspectInInterfaceCF":"     ","DeclaringTypeWarning":"     ","EachJVMOnSelf":"     ","Eajc515ModuleTests":" suite  Eajc515ModuleTests  ","RunWeaveTests":" main split parseArgs usage createCSV createFilename getDateAndTime getVMInfo RUN_SMALL RUN_MED RUN_LARGE SMALL_PROGRAM_ARGS MEDIUM_PROGRAM_ARGS LARGE_PROGRAM_ARGS WARMUP_ARGS ITERATIONS filename times RunWeaveTests  must end on a space in case any more arguments are added later in the script\r\n  Purely as a warm-up...\r\n /* Compatibility with JDK 1.3.1 */\r\n","GenericTreeNodeListOrdererI":" produceLists  org.aspectj.testing.compare.GenericTreeNodeListOrdererI  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","BuildManager":" buildStructure build buildFresh build buildFresh abortBuild getBuildOptions isStructureDirty setStructureDirty setBuildModelMode addListener removeListener  org.aspectj.ajde.BuildManager  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ReturnTypeTest":"     ","FieldIntroductionSubWriter":" keyName printInheritedSummaryAnchor printInheritedSummaryLabel printInheritedSummaryLink getMembers printCrosscuts printSummaryCrosscuts hasCrosscuts  org.aspectj.tools.doclets.standard.FieldIntroductionSubWriter  field);\r\n  String name = field.name();\r\n  define term\r\n  XXX added for balance\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","MemberTestCase":" testMethodConstruction testMethodContents testFieldContents isStaticTest isConstructorTest isPrivateTest isInterfaceTest returnTypeTest parameterTypesTest nameTest declaringTypeTest kindTest  org.aspectj.weaver.MemberTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n *                      2005 contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation\r\n *     Adrian Colyer, canBeParameterized tests \r\n * ******************************************************************/\r\n","TopLevelAfter":"     ","MemberInitializationsAfterExplicitConstructorCallsCoverage":" main test setValues go checkMembersHaveInitializedValues checkMembersHaveSetValues go checkMembersHaveInitializedValues checkMembersHaveSetValues go checkMembersHaveInitializedValues checkMembersHaveSetValues go checkMembersHaveInitializedValues checkMembersHaveSetValues go checkMembersHaveInitializedValues checkMembersHaveSetValues setValues checkObject go checkMembersHaveInitializedValues checkMembersHaveSetValues getParentObject getEnclosed INPUT INIT initOne initString initNull initNone initOne initString initNull initNone initOne initString initNull initNone initOne initString initNull initNone initOne initString initNone initNull initOne initString initNull initNone tccsuperlabel parentObject INPUT INIT initString constructedString didCheck MemberInitializationsAfterExplicitConstructorCallsCoverage ThisCallEnclosing  --------- proof that test code is correct\r\n  all super cases pass\r\n  enclosed inner class initializer can access enclosing members\r\n  --- new coverage tests - 5 tests, 6 errors each, 30 errors\r\n  --- new coverage tests\r\n  Object uses strict  Object uses strict  Object uses strict  Object uses strict  Object uses strict  failures\r\n  this(checkObject(INPUT, INPUT, this$.getParentObject(), tccsuperlabel + \"_FAILED\", tccsuperlabel));\r\n  Object uses strict  check enclosing instance in initializer\r\n ","ClassLiteralField":"     ","HasAnnotation":" accept toString equals getVar getAnnotationType v annType org.aspectj.weaver.ast.HasAnnotation  /* (non-Javadoc)\r\n     * @see org.aspectj.weaver.ast.Test#accept(org.aspectj.weaver.ast.ITestVisitor)\r\n     */\r\n","Target.20":" main run run staticMethod main run run main run  Target main.Target Target Target main.Target Target  ","HelloA":"     ","DebugErrorHandler":" handleWarning handleError handleError  org.aspectj.ajde.internal.DebugErrorHandler  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DocletProxy":" optionLength start validOptions optionLength validOptions docletOptions start optionLength validOptions docletOptions start STANDARD DEFAULT SINGLETON SINGLETON org.aspectj.tools.ajdoc.DocletProxy org.aspectj.tools.ajdoc.StandardProxy org.aspectj.tools.ajdoc.JavadocStandardProxy  todo: validate that this is the expected format for doclet options\r\n  todo: validate that this is the expected format for doclet options\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Structure":" main log signal signal signal clearAndRunTest runTest processArgs visit produce produceLists compare PRINT_SINK STRING_SORTER_FACTORY STRING_SORTER STRING_COMP PRINT_EACH PRINT_ALL PRINT_ERR DEFAULT_LST DEFAULT_ARGS actualSavePath actualPath expectedPath doComparison visitor sorter org.aspectj.testing.compare.adapters.Structure  ---------------------------------- static util\r\n  assume args are ours unless found otherwise\r\n  the rest of ours require a parm\r\n  ok, not ours - save\r\n  assume valid arg for callee unless shown to be ours\r\n  bad args[] - abort (see signals above)\r\n  end of reading args[]\r\n  if no input specified, supply default list file\r\n  if some args clipped (ours), clip array to actual (callee)\r\n  one\r\n  both\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Hello2":" main main  Hello2 Hello2  ","AjdeInternalTests":" suite  org.aspectj.ajde.internal.AjdeInternalTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AjTypeImpl":" getName getPackage getInterfaces getModifiers getJavaClass getSupertype getGenericSupertype getEnclosingMethod getEnclosingConstructor getEnclosingType getDeclaringType getPerClause isAnnotationPresent getAnnotation getAnnotations getDeclaredAnnotations getAjTypes getDeclaredAjTypes getConstructor getConstructors getDeclaredConstructor getDeclaredConstructors getDeclaredField getDeclaredFields getField getFields getDeclaredMethod getMethod getDeclaredMethods getMethods isReallyAMethod getDeclaredPointcut getPointcut getDeclaredPointcuts getPointcuts asPointcut getDeclaredAdvice getAdvice getDeclaredAdvice initDeclaredAdvice getAdvice initAdvice getAdvice getDeclaredAdvice asAdvice getDeclaredITDMethod getDeclaredITDMethods getITDMethod getITDMethods addAnnotationStyleITDMethods addAnnotationStyleITDFields getDeclaredITDConstructor getDeclaredITDConstructors getITDConstructor getITDConstructors getDeclaredITDField getDeclaredITDFields getITDField getITDFields getDeclareErrorOrWarnings getDeclareParents addAnnotationStyleDeclareParents getDeclareSofts getDeclareAnnotations getDeclarePrecedence getEnumConstants getTypeParameters isEnum isInstance isInterface isLocalClass isMemberClass isArray isPrimitive isAspect isMemberAspect isPrivileged equals hashCode toAjTypeArray toClassArray toString ajcMagic clazz declaredPointcuts pointcuts declaredAdvice advice declaredITDMethods itdMethods declaredITDFields itdFields itdCons declaredITDCons org.aspectj.internal.lang.reflect.AjTypeImpl  extract real name\r\n  doesn't contribute members...\r\n  @AJ decp is interface driven ie no field\r\n  the target annotation is on this method...\r\n  this must be the one...\r\n  @AspectJ Style\r\n  annotated code-style\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getName()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getPackage()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getInterfaces()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getModifiers()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getSupertype()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getGenericSupertype()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getEnclosingMethod()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getEnclosingConstructor()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getEnclosingType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaringType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#isAnnotationPresent(java.lang.Class)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getAnnotations()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredAnnotations()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getAspects()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredAspects()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getConstructor(java.lang.Class...)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getConstructors()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredConstructor(java.lang.Class...)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredConstructors()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredField(java.lang.String)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredFields()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getField(java.lang.String)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getFields()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredMethod(java.lang.String, java.lang.Class...)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getMethod(java.lang.String, java.lang.Class...)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredMethods()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getMethods()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredPointcut(java.lang.String)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getPointcut(java.lang.String)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredPointcuts()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getPointcuts()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredAdvice(org.aspectj.lang.reflect.AdviceType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredAdvice(org.aspectj.lang.reflect.AdviceType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredITDMethod(java.lang.String, java.lang.Class, java.lang.Class...)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredITDMethods()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getITDMethod(java.lang.String, java.lang.Class, java.lang.Class...)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getITDMethods()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredITDConstructor(java.lang.Class, java.lang.Class...)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredITDConstructors()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getITDConstructor(java.lang.Class, java.lang.Class...)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getITDConstructors()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredITDField(java.lang.String, java.lang.Class)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclaredITDFields()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getITDField(java.lang.String, java.lang.Class)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getITDFields()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclareErrorOrWarnings()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclareParents()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclareSofts()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclareAnnotations()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getDeclarePrecedence()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getEnumConstants()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#getTypeParameters()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#isEnum()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#isInstance(java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#isInterface()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#isLocalClass()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#isMemberClass()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#isArray()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#isPrimitive()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#isAspect()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.AjType#isMemberAspect()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","TestLib2":" main getFive  TestLib2  ","AjASMAttribute":" read write isUnknown unpack unpacked data org.aspectj.weaver.asm.AjASMAttribute  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","AfterReturningAdviceDeclaration":" propertyDescriptors internalGetSetChildProperty getReturning setReturning clone0 treeSize accept0 returningJAVADOC_PROPERTY returningPARAMETERS_PROPERTY returningPOINTCUT_PROPERTY returningTHROWN_EXCEPTIONS_PROPERTY returningBODY_PROPERTY returningPROPERTY_DESCRIPTORS_2_0 returningPROPERTY_DESCRIPTORS_3_0 returningRETURNING_PROPERTY returning org.aspectj.org.eclipse.jdt.core.dom.AfterReturningAdviceDeclaration  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  visit children in normal left to right reading order\r\n ","Target.30":" run staticMethod run  delete.Target Target delete.Target  ","TestShadow":" getIWorld getEnclosingType getThisVar getTargetVar getArgVar getThisEnclosingJoinPointStaticPartVar getThisJoinPointStaticPartVar getThisJoinPointVar getSourceLocation getEnclosingCodeSignature getKindedAnnotationVar getWithinAnnotationVar getWithinCodeAnnotationVar getThisAnnotationVar getTargetAnnotationVar getArgAnnotationVar world thisType org.aspectj.weaver.TestShadow  we should thorw if we don't have a this\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getKindedAnnotationVar()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getWithinAnnotationVar()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getWithinCodeAnnotationVar()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getThisAnnotationVar()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getTargetAnnotationVar()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Shadow#getArgAnnotationVar(int)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","DoubleClass2":"   DoubleClass  PR#223\r\n ","DoubleClass1":" main  DoubleClass DoubleClass1  PR#223\r\n ","DoubledCalls":"     ","UtilClassLoader":" getResource getResourceAsStream loadClass readClass getClassData toString dirs urlsForDebugString org.aspectj.util.UtilClassLoader  and our dirs again (if not maybe test)\r\n  resolved by superclass\r\n /*File*/\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Isberg        initial implementation \r\n * ******************************************************************/\r\n","AjdeUiTests":" suite  org.aspectj.ajde.ui.AjdeUiTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Modifiers1":"     ","SASTORE":" accept  org.aspectj.apache.bcel.generic.SASTORE  ","NEW":" getExceptions getLoadClassType accept  org.aspectj.apache.bcel.generic.NEW  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","InteractiveBrowserTest":" interactive suite testInitNoArgs testAddProjectTask testAddSourceLineTasks verifySuccess setUp tearDown  org.aspectj.tools.ajbrowser.InteractiveBrowserTest  import org.aspectj.asm.*;\r\n  String[] args = { \"C: /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ConstructorSignatures":"     ","SimpleScope":" lookupType getMessageHandler lookupFormal getFormal getFormalCount getImportedNames getImportedPrefixes setImportedNames setImportedPrefixes makeFormalBindings makeSourceLocation message message message getWorld getEnclosingType world enclosingType bindings importedPrefixes importedNames ZERO_STRINGS javaLangPrefixArray org.aspectj.weaver.patterns.SimpleScope  if (importedName.endsWith(\".\" + name)) {\r\n  XXX doesn't report any problems\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","BaseImpl":"   BaseImpl  ","InnerInterfaceNames":"     ","ErrorTest":" i i j ErrorTest  CE 5 always\r\n  CE 6 always\r\n ","ExpressionException":"   ca.ubc.cs.spl.aspectPatterns.examples.interpreter.aspectj.ExpressionException ca.ubc.cs.spl.aspectPatterns.examples.interpreter.java.ExpressionException  ","InvalidResourceException":"  serialVersionUID org.aspectj.ajde.ui.InvalidResourceException  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Read":"     ","ClassClient":" main  ClassClient C  ","OptionsTests":" suite suite getSpecFile test001 test002 test003 test004  org.aspectj.testing.util.options.OptionsTests org.aspectj.systemtest.options.OptionsTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","IHierarchy":" getElement getRoot setRoot addToFileMap removeFromFileMap setFileMap findInFileMap getFileMapEntrySet isValid findElementForHandle findElementForSignature findElementForLabel findElementForType findElementForSourceFile findElementForSourceLine findElementForSourceLine findElementForOffSet getConfigFile setConfigFile flushTypeMap flushHandleMap updateHandleMap NO_STRUCTURE org.aspectj.asm.IHierarchy  /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","InnerClassesInAnnonymousClasses":" main realMain inner InnerClassesInAnnonymousClasses  ","BcelAccessForInlineMunger":" munge getMatchingSyntheticMember getSignature matches openAroundAdvice createOrGetInlineAccessorForMethod createOrGetInlineAccessorForSuperDispatch createOrGetInlineAccessorForFieldGet createOrGetInlineAccessorForFieldSet m_inlineAccessorBcelMethods m_aspectGen m_inlineAccessorMethodGens org.aspectj.weaver.bcel.BcelAccessForInlineMunger  look for all @Around advices\r\n  add the accessors\r\n  flush some\r\n  we know we cannot inline this advice so no need for futher handling\r\n  ok we found a matching callee member and swapped the instruction with the accessor\r\n  look in the whole method list and not just declared for super calls and alike\r\n  specific handling for super.foo() calls, where foo is non public\r\n  && aspectType.getSuperclass().getName().equals(resolvedMember.getDeclaringType().getName())) {\r\n  too complex to handle new + dup + .. + invokespecial here.\r\n  ok we found a matching callee member and swapped the instruction with the accessor\r\n  open-up method call\r\n  make sure we set inline to true since we have done this analysis\r\n  add static method to aspect\r\n  add new accessor method to aspect bytecode\r\n  flag it synthetic, AjSynthetic\r\n  flag the effective signature, so that we can deobfuscate the signature to apply method call pointcut\r\n  add static method to aspect\r\n  add new accessor method to aspect bytecode\r\n  flag it synthetic, AjSynthetic\r\n  flag the effective signature, so that we can deobfuscate the signature to apply method call pointcut\r\n  add static method to aspect\r\n  add new accessor method to aspect bytecode\r\n  flag it synthetic, AjSynthetic\r\n  flag the effective signature, so that we can deobfuscate the signature to apply method call pointcut\r\n  add static method to aspect\r\n  add new accessor method to aspect bytecode\r\n  flag it synthetic, AjSynthetic\r\n  flag the effective signature, so that we can deobfuscate the signature to apply method call pointcut\r\n  field accessed is static so sole parameter is field value to be set\r\n ","SalesOrder":"   com.designpattern.decorator.SalesOrder  ","MainExecStartLinesErrors":"     ","AutoboxingD":" method_takes_Double method_takes_double main  AutoboxingD  ","AutoboxingC":" method_takes_Character method_takes_char main  AutoboxingC  ","AutoboxingB":" method_takes_Byte method_takes_byte main  AutoboxingB  ","PackagesAndStaticClassesWithTheSameName":" main toString str PackagesAndStaticClassesWithTheSameName  ","SubjectObserverProtocolImpl":"     ","DeclareWarningEmpty":"     ","CallsVRec":"     ","SimpleAnnotatedClass":"   SimpleAnnotatedClass SimpleAnnotatedClass  ","Range":" getBody getStart getEnd isEmpty getRealStart getRealStart getRealEnd getRealEnd getRealNext getRealPrev insert insert append append remap setLineNumberFromNext genStart genEnd genStart genEnd containsTarget updateTarget updateTarget isRangeHandle getRange toString body start end InsideBefore InsideAfter OutsideBefore OutsideAfter RANGEINSTRUCTION name org.aspectj.weaver.bcel.Range  System.err.println(\"    ih \" + ih);\r\n  System.err.println(\"  looking for \" + end);\r\n  basically, we should never weave OutsideBefore.\r\n  assert isRangeHandle(ih)\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","DriversTests":" suite  org.aspectj.testing.drivers.DriversTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC)\r\n *               2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Wes Isberg     added JUnit harness adapters\r\n * ******************************************************************/\r\n","StructureUtil":" getTargets getTargets getDeclareInterTypeTargets getDeclareTargets getPackageDeclarationFromFile genSignature isAnonymous translateAjPathName  org.aspectj.tools.ajdoc.StructureUtil  correct relationships appear against the type in the ajdoc\r\n  !!! using exceptions for logic, fix\r\n  System.err.println(\">>>>>>>> \" + node.getName());\r\n /*String*/\r\n /*String*/\r\n /*IProgramElement */\r\n /*String*/\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","LazyClassGen":" addInlinedSourceFileInfo calculateSourceDebugExtensionOffsets roundUpToHundreds getSourceDebugExtensionOffset getSourceDebugExtensionAttribute getSourceDebugExtensionString disassemble getNewGeneratedNameTag hasSerialVersionUIDField getInternalClassName getInternalFileName getPackagePath getPackageName getClassId addMethodGen addMethodGen errorOnAddedField warnOnAddedInterface warnOnAddedMethod warnOnAddedStaticInitializer warnOnModifiedSerialVersionUID getWorld getMethodGens getFieldGens getField getAnnotations writeBack fixupGenericSignatureAttribute createSignatureAttribute reportClassTooBigProblem hasSourceDebugExtensionAttribute getJavaClass getJavaClassBytesIncludingReweavable addGeneratedInner addInterface setSuperClass getSuperClassname getSuperClass getInterfaceNames getClassGens getChildClasses toString toShortString toLongString print print printOne isEmptyClinit getConstantPoolGen getName isWoven isReweavable getAspectsAffectingType getOrCreateWeaverStateInfo getFactory getStaticInitializer getAjcPreClinit getTjpField addAjcInitializers initializeAllTjps initializeTjp makeString makeString makeString makeString getType getBcelObjectType getFileName addField makeSyntheticAndTransientIfNeeded hasSyntheticAttribute replaceField addField getClassName isInterface isAbstract getLazyMethodGen getLazyMethodGen getLazyMethodGen forcePublic hasAnnotation addAnnotation implementsSerializable isAtLeastJava5 allocateField ACC_SYNTHETIC highestLineNumber inlinedFiles regenerateGenericSignatureAttribute myType myGen constantPoolGen world packageName methodGens classGens annotations childCounter fact isSerializable hasSerialVersionUIDField serialVersionUIDRequiresInitialization calculatedSerialVersionUID hasClinit highestLineNumber offset tjpFields proceedingTjpType tjpType staticTjpType enclosingStaticTjpType sigType factoryType classType org.aspectj.weaver.bcel.LazyClassGen  ---- JSR 45 info\r\n  XXX is not set for types we create\r\n  calculated\r\n  System.err.println(data);\r\n  header section\r\n  stratum section\r\n  file section\r\n  emit line section\r\n  end section\r\n  and finish up...\r\n  For the entire pathname, we're using package names.  This is probably wrong.\r\n  }\r\n  warn about what we've done?\r\n  Do we need to calculate an SUID and add it?\r\n  Non child type, so it comes from a real type in the world.\r\n  strip off the generics guff\r\n  assert gen.getClassName() == super.getClassName();\r\n  ???Collections.unmodifiableList(methodGens);\r\n  FIXME asc Should be collection returned here\r\n  FIXME asc ...although no one calls this right now !\r\n  Add a weaver version attribute to the file being produced (if necessary...)\r\n  we skip empty clinits\r\n  TODO asc generics Temporarily assume that types we generate dont need a signature attribute (closure  1. Has anything changed that would require us to modify this attribute?\r\n  2. Find the old attribute\r\n  if null, this is a type built from scratch, it won't already have a sig attribute\r\n  3. Do we need an attribute?\r\n  If we had one before, we definetly still need one as types can't be 'removed' from the hierarchy\r\n  check the supertype\r\n  check the interfaces\r\n  first, the type variables...\r\n  now the supertype\r\n  rest of the process.\r\n  raise an error against this compilation unit.\r\n  getOrCreateWeaverStateInfo();\r\n  reweavableDataInserted = true;\r\n  used for the attribute\r\n  used in the real class data\r\n  FIXME asc not great that some of these ask the gen and some ask the type ! (see the related setters too)\r\n  non-recursive, may be a bug, ha ha.\r\n  XXX this could be bad, check use of dollar signs.\r\n  XXX make sure to pass types correctly around, so this doesn't happen.\r\n  we skip empty clinits\r\n  System.err.println(\"checking clinig: \" + gen);\r\n  reflective thisJoinPoint support\r\n  new ObjectType(\"org.aspectj.lang.reflect.SourceLocation\");\r\n  advice is inlined. (PR71377)\r\n  TAG:SUPPORTING12: We didn't have different staticjp types in 1.2\r\n  make a new factory\r\n  XXX check that this works correctly for inners  a ClassNotFoundException\r\n  load the factory\r\n  load the kind\r\n  create the signature\r\n  its the magical new jp\r\n  makeString(\"\")));  makeString(\"\")));  For methods, push the parts of the signature on.\r\n  And generate a call to the variant of makeMethodSig() that takes 7 strings\r\n  TAG:SUPPORTING12: We didn't have optimized factory methods in 1.2\r\n  XXX should load source location from shadow\r\n  put it in the field\r\n  TAG:SUPPORTING12: We didn't have makeESJP() in 1.2\r\n  put it in the field\r\n  ??? expensive\r\n  this behavior matches the string used by the eclipse compiler for Foo.class literals\r\n  this is the inverse of the odd behavior for Class.forName w  first do transient\r\n  add the synthetic modifier flag\r\n  then do synthetic\r\n  belt and braces, do the attribute even on Java 5 in addition to the modifier flag\r\n  annotations on the real thing\r\n  a warning message!\r\n /* <String, InlinedSourceFileInfo> */\r\n /*LazyMethodGen*/\r\n /*LazyClassGen*/\r\n /*AnnotationGen*/\r\n /* Does this class support serialization */\r\n /*BcelShadow, Field*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC                 initial implementation \r\n *     Andy Clement  6Jul05 generics - signature attribute\r\n * ******************************************************************/\r\n","SimpleVarargs":" main callfoo foo fooInt moo main main callfoo  SimpleVarargs SimpleVarargs SimpleVarargs  ","PatternNodeVisitor":" visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit get append append visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit check check main sb inThrowsForbidden org.aspectj.weaver.patterns.PatternNodeVisitor  Annotation type patterns\r\n  Regular type patterns\r\n  Pointcuts\r\n  Per-clauses\r\n  Declares\r\n  Miscellaneous patterns\r\n  Catch-all\r\n  TODO no idea when this one is used\r\n  @ANY : ignore\r\n  Note: list is \",\", and is \" \" separated for annotations\r\n  append('@');   TODO AV - ugly\r\n  note: node takes care of forbidden mods\r\n  Note: we know we have 1 child\r\n  Note: a visitor instance is not thread safe so should not be shared\r\n  a hack since throws !(A, B) cannot be parsed\r\n  FIXME mh, error prone, can't we have a nullNamePattern ?\r\n  TODO shouldn't that be a \"false\" ?\r\n  at second parsing, the String form stay stable when parsed and parsed again\r\n  \"staticinitialization(@(Foo) @(Boo) @(Goo) Moo)\",\r\n ","AImpl":"   a_impl.AImpl  ","javaBean":"     ","BuildOptionsPanel":" loadOptions saveOptions getDefault jbInit serialVersionUID INSTANCE titledBorder1 border1 border2 jPanel3 borderLayout6 jPanel4 compileOptions_panel1 build_panel1 borderLayout8 options_box1 borderLayout5 jPanel2 jPanel1 build_panel nonStandard_field compileOptions_panel workingDir_label nonStandard_label borderLayout4 borderLayout3 borderLayout2 fields_box borderLayout1 borderLayout7 options_box2 spacer_label assertions_checkBox oneFive_checkBox options_box spacer_label1 org.aspectj.ajde.ui.swing.BuildOptionsPanel  private ButtonGroup compilerMode_buttonGroup = new ButtonGroup();\r\n  private Border border5;\r\n  private JRadioButton lenient_radioButton = new JRadioButton();\r\n  private JTextField workingDir_field = new JTextField();\r\n  JTextArea incrementalNote = new JTextArea();\r\n  JCheckBox preprocess_checkBox = new JCheckBox();\r\n  AjdeUIManager.getDefault().getBuildOptions().setSourceOnePointFourMode(true);\r\n  BorderFactory.createEmptyBorder(5, 5, 5, 5));\r\n  titledBorder2.setTitleFont(new java.awt.Font(\"Dialog\", 0, 11));\r\n  workingDir_field.setPreferredSize(new Dimension(350, 21));\r\n  incrementalNote.setText(INCREMENTAL_NOTE);\r\n  preprocess_checkBox.setText(\"Only preprocess and generate .java source files\");\r\n  jPanel2.add(workingDir_field, BorderLayout.EAST);\r\n  options_box2.add(incrementalNote, null);\r\n  options_box.add(incremental_checkBox, null);\r\n  options_box1.add(strict_radioButton, null);\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation,\r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     Xerox/PARC     initial implementation\r\n * ******************************************************************/\r\n","BasicToken":" makeOperator makeIdentifier makeLiteral getStart getEnd getFileName getString isIdentifier maybeGetParsedPointcut toString getLiteralKind value isIdentifier literalKind start end org.aspectj.weaver.patterns.BasicToken  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","TypeNotImportedInAroundCE":"     ","p1":"   p1  deliberate conflict with package p1\r\n ","p2":"   p1.p2  ","AbstractPointcutAccess":"     ","ANEWARRAY":" getExceptions accept getLoadClassType  org.aspectj.apache.bcel.generic.ANEWARRAY  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","DiscardHelp":"     ","AjbrowserTests":" suite testNothing  org.aspectj.tools.ajbrowser.AjbrowserTests  $JUnit-END$\r\n  keep JUnit happy...\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","NewAnonymous":"     ","AutowiredXMLBasedAjcTestCase":" addTest getSuiteTests loadSuite setUp runTest testMap org.aspectj.testing.AutowiredXMLBasedAjcTestCase  wire the spec file\r\n  it could be refined to lookup in the hierarchy as well, and excluding private method as JUnit does.\r\n /*\r\n\t * Return a map from (String) test title -> AjcTest\r\n\t */\r\n /* (non-Javadoc)\r\n             * @see junit.extensions.TestSetup#setUp()\r\n             */\r\n /* (non-Javadoc)\r\n             * @see junit.extensions.TestSetup#tearDown()\r\n             */\r\n /* (non-Javadoc)\r\n     * @see org.aspectj.tools.ajc.AjcTestCase#setUp()\r\n     */\r\n","TimerLog":"     ","AutoboxingZ":" method_takes_Boolean method_takes_boolean main  AutoboxingZ  ","AbstractPatternNodeVisitor":" visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit  org.aspectj.weaver.patterns.AbstractPatternNodeVisitor  /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.AnyTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.NoTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.EllipsisTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.AnyAnnotationTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.EllipsisAnnotationTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.AndAnnotationTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.AndPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.AndTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.AnnotationPatternList, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.AnnotationPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.ArgsAnnotationPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.ArgsPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.BindingAnnotationTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.BindingTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.CflowPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.ConcreteCflowPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.DeclareAnnotation, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.DeclareErrorOrWarning, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.DeclareParents, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.DeclarePrecedence, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.DeclareSoft, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.ExactAnnotationTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.ExactTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.HandlerPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.IfPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.KindedPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.ModifiersPattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.NamePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.NotAnnotationTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.NotPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.NotTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.OrAnnotationTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.OrPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.OrTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.PerCflow, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.PerFromSuper, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.PerObject, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.PerSingleton, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.PerTypeWithin, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.PatternNode, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.ReferencePointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.SignaturePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.ThisOrTargetAnnotationPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.ThisOrTargetPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.ThrowsPattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.TypePatternList, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.WildAnnotationTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.WildTypePattern, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.WithinAnnotationPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.WithinCodeAnnotationPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.WithinPointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.WithincodePointcut, java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PointcutVisitor#visit(org.aspectj.weaver.patterns.Pointcut.MatchesNothingPointcut, java.lang.Object)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","AutoboxingS":" method_takes_Short method_takes_short main  AutoboxingS  ","AjdeInteractionTestbed":" configureBuildStructureModel configureNewProjectDependency configureNonStandardCompileOptions configureAspectPath configureOutputLocationManager configureResourceMap getWorkingDir setUp tearDown build fullBuild build fullBuild pause setMessageHandler getMessageHandler printCompiledAndWovenFiles printBuildReport wasFullBuild getTimeTakenForBuild getCompiledFiles getWovenClasses log lognoln getFile getInstance handleWarning handleError handleError getErrorMessages getInstance reset setActiveProject addDependancy setSourcePathResources setClasspath setAspectpath getProjectName getRootProjectDir getBuildConfigFiles getDefaultBuildConfigFile getLastActiveBuildConfigFile getProjectSourceFiles getProjectSourcePath getClasspath getOutputPath setOutputLocationManager getOutputLocationManager getBootClasspath getClassToExecute getExecutionArgs getVmArgs getInJars getInpath getSourcePathResources getOutJar getSourceRoots getAspectPath log getInstance reset hasFinished getCompiledFiles getWovenClasses start setProgressText setProgressBarVal incrementProgressBarVal setProgressBarMax getProgressBarMax finish getTimeTaken log wasFullBuild reset hasErrorMessages getErrorMessages getWarningMessages getWeavingMessages getInstance addSourcelineTask addSourcelineTask hasWarning addProjectTask clearTasks log setNonStandardOptions reset getInstance getJavaOptionsMap getUseJavacMode getWorkingOutputPath getPreprocessMode getCharacterEncoding getSourceOnePointFourMode getIncrementalMode getLenientSpecMode getStrictSpecMode getPortingMode getNonStandardOptions getComplianceLevel getSourceCompatibilityLevel getWarnings getDebugLevel getNoImportError getPreserveAllLocals getInstance reset pathChangeDetected aboutToCompareClasspaths detectedClassChangeInThisDir detectedAspectDeleted buildSuccessful getDecisions wasFullBuild recordDecision VERBOSE testdataSrcDir sandboxDir buildModel _instance errorMessages VERBOSE _instance projectName classPath aspectPath sourcePathResources outputLocationManager dependants VERBOSE _instance compiledFiles wovenClasses starttime totaltimetaken finished wasFullBuild CANT_BUILD_INCREMENTAL_INDICATION DOING_BATCH_BUILD_INDICATION VERBOSE _instance receivedNonIncrementalBuildMessage receivedBatchBuildMessage errorMessages warningMessages weavingMessages _instance nonstandardoptions _instance informedAboutKindOfBuild fullBuildOccurred detectedDeletions decisions pathChange org.aspectj.systemtest.incremental.tools.AjdeInteractionTestbed  do you want the gory details?\r\n  Methods for configuring the build\r\n  Create a sandbox in which to work\r\n  delay to allow previous runs build stamps to be OK\r\n  Configure the necessary providers and listeners for this compile\r\n  Do the compile\r\n  Wait for it to complete\r\n  What happened?\r\n  delay to allow previous runs build stamps to be OK\r\n  Configure the necessary providers and listeners for this compile\r\n  Do the compile\r\n  Wait for it to complete\r\n  What happened?\r\n  return MyBuildProgressMonitor.wasFullBuild();\r\n  DOESSOMETHING\r\n  DOESSOMETHING\r\n  look at dependant projects\r\n  System.err.println(\"For project \"+projectName+\" getClasspath() returning \"+cp);\r\n  DOESSOMETHING\r\n  -----------------------\r\n  }\r\n  DOESSOMETHING\r\n  DOESSOMETHING\r\n  public void recordInformation(String s) { decisions.append(s).append(\"\\n\");}\r\n /*String*/\r\n /*IMessage*/\r\n /*IMessage*/\r\n /*IMessage*/\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n * Andy Clement          initial implementation\r\n * ******************************************************************/\r\n","MethodSigs":" main want w have have realMain lists a a a a a a a a a a a a a integers f f f f want MethodSigs  ","IntroductionsOverriding":"     ","AutoboxingJ":" method_takes_Long method_takes_long main  AutoboxingJ  ","AutoboxingI":" method_takes_Integer method_takes_int main  AutoboxingI  ","OptionType":"   com.test.OptionType  ","BindingInNotCf":"     ","AutoboxingF":" method_takes_Float method_takes_float main  AutoboxingF  ","ElementValueGenTest":" setUp createClassGen testCreateIntegerElementValue testCreateFloatElementValue testCreateDoubleElementValue testCreateLongElementValue testCreateCharElementValue testCreateByteElementValue testCreateBooleanElementValue testCreateShortElementValue testCreateStringElementValue testCreateEnumElementValue testCreateClassElementValue checkSerialize tearDown  org.aspectj.apache.bcel.classfile.tests.ElementValueGenTest  Creation of an element like that should leave a new entry in the cpool\r\n  Creation of an element like that should leave a new entry in the cpool\r\n  Creation of an element like that should leave a new entry in the cpool\r\n  Creation of an element like that should leave a new entry in the cpool\r\n  Creation of an element like that should leave a new entry in the cpool\r\n  Creation of an element like that should leave a new entry in the cpool\r\n  1 == true\r\n  Creation of an element like that should leave a new entry in the cpool\r\n  Create HelloWorld\r\n  Creation of an element like that should leave a new entry in the cpool\r\n  Supports rainbow :)\r\n  Creation of an element like that should leave a new entry in the cpool\r\n ","ConcreteAspectCodeGen":" validate getOutstandingAbstractMethods getOutstandingAbstractMethodsHelper stringify hasPointcutAnnotation getBytes reportError EMPTY_STRINGS EMPTY_TYPES m_concreteAspect m_world m_isValid m_parent m_perClause org.aspectj.weaver.loadtime.ConcreteAspectCodeGen  name must be undefined so far\r\n  no need to checks more in that special case\r\n  it can happen that extends is null, for precedence only declaration\r\n  fallback on inner class lookup mechanism\r\n  handle inner classes\r\n  extends must be abstract\r\n  m_parent must be aspect\r\n  must have all abstractions defined\r\n  error, an outstanding abstract method that can't be concretized in XML\r\n  it may be a pointcut but it doesn't meet the requirements for XML concretization\r\n  error, an outstanding abstract method that can't be concretized in XML\r\n  Allow for the abstract pointcut being from a code style aspect compiled with -1.5 (see test for 128744)\r\n  them if they get defined further down the hierarchy\r\n  Get to the top\r\n  concretized.\r\n  TODO AV - we could point to the aop.xml that defines it and use JSR-45\r\n  @Aspect public class ...\r\n  default constructor\r\n  TODO AV - respect visibility instead of opening up?\r\n  handle the perClause\r\n  register the fresh new class into the world repository as it does not exist on the classpath anywhere\r\n ","AjdocTaskTester":" getAntFile getUserProperties test_stylesheetfile test_helpfile test_nodeprecatedlist_no test_nodeprecatedlist_yes test_nodeprecated_no test_nodeprecated_yes test_use_no test_use_yes test_standard_no test_standard_yes test_author_no test_author_yes test_public_no test_public_yes test_package_no test_package_yes test_protected_no test_protected_yes test_private_no test_private_yes test_splitindex_no test_splitindex_yes test_windowtitle test_doctitle test_bottom test_footer test_header test_nohelp_no test_nohelp_yes test_noindex_no test_noindex_yes test_notree_no test_notree_yes test985 test986 test987 test988 test989 test990 test991 test992 test993 test994 test995 test996 test997 test998 test999 wantFiles avoid beforeEveryTask afterEveryTask avoidFiles avoidFiles wantFiles wantFiles checkDocs init makeDocDir clearDocDir main TEST_DOCDIR TEST_SOURCES docDir OVERVIEW_TREE_HTML INDEX_ALL_HTML DEPRECATED_LIST_HTML ALLCLASSES_FRAME_HTML INDEX_HTML PACKAGES_HTML OVERVIEW_SUMMARY_HTML PACKAGE_LIST HELP_DOC_HTML STYLESHEET_CSS ALL TOP FILES MODS AjdocTaskTester  userProps.put(\"ajdoc.relative.src.dir\", TEST_SOURCES);\r\n ","PackagesAndAdviceCf":"     ","SignalMainRunnable":"     ","ComputedThrows":"     ","DeclaredExceptions":"     ","BcelField":" unpackAttributes isAjSynthetic isSynthetic hasAnnotation getAnnotationTypes getAnnotations ensureAnnotationTypesRetrieved addAnnotation getGenericReturnType unpackGenericSignature evictWeavingState AccSynthetic field isAjSynthetic isSynthetic annotations world bcelObjectType genericFieldType unpackedGenericSignature org.aspectj.weaver.bcel.BcelField  in 1.5, synthetic is a modifier, not an attribute\r\n  || getName().startsWith(NameMangler.PREFIX);\r\n  Add it to the set of annotations\r\n  Add it to the set of annotation types\r\n  level??\r\n  get from generic\r\n  lookup\r\n  development bug, fail fast with good info\r\n  this.sourceContext = SourceContextImpl.UNKNOWN_SOURCE_CONTEXT;\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ChainOfResponsibilityProtocol":"     ","Source14Assert":" method1 invoke main  Source14Assert  ","ImportingStaticInnerInterfacesStars_PR386":" main  ImportingStaticInnerInterfacesStars_PR386 I1 I2 I3  ","IfPCDExprAssignUnparseFailure":"     ","Verifier":" doPass1 doPass2 doPass3a doPass3b getClassName flush getMessages main classname p1v p2v p3avs p3bvs org.aspectj.apache.bcel.verifier.Verifier  avoid swapping.\r\n ","GUIColleague":" setMediator  ca.ubc.cs.spl.aspectPatterns.examples.mediator.java.GUIColleague  ","PlainJava":" getI mumble i foo.PlainJava  ","NamedCrosscuts":"     ","WarnDeprecated":" main  WarnDeprecated  CE 10 deprecated if warn:deprecated\r\n ","Iface":"   sample.Iface  ","TypeVariableDeclaringElement":" getTypeVariableNamed  org.aspectj.weaver.TypeVariableDeclaringElement  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Andy Clement\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","TwoIntros":"     ","CompilerMessagesPanel":" mouseClicked addSourcelineTask addSourcelineTask addProjectTask checkIfWarning clearTasks jbInit hasWarning serialVersionUID jScrollPane1 list listModel borderLayout1 hasWarning org.aspectj.tools.ajbrowser.CompilerMessagesPanel  private JScrollPane jScrollPane2 = new JScrollPane();\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","FieldAnnotationsTest":" setUp testFieldAnnotations testFieldAnnotationsReadWrite testFieldAnnotationsModification checkAnnotatedField checkAnnotation checkValue tearDown  org.aspectj.apache.bcel.classfile.tests.FieldAnnotationsTest  Write it out\r\n  there are two fields in the class, removing and readding has changed the order\r\n  so this time index [1] is the 'int i' field\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation \r\n * ******************************************************************/\r\n","StarImplementation":" printLine printDecor printText printLine printDecor printText  ca.ubc.cs.spl.aspectPatterns.examples.bridge.aspectj.StarImplementation ca.ubc.cs.spl.aspectPatterns.examples.bridge.java.StarImplementation  ","DesignE":"     ","DesignD":"     ","DesignC":"     ","DeclareInterfaceImplementsClass":"     ","DesignB":"     ","DesignA":"     ","AbstractIconRegistry":" getIcon getStructureIcon getIcon createIcon RESOURCE_PATH STRUCTURE_PATH PROJECT PACKAGE ASPECT INITIALIZER INTRODUCTION CONSTRUCTOR POINTCUT ADVICE DECLARE_PARENTS DECLARE_WARNING DECLARE_ERROR DECLARE_SOFT CODE ERROR FILE FILE_JAVA FILE_ASPECTJ FILE_LST METHOD FIELD ENUM_VALUE ENUM ANNOTATION CLASS INTERFACE RELATION_ADVICE_FORWARD RELATION_ADVICE_BACK RELATION_INHERITANCE_FORWARD RELATION_INHERITANCE_BACK RELATION_REFERENCE_FORWARD RELATION_REFERENCE_BACK org.aspectj.ajde.ui.AbstractIconRegistry  ??? should be enum value icon\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","EclipseClassPathManager":" setNameEnvironment addPath find getAllClassFiles toString getInputStream close getPath nameEnv source is org.aspectj.ajdt.internal.core.builder.EclipseClassPathManager  whereas a name environment may be constructed per-compile.\r\n  XXX - but better than the alternative hacks\r\n  Should never happen !\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.bcel.ClassPathManager#addPath(java.lang.String, org.aspectj.bridge.IMessageHandler)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.bcel.ClassPathManager#find(org.aspectj.weaver.UnresolvedType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.bcel.ClassPathManager#getAllClassFiles()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#toString()\r\n\t */\r\n /* (non-Javadoc)\r\n\t\t * @see org.aspectj.weaver.bcel.ClassPathManager.ClassFile#getInputStream()\r\n\t\t */\r\n /* (non-Javadoc)\r\n\t\t * @see org.aspectj.weaver.bcel.ClassPathManager.ClassFile#getPath()\r\n\t\t */\r\n","ClassWithStaticInnerInterfaces":"   ClassWithStaticInnerInterfaces  ","SubAtAj":"   SubAtAj  ","MultipleArgs":" a1 a2 a3 main doit callone calltwo callthree callfour  MultipleArgs Test  ","DesignG":"     ","DesignF":"     ","ModifiersPattern":" toString equals hashCode matches read write getModifierFlag accept requiredModifiers forbiddenModifiers ANY modifierFlags org.aspectj.weaver.patterns.ModifiersPattern  s.writeByte(MODIFIERS_PATTERN);\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Dump":" preserveOnNextReset reset dump dumpWithException dumpOnExit shouldDumpOnExit setDumpOnException getDumpOnException setDumpOnExit setDumpOnExit getDumpOnExit getLastDumpFileName saveCommandLine saveFullClasspath saveMessageHolder registerNode getFileName dumpDefault dumpException dumpAspectJProperties dumpDumpConfiguration dumpFullClasspath dumpSytemProperties dumpCommandLine dumpCompilerMessages openDump close println println println println println println accept visitString visitList FILENAME_PREFIX FILENAME_SUFFIX UNKNOWN_FILENAME DUMP_EXCLUDED NULL_OR_EMPTY exceptionClass conditionKind reason fileName print savedCommandLine savedFullClasspath savedMessageHolder nodes lastDumpFileName preserveOnNextReset org.aspectj.weaver.Dump  private static final DateFormat timeFormat = new SimpleDateFormat(\"HHmmss.SSS\");\r\n /* Format for unique filename based on date & time */\r\n /*\r\n\t * Dump methods\r\n\t */\r\n /*\r\n\t * Dump configuration\r\n\t */\r\n /*\r\n\t * Dump registration\r\n\t */\r\n /*\r\n\t * Dump methods\r\n\t */\r\n /*\r\n\t\t * Dump registered nodes\r\n\t\t */\r\n /*\r\n\t * Dump output\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Matthew Webster \r\n * ******************************************************************/\r\n","Expr":" accept getType makeFieldGet makeCallExpr makeStringConstantExpr NONE org.aspectj.weaver.ast.Expr  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ClassWithInnerInterfaces":"   ClassWithInnerInterfaces  ","SimpleStructureViewToolPanel":" elementsUpdated updateCurrConfigLabel jbInit forward_button_actionPerformed back_button_actionPerformed structureView_button_actionPerformed hideNonAJ_button_actionPerformed hideAssociations_button_actionPerformed sort_button_actionPerformed serialVersionUID currentView separator_button hideNonAJEnabled hideAssociationsEnabled sortEnabled border1 border2 structureView_button label_panel currConfig_field spacer_panel jPanel2 forward_button navigation_panel back_button borderLayout1 buttons_panel borderLayout2 borderLayout3 borderLayout4 MODEL_LISTENER hideNonAJ_button navigation_panel1 hideAssociations_button borderLayout5 sort_button org.aspectj.ajde.ui.swing.SimpleStructureViewToolPanel  currConfig_field.setEditable(false);\r\n  label_panel.add(structureView_button,  BorderLayout.WEST);\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","RemovingFinals":"     ","TraceMembers":"     ","UserCf":" main  UserCf  ","NotTypePattern":" getNegatedPattern couldEverMatchSameTypesAs matchesInstanceof matchesExactly matchesExactly matchesStatically setAnnotationTypePattern setIsVarArgs write read resolveBindings parameterizeWith toString equals hashCode accept traverse negatedPattern org.aspectj.weaver.patterns.NotTypePattern  ??? we override all methods that care about includeSubtypes\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.TypePattern#couldEverMatchSameTypesAs(org.aspectj.weaver.patterns.TypePattern)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#equals(java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#hashCode()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Ajava2":" getAddress getAddress  Ajava2 t.Ajava2  ","DominatesWithCommas":"     ","AfterThrowingNonThrowable":"     ","AtTargetAspect":"     ","TesterTest":" main testEventArrayPattern testEventStringPattern testNotePattern clear assertSize gotPass gotFail gotItem isIgnoring dontIgnore handleMessage ME failures passes org.aspectj.testing.TesterTest  --------- positive test - got expected events\r\n  --------- failed to get expected events\r\n  --------- got and didn't get expected events\r\n  --------- positive test - got expected events\r\n  --------- failed to get expected events\r\n  --------- got and didn't get expected events\r\n  --------- positive test - got expected events\r\n  --------- failed to get expected events\r\n  --------- got and didn't get expected events\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Simple":" m1 m2 main mSecret  Simple  ","RunnableSub":"     ","PCDeclarationArgsCE":"     ","FREM":" accept  org.aspectj.apache.bcel.generic.FREM  ","IToken":" getString isIdentifier getLiteralKind maybeGetParsedPointcut EOF org.aspectj.weaver.patterns.IToken  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Observer":" setSubject getSubject update update  observer.Observer Observer  Observer.java\r\n /*\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n*/\r\n","SwingTreeViewNodeFactory":" createDeclaration createLink createRelationship  org.aspectj.ajde.ui.swing.SwingTreeViewNodeFactory  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","FADD":" accept  org.aspectj.apache.bcel.generic.FADD  ","DeclareMethodCE":"     ","DeclareSoftCf":"     ","IntertypeDifferentThrows":"     ","IfPcd":"     ","BoundPoint":"     ","Call":" pickup isConnected hangup includes merge accept getArgs getMethod caller receiver connections method args telecom.Call org.aspectj.weaver.ast.Call  assert m.return value is boolean\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","TernaryPrimitiveOps":" main realMain  TernaryPrimitiveOps  /*\r\n * The following ternary operation wasn't working:\r\n *\r\n *   byte b = (byte)2;\r\n *   boolean t = true;\r\n *   byte next = t ? 1: b;\r\n */\r\n","IProgramElement":" getChildren setChildren addChild removeChild setExtraAdviceInformation getExtraAdviceInformation toString setExtraInfo getExtraInfo getParent setParent getName setName getDetails setDetails getKind setKind getModifiers setModifiers getAccessibility getDeclaringType getPackageName setCorrespondingType getCorrespondingType getCorrespondingType toSignatureString toSignatureString setRunnable isRunnable isImplementor setImplementor isOverrider setOverrider getMessage setMessage getSourceLocation setSourceLocation toString getFormalComment setFormalComment toLinkLabelString toLinkLabelString toLabelString toLabelString getParameterNames setParameterNames getParameterSignatures setParameterSignatures getParameterTypes getHandleIdentifier getHandleIdentifier setHandleIdentifier toLongString getBytecodeName getBytecodeSignature setBytecodeName setBytecodeSignature getSourceSignature setSourceSignature walk toString readResolve toString readResolve getKindForString toString getNonAJMemberKinds isMember isInterTypeMember isType isSourceFile isDeclare isDeclareAnnotation readResolve serialVersionUID extraInfo serialVersionUID STATIC FINAL ABSTRACT SYNCHRONIZED VOLATILE STRICTFP TRANSIENT NATIVE ALL name nextOrdinal ordinal serialVersionUID PUBLIC PACKAGE PROTECTED PRIVATE PRIVILEGED ALL name nextOrdinal ordinal serialVersionUID PROJECT PACKAGE FILE FILE_JAVA FILE_ASPECTJ FILE_LST IMPORT_REFERENCE CLASS INTERFACE ASPECT ENUM ENUM_VALUE ANNOTATION INITIALIZER INTER_TYPE_FIELD INTER_TYPE_METHOD INTER_TYPE_CONSTRUCTOR INTER_TYPE_PARENT CONSTRUCTOR METHOD FIELD POINTCUT ADVICE DECLARE_PARENTS DECLARE_WARNING DECLARE_ERROR DECLARE_SOFT DECLARE_PRECEDENCE CODE ERROR DECLARE_ANNOTATION_AT_CONSTRUCTOR DECLARE_ANNOTATION_AT_FIELD DECLARE_ANNOTATION_AT_METHOD DECLARE_ANNOTATION_AT_TYPE ALL name nextOrdinal ordinal org.aspectj.asm.IProgramElement  Could be just a string but may prove more useful as an object in the long run ...\r\n  TODO: remove (Emacs uses it)\r\n  The 4 declarations below are necessary for serialization\r\n  The 4 declarations below are necessary for serialization\r\n  The 4 declarations below are necessary for serialization\r\n /*IProgramElement*/\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","TestingDriversModuleTests":" suite  org.aspectj.testing.TestingDriversModuleTests  ","pr62642":"     ","AroundHandler":"     ","NestedConstructionsOfLocalClasses":" main  NestedConstructionsOfLocalClasses  ","EmptyClass":"   EmptyClass  ","InnerFieldRef":" main m foo x b InnerFieldRef Foo  ","AndPointcut":" getLeft setLeft getRight setRight propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty clone0 subtreeMatch0 accept0 treeSize couldMatchKinds fastMatch matchInternal toString equals hashCode resolveBindings write read findResidueInternal concretize1 parameterizeWith getLeft getRight accept traverse left LEFT_PROPERTY right RIGHT_PROPERTY left right couldMatchKinds org.aspectj.org.eclipse.jdt.core.dom.AndPointcut org.aspectj.weaver.patterns.AndPointcut  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  allow default implementation to flag the error\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  exposed for testing\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","LSUB":" accept  org.aspectj.apache.bcel.generic.LSUB  ","Ship":"     ","AbstractSimulation":" run report wait say simulation telecom.AbstractSimulation  XXX cheat and only wait 0.1 seconds per second\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","ArrayInc1CE":" getIRA getObject testObjectIncrementingCE IRA OBJECT ArrayIncCE  CE + not applied to int[], int\r\n  CE + not applied to Object, int\r\n  CE unary + not applied to int[]\r\n  CE unary + not applied to int[]\r\n  CE string + not applied to String[], String\r\n ","OptionList":" getSelectedValues createListHtmlFromApi main OPTION_PATTERN GETTER_ARGS GETTER_ARG_TYPES DELIM cap.OptionList  for each valueName, use reflection to look up data from the api\r\n  set the first and second value arguments for the pattern\r\n  now, handle the option part\r\n ","DeleteMe.delete.20":" main  Main  ","Aoriginal":"     ","BetaA.delete.40":"     ","GenericSignatureParser":" parseAsClassSignature parseAsMethodSignature parseAsFieldSignature parseFormalTypeParameter parseFieldTypeSignature parseArrayTypeSignature parseClassTypeSignature parseSimpleClassTypeSignature parseTypeArgument maybeParseTypeArguments parseTypeVariableSignature maybeEat eat eatIdentifier tokenize inputString tokenStream tokenIndex org.aspectj.apache.bcel.classfile.GenericSignatureParser  for parse in flight\r\n  FormalTypeParameters-opt\r\n  FormalTypeParameters-opt\r\n  Parameters\r\n  return type\r\n  throws\r\n  Identifier\r\n  ClassBound\r\n  Optional InterfaceBounds\r\n  anything other than 'L', 'T' or '[' and we're out of here\r\n  opening [ already eaten\r\n  must be BaseType array\r\n  dont forget this...\r\n  now parse possible nesteds...\r\n  outer type completed\r\n  or a \"<\" indication type arguments, or \";\" and we are done.\r\n  L PackageSpecifier* SimpleClassTypeSignature ClassTypeSignature* ;\r\n  deliberate fall-through\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","MethodDocImpl":" setType methodDec isMethod isAbstract returnType overriddenClass modifierSpecifier type org.aspectj.tools.ajdoc.MethodDocImpl  Exprs params = getFormals().makeExprs();   XXX interface methods have the ABSTRACT bit set\r\n /*\r\n     * This is a hack because the compiler isn't resolving\r\n     * introduced types.\r\n     */\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","StrictFpCompile":" main go test2 test1 test2 test3 test4 test2 test3 test4 ran d StrictFpCompile StrictInterface StrictClass NonStrictClass OuterStrictClass  Ok, may not be generated with strictfp modifier\r\n  Ok, must be generated with strictfp modifier\r\n  Ok\r\n  Ok, must not generate strictfp, but has to set strictfp in bytecode\r\n  Ok, may be generated with strictfp modifier\r\n  Ok, may be generated with strictfp modifier\r\n  Ok, may be generated with strictfp modifier\r\n  Ok, may be generated with strictfp modifier\r\n  Ok, must be generated with strictfp modifier\r\n  Ok\r\n  Ok, may not be generated with strictfp modifier\r\n  Ok, must be generated with strictfp modifier\r\n  Ok, must be generated with strictfp modifier\r\n  Ok, may not be generated with strictfp modifier\r\n  Ok, may be generated with strictfp modifier\r\n  Ok, may be generated with strictfp modifier\r\n  Ok\r\n ","AuditImpl":" getLastUpdatedBy setLastUpdatedBy lastUpdatedBy AuditImpl  ","pr99191_3":"     ","pr99191_2":"     ","pr99191_1":"     ","IReflectionWorld":" getAnnotationFinder resolve  org.aspectj.weaver.reflect.IReflectionWorld  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Ron Bodkin     initial implementation \r\n * ******************************************************************/\r\n","NoFormalsCrosscut":"     ","pr99191_6":"     ","pr99191_5":"     ","ConstantFieldref":" accept  org.aspectj.apache.bcel.classfile.ConstantFieldref  ","pr99191_4":"     ","Numbered":"   uniqueId.Numbered  ","GenericTreeNodeFactoryI":" getRootClass createGenericTreeNode  org.aspectj.testing.compare.adapters.GenericTreeNodeFactoryI  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","IntroOnIntro":"     ","ShadowRange":" associateWithTargets associateWithShadow getKind toString extractInstructionsInto getShadow shadow org.aspectj.weaver.bcel.ShadowRange  assert body.contains(start) && body.contains(end);\r\n  first we copy the instruction itself.\r\n  Now we add it to the new instruction list.\r\n  update the target(s) to point to the new copy instead of the old copy.\r\n  delete it.\r\n  branches will be copied along with us.\r\n  exceptions and shadows are just moved\r\n  but only for a call or get join point, so no big deal\r\n  if we're extracting a whole block we can do this...\r\n  as double-wides, in case the location is found to hold a double-wide later.\r\n  of remapping...\r\n  targets, but since TargetLostException is checked, we have to do this stuff.\r\n  now add the return, if one is warranted.\r\n  we really should pull this out somewhere...\r\n  and remap all the old targeters of the end handle of the range to the return.\r\n  shouldn't be the case, but let's test for paranoia\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","GeneratingAnnotatedClassesTest":" setUp testGenerateClassLevelAnnotations testGenerateMethodLevelAnnotations1 testGenerateMethodLevelAnnotations2 testTransformClassToClassGen_SimpleTypes testTransformClassToClassGen_EnumType testTransformClassToClassGen_ArrayAndAnnotationTypes testTransformComplexClassToClassGen testModifyingClasses1 testModifyingClasses2 dumpClass dumpClass buildClassContentsWithAnnotatedMethods buildClassContents getClassFrom createClassGen createMethodGen createSimpleVisibleAnnotation createFruitAnnotation createCombinedAnnotation createSimpleInvisibleAnnotation tearDown  org.aspectj.apache.bcel.classfile.tests.GeneratingAnnotatedClassesTest  Create HelloWorld\r\n  Create HelloWorld\r\n  Check annotation is OK\r\n  Check annotation is OK\r\n  Check it now it is a ClassGen\r\n  Check it finally when the Method is changed to a MethodGen\r\n  Create HelloWorld\r\n  Main method after reading the class back in\r\n  Check annotations are correctly preserved\r\n  Check annotations are correctly preserved\r\n  Check annotations are correctly preserved\r\n  Check annotations are correctly preserved\r\n  Create method 'public static void main(String[]argv)'\r\n  Use predefined constant\r\n  \"in\" valid from here\r\n  \"name\" valid from here\r\n  Type.STRING, Type.NO_ARGS, Constants.INVOKEVIRTUAL));\r\n  Allow instruction handles to be reused\r\n  Create method 'public static void main(String[]argv)'\r\n  Use predefined constant\r\n  \"in\" valid from here\r\n  \"name\" valid from here\r\n  Type.STRING, Type.NO_ARGS, Constants.INVOKEVIRTUAL));\r\n  Allow instruction handles to be reused\r\n  access flags\r\n  return type\r\n  argument types\r\n  arg names\r\n  method, class\r\n  method, class\r\n  Create an annotation instance\r\n /*\r\n\t * Steps in the test:\r\n\t * 1) Programmatically construct the HelloWorld program\r\n\t * 2) Add two simple annotations at the class level\r\n\t * 3) Save the class to disk\r\n\t * 4) Reload the class using the 'static' variant of the BCEL classes\r\n\t * 5) Check the attributes are OK\r\n\t */\r\n","TryNoCatchCE":"     ","LDC_W":" initFromFile  org.aspectj.apache.bcel.generic.LDC_W  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","InterTypeFieldBinding":" canBeSeenBy getAccessMethod alwaysNeedsAccessMethod getTargetType getOwningClass targetType reader writer sourceMethod org.aspectj.ajdt.internal.compiler.lookup.InterTypeFieldBinding  System.err.println(\"canBeSeenBy: \" + this + \", \" + isPublic());\r\n  System.out.println(\"receiver: \" + receiverType + \", \" + invocationType);\r\n  Don't work with a raw type, work with the generic type\r\n  Is the receiverType an innertype of the declaring type?\r\n  XXX make sure this walks correctly\r\n  isDefault()\r\n  overrides ITD'd method in FieldBinding...\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","NOP":" accept  org.aspectj.apache.bcel.generic.NOP  ","NotPointcut":" getBody setBody propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty clone0 subtreeMatch0 accept0 treeSize couldMatchKinds getNegatedPointcut fastMatch matchInternal toString equals hashCode resolveBindings write read findResidueInternal concretize1 parameterizeWith accept traverse body BODY_PROPERTY body org.aspectj.org.eclipse.jdt.core.dom.NotPointcut org.aspectj.weaver.patterns.NotPointcut  $NON-NLS-1$\r\n  allow default implementation to flag the error\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Common":"     ","MockMethodSignature":" getReturnType  org.aspectj.aopalliance.tests.MockMethodSignature  /*\r\n * Created on 07-May-2004\r\n *\r\n * TODO To change the template for this generated file go to\r\n * Window - Preferences - Java - Code Generation - Code and Comments\r\n */\r\n","Conflict":" main  Conflict  ","RuntimePointcuts":" main foo bar  RuntimePointcuts  parser.setClassLoader(RuntimePointcuts.class.getClassLoader());\r\n ","TypePat":"     ","AASTORE":" accept  org.aspectj.apache.bcel.generic.AASTORE  ","ExtendInnerCE":"     ","ProgramElementDocImpl":" dec ajc getComment containingClass containingPackage nonNullTypeDec modifierSpecifier modifiers isPublic isProtected isPackagePrivate isPrivate isStatic isFinal qualifiedName name containingClass org.aspectj.tools.ajdoc.ProgramElementDocImpl  todo: consider NPE if mods null\r\n /*\r\n     construction of ProgramElementDocImpl must not recursively \r\n     invoke construction of instances of subclass ClassDocImpl \r\n     or endless recursion will be possible\r\n    */\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","TestNPE":"   a.TestNPE  ","BadWormhole":"     ","FormatCallout":" areaLabel startSpan endSpan formatTextCallout formatCallout areaLabel startSpan endSpan formatTextCallout formatCallout areaLabel startSpan endSpan formatTextCallout formatCallout foURI xhURI foStylesheet namePool foURI xhURI foStylesheet namePool foURI xhURI stylesheetFO dh com.nwalsh.saxon.FormatCallout com.nwalsh.saxon.FormatCallout com.nwalsh.xalan.FormatCallout  Otherwise, if its parent is an areaset and it has a label, use that\r\n  If this area has a label, use it\r\n  no point in doing this for FO, right?\r\n  no point in doing this for FO, right?\r\n  Otherwise, if its parent is an areaset and it has a label, use that\r\n  If this area has a label, use it\r\n  no point in doing this for FO, right?\r\n  no point in doing this for FO, right?\r\n  Otherwise, if its parent is an areaset and it has a label, use that\r\n  If this area has a label, use it\r\n  no point in doing this for FO, right?\r\n  no point in doing this for FO, right?\r\n ","ConstructorSignatureImpl":" getName createToString getConstructor constructor org.aspectj.runtime.reflect.ConstructorSignatureImpl  nothing we can do, caller will see null\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.runtime.reflect.MemberSignatureImpl#createAccessibleObject()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Verbatim":" getVariable setupLineNumbering numberLines setupCallouts insertCallouts getVariable setupLineNumbering numberLines setupCallouts insertCallouts numberLines countLineBreaks lineNumberFragment formatLineNumber insertCallouts insertGraphicCallouts insertUnicodeCallouts insertDingbatCallouts insertTextCallouts insertCallouts calloutFragment addCallout formatPad closeOpenElements openClosedElements copyAttributes foStylesheet modulus width separator calloutsSetup defaultColumn graphicsPath graphicsExt graphicsMax fCallout foStylesheet modulus width separator calloutsSetup defaultColumn graphicsPath graphicsExt graphicsMax fCallout elementStack tempStack lineNumber colNumber modulus width separator callout calloutCount calloutPos graphicsPath graphicsExt graphicsMax graphicsFO foURI xhURI com.nwalsh.saxon.Verbatim com.nwalsh.saxon.Verbatim com.nwalsh.xalan.Verbatim  Hardcoded defaults\r\n  Get the modulus\r\n  Get the width\r\n  Get the separator\r\n  Get the stylesheet type\r\n  This \"can't\" happen.\r\n  Hardcoded defaults\r\n  Get the stylesheet type\r\n  Get the default column\r\n  Use graphics at all?\r\n  Use unicode at all?\r\n  Get the starting character\r\n  Get the number limit\r\n  Get the font\r\n  Get the graphics path\r\n  Get the graphics extension\r\n  Get the number limit\r\n  This \"can't\" happen.\r\n  Verbatim.java - Saxon extensions supporting DocBook verbatim environments\r\n  Hardcoded defaults\r\n  Get the modulus\r\n  Get the width\r\n  Get the separator\r\n  Get the stylesheet type\r\n  This \"can't\" happen.\r\n  Hardcoded defaults\r\n  Get the stylesheet type\r\n  Get the default column\r\n  Use graphics at all?\r\n  Use unicode at all?\r\n  Get the starting character\r\n  Get the number limit\r\n  Get the font\r\n  Get the graphics path\r\n  Get the graphics extension\r\n  Get the number limit\r\n  This \"can't\" happen.\r\n  Verbatim.java - Saxon extensions supporting DocBook verbatim environments\r\n  Walk through the text node looking for newlines\r\n  The first line is always numbered\r\n  Walk through the text node looking for newlines\r\n  Copy the newline to the output\r\n  Add the line number\r\n  <  Now sort them\r\n  What if we need to pad this line?\r\n  the default\r\n  Now let's see if we can interpret the coordinates...\r\n  Make sure we aren't going to blow past the end of our array\r\n  if there's only one number, assume it's the line\r\n  assume linecolumn\r\n  Ok, add the callout\r\n  Close all the open elements...\r\n  or an HTML pre or div, don't duplicate it...\r\n  Now \"reopen\" the elements that we closed...\r\n  Verbatim.java - Xalan extensions supporting DocBook verbatim environments\r\n ","InterfaceAndInner":" main  InterfaceAndInner  ","AroundNumericCastCE":"     ","IMessageHolder":" hasAnyMessage numMessages getMessages getUnmodifiableListView clearMessages ORGREATER EQUAL org.aspectj.bridge.IMessageHolder  XXX do not extend - mix instead\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ChangeObserver":" refresh  ca.ubc.cs.spl.aspectPatterns.examples.observer.java.ChangeObserver  ","ReachableEmpty":" main m m1 m2 m3  ReachableEmpty  ","ExceptionConstants":"  THROWABLE RUNTIME_EXCEPTION LINKING_EXCEPTION CLASS_CIRCULARITY_ERROR CLASS_FORMAT_ERROR EXCEPTION_IN_INITIALIZER_ERROR INCOMPATIBLE_CLASS_CHANGE_ERROR ABSTRACT_METHOD_ERROR ILLEGAL_ACCESS_ERROR INSTANTIATION_ERROR NO_SUCH_FIELD_ERROR NO_SUCH_METHOD_ERROR NO_CLASS_DEF_FOUND_ERROR UNSATISFIED_LINK_ERROR VERIFY_ERROR NULL_POINTER_EXCEPTION ARRAY_INDEX_OUT_OF_BOUNDS_EXCEPTION ARITHMETIC_EXCEPTION NEGATIVE_ARRAY_SIZE_EXCEPTION CLASS_CAST_EXCEPTION ILLEGAL_MONITOR_STATE EXCS_CLASS_AND_INTERFACE_RESOLUTION EXCS_FIELD_AND_METHOD_RESOLUTION EXCS_INTERFACE_METHOD_RESOLUTION EXCS_STRING_RESOLUTION EXCS_ARRAY_EXCEPTION org.aspectj.apache.bcel.ExceptionConstants  Chapter 5.3 (as below)\r\n ","WrongPackage":" main  a.b.c.WrongPackage  ","DUP2_X2":" accept  org.aspectj.apache.bcel.generic.DUP2_X2  ","SignaturePatternTestCase":" testThrowsMatch testInstanceMethodMatch testStaticMethodMatch testFieldMatch testConstructorMatch checkMatch checkMatch makeMethodPat makeFieldPat checkSerialization world org.aspectj.weaver.patterns.SignaturePatternTestCase  XXX need pattern checks\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n *               2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","FCMPL":" getType accept  org.aspectj.apache.bcel.generic.FCMPL  ","DUP2_X1":" accept  org.aspectj.apache.bcel.generic.DUP2_X1  ","AjdeErrorHandler":" handleWarning handleError handleError getStackTraceAsString  org.aspectj.ajde.ui.swing.AjdeErrorHandler  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ImportingInnerInterfaces_PR386":" main  ImportingInnerInterfaces_PR386 I1 I2 I3  ","FCMPG":" getType accept  org.aspectj.apache.bcel.generic.FCMPG  ","BadPointcutName":"     ","AfterReturningResult":"     ","ArgumentTester":" main getClassName test stop times ArgumentTester  ","CircularExtendsAspect":"     ","CastStringToObject":" main  CastStringToObject  ","Registry":"     ","NamedAndTyped":" getName getType setName setType  org.aspectj.apache.bcel.generic.NamedAndTyped  ","IAjcRun":" setupAjcRun setupAjcRun run writeXml toString NULLRUN org.aspectj.testing.harness.bridge.IAjcRun  at the same time it constructs the run.\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ForeignChildHelper":"     ","VersionUptodate":" setVersion setVersionSourceFile setVersionTagFile execute sameVersion createFile buildVersion versionSource versionTagFile org.aspectj.internal.tools.ant.taskdefs.VersionUptodate  XXX build and load instead of scanning?\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AsmField":" setClassDelegate setGenericSignature getGenericReturnType unpackGenericSignature addAnAnnotation getAnnotations getAnnotationTypes hasAnnotation classDelegate annos genericSignature unpackedGenericSignature genericFieldType org.aspectj.weaver.asm.AsmField  get from generic\r\n  .formalTypeParameters);\r\n  lookup\r\n  development bug, fail fast with good info\r\n  annotation manipulation\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","InterTypeMethodBinding":" canBeSeenBy isFinal getAccessMethod alwaysNeedsAccessMethod sourceMethod getTargetType getOwningClass toString targetType syntheticMethod postDispatchMethod sourceMethod org.aspectj.ajdt.internal.compiler.lookup.InterTypeMethodBinding  System.err.println(\"outer dec: \" +\r\n  XXX make sure this walks correctly\r\n  isDefault()\r\n  XXX this is identical to InterTypeFieldBinding\r\n  override method in MethodBinding to ensure correct behaviour in some of JDTs generics checks.\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ARRAYLENGTH":" getExceptions accept  org.aspectj.apache.bcel.generic.ARRAYLENGTH  ","Var":" getType toString accept type org.aspectj.weaver.ast.Var  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","PerTypeWithinTests":" suite getSpecFile testDoesItWorkAtAll testCheckHasAspectWorks testCheckAspectOfWorks testTwoAspectsHittingOneType testPervasivenessOfWeaving testBinaryWeaving_ClassesAreBinary testBinaryWeaving_AspectsAreBinary testAJDKExamples  org.aspectj.systemtest.ajc150.PerTypeWithinTests  ","Item":"   Item Item  ","NoReturnStatement":"     ","MementoException":"   ca.ubc.cs.spl.aspectPatterns.patternLibrary.MementoException  ","JoinPointSignature":" getDeclaringType getModifiers getModifiers getExceptions getExceptions getAssociatedShadowMunger isAjSynthetic hasAnnotations hasAnnotation getAnnotationTypes setAnnotationTypes addAnnotation isBridgeMethod isVarargsMethod isSynthetic write getSourceContext getParameterNames setParameterNames getParameterNames getEffectiveSignature getSourceLocation getEnd getSourceContext getStart setPosition setSourceContext isAbstract isPublic isProtected isNative isDefault isVisible setCheckedExceptions setAnnotatedElsewhere isAnnotatedElsewhere getGenericReturnType getGenericParameterTypes parameterizedWith parameterizedWith setTypeVariables getTypeVariables getTypeVariableNamed getErasure matches resolve compareTo toLongString getKind getReturnType getType getName getParameterTypes getSignature getArity getParameterSignature isCompatibleWith isProtected isStatic isStrict isStatic isInterface isPrivate canBeParameterized getCallsiteModifiers getExtractableName getAnnotations getDeclaringTypes getSignatureMakerName getSignatureType getSignatureString getJoinPointSignatures toString toGenericString toDebugString resetName resetKind resetModifiers resetReturnTypeToObjectArray equals hashCode hasBackingGenericMember getBackingGenericMember evictWeavingState realMember substituteDeclaringType org.aspectj.weaver.JoinPointSignature  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","BuildConfigPopupMenu":" actionPerformed serialVersionUID org.aspectj.ajde.ui.swing.BuildConfigPopupMenu  } else {\r\n  }\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ExceptionAspect":"     ","SubAspect":"     ","ComplexAnnotatedClass":"   ComplexAnnotatedClass ComplexAnnotatedClass  ","MULTIANEWARRAY":" dump initFromFile getDimensions toString toString consumeStack getExceptions getLoadClassType accept dimensions org.aspectj.apache.bcel.generic.MULTIANEWARRAY  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","CircularAdvicePrecedence":"     ","Mood":"     ","SampleClass":" foo main  SampleClass  ","GenericTreeNode":" traverse init equals hashCode toString shortString longString thisString parentString compareTo getNode getParent getChildren getNodeComparator getChildClass assertReady visit visit visit equals hashCode compare node children parent nodeComparator childClass ready toStringCache EXACT PRINTERR PRINTALL COMPARATOR org.aspectj.testing.compare.GenericTreeNode  get the child pair\r\n  traverse the child pair\r\n  see also other return statements above\r\n  --------------------------------------- constructors\r\n  weak sync\r\n  assumes nodes are unique, not flyweights?\r\n  todo: probably not correct to delegate to node\r\n  add a tab for each parent\r\n  -------------------- misc\r\n  \r\n  ok to use comparator\r\n  on the underlying objects\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Ajc11CompilerAdapter":" initialValue setJavac execute afterCleaningDirs CLEAN inSelfCall javac org.aspectj.tools.ant.taskdefs.Ajc11CompilerAdapter  then re-call javac to get the list of all source files.\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     Wes Isberg     initial implementation\r\n * ******************************************************************/\r\n","JoinPointInAroundAdvice":"     ","Cast":"     ","AnnotationTargetKind":" read ANNOTATION_TYPE CONSTRUCTOR FIELD LOCAL_VARIABLE METHOD PACKAGE PARAMETER TYPE org.aspectj.weaver.AnnotationTargetKind  ","CommandTestCase":" checkCompile runMain checkCompile testEmptyForAntJUnitSupport checkMultipleCompile rerunCompiler runCompiler printGenerated fail message getRuntimeClasspath getSandboxName setUp NO_ERRORS TOP_ERROR sandbox org.aspectj.ajdt.internal.compiler.batch.CommandTestCase  XXX need this to get sourcefile and line numbers, shouldn't\r\n  List recompiledFiles = new ArrayList();\r\n  ?? what is this?\r\n  XXX\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AbstractIcon":" getIconResource iconResource org.aspectj.ajde.ui.AbstractIcon  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","InterType":"     ","PR65319":"     ","LineNumber":" accept dump getLineNumber getStartPC setLineNumber setStartPC toString copy start_pc line_number org.aspectj.apache.bcel.classfile.LineNumber  Program Counter (PC) corresponds to line\r\n  number in source file\r\n ","PR519":"     ","SUIDTests":" suite getSpecFile test001 test002 test003 test004 test005 test006 test007 test008 test009 test010 test011 test012 test013 test014 test015 test016 test017  org.aspectj.systemtest.serialVerUID.SUIDTests  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","AroundCasting":"     ","Simple14AspectTest":" main  Simple14AspectTest  ","OutputSubject":" safeRequest regularRequest unsafeRequest  ca.ubc.cs.spl.aspectPatterns.examples.proxy.java.OutputSubject  ","Table":" initializeHash setPixelsPerInch getPixelsPerInch convertLength getVariable setupColumnWidths adjustColumnWidths initializeHash setPixelsPerInch getPixelsPerInch convertLength getVariable setupColumnWidths adjustColumnWidths initializeHash setPixelsPerInch getPixelsPerInch convertLength adjustColumnWidths copyAttributes pixelsPerInch nominalWidth tableWidth foStylesheet unitHash pixelsPerInch nominalWidth tableWidth foStylesheet unitHash pixelsPerInch unitHash foURI com.nwalsh.saxon.Table com.nwalsh.saxon.Table com.nwalsh.xalan.Table  The format of length should be 999.999xx\r\n  Hardcoded defaults\r\n  Get the stylesheet type\r\n  Get the nominal table width\r\n  Get the table width\r\n  This \"can't\" happen.\r\n  Verbatim.java - Saxon extensions supporting DocBook verbatim environments\r\n  The format of length should be 999.999xx\r\n  Hardcoded defaults\r\n  Get the stylesheet type\r\n  Get the nominal table width\r\n  Get the table width\r\n  This \"can't\" happen.\r\n  Verbatim.java - Saxon extensions supporting DocBook verbatim environments\r\n  The format of length should be 999.999xx\r\n  If this is an FO tree, there might be no colgroup...\r\n  Count the number of columns...\r\n  Verbatim.java - Xalan extensions supporting DocBook verbatim environments\r\n ","CovBaseProgram01":" getCar getCar main run  Car FastCar Super Sub CovBaseProgram01  ","CovBaseProgram02":" getCar getCar main run  Car FastCar Super Sub CovBaseProgram02  ","Constants":"  MAJOR_1_1 MINOR_1_1 MAJOR_1_2 MINOR_1_2 MAJOR_1_3 MINOR_1_3 MAJOR_1_4 MINOR_1_4 MAJOR_1_5 MINOR_1_5 MAJOR_1_6 MINOR_1_6 MAJOR MINOR MAX_SHORT MAX_BYTE ACC_PUBLIC ACC_PRIVATE ACC_PROTECTED ACC_STATIC ACC_FINAL ACC_SYNCHRONIZED ACC_VOLATILE ACC_TRANSIENT ACC_NATIVE ACC_INTERFACE ACC_ABSTRACT ACC_STRICT ACC_ANNOTATION ACC_ENUM ACC_BRIDGE ACC_VARARGS ACC_SUPER MAX_ACC_FLAG ACCESS_NAMES CONSTANT_Utf8 CONSTANT_Integer CONSTANT_Float CONSTANT_Long CONSTANT_Double CONSTANT_Class CONSTANT_Fieldref CONSTANT_String CONSTANT_Methodref CONSTANT_InterfaceMethodref CONSTANT_NameAndType CONSTANT_NAMES STATIC_INITIALIZER_NAME CONSTRUCTOR_NAME INTERFACES_IMPLEMENTED_BY_ARRAYS MAX_CP_ENTRIES MAX_CODE_SIZE NOP ACONST_NULL ICONST_M1 ICONST_0 ICONST_1 ICONST_2 ICONST_3 ICONST_4 ICONST_5 LCONST_0 LCONST_1 FCONST_0 FCONST_1 FCONST_2 DCONST_0 DCONST_1 BIPUSH SIPUSH LDC LDC_W LDC2_W ILOAD LLOAD FLOAD DLOAD ALOAD ILOAD_0 ILOAD_1 ILOAD_2 ILOAD_3 LLOAD_0 LLOAD_1 LLOAD_2 LLOAD_3 FLOAD_0 FLOAD_1 FLOAD_2 FLOAD_3 DLOAD_0 DLOAD_1 DLOAD_2 DLOAD_3 ALOAD_0 ALOAD_1 ALOAD_2 ALOAD_3 IALOAD LALOAD FALOAD DALOAD AALOAD BALOAD CALOAD SALOAD ISTORE LSTORE FSTORE DSTORE ASTORE ISTORE_0 ISTORE_1 ISTORE_2 ISTORE_3 LSTORE_0 LSTORE_1 LSTORE_2 LSTORE_3 FSTORE_0 FSTORE_1 FSTORE_2 FSTORE_3 DSTORE_0 DSTORE_1 DSTORE_2 DSTORE_3 ASTORE_0 ASTORE_1 ASTORE_2 ASTORE_3 IASTORE LASTORE FASTORE DASTORE AASTORE BASTORE CASTORE SASTORE POP POP2 DUP DUP_X1 DUP_X2 DUP2 DUP2_X1 DUP2_X2 SWAP IADD LADD FADD DADD ISUB LSUB FSUB DSUB IMUL LMUL FMUL DMUL IDIV LDIV FDIV DDIV IREM LREM FREM DREM INEG LNEG FNEG DNEG ISHL LSHL ISHR LSHR IUSHR LUSHR IAND LAND IOR LOR IXOR LXOR IINC I2L I2F I2D L2I L2F L2D F2I F2L F2D D2I D2L D2F I2B INT2BYTE I2C INT2CHAR I2S INT2SHORT LCMP FCMPL FCMPG DCMPL DCMPG IFEQ IFNE IFLT IFGE IFGT IFLE IF_ICMPEQ IF_ICMPNE IF_ICMPLT IF_ICMPGE IF_ICMPGT IF_ICMPLE IF_ACMPEQ IF_ACMPNE GOTO JSR RET TABLESWITCH LOOKUPSWITCH IRETURN LRETURN FRETURN DRETURN ARETURN RETURN GETSTATIC PUTSTATIC GETFIELD PUTFIELD INVOKEVIRTUAL INVOKESPECIAL INVOKENONVIRTUAL INVOKESTATIC INVOKEINTERFACE NEW NEWARRAY ANEWARRAY ARRAYLENGTH ATHROW CHECKCAST INSTANCEOF MONITORENTER MONITOREXIT WIDE MULTIANEWARRAY IFNULL IFNONNULL GOTO_W JSR_W BREAKPOINT LDC_QUICK LDC_W_QUICK LDC2_W_QUICK GETFIELD_QUICK PUTFIELD_QUICK GETFIELD2_QUICK PUTFIELD2_QUICK GETSTATIC_QUICK PUTSTATIC_QUICK GETSTATIC2_QUICK PUTSTATIC2_QUICK INVOKEVIRTUAL_QUICK INVOKENONVIRTUAL_QUICK INVOKESUPER_QUICK INVOKESTATIC_QUICK INVOKEINTERFACE_QUICK INVOKEVIRTUALOBJECT_QUICK NEW_QUICK ANEWARRAY_QUICK MULTIANEWARRAY_QUICK CHECKCAST_QUICK INSTANCEOF_QUICK INVOKEVIRTUAL_QUICK_W GETFIELD_QUICK_W PUTFIELD_QUICK_W IMPDEP1 IMPDEP2 PUSH SWITCH UNDEFINED UNPREDICTABLE RESERVED ILLEGAL_OPCODE ILLEGAL_TYPE T_BOOLEAN T_CHAR T_FLOAT T_DOUBLE T_BYTE T_SHORT T_INT T_LONG T_VOID T_ARRAY T_OBJECT T_REFERENCE T_UNKNOWN T_ADDRESS TYPE_NAMES CLASS_TYPE_NAMES SHORT_TYPE_NAMES NO_OF_OPERANDS TYPE_OF_OPERANDS OPCODE_NAMES CONSUME_STACK PRODUCE_STACK ATTR_UNKNOWN ATTR_SOURCE_FILE ATTR_CONSTANT_VALUE ATTR_CODE ATTR_EXCEPTIONS ATTR_LINE_NUMBER_TABLE ATTR_LOCAL_VARIABLE_TABLE ATTR_INNER_CLASSES ATTR_SYNTHETIC ATTR_DEPRECATED ATTR_PMG ATTR_SIGNATURE ATTR_STACK_MAP ATTR_RUNTIME_VISIBLE_ANNOTATIONS ATTR_RUNTIME_INVISIBLE_ANNOTATIONS ATTR_RUNTIME_VISIBLE_PARAMETER_ANNOTATIONS ATTR_RUNTIME_INVISIBLE_PARAMETER_ANNOTATIONS ATTR_LOCAL_VARIABLE_TYPE_TABLE ATTR_ENCLOSING_METHOD ATTR_ANNOTATION_DEFAULT KNOWN_ATTRIBUTES ATTRIBUTE_NAMES ITEM_Bogus ITEM_Integer ITEM_Float ITEM_Double ITEM_Long ITEM_Null ITEM_InitObject ITEM_Object ITEM_NewObject ITEM_NAMES ACC_BRIDGE ACC_VARARGS RUNTIME_LEVEL_12 RUNTIME_LEVEL_15 RUNTIME_LEVEL_DEFAULT org.aspectj.apache.bcel.Constants org.aspectj.weaver.Constants  Defaults\r\n  2^16 - 1\r\n  2^8 - 1\r\n  J5SUPPORT:\r\n  Applies to classes compiled by new compilers only\r\n  bytes\r\n  Old notion\r\n  Old notion\r\n  Old notion\r\n  Old name in JDK 1.0\r\n  Non-standard\r\n  Deprecated\r\n  Non-standard\r\n  Non-standard\r\n  Non-standard\r\n  Non-standard\r\n  J5TODO: Is this the same as a Java5 signature attribute?\r\n  J5SUPPORT:\r\n  J5SUPPORT:\r\n  Default for 1.5.0\r\n /*nop*/\r\n /*aconst_null*/\r\n /*iconst_m1*/\r\n /*iconst_0*/\r\n /*iconst_1*/\r\n /*iconst_2*/\r\n /*iconst_3*/\r\n /*iconst_4*/\r\n /*iconst_5*/\r\n /*lconst_0*/\r\n /*lconst_1*/\r\n /*fconst_0*/\r\n /*fconst_1*/\r\n /*fconst_2*/\r\n /*dconst_0*/\r\n /*dconst_1*/\r\n /*bipush*/\r\n /*sipush*/\r\n /*ldc*/\r\n /*ldc_w*/\r\n /*ldc2_w*/\r\n /*iload*/\r\n /*lload*/\r\n /*fload*/\r\n /*dload*/\r\n /*aload*/\r\n /*iload_0*/\r\n /*iload_1*/\r\n /*iload_2*/\r\n /*iload_3*/\r\n /*lload_0*/\r\n /*lload_1*/\r\n /*lload_2*/\r\n /*lload_3*/\r\n /*fload_0*/\r\n /*fload_1*/\r\n /*fload_2*/\r\n /*fload_3*/\r\n /*dload_0*/\r\n /*dload_1*/\r\n /*dload_2*/\r\n /*dload_3*/\r\n /*aload_0*/\r\n /*aload_1*/\r\n /*aload_2*/\r\n /*aload_3*/\r\n /*iaload*/\r\n /*laload*/\r\n /*faload*/\r\n /*daload*/\r\n /*aaload*/\r\n /*baload*/\r\n /*caload*/\r\n /*saload*/\r\n /*istore*/\r\n /*lstore*/\r\n /*fstore*/\r\n /*dstore*/\r\n /*astore*/\r\n /*istore_0*/\r\n /*istore_1*/\r\n /*istore_2*/\r\n /*istore_3*/\r\n /*lstore_0*/\r\n /*lstore_1*/\r\n /*lstore_2*/\r\n /*lstore_3*/\r\n /*fstore_0*/\r\n /*fstore_1*/\r\n /*fstore_2*/\r\n /*fstore_3*/\r\n /*dstore_0*/\r\n /*dstore_1*/\r\n /*dstore_2*/\r\n /*dstore_3*/\r\n /*astore_0*/\r\n /*astore_1*/\r\n /*astore_2*/\r\n /*astore_3*/\r\n /*iastore*/\r\n /*lastore*/\r\n /*fastore*/\r\n /*dastore*/\r\n /*aastore*/\r\n /*bastore*/\r\n /*castore*/\r\n /*sastore*/\r\n /*pop*/\r\n /*pop2*/\r\n /*dup*/\r\n /*dup_x1*/\r\n /*dup_x2*/\r\n /*dup2*/\r\n /*dup2_x1*/\r\n /*dup2_x2*/\r\n /*swap*/\r\n /*iadd*/\r\n /*ladd*/\r\n /*fadd*/\r\n /*dadd*/\r\n /*isub*/\r\n /*lsub*/\r\n /*fsub*/\r\n /*dsub*/\r\n /*imul*/\r\n /*lmul*/\r\n /*fmul*/\r\n /*dmul*/\r\n /*idiv*/\r\n /*ldiv*/\r\n /*fdiv*/\r\n /*ddiv*/\r\n /*irem*/\r\n /*lrem*/\r\n /*frem*/\r\n /*drem*/\r\n /*ineg*/\r\n /*lneg*/\r\n /*fneg*/\r\n /*dneg*/\r\n /*ishl*/\r\n /*lshl*/\r\n /*ishr*/\r\n /*lshr*/\r\n /*iushr*/\r\n /*lushr*/\r\n /*iand*/\r\n /*land*/\r\n /*ior*/\r\n /*lor*/\r\n /*ixor*/\r\n /*lxor*/\r\n /*iinc*/\r\n /*i2l*/\r\n /*i2f*/\r\n /*i2d*/\r\n /*l2i*/\r\n /*l2f*/\r\n /*l2d*/\r\n /*f2i*/\r\n /*f2l*/\r\n /*f2d*/\r\n /*d2i*/\r\n /*d2l*/\r\n /*d2f*/\r\n /*i2b*/\r\n /*i2c*/\r\n /*i2s*/\r\n /*lcmp*/\r\n /*fcmpl*/\r\n /*fcmpg*/\r\n /*dcmpl*/\r\n /*dcmpg*/\r\n /*ifeq*/\r\n /*ifne*/\r\n /*iflt*/\r\n /*ifge*/\r\n /*ifgt*/\r\n /*ifle*/\r\n /*if_icmpeq*/\r\n /*if_icmpne*/\r\n /*if_icmplt*/\r\n /*if_icmpge*/\r\n /*if_icmpgt*/\r\n /*if_icmple*/\r\n /*if_acmpeq*/\r\n /*if_acmpne*/\r\n /*goto*/\r\n /*jsr*/\r\n /*ret*/\r\n /*tableswitch*/\r\n /*lookupswitch*/\r\n /*ireturn*/\r\n /*lreturn*/\r\n /*freturn*/\r\n /*dreturn*/\r\n /*areturn*/\r\n /*return*/\r\n /*getstatic*/\r\n /*putstatic*/\r\n /*getfield*/\r\n /*putfield*/\r\n /*invokevirtual*/\r\n /*invokespecial*/\r\n /*invokestatic*/\r\n /*invokeinterface*/\r\n /*new*/\r\n /*newarray*/\r\n /*anewarray*/\r\n /*arraylength*/\r\n /*athrow*/\r\n /*checkcast*/\r\n /*instanceof*/\r\n /*monitorenter*/\r\n /*monitorexit*/\r\n /*wide*/\r\n /*multianewarray*/\r\n /*ifnull*/\r\n /*ifnonnull*/\r\n /*goto_w*/\r\n /*jsr_w*/\r\n /*breakpoint*/\r\n /*impdep1*/\r\n /*nop*/\r\n /*aconst_null*/\r\n /*iconst_m1*/\r\n /*iconst_0*/\r\n /*iconst_1*/\r\n /*iconst_2*/\r\n /*iconst_3*/\r\n /*iconst_4*/\r\n /*iconst_5*/\r\n /*lconst_0*/\r\n /*lconst_1*/\r\n /*fconst_0*/\r\n /*fconst_1*/\r\n /*fconst_2*/\r\n /*dconst_0*/\r\n /*dconst_1*/\r\n /*bipush*/\r\n /*sipush*/\r\n /*ldc*/\r\n /*ldc_w*/\r\n /*ldc2_w*/\r\n /*iload*/\r\n /*lload*/\r\n /*fload*/\r\n /*dload*/\r\n /*aload*/\r\n /*iload_0*/\r\n /*iload_1*/\r\n /*iload_2*/\r\n /*iload_3*/\r\n /*lload_0*/\r\n /*lload_1*/\r\n /*lload_2*/\r\n /*lload_3*/\r\n /*fload_0*/\r\n /*fload_1*/\r\n /*fload_2*/\r\n /*fload_3*/\r\n /*dload_0*/\r\n /*dload_1*/\r\n /*dload_2*/\r\n /*dload_3*/\r\n /*aload_0*/\r\n /*aload_1*/\r\n /*aload_2*/\r\n /*aload_3*/\r\n /*iaload*/\r\n /*laload*/\r\n /*faload*/\r\n /*daload*/\r\n /*aaload*/\r\n /*baload*/\r\n /*caload*/\r\n /*saload*/\r\n /*istore*/\r\n /*lstore*/\r\n /*fstore*/\r\n /*dstore*/\r\n /*astore*/\r\n /*istore_0*/\r\n /*istore_1*/\r\n /*istore_2*/\r\n /*istore_3*/\r\n /*lstore_0*/\r\n /*lstore_1*/\r\n /*lstore_2*/\r\n /*lstore_3*/\r\n /*fstore_0*/\r\n /*fstore_1*/\r\n /*fstore_2*/\r\n /*fstore_3*/\r\n /*dstore_0*/\r\n /*dstore_1*/\r\n /*dstore_2*/\r\n /*dstore_3*/\r\n /*astore_0*/\r\n /*astore_1*/\r\n /*astore_2*/\r\n /*astore_3*/\r\n /*iastore*/\r\n /*lastore*/\r\n /*fastore*/\r\n /*dastore*/\r\n /*aastore*/\r\n /*bastore*/\r\n /*castore*/\r\n /*sastore*/\r\n /*pop*/\r\n /*pop2*/\r\n /*dup*/\r\n /*dup_x1*/\r\n /*dup_x2*/\r\n /*dup2*/\r\n /*dup2_x1*/\r\n /*dup2_x2*/\r\n /*swap*/\r\n /*iadd*/\r\n /*ladd*/\r\n /*fadd*/\r\n /*dadd*/\r\n /*isub*/\r\n /*lsub*/\r\n /*fsub*/\r\n /*dsub*/\r\n /*imul*/\r\n /*lmul*/\r\n /*fmul*/\r\n /*dmul*/\r\n /*idiv*/\r\n /*ldiv*/\r\n /*fdiv*/\r\n /*ddiv*/\r\n /*irem*/\r\n /*lrem*/\r\n /*frem*/\r\n /*drem*/\r\n /*ineg*/\r\n /*lneg*/\r\n /*fneg*/\r\n /*dneg*/\r\n /*ishl*/\r\n /*lshl*/\r\n /*ishr*/\r\n /*lshr*/\r\n /*iushr*/\r\n /*lushr*/\r\n /*iand*/\r\n /*land*/\r\n /*ior*/\r\n /*lor*/\r\n /*ixor*/\r\n /*lxor*/\r\n /*iinc*/\r\n /*i2l*/\r\n /*i2f*/\r\n /*i2d*/\r\n /*l2i*/\r\n /*l2f*/\r\n /*l2d*/\r\n /*f2i*/\r\n /*f2l*/\r\n /*f2d*/\r\n /*d2i*/\r\n /*d2l*/\r\n /*d2f*/\r\n /*i2b*/\r\n /*i2c*/\r\n /*i2s*/\r\n /*lcmp*/\r\n /*fcmpl*/\r\n /*fcmpg*/\r\n /*dcmpl*/\r\n /*dcmpg*/\r\n /*ifeq*/\r\n /*ifne*/\r\n /*iflt*/\r\n /*ifge*/\r\n /*ifgt*/\r\n /*ifle*/\r\n /*if_icmpeq*/\r\n /*if_icmpne*/\r\n /*if_icmplt*/\r\n /*if_icmpge*/\r\n /*if_icmpgt*/\r\n /*if_icmple*/\r\n /*if_acmpeq*/\r\n /*if_acmpne*/\r\n /*goto*/\r\n /*jsr*/\r\n /*ret*/\r\n /*tableswitch*/\r\n /*lookupswitch*/\r\n /*ireturn*/\r\n /*lreturn*/\r\n /*freturn*/\r\n /*dreturn*/\r\n /*areturn*/\r\n /*return*/\r\n /*getstatic*/\r\n /*putstatic*/\r\n /*getfield*/\r\n /*putfield*/\r\n /*invokevirtual*/\r\n /*invokespecial*/\r\n /*invokestatic*/\r\n /*invokeinterface*/\r\n /*new*/\r\n /*newarray*/\r\n /*anewarray*/\r\n /*arraylength*/\r\n /*athrow*/\r\n /*checkcast*/\r\n /*instanceof*/\r\n /*monitorenter*/\r\n /*monitorexit*/\r\n /*wide*/\r\n /*multianewarray*/\r\n /*ifnull*/\r\n /*ifnonnull*/\r\n /*goto_w*/\r\n /*jsr_w*/\r\n /*breakpoint*/\r\n /*impdep1*/\r\n /*nop*/\r\n /*aconst_null*/\r\n /*iconst_m1*/\r\n /*iconst_0*/\r\n /*iconst_1*/\r\n /*iconst_2*/\r\n /*iconst_3*/\r\n /*iconst_4*/\r\n /*iconst_5*/\r\n /*lconst_0*/\r\n /*lconst_1*/\r\n /*fconst_0*/\r\n /*fconst_1*/\r\n /*fconst_2*/\r\n /*dconst_0*/\r\n /*dconst_1*/\r\n /*bipush*/\r\n /*sipush*/\r\n /*ldc*/\r\n /*ldc_w*/\r\n /*ldc2_w*/\r\n /*iload*/\r\n /*lload*/\r\n /*fload*/\r\n /*dload*/\r\n /*aload*/\r\n /*iload_0*/\r\n /*iload_1*/\r\n /*iload_2*/\r\n /*iload_3*/\r\n /*lload_0*/\r\n /*lload_1*/\r\n /*lload_2*/\r\n /*lload_3*/\r\n /*fload_0*/\r\n /*fload_1*/\r\n /*fload_2*/\r\n /*fload_3*/\r\n /*dload_0*/\r\n /*dload_1*/\r\n /*dload_2*/\r\n /*dload_3*/\r\n /*aload_0*/\r\n /*aload_1*/\r\n /*aload_2*/\r\n /*aload_3*/\r\n /*iaload*/\r\n /*laload*/\r\n /*faload*/\r\n /*daload*/\r\n /*aaload*/\r\n /*baload*/\r\n /*caload*/\r\n /*saload*/\r\n /*istore*/\r\n /*lstore*/\r\n /*fstore*/\r\n /*dstore*/\r\n /*astore*/\r\n /*istore_0*/\r\n /*istore_1*/\r\n /*istore_2*/\r\n /*istore_3*/\r\n /*lstore_0*/\r\n /*lstore_1*/\r\n /*lstore_2*/\r\n /*lstore_3*/\r\n /*fstore_0*/\r\n /*fstore_1*/\r\n /*fstore_2*/\r\n /*fstore_3*/\r\n /*dstore_0*/\r\n /*dstore_1*/\r\n /*dstore_2*/\r\n /*dstore_3*/\r\n /*astore_0*/\r\n /*astore_1*/\r\n /*astore_2*/\r\n /*astore_3*/\r\n /*iastore*/\r\n /*lastore*/\r\n /*fastore*/\r\n /*dastore*/\r\n /*aastore*/\r\n /*bastore*/\r\n /*castore*/\r\n /*sastore*/\r\n /*pop*/\r\n /*pop2*/\r\n /*dup*/\r\n /*dup_x1*/\r\n /*dup_x2*/\r\n /*dup2*/\r\n /*dup2_x1*/\r\n /*dup2_x2*/\r\n /*swap*/\r\n /*iadd*/\r\n /*ladd*/\r\n /*fadd*/\r\n /*dadd*/\r\n /*isub*/\r\n /*lsub*/\r\n /*fsub*/\r\n /*dsub*/\r\n /*imul*/\r\n /*lmul*/\r\n /*fmul*/\r\n /*dmul*/\r\n /*idiv*/\r\n /*ldiv*/\r\n /*fdiv*/\r\n /*ddiv*/\r\n /*irem*/\r\n /*lrem*/\r\n /*frem*/\r\n /*drem*/\r\n /*ineg*/\r\n /*lneg*/\r\n /*fneg*/\r\n /*dneg*/\r\n /*ishl*/\r\n /*lshl*/\r\n /*ishr*/\r\n /*lshr*/\r\n /*iushr*/\r\n /*lushr*/\r\n /*iand*/\r\n /*land*/\r\n /*ior*/\r\n /*lor*/\r\n /*ixor*/\r\n /*lxor*/\r\n /*iinc*/\r\n /*i2l*/\r\n /*i2f*/\r\n /*i2d*/\r\n /*l2i*/\r\n /*l2f*/\r\n /*l2d*/\r\n /*f2i*/\r\n /*f2l*/\r\n /*f2d*/\r\n /*d2i*/\r\n /*d2l*/\r\n /*d2f*/\r\n /*i2b*/\r\n /*i2c*/\r\n /*i2s*/\r\n /*lcmp*/\r\n /*fcmpl*/\r\n /*fcmpg*/\r\n /*dcmpl*/\r\n /*dcmpg*/\r\n /*ifeq*/\r\n /*ifne*/\r\n /*iflt*/\r\n /*ifge*/\r\n /*ifgt*/\r\n /*ifle*/\r\n /*if_icmpeq*/\r\n /*if_icmpne*/\r\n /*if_icmplt*/\r\n /*if_icmpge*/\r\n /*if_icmpgt*/\r\n /*if_icmple*/\r\n /*if_acmpeq*/\r\n /*if_acmpne*/\r\n /*goto*/\r\n /*jsr*/\r\n /*ret*/\r\n /*tableswitch*/\r\n /*lookupswitch*/\r\n /*ireturn*/\r\n /*lreturn*/\r\n /*freturn*/\r\n /*dreturn*/\r\n /*areturn*/\r\n /*return*/\r\n /*getstatic*/\r\n /*putstatic*/\r\n /*getfield*/\r\n /*putfield*/\r\n /*invokevirtual*/\r\n /*invokespecial*/\r\n /*invokestatic*/\r\n /*invokeinterface*/\r\n /*new*/\r\n /*newarray*/\r\n /*anewarray*/\r\n /*arraylength*/\r\n /*athrow*/\r\n /*checkcast*/\r\n /*instanceof*/\r\n /*monitorenter*/\r\n /*monitorexit*/\r\n /*wide*/\r\n /*multianewarray*/\r\n /*ifnull*/\r\n /*ifnonnull*/\r\n /*goto_w*/\r\n /*jsr_w*/\r\n /*breakpoint*/\r\n /*impdep1*/\r\n /*nop*/\r\n /*aconst_null*/\r\n /*iconst_m1*/\r\n /*iconst_0*/\r\n /*iconst_1*/\r\n /*iconst_2*/\r\n /*iconst_3*/\r\n /*iconst_4*/\r\n /*iconst_5*/\r\n /*lconst_0*/\r\n /*lconst_1*/\r\n /*fconst_0*/\r\n /*fconst_1*/\r\n /*fconst_2*/\r\n /*dconst_0*/\r\n /*dconst_1*/\r\n /*bipush*/\r\n /*sipush*/\r\n /*ldc*/\r\n /*ldc_w*/\r\n /*ldc2_w*/\r\n /*iload*/\r\n /*lload*/\r\n /*fload*/\r\n /*dload*/\r\n /*aload*/\r\n /*iload_0*/\r\n /*iload_1*/\r\n /*iload_2*/\r\n /*iload_3*/\r\n /*lload_0*/\r\n /*lload_1*/\r\n /*lload_2*/\r\n /*lload_3*/\r\n /*fload_0*/\r\n /*fload_1*/\r\n /*fload_2*/\r\n /*fload_3*/\r\n /*dload_0*/\r\n /*dload_1*/\r\n /*dload_2*/\r\n /*dload_3*/\r\n /*aload_0*/\r\n /*aload_1*/\r\n /*aload_2*/\r\n /*aload_3*/\r\n /*iaload*/\r\n /*laload*/\r\n /*faload*/\r\n /*daload*/\r\n /*aaload*/\r\n /*baload*/\r\n /*caload*/\r\n /*saload*/\r\n /*istore*/\r\n /*lstore*/\r\n /*fstore*/\r\n /*dstore*/\r\n /*astore*/\r\n /*istore_0*/\r\n /*istore_1*/\r\n /*istore_2*/\r\n /*istore_3*/\r\n /*lstore_0*/\r\n /*lstore_1*/\r\n /*lstore_2*/\r\n /*lstore_3*/\r\n /*fstore_0*/\r\n /*fstore_1*/\r\n /*fstore_2*/\r\n /*fstore_3*/\r\n /*dstore_0*/\r\n /*dstore_1*/\r\n /*dstore_2*/\r\n /*dstore_3*/\r\n /*astore_0*/\r\n /*astore_1*/\r\n /*astore_2*/\r\n /*astore_3*/\r\n /*iastore*/\r\n /*lastore*/\r\n /*fastore*/\r\n /*dastore*/\r\n /*aastore*/\r\n /*bastore*/\r\n /*castore*/\r\n /*sastore*/\r\n /*pop*/\r\n /*pop2*/\r\n /*dup*/\r\n /*dup_x1*/\r\n /*dup_x2*/\r\n /*dup2*/\r\n /*dup2_x1*/\r\n /*dup2_x2*/\r\n /*swap*/\r\n /*iadd*/\r\n /*ladd*/\r\n /*fadd*/\r\n /*dadd*/\r\n /*isub*/\r\n /*lsub*/\r\n /*fsub*/\r\n /*dsub*/\r\n /*imul*/\r\n /*lmul*/\r\n /*fmul*/\r\n /*dmul*/\r\n /*idiv*/\r\n /*ldiv*/\r\n /*fdiv*/\r\n /*ddiv*/\r\n /*irem*/\r\n /*lrem*/\r\n /*frem*/\r\n /*drem*/\r\n /*ineg*/\r\n /*lneg*/\r\n /*fneg*/\r\n /*dneg*/\r\n /*ishl*/\r\n /*lshl*/\r\n /*ishr*/\r\n /*lshr*/\r\n /*iushr*/\r\n /*lushr*/\r\n /*iand*/\r\n /*land*/\r\n /*ior*/\r\n /*lor*/\r\n /*ixor*/\r\n /*lxor*/\r\n /*iinc*/\r\n /*i2l*/\r\n /*i2f*/\r\n /*i2d*/\r\n /*l2i*/\r\n /*l2f*/\r\n /*l2d*/\r\n /*f2i*/\r\n /*f2l*/\r\n /*f2d*/\r\n /*d2i*/\r\n /*d2l*/\r\n /*d2f*/\r\n /*i2b*/\r\n /*i2c*/\r\n /*i2s*/\r\n /*lcmp*/\r\n /*fcmpl*/\r\n /*fcmpg*/\r\n /*dcmpl*/\r\n /*dcmpg*/\r\n /*ifeq*/\r\n /*ifne*/\r\n /*iflt*/\r\n /*ifge*/\r\n /*ifgt*/\r\n /*ifle*/\r\n /*if_icmpeq*/\r\n /*if_icmpne*/\r\n /*if_icmplt*/\r\n /*if_icmpge*/\r\n /*if_icmpgt*/\r\n /*if_icmple*/\r\n /*if_acmpeq*/\r\n /*if_acmpne*/\r\n /*goto*/\r\n /*jsr*/\r\n /*ret*/\r\n /*tableswitch*/\r\n /*lookupswitch*/\r\n /*ireturn*/\r\n /*lreturn*/\r\n /*freturn*/\r\n /*dreturn*/\r\n /*areturn*/\r\n /*return*/\r\n /*getstatic*/\r\n /*putstatic*/\r\n /*getfield*/\r\n /*putfield*/\r\n /*invokevirtual*/\r\n /*invokespecial*/\r\n /*invokestatic*/\r\n /*invokeinterface*/\r\n /*new*/\r\n /*newarray*/\r\n /*anewarray*/\r\n /*arraylength*/\r\n /*athrow*/\r\n /*checkcast*/\r\n /*instanceof*/\r\n /*monitorenter*/\r\n /*monitorexit*/\r\n /*wide*/\r\n /*multianewarray*/\r\n /*ifnull*/\r\n /*ifnonnull*/\r\n /*goto_w*/\r\n /*jsr_w*/\r\n /*breakpoint*/\r\n /*impdep1*/\r\n","AjdtCommand":" runCommand repeatCommand doCommand genBuildConfig inferKind ABORT_MESSAGE buildManager savedArgs org.aspectj.ajdt.ajc.AjdtCommand  should be info, but handler usually suppresses\r\n  } else\r\n  buildManager.setMessageHandler(handler);\r\n  regenerate configuration b  print usage for config errors\r\n  System.err.println(\"errs: \" + counter.hasErrors());\r\n  }\r\n  XXX dubious\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","WeaverMessages":" format format format format format bundle ARGS_IN_DECLARE CFLOW_IN_DECLARE IF_IN_DECLARE THIS_OR_TARGET_IN_DECLARE ABSTRACT_POINTCUT POINCUT_NOT_CONCRETE CONFLICTING_INHERITED_POINTCUTS CIRCULAR_POINTCUT CANT_FIND_POINTCUT EXACT_TYPE_PATTERN_REQD CANT_BIND_TYPE WILDCARD_NOT_ALLOWED FIELDS_CANT_HAVE_VOID_TYPE NO_NEWARRAY_JOINPOINTS_BY_DEFAULT UNSUPPORTED_POINTCUT_PRIMITIVE MISSING_TYPE_PREVENTS_MATCH DECP_OBJECT CANT_EXTEND_SELF INTERFACE_CANT_EXTEND_CLASS DECP_HIERARCHY_ERROR MULTIPLE_MATCHES_IN_PRECEDENCE TWO_STARS_IN_PRECEDENCE CLASSES_IN_PRECEDENCE TWO_PATTERN_MATCHES_IN_PRECEDENCE NOT_THROWABLE ITD_CONS_ON_ASPECT ITD_RETURN_TYPE_MISMATCH ITD_PARAM_TYPE_MISMATCH ITD_VISIBILITY_REDUCTION ITD_DOESNT_THROW ITD_OVERRIDDEN_STATIC ITD_OVERIDDING_STATIC ITD_CONFLICT ITD_MEMBER_CONFLICT ITD_NON_EXPOSED_IMPLEMENTOR ITD_ABSTRACT_MUST_BE_PUBLIC_ON_INTERFACE CANT_OVERRIDE_FINAL_MEMBER NON_VOID_RETURN INCOMPATIBLE_RETURN_TYPE CANT_THROW_CHECKED CIRCULAR_DEPENDENCY MISSING_PER_CLAUSE WRONG_PER_CLAUSE ALREADY_WOVEN REWEAVABLE_MODE PROCESSING_REWEAVABLE MISSING_REWEAVABLE_TYPE VERIFIED_REWEAVABLE_TYPE ASPECT_NEEDED REWEAVABLE_ASPECT_NOT_REGISTERED CANT_FIND_TYPE CANT_FIND_CORE_TYPE CANT_FIND_TYPE_WITHINPCD CANT_FIND_TYPE_DURING_AROUND_WEAVE CANT_FIND_TYPE_DURING_AROUND_WEAVE_PREINIT CANT_FIND_TYPE_EXCEPTION_TYPE CANT_FIND_TYPE_ARG_TYPE CANT_FIND_PARENT_TYPE CANT_FIND_PARENT_TYPE_NO_SUB CANT_FIND_TYPE_FIELDS CANT_FIND_TYPE_SUPERCLASS CANT_FIND_TYPE_INTERFACES CANT_FIND_TYPE_METHODS CANT_FIND_TYPE_POINTCUTS CANT_FIND_TYPE_MODIFIERS CANT_FIND_TYPE_ANNOTATION CANT_FIND_TYPE_ASSIGNABLE CANT_FIND_TYPE_COERCEABLE CANT_FIND_TYPE_JOINPOINT CANT_FIND_TYPE_INTERFACE_METHODS DECP_BINARY_LIMITATION OVERWRITE_JSR45 IF_IN_PERCLAUSE IF_LEXICALLY_IN_CFLOW ONLY_BEFORE_ON_HANDLER NO_AROUND_ON_SYNCHRONIZATION AROUND_ON_PREINIT AROUND_ON_INIT AROUND_ON_INTERFACE_STATICINIT PROBLEM_GENERATING_METHOD CLASS_TOO_BIG ZIPFILE_ENTRY_MISSING ZIPFILE_ENTRY_INVALID DIRECTORY_ENTRY_MISSING OUTJAR_IN_INPUT_PATH XLINT_LOAD_ERROR XLINTDEFAULT_LOAD_ERROR XLINTDEFAULT_LOAD_PROBLEM XLINT_KEY_ERROR XLINT_VALUE_ERROR UNBOUND_FORMAL AMBIGUOUS_BINDING AMBIGUOUS_BINDING_IN_OR NEGATION_DOESNT_ALLOW_BINDING ITDC_ON_ENUM_NOT_ALLOWED ITDM_ON_ENUM_NOT_ALLOWED ITDF_ON_ENUM_NOT_ALLOWED CANT_DECP_ON_ENUM_TO_IMPL_INTERFACE CANT_DECP_ON_ENUM_TO_EXTEND_CLASS CANT_DECP_TO_MAKE_ENUM_SUPERTYPE ITDC_ON_ANNOTATION_NOT_ALLOWED ITDM_ON_ANNOTATION_NOT_ALLOWED ITDF_ON_ANNOTATION_NOT_ALLOWED CANT_DECP_ON_ANNOTATION_TO_IMPL_INTERFACE CANT_DECP_ON_ANNOTATION_TO_EXTEND_CLASS CANT_DECP_TO_MAKE_ANNOTATION_SUPERTYPE REFERENCE_TO_NON_ANNOTATION_TYPE BINDING_NON_RUNTIME_RETENTION_ANNOTATION INCORRECT_TARGET_FOR_DECLARE_ANNOTATION NO_MATCH_BECAUSE_SOURCE_RETENTION ATANNOTATION_ONLY_SUPPORTED_AT_JAVA5_LEVEL ATWITHIN_ONLY_SUPPORTED_AT_JAVA5_LEVEL ATWITHINCODE_ONLY_SUPPORTED_AT_JAVA5_LEVEL ATTHIS_ONLY_SUPPORTED_AT_JAVA5_LEVEL ATTARGET_ONLY_SUPPORTED_AT_JAVA5_LEVEL ATARGS_ONLY_SUPPORTED_AT_JAVA5_LEVEL DECLARE_ATTYPE_ONLY_SUPPORTED_AT_JAVA5_LEVEL DECLARE_ATMETHOD_ONLY_SUPPORTED_AT_JAVA5_LEVEL DECLARE_ATFIELD_ONLY_SUPPORTED_AT_JAVA5_LEVEL DECLARE_ATCONS_ONLY_SUPPORTED_AT_JAVA5_LEVEL ANNOTATIONS_NEED_JAVA5 CANT_DECP_MULTIPLE_PARAMETERIZATIONS HANDLER_PCD_DOESNT_SUPPORT_PARAMETERS INCORRECT_NUMBER_OF_TYPE_ARGUMENTS VIOLATES_TYPE_VARIABLE_BOUNDS NO_STATIC_INIT_JPS_FOR_PARAMETERIZED_TYPES NOT_A_GENERIC_TYPE WITHIN_PCD_DOESNT_SUPPORT_PARAMETERS THIS_AND_TARGET_DONT_SUPPORT_PARAMETERS GET_AND_SET_DONT_SUPPORT_DEC_TYPE_PARAMETERS NO_INIT_JPS_FOR_PARAMETERIZED_TYPES NO_GENERIC_THROWABLES WITHINCODE_DOESNT_SUPPORT_PARAMETERIZED_DECLARING_TYPES EXECUTION_DOESNT_SUPPORT_PARAMETERIZED_DECLARING_TYPES CALL_DOESNT_SUPPORT_PARAMETERIZED_DECLARING_TYPES CANT_REFERENCE_POINTCUT_IN_RAW_TYPE HAS_MEMBER_NOT_ENABLED RETURNING_FORMAL_NOT_DECLARED_IN_ADVICE THROWN_FORMAL_NOT_DECLARED_IN_ADVICE org.aspectj.weaver.WeaverMessages  Java5 messages\r\n  < Java5 messages\r\n  Generics\r\n  @AspectJ\r\n ","PR528":"     ","InvalidNewQualifier14CE":" test  InvalidNewQualifier14CE Outer OuterInterface OuterOuter  new OuterOuter.Inner(){}.new OuterOuter.Inner.I(){};   CE 14 new qualification bad\r\n  ok\r\n ","AnnotationAJ":" getTypeSignature getNameValuePairs hasNameValuePairs isRuntimeVisible stringify getStringValueOf addNameValuePair toString type isRuntimeVisible nvPairs org.aspectj.weaver.AnnotationAJ  /*of AnnotationNVPair*/\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","PR527":"     ","Model":" foo  org.xyz.model.Model  ","VerifierFactoryListModel":" update addListDataListener removeListDataListener getSize getElementAt listeners cache org.aspectj.apache.bcel.verifier.VerifierFactoryListModel  fill cache.\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","PR520":"     ","AfterReturning":"     ","INSTANCEOF":" getExceptions getLoadClassType accept  org.aspectj.apache.bcel.generic.INSTANCEOF  ","PerThis":"     ","InterTypeFieldDeclaration":" getName getType getGenericType parseStatements getPrefix resolveOnType resolve setInitialization build makeAttribute generateCode generateDispatchMethods generateDispatchMethod generateInterfaceReadBody generateInterfaceWriteBody generateClassReadBody generateClassWriteBody getShadowKindForBody clone0 accept0 initialization realFieldType org.aspectj.lang.reflect.InterTypeFieldDeclaration org.aspectj.ajdt.internal.compiler.ast.InterTypeFieldDeclaration org.aspectj.org.eclipse.jdt.core.dom.InterTypeFieldDeclaration  System.err.println(\"got initializer: \" + initialization);\r\n  XXX something is broken about this logic.  Can we write to static interface fields?\r\n  method as that casts the shadow of a field set join point.\r\n  Error message output in isTargetAnnotation\r\n  Error message output in isTargetEnum\r\n  System.err.println(\"type: \" + binding.returnType + \", \" + returnType);\r\n  We encountered a problem building the scope, don't continue - error already reported\r\n  Build a half correct resolvedmember (makeResolvedMember understands tvars) then build a fully correct sig from it\r\n  visit children in normal left to right reading order\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /*\r\n\tpublic void resolveStatements() {\r\n\t\tsuper.resolveStatements();\r\n\t\r\n//\tif (initialization!=null) {\r\n//\t\tMethodScope initializationScope = this.scope;\r\n//\t\tTypeBinding fieldType = realFieldType;\r\n//\t\tTypeBinding initializationType;\r\n//\t\tthis.initialization.setExpectedType(fieldType); // needed in case of generic method invocation\r\n//\t\tif (this.initialization instanceof ArrayInitializer) {\r\n//\t\r\n//\t\t\tif ((initializationType = this.initialization.resolveTypeExpecting(initializationScope, fieldType)) != null) {\r\n//\t\t\t\t((ArrayInitializer) this.initialization).binding = (ArrayBinding) initializationType;\r\n//\t\t\t\tthis.initialization.computeConversion(initializationScope, fieldType, initializationType);\r\n//\t\t\t}\r\n//\t\t}\r\n////\t\tSystem.err.println(\"i=>\"+initialization);\r\n////\t\tSystem.err.println(\"sasuages=>\"+initialization.resolvedType);\r\n////\t\t//initializationType = initialization.resolveType(initializationScope);\r\n////\t\tSystem.err.println(\"scope=>\"+initializationScope);\r\n//\r\n//\t\telse if ((initializationType = this.initialization.resolveType(initializationScope)) != null) {\r\n//\t\r\n//\t\t\tif (fieldType != initializationType) // must call before computeConversion() and typeMismatchError()\r\n//\t\t\t\tinitializationScope.compilationUnitScope().recordTypeConversion(fieldType, initializationType);\r\n//\t\t\tif (this.initialization.isConstantValueOfTypeAssignableToType(initializationType, fieldType)\r\n//\t\t\t\t\t|| (fieldType.isBaseType() && BaseTypeBinding.isWidening(fieldType.id, initializationType.id))\r\n//\t\t\t\t\t|| initializationType.isCompatibleWith(fieldType)) {\r\n//\t\t\t\tinitialization.computeConversion(initializationScope, fieldType, initializationType);\r\n//\t\t\t\tif (initializationType.needsUncheckedConversion(fieldType)) {\r\n//\t\t\t\t\t    initializationScope.problemReporter().unsafeTypeConversion(this.initialization, initializationType, fieldType);\r\n//\t\t\t\t}\t\t\t\t\t\t\t\t\t\r\n//\t\t\t} else if (initializationScope.isBoxingCompatibleWith(initializationType, fieldType) \r\n//\t\t\t\t\t\t\t\t|| (initializationType.isBaseType()  // narrowing then boxing ?\r\n//\t\t\t\t\t\t\t\t\t\t&& initializationScope.compilerOptions().sourceLevel >= JDK1_5 // autoboxing\r\n//\t\t\t\t\t\t\t\t\t\t&& !fieldType.isBaseType()\r\n//\t\t\t\t\t\t\t\t\t\t&& initialization.isConstantValueOfTypeAssignableToType(initializationType, initializationScope.environment().computeBoxingType(fieldType)))) {\r\n//\t\t\t\tthis.initialization.computeConversion(initializationScope, fieldType, initializationType);\r\n//\t\t\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\t} else {\r\n//\t\t\t\tinitializationScope.problemReporter().typeMismatchError(initializationType, fieldType, this);\r\n//\t\t\t}\r\n//\t//\t\t\tif (this.binding.isFinal()){ // cast from constant actual type to variable type\r\n//\t//\t\t\t\tthis.binding.setConstant(this.initialization.constant.castTo((this.binding.returnType.id << 4) + this.initialization.constant.typeID()));\r\n//\t//\t\t\t}\r\n//\t//\t\t} else {\r\n//\t//\t\t\tthis.binding.setConstant(NotAConstant);\r\n//\t\t}}\r\n\t\t\r\n\t}*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","StructureGenericTreeNodeFactory":" createGenericTreeNode getRootClass  org.aspectj.testing.compare.adapters.StructureGenericTreeNodeFactory  import org.aspectj.asm.SourceLocation;\r\n  XXX compiler\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","LiteralsCf":" main  LiteralsCf  Why not error?\r\n  Why not error?\r\n  ERR: rounds to +INF\r\n  ERR: rounds to 0\r\n  ERR: rounds to -INF\r\n  ERR: rounds to -INF\r\n  ERR: rounds to +INF\r\n  ERR: too big\r\n  ERR: too big\r\n  ERR: too big\r\n  ERR: too small\r\n  ERR: too big\r\n  ERR: too small\r\n  ERR: illegal octal\r\n ","Ajdoc":" execute handleInternalError doc usage usage usage usage usage expandAndCreateDoclet check set set set set internalCompile exit exit classname VERBOSE WARNINGS docletProxy rootDocMaker source extdirs locale encoding sourcepath classpath bootclasspath verbosity filenamesAndPackages options org.aspectj.tools.ajdoc.Ajdoc org.aspectj.tools.ant.taskdefs.Ajdoc  report error already printed by ajc\r\n  cf ajc.Main\r\n  todo unsupported?\r\n  XXX disabled pending ajdoc implementation\r\n  XXX disabled pending ajdoc implementation\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2000-2001 Xerox Corporation. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","World":" accept resolve resolve resolve resolve completeBinaryType isLocallyDefined handleRequiredMissingTypeDuringResolution resolve resolve resolve resolveToReferenceType resolveGenericTypeFor makeGenericTypeFrom resolveGenericWildcardFor resolveDelegate getCoreType lookupOrCreateName lookupBySignature resolve createAdviceMunger createAdviceMunger makeCflowStackFieldAdder makeCflowCounterFieldAdder makePerClauseAspect concreteTypeMunger compareByPrecedence getPrecedenceIfAny compareByPrecedenceAndHierarchy getMessageHandler setMessageHandler showMessage debug setCrossReferenceHandler getCrossReferenceHandler setTypeVariableLookupScope getTypeVariableLookupScope getDeclareParents getDeclareAnnotationOnTypes getDeclareAnnotationOnFields getDeclareAnnotationOnMethods getDeclareSoft getCrosscuttingMembersSet getModel setModel getLint setLint isXnoInline setXnoInline isXlazyTjp setXlazyTjp isHasMemberSupportEnabled setXHasMemberSupportEnabled isInPinpointMode setPinpointMode setBehaveInJava5Way setErrorAndWarningThreshold isIgnoringUnusedDeclaredThrownException performExtraConfiguration getExtraConfiguration isInJava5Mode setTargetAspectjRuntimeLevel setOptionalJoinpoints isJoinpointArrayConstructionEnabled isJoinpointSynchronizationEnabled getTargetAspectjRuntimeLevel isTargettingAspectJRuntime12 put report checkq get remove toString dumpthem totalSize hardSize isExpendable compareByPrecedence getPrecedenceIfAny compareByPrecedenceAndHierarchy equals hashCode validateType getTypeVariablesCurrentlyBeingProcessed recordTypeVariablesCurrentlyBeingProcessed forgetTypeVariablesCurrentlyBeingProcessed setAddSerialVerUID isAddSerialVerUID flush ensureAdvancedConfigurationProcessed isRunMinimalMemory shouldPipelineCompilation setFastDelegateSupport isFastDelegateSupportEnabled setIncrementalCompileCouldFollow couldIncrementalCompileFollow setSynchronizationPointcutsInUse areSynchronizationPointcutsInUse isASMAround messageHandler xrefHandler typeVariableLookupScope typeMap createInjarHierarchy precedenceCalculator crosscuttingMembersSet model lint XnoInline XlazyTjp XhasMember Xpinpoint behaveInJava5Way incrementalCompileCouldFollow targetAspectjRuntimeLevel optionalJoinpoint_ArrayConstruction optionalJoinpoint_Synchronization addSerialVerUID extraConfiguration checkedAdvancedConfiguration synchronizationPointcutsInUse fastDelegateSupportEnabled runMinimalMemory shouldPipelineCompilation completeBinaryTypes forDEBUG_structuralChangesCode forDEBUG_bridgingCode trace isASMAround errorThreshold warningThreshold dumpState_cantFindTypeExceptions currentlyResolvingBaseType xsetCAPTURE_ALL_CONTEXT xsetACTIVATE_LIGHTWEIGHT_DELEGATES xsetRUN_MINIMAL_MEMORY xsetDEBUG_STRUCTURAL_CHANGES_CODE xsetDEBUG_BRIDGING xsetPIPELINE_COMPILATION xsetPIPELINE_COMPILATION_DEFAULT xsetCOMPLETE_BINARY_TYPES xsetCOMPLETE_BINARY_TYPES_DEFAULT debug DONT_USE_REFS USE_WEAK_REFS USE_SOFT_REFS policy tMap expendableMap w memoryProfiling maxExpendableMapSize collectedTypes rq trace world cachedResults aspect1 aspect2 workInProgress1 org.aspectj.weaver.World  Signature to ResolvedType\r\n  Command line flag: \"-Xjoinpoints:arrayconstruction\"\r\n  Command line flag: \"-Xjoinpoints:synchronization\"\r\n  Xset'table options\r\n  Records whether ASM is around ... so we might use it for delegates\r\n  IMessage msg = null;\r\n  special resolution processing for already resolved types.\r\n  don't do this for other unresolved types otherwise you'll end up in a loop\r\n  after updating the world\r\n  fault in generic wildcard, can't be done earlier because of init issues\r\n  Set the world for the RTX\r\n  String brackets = signature.substring(0,signature.lastIndexOf(\"[\")+1);\r\n  no existing resolved type, create one\r\n  Pulling in the type may have already put the right entry in the map\r\n  WeaverMessages.format(WeaverMessages.CANT_FIND_TYPE,ty.getName()));\r\n  until type variables have proper sigs...\r\n  trace.enter(\"resolve\", this, new Object[] {name});\r\n  trace.exit(\"resolve\", ret);\r\n  ======= simple and raw types ===============\r\n  ResolvedType.MISSING;\r\n  ======== simple type =========\r\n  ======== raw type ===========\r\n  name =  ReferenceType.fromTypeX(UnresolvedType.forRawTypeNames(ty.getName()),this);\r\n  ======= generic wildcard types =============\r\n  ======= generic types ======================\r\n  ======= parameterized types ================\r\n  Look up the raw type by signature\r\n  being referenced, e.g. java.util.List\r\n  type variables.\r\n  Fault in the generic that underpins the raw type ;)\r\n  FIXME asc doesnt take account of additional interface bounds (e.g. ? super R & Serializable - can you do that?)\r\n  which is ASTNode.bit24\r\n  Bunch of name value pairs to split\r\n  default false\r\n  default true\r\n  default true\r\n  default false\r\n  default false\r\n  pr116679\r\n  System.err.println(\"Asked if targetting runtime 1.2 , returning: \"+b);\r\n  Hang around forever\r\n  Collected asap\r\n  Collected when short on memory\r\n  SECRETAPI - Can switch to a policy of choice ;)\r\n  Map of types that never get thrown away\r\n  Map of types that may be ejected from the cache if we need space\r\n  profiling tools...\r\n  !w.getMessageHandler().isIgnoring(Message.INFO);\r\n  bounds is a member type variable\r\n  Dont use reference queue for tracking if not profiling...\r\n  Records the declare precedence statement that gives the first ordering\r\n  so we can't :(\r\n  dont bother if its not...\r\n  Check *once* whether the user has switched asm support off\r\n /* String -> ResolvedType */\r\n /*\r\n\t *  Map of types in the world, can have 'references' to expendable ones which \r\n\t *  can be garbage collected to recover memory.\r\n\t *  An expendable type is a reference type that is not exposed to the weaver (ie\r\n\t *  just pulled in for type resolution purposes).\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n *               2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation\r\n *     Adrian Colyer, Andy Clement, overhaul for generics \r\n * ******************************************************************/\r\n","ISHL":" accept  org.aspectj.apache.bcel.generic.ISHL  ","Printer":" println print objectsSoFar id ca.ubc.cs.spl.aspectPatterns.examples.command.aspectj.Printer ca.ubc.cs.spl.aspectPatterns.examples.singleton.aspectj.Printer  ","ExecTrace":"     ","AspectsCantHaveYesArgumentConstructors":"     ","AspectReweavableLogging":" before  ataspectj.ltwreweavable.AspectReweavableLogging  ","ImportingStaticInnerInterfaces_PR386":" main  ImportingStaticInnerInterfaces_PR386 I1 I2 I3  ","ISHR":" accept  org.aspectj.apache.bcel.generic.ISHR  ","TestingUtilModuleTests":" suite  org.aspectj.testingutil.TestingUtilModuleTests  ","LiteralsCp":" main checkEqual  LiteralsCp  NOT ERROR: rounds to DENORM\r\n  MAX_INT\r\n  MIN_INT\r\n  MAX_LONG\r\n  MIN_LONG\r\n ","StructureTreeManager":" highlightNode getSelectedIProgramElement scrollToHighlightedNode highlightNode updateTree getStructureTree expandTreeToFiles expandTree valueForPathChanged structureTree cellRenderer treeListener NO_STRUCTURE_MODEL serialVersionUID org.aspectj.ajde.ui.swing.StructureTreeManager  if (fileView) {\r\n  }\r\n  SwingTreeViewNode currNode;\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AtAjSyntaxTests":" suite getSpecFile testSimpleBefore testSimpleAfter testSingletonAspectBindings testCflowTest testPointcutReferenceTest testXXJoinPointTest testPrecedenceTest testAfterXTest testBindingTest testBindingTestNoInline testPerClause testAroundInlineMunger_XnoInline testAroundInlineMunger testAroundInlineMunger2 testDeow testSingletonInheritance testPerClauseInheritance testIfPointcut testIfPointcut2 testMultipleBinding testBug104212 testDeclareParentsInterface testDeclareParentsImplements testAbstractAspectNPE testAbstractInherited  org.aspectj.systemtest.ajc150.ataspectj.AtAjSyntaxTests  org.aspectj.asm.AsmManager.setReporting(\"debug.txt\",true,true,true,true);\r\n ","AjASTMatcher":" match match match match match match match match match match match match match match match match match match  org.aspectj.org.eclipse.jdt.core.dom.AjASTMatcher  ajh02: method added\r\n  ajh02: stub, should look at the type pattern\r\n  ajh02: method added\r\n  afterReturning and afterThrowing\r\n  ajh02: method added\r\n  ajh02: method added\r\n  ajh02: method added\r\n  n.b. compare type parameters even for constructors\r\n  n.b. compare return type even for constructors\r\n ","StructureViewTreeListener":" valueChanged mouseEntered mouseExited mousePressed mouseReleased mouseClicked navigate tree lastSelectedNode org.aspectj.ajde.ui.swing.StructureViewTreeListener  if (e.getClickCount() == 2) {\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","JavadocTest":" setUp testMissingJavadoc dump PROJECT_DIR baseDir org.aspectj.ajdt.internal.compiler.batch.JavadocTest  that the javadoc is being attached to the aspectj constructs.\r\n ","MissingImport":"     ","FirstLineGuessOverRun":"   AJError  ","DoSomeWeaving":"     ","DecwInitializationITD":"     ","MethodSelfReference":"     ","StaticInterfaceMethods":"     ","Test2d":" main testOutOfBounds testInBounds  tests.Test2d  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","BCELifier":" start visitJavaClass printCreate printMain visitField visitMethod printFlags printFlags printArgumentTypes printType printType main _clazz _out _cp org.aspectj.apache.bcel.util.BCELifier  May throw IOException\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2002 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","Test2e":" main testNonMoving testMoving  tests.Test2e  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","Test2f":" main testSloth testNonSloth  tests.Test2f  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","Test2a":" main testTooSmall testNotTooSmall testMove  tests.Test2a  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","Test2b":" main testNull testNonNull  tests.Test2b  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","Test2c":" main testSelf testNotSelf  tests.Test2c  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","Immutable":"     ","ThreeB":" m  ThreeB  ","Test4a":" main testGroupBounds  tests.Test4a  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","PrinterSubclass":"   ca.ubc.cs.spl.aspectPatterns.examples.singleton.aspectj.PrinterSubclass ca.ubc.cs.spl.aspectPatterns.examples.singleton.java.PrinterSubclass  ","Privileged":"     ","ThreeA":" m  ThreeA  ","BadExtension":" finalPublic justPublic intPublic abstractWithBody abstractPublic staticFinalPublic finalPublic justPublic intPublic staticFinalPublic m m m  BadExtension Super Sub I1 I2 C12 I12  ERROR shouldn't have a body\r\n  ERROR must implement abstractPublic\r\n  ERROR can't override final\r\n  ERROR can't override with weaker access\r\n  ERROR can't change the return type\r\n  ERROR can't even override static finals\r\n  ERROR must implement abstractPublic\r\n  ERROR incompatible return types with I2.m()\r\n  ERROR I1.m() and I2.m() are not compatible\r\n ","AfterThrowingAdviceSyntaxError":"     ","StringAccumulator":" clear isValid toString debugString prefix infix suffix nullString sb index org.aspectj.testing.util.StringAccumulator  ignore\r\n /*\r\n * StringAccumulator.java created on May 14, 2002\r\n *\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","SomeClass":" init main x apackage.SomeClass p.prefix.SomeClass  line 6\r\n ","ClassFileBasedByteCodeProvider":" getBytes unwovenClassFilesFor cf org.aspectj.ajdt.internal.compiler.ClassFileBasedByteCodeProvider  ","BoundedReferenceType":" getAdditionalBounds getInterfaceBounds hasLowerBound isExtends isSuper alwaysMatches canBeCoercedTo getSimpleName getDeclaredInterfaces isGenericWildcard addAnnotation isAspect isAnnotationStyleAspect isInterface isEnum isAnnotation isAnnotationWithRuntimeRetention isAnonymous isNested getRetentionPolicy canAnnotationTargetType getAnnotationTargetKinds isGeneric getDeclaredGenericSignature hasAnnotation getAnnotations getAnnotationTypes getDeclaredFields getDeclaredInterfaces getDeclaredMethods getDeclaredPointcuts getPerClause getDeclares getTypeMungers getPrivilegedAccesses getModifiers getSuperclass getWeaverState getTypeVariables ensureDelegateConsistent additionalInterfaceBounds isExtends isSuper org.aspectj.weaver.BoundedReferenceType  straight '?'\r\n  aCandidateType must be a supertype of lowerBound\r\n  aCandidateType must be a subtype of upperBound\r\n  it's '?'\r\n  this \"maybe matches\" that\r\n  override to include additional interface bounds...\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","CodeSignatureImpl":" getParameterTypes getParameterNames getExceptionTypes parameterTypes parameterNames exceptionTypes org.aspectj.runtime.reflect.CodeSignatureImpl  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","TracingTests":" suite suite getSpecFile testTracing testDefaultTracing testTraceMessages testTraceEverything  org.aspectj.lib.tracing.TracingTests org.aspectj.systemtest.tracing.TracingTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg       initial implementation \r\n * ******************************************************************/\r\n","Test3e":" main testDuplicateAdd  tests.Test3e  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","InnerInterfaceTypes":"     ","Gets":"     ","Test3a":" main testMovePointLog testMoveLineLog  tests.Test3a  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","Test3b":" main testMovePointLog testMoveLineLog  tests.Test3b  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","StaticInnerAspect":"     ","Test3c":" main testCreateWithPointLog testCreateWithoutPointLog  tests.Test3c  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","OutputFacade":" printNormal printFancy printDecoration printNormal printFancy printDecoration  ca.ubc.cs.spl.aspectPatterns.examples.facade.aspectj.OutputFacade ca.ubc.cs.spl.aspectPatterns.examples.facade.java.OutputFacade  ","ThreeX":"     ","Test3d":" main testDuplicateAdd  tests.Test3d  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","IASTORE":" accept  org.aspectj.apache.bcel.generic.IASTORE  ","SwingTreeViewNodeRenderer":" getTreeCellRendererComponent serialVersionUID org.aspectj.ajde.ui.swing.SwingTreeViewNodeRenderer  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","EclipseFactory":" fromLookupEnvironment fromScopeLookupEnvironment getWorld showMessage fromEclipse fromTypeBindingToRTX fromEclipse getName fromBinding fromTypeVariableBinding fromBindings astForLocation getDeclareParents getDeclareAnnotationOnTypes getDeclareAnnotationOnFields getDeclareAnnotationOnMethods areTypeMungersFinished finishTypeMungers makeEclipseTypeMunger getTypeMungers makeResolvedMember makeResolvedMember makeResolvedMemberForITD makeResolvedMember makeResolvedMember makeResolvedMember makeResolvedMember makeTypeBinding makeTypeBinding1 lookupBinding makeTypeBindings makeReferenceBindings makeFieldBinding makeFieldBinding makeFieldBinding internalMakeFieldBinding makeMethodBinding makeMethodBinding makeMethodBinding makeMethodBinding internalMakeMethodBinding internalMakeMethodBinding makeTypeVariableBindingsFromAJTypeVariables makeTypeVariableBinding makeTypeVariableBindingFromAJTypeVariable makeMethodBindingForCall finishedCompilationUnit addTypeBinding addTypeBindingAndStoreInWorld makeShadow makeShadow addSourceTypeBinding isXSerializableAspects fromBinding fromBinding cleanup minicleanup DEBUG debug_mungerCount buildManager lookupEnvironment xSerializableAspects world finishedTypeMungers typexToBinding rawTypeXToBinding typeVariableBindingsInProgress typeVariablesForThisMember typeVariablesForAliasRecovery baseTypeForParameterizedType indexOfTypeParameterBeingConverted currentType typeVariableToTypeBinding org.aspectj.ajdt.internal.compiler.lookup.EclipseFactory  up a raw and getting the generic type (pr115788)\r\n  System.err.println(\"resolving: \" + binding.getClass() + \", name = \" + getName(binding));\r\n  System.err.println(\"      got: \" + ret);\r\n  The first bound may be null - so default to object?\r\n  XXX doesn't handle arrays correctly (or primitives?)\r\n  first piece of generics support!\r\n  handle arrays since the component type may need special treatment too...\r\n  case let's set it correctly based on the one in the eclipse WildcardBinding\r\n  special case where no parameters are specified!\r\n  null can mean this is an inner type of a Parameterized Type with no bounds of its own (pr100227)\r\n  can legitimately be missing if a bound refers to a type we haven't added to the world yet...\r\n  be type variables that we haven't fixed up yet.\r\n  TODO asc generics - temporary guard....\r\n  to the forGenericType() method.\r\n  anonymous local type yet, report the issue on the enclosing type\r\n  LocalTypeBinding have a name $Local$, we can get the real name by using the signature....\r\n  ??? going back and forth between strings and bindings is a waste of cycles\r\n  first, check for recursive call to this method for the same tvBinding\r\n  Check if its a type variable binding that we need to recover to an alias...\r\n  Create the UnresolvedTypeVariableReferenceType for the type variable\r\n  TODO -- what about lower bounds??\r\n  make sure that type mungers are\r\n  baseTypeMungers.addAll(getWorld().getCrosscuttingMembersSet().getLateTypeMungers());\r\n  ??? assert finishedTypeMungers != null\r\n  Convert the type variables and store them\r\n  This is the set of type variables available whilst building the resolved member...\r\n  AMC these next two lines shouldn't be needed once we sort out generic types properly in the world map\r\n  AMC these next two lines shouldn't be needed once we sort out generic types properly in the world map\r\n  looking up type variables can get us into trouble\r\n  resolution of the type parameters may known in what context it is occurring (pr114744)\r\n  translate from boundedreferencetype to WildcardBinding\r\n  Work out 'kind' for the WildcardBinding\r\n  return makeTypeVariableBinding((TypeVariableReference)typeX);\r\n  Converting back to a binding from a UnresolvedType\r\n  just like the code above except it returns an array of ReferenceBindings\r\n  If there are aliases, place them in the map\r\n  there are no aliases\r\n  If there are aliases, place them in the map\r\n  key is currently the name of the type variable...is that ok?\r\n  }\r\n  }\r\n  Deal with the raw  pr125405\r\n  fully aware of any generics info\r\n  give it the same delegate and link it to the raw type\r\n  exposing AjBuildManager (needed by AspectDeclaration).\r\n /*UnresolvedType, TypeBinding*/\r\n /*UnresolvedType, TypeBinding*/\r\n /*TypeVariableBinding > original alias name*/\r\n /*new Integer(binding.typeVariables[i].rank),*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation\r\n *     Mik Kersten\t2004-07-26 extended to allow overloading of \r\n * \t\t\t\t\thierarchy builder\r\n * ******************************************************************/\r\n","JVMImpl":" getClassLibrary libarary org.aspectj.bea.jvm.JVMImpl  ","UnrecognizedAspectCE":"     ","Ajc151Tests":" testAtDecp_1 testAtDecp_2 testAtDecp_3 testAtDecp_4 testAnnotationsAndItds_pr98901 testAnnotationsAndItds_pr98901_2 testCircularGenerics_pr133307 testDeca testDeca2 testCrashingWithASM_pr132926_1 testCrashingWithASM_pr132926_2 testCrashingWithASM_pr132926_3 testGenericAdviceParameters_pr123553 testMemberTypesInGenericTypes_pr122458 testMemberTypesInGenericTypes_pr122458_2 testNPEOnDeclareAnnotation_pr123695 testHasMemberPackageProblem_pr124105 testDifferentNumbersofTVars_pr124803 testDifferentNumbersofTVars_pr124803_2 testParameterizedCollectionFieldMatching_pr124808 testGenericAspectsAndAnnotations_pr124654 testCallInheritedGenericMethod_pr124999 testIncorrectlyReferencingPointcuts_pr122452 testIncorrectlyReferencingPointcuts_pr122452_2 testInlinevisitorNPE_pr123901 testUnusedInterfaceMessage_pr120527 testAtAspectInheritsAdviceWithTJPAndThis_pr125699 testAtAspectInheritsAdviceWithTJPAndThis_pr125699_2 testBrokenLTW_pr128744 testAtAspectNoInvalidAbsoluteTypeName_pr126560 testAtAspectNoInvalidAbsoluteTypeName_pr126560_2 testArrayindexoutofbounds_pr129566 testMixingNumbersOfTypeParameters_pr125080 testMixingNumbersOfTypeParameters_pr125080_2 testIProgramElementMethods_pr125295 testParameterizedEnum_pr126316 testSwallowedException testAtAspectVerifyErrorWithAfterThrowingAndthisJoinPoint_pr122742 testAtAspectVerifyErrorWithAfterReturningAndthisJoinPoint_pr122742 testSwallowedExceptionIgnored testGenericAspectWithUnknownType_pr131933 testStructureModelForGenericITD_pr131932 testDeclareAnnotationAppearsInStructureModel_pr132130 testAtAspectInheritsAbstractPointcut_pr125810 testAtAspectDEOWInStructureModel_pr120356 testAtAspectNoNPEWithDEOWWithoutStructureModel_pr120356 testAtAspectWithoutJoinPointImport_pr121616 testAtAspectDeclareParentsRetainsFieldState_pr122370 testAtAspectNoNPEWithPcdContainingOrThisAndWildcard_pr128237 testEmptyPointcutInAtAspectJ_pr125475 testEmptyPointcutInAtAspectJ_pr125475_2 testEmptyPointcutInAtAspectJWithLTW_pr125475 testGenericAspectsWithAnnotationTypeParameters testPointcutInterfaces_pr130869 suite getSpecFile  org.aspectj.systemtest.ajc151.Ajc151Tests  Some @DeclareParents testing\r\n  public void testMissingImport_pr127299() { runTest(\"missing import gives funny message\");}\r\n  public class SkipList<T extends Comparable> extends Object implements Set<T>, Iterable<T>\r\n  protected class SkipListElement<E> extends Object\r\n  protected class SkipListIterator<E> implements Iterator<T>\r\n  check that the defaults return the fully qualified arg\r\n  check that can get hold of the non qualified args\r\n  the argument is org.aspectj.lang.JoinPoint, check that this is added\r\n  AsmManager.setReporting(\"c:  get the IProgramElements corresponding to the ITDs and classes\r\n  check that the relationship map has 'itd method declared on bar'\r\n  check that the relationship map has 'itd field declared on bar'\r\n  check that the relationship map has 'itd constructor declared on foo'\r\n  check that the relationship map has 'bar aspect declarations method and field itd'\r\n  check that the relationship map has 'foo aspect declarations constructor itd'\r\n  AsmManager.setReporting(\"c:  get the IProgramElements corresponding to the different code entries\r\n  check that decam has a annotates relationship with the debit method\r\n  check that the debit method has an annotated by relationship with the declare @method\r\n  check that decac has a annotates relationship with the constructor\r\n  check that the constructor has an annotated by relationship with the declare @constructor\r\n  AsmManager.setReporting(\"c:  and the method it matches.\r\n  check that the method has a matches declare relationship with @DeclareWarning\r\n  check that the @DeclareWarning has a matches relationship with the warningMethod\r\n  and the method it matches.\r\n  check that the @DeclareError has a matches relationship with the badMethod\r\n   /*\r\n   * Load-time weaving bugs and enhancements\r\n   */\r\n","ConstantMethodref":" accept  org.aspectj.apache.bcel.classfile.ConstantMethodref  ","IMessageContext":" getContextId  org.aspectj.bridge.IMessageContext  ","Signature":" accept dump getSignatureIndex setSignatureIndex getSignature mark getData reset unread identStart identPart matchIdent matchGJIdent translate isFormalParameterList isActualParameterList toString copy asClassSignature asMethodTypeSignature asFieldTypeSignature toString toString toString isBaseType isBaseType toString isClassTypeSignature isTypeVariableSignature isArrayTypeSignature isClassTypeSignature toString isTypeVariableSignature toString isArrayTypeSignature toString toString toString toString toShortString toLongString getName getModifiers getDeclaringType getDeclaringTypeName signature_index classSig methodSig fieldSig formalTypeParameters superclassSignature superInterfaceSignatures formalTypeParameters parameters returnType throwsSignatures identifier classBound interfaceBounds sig classSignature outerType nestedTypes typeVariableName typeSig identifier typeArguments isWildcard isPlus isMinus signature org.aspectj.apache.bcel.classfile.Signature org.aspectj.lang.Signature  Ok, formal parameter\r\n  System.out.println(\"Enter <\");\r\n  List of parameters\r\n  System.out.println(\"Still no >\");\r\n  Recursive call\r\n  System.out.println(\"Sig:\" + s);\r\n  null if isWildcard\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Test4b":" main testBasicEquality testEqualityAfterAddition testNotWholeCanvas  tests.Test4b  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","Privilege":"     ","Test4c":" main testBasicEquality testEqualityAfterAddition testEqualityAfterMove  tests.Test4c  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","Test4d":" main testBasicEquality testNonGroupMove testEqualityAfterAddition testEqualityAfterMove testEqualityAfterMove0  tests.Test4d  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","ClassParser":" parse readAttributes readClassInfo readConstantPool readFields readID readInterfaces readMethods readVersion file zip file_name class_name_index superclass_name_index major minor access_flags interfaces constant_pool fields methods attributes is_zip BUFSIZE org.aspectj.apache.bcel.classfile.ClassParser  Compiler version\r\n  Access rights of parsed class\r\n  Names of implemented interfaces\r\n  collection of constants\r\n  class fields, i.e., its variables\r\n  methods defined in the class\r\n  attributes defined in the class\r\n  Loaded from zip file\r\n  Not a very clean solution ...\r\n  Is already a data stream\r\n  Check magic tag of class file\r\n  Get compiler version\r\n  Read constant pool entries\r\n  Get class information\r\n  Get interface information, i.e., implemented interfaces\r\n  Read class fields, i.e., the variables of the class\r\n  Read class methods, i.e., the functions in the class\r\n  Read class attributes\r\n  Read everything of interest, so close the file\r\n  Return the information we have gathered in a new object\r\n  this loses the old stack trace but I dont think that matters!\r\n  add some context if we can\r\n /* Interfaces are implicitely abstract, the flag should be set\r\n     * according to the JVM specification.\r\n     */\r\n","Test4e":" main testBasicEquality testNonGroupMove testEqualityAfterAddition testEqualityAfterMove testSecondEnclosingGroup  tests.Test4e  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","ThrowsTagImpl":" exception exceptionComment exceptionName kind findException exception exceptionComment exceptionName org.aspectj.tools.ajdoc.ThrowsTagImpl  TODO: implement         FUUUUUUCCCCCCCCCKKKKKKKKKKKK\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","ConstantValueConversion":" main FOO ConstantValueConversion  if this isn't stored as 3L, we're not verifying.\r\n ","POP2":" accept  org.aspectj.apache.bcel.generic.POP2  ","AfterConstructorCalls":"     ","FdVisitor":" visitAnnotation visitAttribute visitEnd field org.aspectj.weaver.asm.FdVisitor  am.annotations.add(annotation);\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","NullWithFormals":"     ","NewSiteAdvice":"     ","AjdocTest":" testSource14  org.aspectj.tools.ant.taskdefs.AjdocTest  task.setClasspath(new Path(p, \".. /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","UnimplementedSyntax":"     ","BridgeModuleTests":" suite  org.aspectj.bridge.BridgeModuleTests  ","VisiblePrivateInterfaceITDs":"     ","WithinInners":"     ","CastExpr":" accept getTypeName getType m_castToTypeName m_expr org.aspectj.weaver.ast.CastExpr  ","Pass1Verifier":" getJavaClass do_verify getMessages jc myOwner org.aspectj.apache.bcel.verifier.statics.Pass1Verifier  BCEL sometimes is a little harsh describing exceptual situations.\r\n  a constant pool index is referenced that does not exist.\r\n  loads in the class file if not already done.\r\n  JavaClass objects here.\r\n  if a class file cannot be found or in another way be looked up.\r\n  This method is only here to override the javadoc-comment.\r\n /* If we find more constraints to check, we should do this in an own method. */\r\n","AfterUnlock":"     ","UnusedImport":" main  UnusedImport  ","TestingModuleTests":" suite  org.aspectj.testing.TestingModuleTests  ","InPathTests":" suite getSpecFile test001 test002 test003 test005 test006 test007 test008 test009 test010 test011 test012 test013 test014 test015 test016 test017  org.aspectj.systemtest.inpath.InPathTests  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","AllTracing5Tests":" suite  org.aspectj.weaver.AllTracing5Tests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n ","DeclareWarningAndInterfaceMethodCW":"     ","MockSignature":" getExceptionTypes getParameterNames getParameterTypes getDeclaringType getDeclaringTypeName getModifiers getName toLongString toShortString name decClass paramTypes org.aspectj.aopalliance.tests.MockSignature  /*\r\n * Created on 07-May-2004\r\n *\r\n * TODO To change the template for this generated file go to\r\n * Window - Preferences - Java - Code Generation - Code and Comments\r\n */\r\n","SofteningTooMuch":"     ","ArrayInc":" testCheck getIRA throwError main testArrayExpression testArrayExpressionOrdering IRA ArrayInc  ","MethodsNotFound":" foo foo bar foo  MethodsNotFound Ha  ","FieldFromImplementsNotFound":"     ","Moody":" getMood setMood getMood setMood  moody.Moody moody.Moody  ","Classified":"     ","NestedFinally":" main m  NestedFinally  ","CALOAD":" accept  org.aspectj.apache.bcel.generic.CALOAD  ","CompileTime":"     ","EmacsStructureModelManager":" externalizeModel dumpStructureToFile printDecls printDecl fixFilename print subst EXTERN_FILE_SUFFIX writer org.aspectj.ajdt.internal.core.builder.EmacsStructureModelManager  Set fileSet = StructureModelManager.INSTANCE.getStructureModel().getFileMap().entrySet();\r\n  source files have source locations\r\n  ignore\r\n  this ignores relations on the compile unit\r\n  if (nodeObject instanceof IProgramElement) {\r\n  2\r\n  HACK:\r\n  4\r\n  5\r\n  }\r\n  this ignores relations on the compile unit\r\n  !currNode.isStmntKind() &&\r\n  9\r\n  10\r\n  11\r\n  12\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AspectJBuildManagerTest":" suite testSequence setUp tearDown  org.aspectj.ajde.internal.AspectJBuildManagerTest  or you wont get a .ajsym file\r\n  XXX should fail? empty configs fail b  TODO-path\r\n  TODO-path\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","MissingAccessor2":"     ","CflowOfFieldInitAnonMethods":"     ","IZOption":"   com.test.IZOption  ","CommandInvoker":"   ca.ubc.cs.spl.aspectPatterns.patternLibrary.CommandInvoker  ","LocalVariableInfo":" setName setType getType getName add add types names org.aspectj.apache.bcel.verifier.statics.LocalVariableInfo  incl ","DeclaredExcs":"     ","LongIdentifiable":"   LongIdentifiable LongIdentifiable LongIdentifiable LongIdentifiable  ","AllWeaver5Tests":" suite  org.aspectj.weaver.AllWeaver5Tests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 2005-2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer          Initial implementation\r\n *   Matthew Webster        Move from default package\r\n * ******************************************************************/\r\n","FinalStaticField":" main public_c private_c protected_c default_c FIELDS C D FinalStaticField  ","PureJavaTests":" suite getSpecFile test001 test002 test003 test004 test005 test006 test007 test008 test009 test010 test011 test012 test013 test014 test015 test016 test017 test018 test019 test020 test021 test022 test023 test024 test025 test026 test027 test028 test029 test030 test031 test032 test033 test034 test035 test036 test037 test038 test039 test040 test041 test042 test043 test044 test045 test046 test047 test048 test049 test050 test051 test052 test053 test054 test055 test056 test057 test058 test059 test060 test061 test062 test063 test064 test065 test066 test067 test068 test069 test070 test071 test072 test073 test074 test075 test076 test077 test078 test079 test080 test081 test082 test083 test084 test085 test086 test087 test088 test089 test090 test091 test092 test093 test094 test095 test096 test097 test098 test099 test100 test101 test102 test103 test104 test105 test106 test107 test108 test109 test110 test111 test112 test113 test114 test115 test116 test117 test118 test119 test120 test121 test122 test123 test124 test125 test126 test127 test128 test129 test130 test131 test132 test133 test134 test135 test136 test137 test138 test139 test140 test141 test142 test143 test144 test145 test146 test147 test148 test149 test150 test151 test152 test153 test154 test155 test156 test157 test158 test159 test160 test161 test162 test163 test164 test165 test166 test167 test168 test169 test170 test171 test172 test173 test174 test175 test176 test177 test178 test179 test180 test181 test182 test183 test184 test185 test186 test187 test188 test189 test190 test191 test192 test193 test194 test195 test196 test197 test198 test199 test200 test201 test202 test203 test204 test205 test206 test207 test208 test209 test210 test211 test212 test213 test214 test215 test216 test217 test218 test219 test220 test221 test222 test223 test224 test225 test226 test227 test228 test229 test230 test231 test232 test233 test234 test235 test236 test237 test238 test239 test240 test241  org.aspectj.systemtest.purejava.PureJavaTests  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","GeneratedStaticAsTransient":"     ","BillingSimulation":" main report  telecom.BillingSimulation  /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","TestClass":" doSomething main  TestClass TestClass  ","RunListener":" addingChild runStarting runCompleted list selector writer prefix org.aspectj.testing.run.RunListener  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","InvalidNewQualifier10CE":" test  InvalidNewQualifier10CE Outer OuterInterface OuterOuter  CE 10 new qualification bad\r\n  ok\r\n ","AbstractBaseAndInterTypeInterface":"     ","Subroutines":" contains toString setLeavingRET getEnteringJsrInstructions addEnteringJsrInstruction getLeavingRET getInstructions addInstruction getRecursivelyAccessedLocalsIndices _getRecursivelyAccessedLocalsIndicesHelper getAccessedLocalsIndices subSubs setLocalVariable noRecursiveCalls getSubroutine subroutineOf getTopLevel getSuccessors toString UNSET localVariable instructions theJSRs theRET subroutines TOPLEVEL org.aspectj.apache.bcel.verifier.structurals.Subroutines  Elements: InstructionHandle\r\n  (We don't know out leader here so we cannot check if we're really targeted!)\r\n  TODO: Implement caching.\r\n  the constant pool.\r\n  LONG? DOUBLE?.\r\n  RET is not a LocalVariableInstruction in the current version of BCEL.\r\n  Define our \"Toplevel\" fake subroutine.\r\n  Elements: InstructionHandle\r\n  Build up the database.\r\n  Fake it a bit. We want a virtual \"TopLevel\" subroutine.\r\n  disallowed and checked below, after the BFS.\r\n  we don't want to assign an instruction to two or more Subroutine objects.\r\n  Graph colouring. Key: InstructionHandle, Value: java.awt.Color .\r\n  Do some BFS with \"actual\" as the root of the graph.\r\n  Init colors\r\n  Init Queue\r\n  add(Obj) adds to the end, remove(0) removes from the start.\r\n  Loop until Queue is empty\r\n  BFS ended above.\r\n  If we don't deal with the top-level 'subroutine'\r\n  Note the inclusive  We don't want to forbid top-level exception handlers.\r\n  as is mandated by JustIces notion of subroutines.\r\n  subroutines.\r\n  Don't use toString() here because of possibly infinite recursive subSubs() calls then.\r\n  Terminates method normally.\r\n  subroutines not to be protected by exception handlers.\r\n  See method comment.\r\n  thanks to Eli Tilevich for reporting.\r\n  default case: Fall through.\r\n /*\r\n\t\t * Refer to the Subroutine interface for documentation.\r\n\t\t */\r\n /*\r\n\t\t * Refer to the Subroutine interface for documentation.\r\n\t\t */\r\n /*\r\n\t\t * Refer to the Subroutine interface for documentation.\r\n\t\t */\r\n /*\r\n\t\t * Refer to the Subroutine interface for documentation.\r\n\t\t */\r\n /*\r\n\t\t * Adds an instruction to this subroutine.\r\n\t\t * All instructions must have been added before invoking setLeavingRET().\r\n\t\t * @see #setLeavingRET\r\n\t\t */\r\n /* Satisfies Subroutine.getRecursivelyAccessedLocalsIndices(). */\r\n /*\r\n\t\t * Satisfies Subroutine.getAccessedLocalIndices().\r\n\t\t */\r\n /*\r\n\t\t * Satisfies Subroutine.subSubs().\r\n\t\t */\r\n /*\r\n\t\t * Sets the local variable slot the ASTORE that is targeted\r\n\t\t * by the JsrInstructions of this subroutine operates on.\r\n\t\t * This subroutine's RET operates on that same local variable\r\n\t\t * slot, of course.\r\n\t\t */\r\n /* BFS ALGORITHM MODIFICATION: Start out with multiple \"root\" nodes, as exception handlers are starting points of top-level code, too. [why top-level? TODO: Refer to the special JustIce notion of subroutines.]*/\r\n","QualifiedSuperCall":" m m m main m field field field field PackageSuper QualifiedSuperCall  ","X10":"     ","InvalidNewQualifier8CE":" test  InvalidNewQualifier8CE Outer OuterInterface OuterOuter  CE 8 new qualification bad\r\n  new OuterOuter.Inner(){}.new OuterOuter.Inner.I(){};   ok\r\n ","Relationship":" getName getKind toString getSourceHandle getTargets addTarget hasRuntimeTest isAffects serialVersionUID name kind sourceHandle targets hasRuntimeTest org.aspectj.asm.internal.Relationship  TODO should be a well defined set (enum type) with a flag for this...\r\n  is modified because the subsequent reweave will re-add it.\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n *     Andy Clement    Extensions for better IDE representation\r\n * ******************************************************************/\r\n","Basic3c":" main m2 m3 m4 m2 m3 m4 advice1 simplefield Basic3c X  ","X11":"     ","Basic3b":" main m2 m3 m4 m2 m3 m4 advice1 simplefield Basic3b X  ","ConstructorArgTracing":"     ","ClassPreProcessor":" initialize preProcess  org.aspectj.weaver.loadtime.ClassPreProcessor  ","MultipleSuperCf":"     ","IntroOrder":"     ","DeclareAtFieldDeclaration":" clone0 subtreeMatch0 accept0 internalModifiersProperty internalModifiers2Property internalJavadocProperty propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty internalPatternNodeProperty internalAnnotationNameProperty JAVADOC_PROPERTY PATTERN_PROPERTY ANNOTATION_NAME_PROPERTY PROPERTY_DESCRIPTORS org.aspectj.org.eclipse.jdt.core.dom.DeclareAtFieldDeclaration  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  allow default implementation to flag the error\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - therefore\r\n\t * we don't do anything with this\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - therefore\r\n\t * we don't do anything with this\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on BodyDeclaration.\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on ASTNode.\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on DeclareAnnotationDeclaration.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on DeclareAnnotationDeclaration.\r\n\t */\r\n","XXJoinPointTest":" log main suite hello testJoinPointsInAdviceSignature pc before before beforeEnclosing beforeWEIRD1 before before beforeWEIRD2 s_log ataspectj.XXJoinPointTest  weird order\r\n  conventional order\r\n  weird order\r\n ","Global":" isTrue  jar.required.Global  ","NonLocalExit":" getExitCode SUCCEESS FAULURE exitCode org.aspectj.util.NonLocalExit  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","JDTLikeHandleProviderTests":" setUp tearDown testMoreThanOneNamedPointcut testAspectHandle testAdviceHandle testPointcutHandle testGetIPEWithAspectHandle testAdviceHandleWithCrossCutting testPointcutHandleWithArgs testAdviceHandleWithArgs testFieldITD testMethodITD testMethodITDWithArgs testConstructorITDWithArgs testDeclareParentsHandle testTwoDeclareParents testMethodCallHandle testDeclareAtType testDeclareAtField testDeclareAtMethod testDeclareAtConstructor testTwoPiecesOfAdviceWithSameSignatureAndPointcut testDeclareWarningHandle testTwoDeclareWarningHandles testTenDeclareWarningHandles testCompilationUnitSameAsJDT testClassSameAsJDT testInterfaceSameAsJDT testConstructorSameAsJDT testConstructorWithArgsSameAsJDT testImportDeclarationSameAsJDT testTypeSameAsJDT testFieldSameAsJDT testInitializationSameAsJDT testMethodWithStringArrayArgsSameAsJDT testMethodWithIntArrayArgsSameAsJDT testMethodWithNoArgsSameAsJDT testMethodWithTwoArgsSameAsJDT testMethodWithTwoStringArgsSameAsJDT testEnumSameAsJDT testEnumValueSameAsJDT testAnnotationSameAsJDT testMethodWithListArgSameAsJDT testMethodWithGenericArgSameAsJDT testMethodWithTwoGenericArgsSameAsJDT testMethodWithTwoTypeParametersSameAsJDT testMethodWithTwoArgsSameAsJDT_2 compareHandles suite getSpecFile handleProvider org.aspectj.systemtest.ajc153.JDTLikeHandleProviderTests  AJDT: =AJHandleProject  AJDT: =AJHandleProject  AJDT: =AJHandleProject  AJDT: =AJHandleProject  signature and the same pointcut\r\n  want one with count 10.\r\n  JDT: =TJP Example  JDT: =Java5 Handles  JDT: =Java5 Handles  JDT: =Java5 Handles  JDT: =Java5 Handles  JDT: =TJP Example  JDT: =TJP Example  JDT: =TJP Example  and =TJP Example  JDT: =TJP Example  JDT: =TJP Example  JDT: =TJP Example  JDT: =TJP Example  JDT: =TJP Example  JDT: =Java5 Handles  JDT: =Java5 Handles  JDT: =Java5 Handles  JDT: =Java5 Handles  ~genericMethod1~QList\\<QString;>;\r\n  ~genericMethod2~QList\\<QString;>;~QMyGenericClass\\<QInteger;>;\r\n  ~QMyGenericClass2\\<QString;QInteger;>;\r\n  ~genericMethod3~I~QList\\<QString;>;\r\n   ","BadExpressionStatement":" main  BadExpressionStatement  ","HarnessSelectionTest":" getSpec testFilesAvailable testIncrementalSuite testKeywordSelectionBoth testKeywordSelectionRequire testKeywordSelectionSkip testNoOptions testEclipseOptionsSkip testAjcEclipseConflict testEclipseConflict testSinglePR testTwoPR testTitleContainsSubstringSelection testTitleContainsSubstringSelectionPlural testTitleContainsExactSelection testTitleContainsExactSelectionPlural testTitleListSelection testTitleListSelectionPlural testTitleListFileSelection testTitleListFileSelectionPlural runSuite checkSelection ajcAvailable eclipseAvailable TESTDATA INC_HARNESS_DIR SELECT INCREMENTAL TITLE_LIST_ONE TITLE_LIST_PLURAL SPECS verbose tests testsRun skipped passed failed incomplete infix org.aspectj.testing.drivers.HarnessSelectionTest  keep compiler happy\r\n  Now check the \"fail only\" path\r\n  so count \"skip\" instead of TITLE_LIST_PLURAL\r\n  XXX sync hack snooping of message text with skip messages, harness\r\n  XXX util\r\n  XXX util\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ConstructorExecInit":"     ","QueueFull":" insert getFirst removeFirst insert getFirst removeFirst items first items first ca.ubc.cs.spl.aspectPatterns.examples.state.aspectj.QueueFull ca.ubc.cs.spl.aspectPatterns.examples.state.java.QueueFull  ","UpdateConfigurationDialog":" cancel_button_actionPerformed ok_button_actionPerformed jbInit getListCellRendererComponent mouseClicked keyPressed doCheck mousePressed mouseReleased mouseEntered mouseExited keyTyped keyReleased serialVersionUID message1 message2 box5 cancel_button ok_button flowLayout1 globalButton_panel jPanel1 jPanel2 titledBorder1 titledBorder2 borderLayout1 borderLayout2 borderLayout3 jPanel3 gridLayout1 jScrollPane1 updatedFilesList jScrollPane2 buildConfigList box2 messageLabel1 messageLabel2 serialVersionUID list org.aspectj.ajde.ui.swing.UpdateConfigurationDialog org.aspectj.ajde.ui.swing.CheckListCellRenderer org.aspectj.ajde.ui.swing.CheckListener  CheckListener listener = new CheckListener(buildConfigList);\r\n  (parentComponent.getWidth()  (parentComponent.getHeight()   /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","SimpleGenericsProgram":" add main add main contents contents TreasureChest SimpleGenericsProgram TreasureChest SimpleGenericsProgram  ","ComponentFactoryImplementation":"     ","CodeException":" accept dump getCatchType getEndPC getHandlerPC getStartPC setCatchType setEndPC setHandlerPC setStartPC toString toString toString copy start_pc end_pc handler_pc catch_type org.aspectj.apache.bcel.classfile.CodeException  Range in the code the exception handler is\r\n  active. start_pc is inclusive, end_pc exclusive\r\n /* Starting address of exception handler, i.e.,\r\n\t\t\t   * an offset from start of code.\r\n\t\t\t   */\r\n","Circle":" perimeter area toString r tracing.Circle  radius\r\n /*\r\n     * All sorts of constructors\r\n     */\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","GoToLineThread":" isFinished needsRetry run shortPause editorAdapter lineNumber fileToSeekTo finished org.aspectj.ajde.ui.swing.GoToLineThread  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","SingleIndexWriter":" print printMemberDesc printClassInfo generate del org.aspectj.tools.doclets.standard.SingleIndexWriter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","ParsingAndMatching4":"     ","SimpleElementValue":" getIndex getValueString getValueInt getValueByte getValueChar getValueLong getValueFloat getValueDouble getValueBoolean getValueShort toString stringifyValue dump idx org.aspectj.apache.bcel.classfile.annotation.SimpleElementValue  For 'class' this points to the class entry in the cpool\r\n  Whatever kind of value it is, return it as a string\r\n  u1 kind of value\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","ReturnaddressType":" equals getTarget NO_TARGET returnTarget org.aspectj.apache.bcel.generic.ReturnaddressType  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","StackMap":" dump getStackMap setStackMap toString copy accept getMapLength map_length map org.aspectj.apache.bcel.classfile.StackMap  Table of stack map entries\r\n /*\r\n   * @param name_index Index of name\r\n   * @param length Content length in bytes\r\n   * @param map Table of stack map entries\r\n   * @param constant_pool Array of constants\r\n   */\r\n","RegularScreen":" print newline print newline  ca.ubc.cs.spl.aspectPatterns.examples.facade.aspectj.RegularScreen ca.ubc.cs.spl.aspectPatterns.examples.facade.java.RegularScreen  ","LangUtil":" escape escape flatten flatten flatten flatten invalidComponents isEmpty isEmpty throwIaxIfComponentsBad throwIaxIfFalse throwIaxIfNull unflatten unflatten combine combine arrayAsList classesIn unsplit split strip loadClasses fileToClassname main render debugStr debugStr debugStr debugStr privilegedGetField nonStaticFields debugStr debugStr unqualifiedClassName unqualifiedClassName makeDiffs makeSoftDiffs toString toString r toString supportsJava is13VMOrGreater is14VMOrGreater is15VMOrGreater throwIaxIfNull throwIaxIfNotAssignable throwIaxIfNotAssignable throwIaxIfNotAllAssignable throwIaxIfFalse isEmptyTrimmed isEmpty isEmpty isEmpty split commaSplit splitClasspath getBoolean anySplit strings safeList endsWith selectDirectories copyStrings extractOptions extractOptions selectOptions selectOptions optionVariants exp copy safeCopy unqualifiedClassName unqualifiedClassName replace toSizedString clipBuffer renderExceptionShort renderException renderException elideEndingLines stackToString unwrapException arrayAsList acceptString makeClasspath addIfNotEmpty makeProcess makeProcess getJavaExecutable sleep sleepUntil reinit init init init setEnvp setErrSnoop setOutSnoop start stop getCommand completed started userStopped getThrown getResult doCompleting stop makeThrown toString append SPLIT_DELIM SPLIT_START SPLIT_END CLASSPATH_SEP NONE SEPS UNFLATTEN_EMPTY_ERROR UNFLATTEN_EMPTY_AS_NULL SKIP_EMPTY_IN_UNFLATTEN COMMA LIST NULL prefix nullFlattened escape delim suffix emptyUnflattened toString VM_CLASSES EOL is13VMOrGreater is14VMOrGreater is15VMOrGreater TEST_PACKAGES infixes command envp label init started completed userStopped process errStream outStream inStream errSnoop outSnoop result thrown fromProcess fromErrPipe fromOutPipe fromInPipe thrown org.aspectj.testing.util.LangUtil org.aspectj.util.LangUtil  XXX this has to be the wrong way to get system-dependent classpath separator\r\n  avoid StringTokenizer construction\r\n  int index = 0;\r\n  final boolean escaping = (haveDelim && (null != escape));\r\n  boolean lastWasDelim = false;\r\n  XXX\r\n  this WILL FAIL if full path with drive letter on windows\r\n  todo remove as testing\r\n  todo move as testing\r\n  collapse to String\r\n  remove expected from missingListOut\r\n  since list is sorted, there can be no more matches...\r\n  messages on the same line, but with different text content.\r\n  XXX no intersect or union on collections???\r\n  XXX no intersect or union on collections???\r\n  import java.awt.event.InvocationEvent;\r\n  JLS 20.18.7\r\n  unset any not found\r\n  fixup remainder\r\n  be nice, don't stomp input\r\n  variant is a bitmap wrt doing extra value when dup[k]=true\r\n  not in Math?\r\n  todo: replace with String variant if  log(\"srcBegin:\" + srcBegin + \":srcEnd:\" + srcEnd);\r\n  ignored\r\n  Java 1.2 exceptions that carry exceptions\r\n  java.util.logging.LogRecord.getThrown()\r\n  XXX dumb implementation\r\n  XXX dumb implementation\r\n  not needed?\r\n  not needed?\r\n  java.ext.dirs\r\n  final Thread thread = Thread.currentThread();\r\n  init everything but command and label\r\n  pipe threads are children\r\n  start 4 threads, process & pipes for in, err, out\r\n  cache this\r\n  assert null == this.thrown\r\n  this will block if waiting\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2000 Xerox Corporation. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n /*chars.length*/\r\n /*\r\n         * XXX not verified thread-safe, but should be.  Known problems:\r\n         * - user stops (completed = true) then exception thrown\r\n         *   from destroying process (stop() expects !completed)\r\n         * ...\r\n         */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","BuildListener":" compileStarted compileFinished compileAborted  org.aspectj.ajde.BuildListener  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","WithinAnnotationPointcut":" getAnnotationTypePattern couldMatchKinds parameterizeWith fastMatch matchInternal resolveBindings concretize1 findResidueInternal getBindingAnnotationTypePatterns getBindingTypePatterns write read equals hashCode buildDeclarationText toString accept annotationTypePattern munger declarationText org.aspectj.weaver.patterns.WithinAnnotationPointcut  if we weren't going to find the annotation\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#fastMatch(org.aspectj.weaver.patterns.FastMatchInfo)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#match(org.aspectj.weaver.Shadow)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#concretize1(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.IntMap)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#findResidue(org.aspectj.weaver.Shadow, org.aspectj.weaver.patterns.ExposedState)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingAnnotationTypePatterns()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingTypePatterns()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PatternNode#write(java.io.DataOutputStream)\r\n\t */\r\n /* (non-Javadoc)\r\n     * @see java.lang.Object#equals(java.lang.Object)\r\n     */\r\n /* (non-Javadoc)\r\n     * @see java.lang.Object#hashCode()\r\n     */\r\n /* (non-Javadoc)\r\n     * @see java.lang.Object#toString()\r\n     */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","ContextUser":"     ","BadSynchronized":"     ","AdviceSubWriter":" delegateClass keyName where getWhere printSummaryType printReturnTag printTagsInfoHeader printTagsInfoFooter printSignature printExtraType getName name printParameters printReturnType nonfinalPrintMember printSummaryLink printHead staticMembers getMembers printCrosscuts printSummaryCrosscuts hasCrosscuts  org.aspectj.tools.doclets.standard.AdviceSubWriter  AdviceDoc advice = (AdviceDoc)member;\r\n  AspectDoc ad = (AspectDoc)cd;\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","IFNULL":" negate accept  org.aspectj.apache.bcel.generic.IFNULL  ","ButtonCommand":" executeCommand executeCommand printer ca.ubc.cs.spl.aspectPatterns.examples.command.aspectj.ButtonCommand ca.ubc.cs.spl.aspectPatterns.examples.command.java.ButtonCommand  ","ParsingAndMatching1":"     ","ParsingAndMatching2":"     ","FullPathHandleProvider":" createHandleIdentifier createHandleIdentifier getFileForHandle getLineNumberForHandle getOffSetForHandle createHandleIdentifier dependsOnLocation initialize ID_DELIM org.aspectj.asm.internal.FullPathHandleProvider  skip over the file\r\n  skip over the file\r\n  skip over the line number\r\n  skip over the column\r\n  return true;\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","TypePatternList":" size get toString canMatchSignatureWithNParameters matches outOfStar inStar parameterizeWith resolveBindings resolveReferences postRead equals hashCode read write getTypePatterns getExactTypes accept traverse areAllExactWithNoSubtypesAllowed maybeGetCleanNames typePatterns ellipsisCount EMPTY ANY org.aspectj.weaver.patterns.TypePatternList  can't use TypePattern.ELLIPSIS because of circular static dependency that introduces\r\n  System.err.print(\"match(\" + arguments + \", \" + types + \") -> \");\r\n  System.err.println(b);\r\n  invariant: if (tLeft > 0) then (ti < target.length && pi < pattern.length)\r\n  invariant: pLeft > 0, so we know we'll run out of stars and find a real char in pattern\r\n  invariant: if (tLeft > 0) then (ti < target.length)\r\n /*\r\n     * return true iff this pattern could ever match a signature with the\r\n     * given number of parameters\r\n     */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AdviceOnIntroduced.delete.20":"     ","ParsingAndMatching3":"     ","TextCreator":" processType processAttribute processValue processType processAttribute processValue  ca.ubc.cs.spl.aspectPatterns.examples.builder.aspectj.TextCreator ca.ubc.cs.spl.aspectPatterns.examples.builder.java.TextCreator  ","AjAST5Test":" testInternalAspectDeclaration testInternalAjTypeDeclaration testInternalDeclareParentsDeclaration  org.aspectj.tools.ajc.AjAST5Test  ","BindingAnnotationTypePattern":" resolveBinding verifyRuntimeRetention parameterizeWith getFormalIndex equals hashCode remapAdviceFormals write read formalIndex VERSION org.aspectj.weaver.patterns.BindingAnnotationTypePattern  we'll deal with this next check when the type var is actually bound...\r\n  default is class visibility\r\n  rev if serialised form changed\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.ExactAnnotationTypePattern#write(java.io.DataOutputStream)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","InstructionListObserver":" notify  org.aspectj.apache.bcel.generic.InstructionListObserver  ","DecA":"     ","OpenComment":"     ","ExceptionCheckCE":"     ","BadIntroduction":"     ","Standard":" getSingleton start getConfiguration quiet speak cond gen title cond gen title cond gen title cond gen title cond gen title gen title gen title gen title cond gen title cond gen title preGenerationClasses gen title gen title cond gen title cond gen title postGenerationClasses cond message cond message checkClasses SINGLETON org.aspectj.tools.doclets.standard.Standard  todo: prefer early /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","StaticInitName":"     ","CflowAlone":"     ","AjASTTest":" testNewDefaultPointcut testGetAndSetDetail testNewReferencePointcut testGetAndSetRefPointcutName testNewAndPointcut testGetAndSetLeftOfAndPointcut testGetAndSetRightOfAndPointcut testNewCflowPointcut testGetAndSetBodyOfCflowPointcut testNewNotPointcut testGetAndSetBodyOfNotPointcut testNewOrPointcut testGetAndSetLeftOfOrPointcut testGetAndSetRightOfOrPointcut testNewPerCflow testGetAndSetBodyOfPerCflow testNewPerObject testGetAndSetBodyOfPerObject testNewPerTypeWithin testNewDefaultTypePattern testGetAndSetDetailInDefaultTypePattern testPropertyDescriptorsForDefaultTypePattern testCloneDefaultTypePattern testNewSignaturePattern testGetAndSetDetailInSignaturePattern testPropertyDescriptorsForSignaturePattern testCloneDefaultSignaturePattern testNewPointcutDeclaration testGetAndSetPointcutName testGetAndSetPointcutDesignator testGetAndSetPointcutArguments testPropertyDescriptorsForPointcutDeclaration testClonePointcutDeclaration testInternalPointcutDeclaration testNewAspectDeclaration testPropertyDescriptorsForAspectDeclaration testCloneAspectDeclaration testSetPerClauseInAspectDeclaration testSetPrivilegedInAspectDeclaration testNewAfterAdviceDeclaration testNewBeforeAdviceDeclaration testGetAndSetPointcutInAdviceDeclaration testGetAndSetBodyInAdviceDeclaration testNewAfterReturningAdviceDeclaration testGetAndSetReturning testNewAfterThrowingAdviceDeclaration testGetAndSetThrowing testNewAroundAdviceDeclaration testGetAndSetReturnTypeJLS2 testGetAndSetReturnTypeJLS3 testNewITDFieldDeclaration testNewITDMethodDeclaration testNewAjTypeDeclaration testGetAndSetIsAspect testPropertyDescriptorsForAjTypeDeclaration testCloneAjTypeDeclaration testPropertyDescriptorsForAjTypeDeclaration2 testPropertyDescriptorsForAjTypeDeclaration3 testNewDeclareAtFieldDeclaration testPropertyDescriptorsForDeclareAtField testGetAndSetPatternNodeInDeclareAtField testGetAndSetAnnNameInDeclareAtField testCloneDeclareAtField testInternalDeclareAtField testNewDeclareAtMethodDeclaration testPropertyDescriptorsForDeclareAtMethod testGetAndSetPatternNodeInDeclareAtMethod testGetAndSetAnnNameInDeclareAtMethod testCloneDeclareAtMethod testInternalDeclareAtMethod testNewDeclareAtConstructorDeclaration testPropertyDescriptorsForDeclareAtConstructor testGetAndSetPatternNodeInDeclareAtConstructor testGetAndSetAnnNameInDeclareAtConstructor testCloneDeclareAtConstructor testInternalDeclareAtConstructor testNewDeclareAtTypeDeclaration testPropertyDescriptorsForDeclareAtType testGetAndSetPatternNodeInDeclareAtType testGetAndSetAnnNameInDeclareAtType testCloneDeclareAtType testInternalDeclareAtType testNewDeclareErrorDeclaration testPropertyDescriptorsForDeclareErrorDeclaration testGetAndSetPointcutInErrorDeclaration testGetAndSetMessageInErrorDeclaration testCloneDeclareErrorDeclaration testInternalDeclareErrorDeclaration testNewDeclareParentsDeclaration testPropertyDescriptorsForDeclareParentsDeclaration testGetAndSetTypePatternInDeclareParentsDeclaration testGetAndSetIsExtendsInDeclareParentsDeclaration testTypePatternsInDeclareParents testCloneDeclareParentsDeclaration testNewDeclarePrecedenceDeclaration testPropertyDescriptorsForDeclarePrecedence testTypePatternsInDeclarePrecedence testCloneDeclarePrecedenceDeclaration testInternalDeclarePrecedenceDeclaration testNewDeclareSoftDeclaration testPropertyDescriptorsForDeclareSoftDeclaration testGetAndSetPointcutInSoftDeclaration testGetAndSetTypePatternInSoftDeclaration testCloneDeclareSoftDeclaration testInternalDeclareSoftDeclaration testNewDeclareWarningDeclaration testPropertyDescriptorsForDeclareWarningDeclaration testGetAndSetPointcutInWarningDeclaration testGetAndSetMessageInWarningDeclaration testCloneDeclareWarningDeclaration testInternalDeclareWarningDeclaration testDeclareAnnotationType testDeclareAnnotationMethod testDeclareAnnotationField testDeclareAnnotationConstructor testDeclareParents testDeclareWarning testDeclareError testDeclareSoft testDeclarePrecedence testJavadocCommentForDeclareExists_pr150467 isVisitingChildren setVisitingChildren getStart getLength visit visit visit visit visit visit visit visit visit visitTheKids visitDocTags start length org.aspectj.tools.ajc.AjASTTest org.aspectj.tools.ajc.SourceRangeVisitor  associated with the AjTypeDeclaration\r\n  associated with the TypeDeclaration\r\n ","ReflectionVar":" createThisVar createTargetVar createArgsVar createThisAnnotationVar createTargetAnnotationVar createArgsAnnotationVar createWithinAnnotationVar createWithinCodeAnnotationVar createAtAnnotationVar getBindingAtJoinPoint getBindingAtJoinPoint THIS_VAR TARGET_VAR ARGS_VAR AT_THIS_VAR AT_TARGET_VAR AT_ARGS_VAR AT_WITHIN_VAR AT_WITHINCODE_VAR AT_ANNOTATION_VAR annotationFinder argsIndex varType org.aspectj.weaver.reflect.ReflectionVar  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","NullPointerOnGets":"     ","SeeTagImplTest":" main suite printError setUp run make renderSeeTagImpl renderType renderMember render normalize verify testLink1 testLink2 testLink3 testLink4 testLink5 testLink6 testLink7 testLink8 testLink9 testLink10 testLink11 testLink12 testLink13 testLink14 testLink15 testLink16 testLink17 testLink18 testLink19 testLink20 testLink21 testLink22 testLink23 testLink24 testLink25 testLink26 testLink27 testLink28 testLink29 testLink30 testLink31 testLink32 testLink33 testLink34 testLink35 testLink36 testLink37 testLink38 testLink39 testLink40 testLink41 testLink42 testLink43 testLink44 testLink45 testLink46 testLink47 testLink48 testLink49 testLink50 testLink51 testLink52 testLink53 testLink54 testLink55 testLink56 testLink57 testLink58 testLink59 testLink60 testLink61 testLink62 testLink63 testLink64 testLink65 testLink66 testLink67 testLink68 testLink69 testLink70 testLink71 testLink72 testLink73 testLink74 testLink75 testLink76 testLink77 testLink78 testLink79 testLink80 testLink81 testLink82 testLink83 testLink84 testLink85 testLink86 testLink87 testLink88 testLink89 testLink90 testLink91 testLink92 testLink93 testLink94 testLink95 testLink96 testLink97 testLink98 testLink99 testLink100 testLink101 testLink102 testLink103 testLink104 testLink105 testLink106 testLink107 testLink108 testLink109 testLink110 testLink111 testLink112 testLink113 testLink114 testLink115 testLink116 testLink117 testLink118 testLink119 testLink120 testLink121 testLink122 testLink123 testLink124 testLink125 testLink126 testLink127 testLink128 testLink129 testLink130 testLink131 testLink132 testLink133 testLink134 testLink135 testLink136 testLink137 testLink138 testLink139 testLink140 testLink141 testLink142 testLink143 testLink144 testLink145 testLink146 testLink147 testLink148 testLink149 testLink150 testLink151 testLink152 testLink153 testLink154 testLink155 testLink156 testLink157 testLink158 testLink159 testLink160 testLink161 testLink162 testLink163 testLink164 testLink165 testLink166 testLink167 testLink168 FAIL_ON_PRINTERR ERRPRINTER input type member parms label result CASES org.aspectj.tools.ajdoc.SeeTagImplTest  argh - our only dependency on the compiler module is here XXX\r\n  ignore - ok if property off\r\n  first is null\r\n  0\r\n  2\r\n  4\r\n  6\r\n  8\r\n  10\r\n  12\r\n  14\r\n  16\r\n  18\r\n  20\r\n  22\r\n  24\r\n  26\r\n  28\r\n  30\r\n  32\r\n  34\r\n  36\r\n  38\r\n  40\r\n  42\r\n  44\r\n  46\r\n  48\r\n  50\r\n  52\r\n  54\r\n  56\r\n  58\r\n  60\r\n  62\r\n  64\r\n  66\r\n  68\r\n  70\r\n  72\r\n  74\r\n  76\r\n  78\r\n  80\r\n  82\r\n  84\r\n  86\r\n  88\r\n  90\r\n  92\r\n  94\r\n  96\r\n  98\r\n  100\r\n  102\r\n  104\r\n  106\r\n  108\r\n  110\r\n  112\r\n  114\r\n  116\r\n  118\r\n  120\r\n  122\r\n  124\r\n  126\r\n  128\r\n  130\r\n  132\r\n  134\r\n  136\r\n  138\r\n  140\r\n  142\r\n  144\r\n  146\r\n  148\r\n  150\r\n  152\r\n  154\r\n  156\r\n  158\r\n  160\r\n  162\r\n  164\r\n  166\r\n  test cases generated by genSeeTestCases.sh\r\n ","RequestBlocker":" safeRequest regularRequest unsafeRequest realSubject ca.ubc.cs.spl.aspectPatterns.examples.proxy.java.RequestBlocker  ","X42":"     ","AssignOps":"     ","PR102746":" main  PR102746  ","DominatesTypePatternCE":"     ","NamePattern":" matches outOfStar inStar matches toString equals hashCode write read maybeGetSimpleName isAny accept pattern starCount hashcode ELLIPSIS ANY org.aspectj.weaver.patterns.NamePattern  System.err.print(\"match(\\\"\" + pattern + \"\\\", \\\"\" + target + \"\\\") -> \");\r\n  System.err.println(b);\r\n  just '*' matches anything\r\n  invariant: if (tLeft > 0) then (ti < target.length && pi < pattern.length)\r\n  invariant: pLeft > 0, so we know we'll run out of stars and find a real char in pattern\r\n  invariant: if (tLeft > 0) then (ti < target.length)\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","SimpleStructureModelTest":" testModel setUp CONFIG_FILE_PATH org.aspectj.ajde.SimpleStructureModelTest  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","SmallComment":" main realMain  SmallComment  /**/\r\n","ClassOne":" main printMessage  ClassOne  ","Jdk14TraceFactoryTest":" testJdk14TraceFactory testGetTrace  org.aspectj.weaver.Jdk14TraceFactoryTest  ","Apple":" getArsenic bruise getBruising writeObject readObject peelApple getArsenic bruise getBruising writeObject readObject peelApple variety bruising weight seedContents core shell variety bruising weight seedContents core shell apples.Apple apples.ApplePealer Apple ApplePealer  ","MethodObserver":" notify  org.aspectj.apache.bcel.generic.MethodObserver  ","UsesDOMParser":" main  UsesDOMParser  ","CompileCommand":" buildNextFresh runCommand repeatCommand runCommandCleanup setEndTime waitForCompletion setup writeConfig makeProxy addProjectTask addSourcelineTask addSourcelineTask clearTasks hasWarning hasError start finish maintainHasWarning buildSuccessful invoke invoke render render getDefaultBuildConfigFile setInJars setInpath getInJars getInpath setSourceRoots getSourceRoots setAspectPath getAspectPath getClasspath getBootClasspath setOutJar getOutJar getOutputPath getOutputLocationManager getBuildConfigFiles getLastActiveBuildConfigFile getProjectName getRootProjectDir getProjectSourceFiles getProjectSourcePath getAjcWorkingDir getClassToExecute getExecutionArgs getVmArgs log logs getSourcePathResources MAX_TIME proxy loggingProxy myHandler endTime buildNextFresh tempDir hasError hasWarning PREFIX outputDir inJars inpath sourceRoots aspectPath outJar org.aspectj.testing.ajde.CompileCommand org.aspectj.testing.ajde.MyTaskListManager org.aspectj.testing.ajde.VoidInvocationHandler org.aspectj.testing.ajde.LoggingInvocationHandler org.aspectj.testing.ajde.ProjectProperties  time out waiting for build at three minutes\r\n  this proxy ignores calls\r\n  System.err.println(\"compiling \" + Arrays.asList(args));\r\n  --------- ICommand interface\r\n  System.err.println(\"recompiling...\");\r\n  set by build progress monitor when done\r\n  = new BrowserProperties();    ? \"[]\" : Arrays.asList(args).toString()));\r\n  also don't recurse into proxied toString?\r\n  known used, per logging proxy\r\n  not known if used - log any calls to it\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","DigitalClock":" removeObserver update draw removeObserver update draw subject subject clock.DigitalClock clock.DigitalClock  ","AbstractRunSpec":" setComment setStaging setBadInput isStaging setDescription getDescription setSourceLocation getSourceLocation setKeyword addKeyword setKeywords addKeywords addKeywords getKeywordsList getOptionsList getOptionsArray setOption addOption setOptions setOptionsArray addOptions addOptions getPathsList getPathsArray setPath setPaths addPath addPaths addPaths addDirChanges setMessage addMessage addMessage addMessages addMessages numMessages getMessages addChild getChildren getWorkingChildren adoptParentValues doAdoptParentValues skipMessage setXMLNames haveAttributes writeAttributes writeXml writeMessages writeChildren printAll getPrintName toString containedSummary toLongString containedToLongString initClone addListCount addListEntries makeList clone makeRunIterator isVerbose setOptions copy extractOptions extractOptions getListIterator setVerbose isStaging badInput description sourceLocation skipSet skipAll xmlElementName keywords messages options paths children dirChanges xmlNames comment runtime skipIfAnyChildSkipped DEFAULT descriptionName sourceLocationName keywordsName optionsName pathsName commentName stagingName badInputName skipDirChanges skipMessages skipChildren verbose parentOptions org.aspectj.testing.harness.bridge.AbstractRunSpec  nonfinal only for clone()\r\n  XXXXXunused protected final ArrayList   nonfinal only for cloning\r\n  XXXXXunused sourceLocations = new ArrayList();\r\n  ------- description (title, label...)\r\n  --------------------- dir changes\r\n  --------------------- messages\r\n  so cannot affect initialization of child here\r\n  no need to continue checking\r\n  no need to continue checking\r\n  XXX for Runs, label does not identify the test\r\n  IRunSpec\r\n  XXXXXunused addListCount(\"sourceLocations\", sourceLocations, result);\r\n  XXXXXunused addListEntries(\"sourceLocations\", sourceLocations, result);\r\n  clone these...\r\n  require all child classes to support clone?\r\n  XXXXXunused spec.sourceLocations.addAll(sourceLocations);\r\n  boolean haveOption = false;\r\n  XXX verify\r\n  boolean haveOption = false;\r\n /*String*/\r\n /*IMessage*/\r\n /*String*/\r\n /*String*/\r\n /*IRunSpec*/\r\n /*DirChanges.Spec*/\r\n /*\r\n         * clone associated objects only if not (used as?) read-only.\r\n         */\r\n /*String*/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Wes Isberg     2004 updates\r\n * ******************************************************************/\r\n","Aspectj5rt15ModuleTests":" suite  Aspectj5rt15ModuleTests  ","ListItem":" getNext getNext  ListItem ListItem  ","AnnotationElementValue":" dump stringifyValue toString getAnnotation a org.aspectj.apache.bcel.classfile.annotation.AnnotationElementValue  For annotation element values, this is the annotation\r\n  u1 type of value (ANNOTATION == '@')\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","CallsTo":"     ","PrivatePointcutOuterClass":"     ","TestingBridgeTests":" suite  org.aspectj.testing.harness.bridge.TestingBridgeTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Values":" wrapValues wrapValues invert toArray resolve resolve removeForceOff convertForceOn match nullify render length asArray render toString indexMatches indexMissedMatches firstInFamily allInFamily firstOption allOption firstValue allValues isResolved nullify resolve findFirst find valuesNotNull accept accept getResult accept missedArgsFor getErrors render add getList EMPTY VERIFYING FIND_ALL NO_ERROR values valuesNotNull resolveError STOP option family value DELIM result index errors argsExpected argsExpectedFor input insert org.aspectj.testing.util.options.Values  catch result up to missed\r\n  absorb missed up to counter\r\n  Option.Value forceOff = null;\r\n  verify that matches are in the same family\r\n  find and remove any force-off\r\n  find and set any force-on, removing others\r\n  remove any exact duplicates\r\n  signal error if two left unless permitMultipleFamilyValues\r\n  unset matches[i]?\r\n  assert match.sameOptionFamily(value);\r\n  same family, force-off\r\n  this means the prefix is set\r\n  must be in order, low to high\r\n  null, not expecting arg, so missing\r\n  ignore null in arg position\r\n  expected more (null) args\r\n  not synchronized - used only in one thread\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","Javadoc":" invoke type method newInstance newInstance err org.aspectj.tools.ajdoc.rootmakers.Javadoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","MultiDispatchCf":"     ","ElementNameValuePairGen":" getElementNameValuePair dump getNameIndex getNameString getValue toString nameIdx value cpool org.aspectj.apache.bcel.generic.annotation.ElementNameValuePairGen  }\r\n  u2 name of the element\r\n  ConstantString cu8 = (ConstantString)cpool.getConstant(nameIdx);\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation \r\n * ******************************************************************/\r\n","TypeCoercions":" main  TypeCoercions  ","SystemExit":" main  SystemExit  ","DeclareErrorNamedPointcutCE":"     ","FieldGenOrMethodGen":" setType getType getName setName getConstantPool setConstantPool addAttribute addAnnotation removeAttribute removeAnnotation removeAttributes removeAnnotations getAttributes getAnnotations getSignature clone name type cp attribute_vec annotation_vec org.aspectj.apache.bcel.generic.FieldGenOrMethodGen  ","ISUB":" accept  org.aspectj.apache.bcel.generic.ISUB  ","ShapeCommandMap":"     ","CommonsTraceFactory":" getTrace logFactory org.aspectj.weaver.tools.CommonsTraceFactory  ","SizeIssues":" main callfoo bar_1 bar_2  SizeIssues  ","BASTORE":" accept  org.aspectj.apache.bcel.generic.BASTORE  ","Agent":" premain getInstrumentation s_instrumentation s_transformer org.aspectj.weaver.loadtime.Agent  /* Handle duplicate agents */\r\n","Square":" perimeter area toString name s name figures.composites.Square tracing.Square figures.composites.Square  side\r\n /*\r\n     * All sorts of constructors\r\n     */\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","ControlFlow":"     ","EmptyAtAspect":"   ataspectj.ltwreweavable.EmptyAtAspect  ","ClassGenException":"   org.aspectj.apache.bcel.generic.ClassGenException  ","CodeSignature":" getParameterTypes getParameterNames getExceptionTypes  org.aspectj.lang.reflect.CodeSignature  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","NullIdeProperties":" getBuildConfigFiles getLastActiveBuildConfigFile getDefaultBuildConfigFile getProjectName getRootProjectDir getProjectSourceFiles getProjectSourcePath getClasspath getOutputPath setOutputPath getOutputLocationManager getAjcWorkingDir getBootClasspath getClassToExecute getExecutionArgs getVmArgs setInJars setInpath getInJars getInpath getSourcePathResources setOutJar getOutJar setSourceRoots getSourceRoots setAspectPath getAspectPath testProjectPath buildConfigFiles inJars inpath sourceRoots aspectPath outJar outputPath org.aspectj.ajde.NullIdeProperties  /* Allow the user to override the testProjectPath by using sourceRoots */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * \t   AMC 01.20.2003 extended to support AspectJ 1.1 options\r\n * ******************************************************************/\r\n","TrySwitch":" main m done TrySwitch  ","ConstructorIntroductionSubWriter":" keyName getMembers printCrosscuts printSummaryCrosscuts hasCrosscuts  org.aspectj.tools.doclets.standard.ConstructorIntroductionSubWriter  constructor);\r\n  String name = where(constr);\r\n  XXX added for balance\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","WildTypePatternResolutionTestCase":" testSimpleFoo testParameterized testParameterizedWildCard testWildcardParameterized testSomething testSomethingExtends testSomethingExtendsPattern testSomethingExtendsPatternv2 testSomethingSuper resolveWildTypePattern makeWildTypePattern writeAndRead setUp testSimpleFoo testParameterized testParameterizedWildCard testWildcardParameterized testSomething testSomethingExtends testSomethingExtendsPattern testSomethingExtendsPatternv2 testSomethingSuper resolveWildTypePattern makeWildTypePattern writeAndRead setUp world bindings scope javaUtilList javaLangString javaUtilListOfString javaUtilListOfDouble javaUtilListOfSomething world bindings scope javaUtilList javaLangString javaUtilListOfString javaUtilListOfDouble javaUtilListOfSomething org.aspectj.weaver.patterns.WildTypePatternResolutionTestCase org.aspectj.weaver.patterns.WildTypePatternResolutionTestCase  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer     initial implementation \r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer     initial implementation \r\n * ******************************************************************/\r\n","EachCFlowRoot0":"     ","EachCFlowRoot1":"     ","Profile":"     ","AroundAndCalls":"     ","CallsReceptionsCallsto":"     ","InvalidProceedArgsCE":"     ","ClassLoaderRepositoryTests":" testRepositorySharing  org.aspectj.weaver.bcel.ClassLoaderRepositoryTests  twice by each\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","TypePatternMatcher":" matches  org.aspectj.weaver.tools.TypePatternMatcher  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","AroundWeaveTestCase":" testAround testAroundAll testAroundAndOthers testAroundAllAndOthers makeAroundMunger aroundTest aroundTestAndOthers  org.aspectj.weaver.bcel.AroundWeaveTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","InterTypeMethods":"     ","NamedWithinPointcuts":"     ","IntroducedFieldInc":"     ","Default":" main  Default Default  ","DeclareParentsImplementsReweavableTest":" do1 do1 do2 do2 testDecPInt main suite i1 ataspectj.DeclareParentsImplementsReweavableTest  thru reweable mode\r\n ","OrderOfExtendsPlusAndImplementsPlus":"     ","AfterThrowingTest":" main handleExceptionJP handleExceptionJPSP handleExceptionJPESP handleExceptionJPESP handleExceptionJP2 start start  AfterThrowingTest B I  include \"JoinPoint\" in the argument list\r\n  include \"JoinPoint.StaticPart\" in the argument list\r\n  include \"JoinPoint.EnclosingStaticPart\" in the argument list\r\n  include \"JoinPoint\" and \"JoinPoint.EnclosingStaticPart\" in the argument list\r\n  make sure it still works if \"JoinPoint\" is second on the argument list\r\n ","TestingTests":" suite  org.aspectj.testing.TestingTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","EachCFlowRoot2":"     ","PointcutExpressionImpl":" asString toString getUnderlyingPointcut setMatchingContext couldMatchJoinPointsInType mayNeedDynamicTest getExposedState matchesMethodExecution matchesConstructorExecution matchesExecution matchesStaticInitialization matchesAdviceExecution matchesInitialization matchesPreInitialization matchesMethodCall matchesMethodCall matchesConstructorCall matchesConstructorCall matchesHandler matchesHandler matchesFieldGet matchesFieldGet matchesFieldSet matchesFieldSet getShadowMatch getPointcutExpression hasDynamicContent visit visit visit visit visit visit visit visit visit visit visit getModifiers getDeclaringClass getName getHandledExceptionType isSynthetic expression world pointcut expression parameters matchContext hasDynamicContent decClass exType org.aspectj.internal.lang.reflect.PointcutExpressionImpl org.aspectj.weaver.internal.tools.PointcutExpressionImpl  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.tools.PointcutExpression#setMatchingContext(org.aspectj.weaver.tools.MatchingContext)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.tools.PointcutExpression#getPointcutExpression()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","LCMP":" getType accept  org.aspectj.apache.bcel.generic.LCMP  ","Test_AroundVarBug":" main  Test_AroundVarBug  ","New":"     ","VerifierFactoryObserver":" update  org.aspectj.apache.bcel.verifier.VerifierFactoryObserver  ","WeaveTests":" main parseArgs usage createClasses createAspects createAllAspects compileClasses performCompile weaveAspects weaveAllAspects OUTPUT_PACKAGE WEAVE_FAST WEAVE_MED WEAVE_SLOW EXECUTION_SLOW EXECUTION_MED EXECUTION_FAST GET_SLOW GET_MED GET_FAST NUMCLASSES ITERATIONS METHODLINES NUMMETHODS INCLUDE_TEST_CLASSES TEST_GET TEST_EXECUTION ALL_POINTCUT_TESTS TEST_ONE TEST_ONE_SEARCH_ALL TEST_ALL ECHO compileTimes executionSlowTimes executionMedTimes executionFastTimes getSlowTimes getMedTimes getFastTimes NL outputDir WeaveTests  Defaults, can be changed with command-line args\r\n  if (args.length > 0) parseArgs(args);\r\n  Warm up the weaver\r\n  Number of iterations\r\n  Number of method lines\r\n  Number of methods\r\n  Number of classes\r\n  Capitalises the first char in the adviceType String, and then adds \"Advice\" to it.\r\n  Create the file\r\n  split method creates a String array delimited on a space\r\n  Capitalises the first char in the adviceType String, to keep to Java naming convention\r\n ","HasMember":" suite getSpecFile testSimpleDecPHasMethod testSimpleDecPHasMethodInherited testSimpleDecPHasMethodInheritedPrivate testSimpleDecPHasField testSimpleDecPHasFieldInherited testSimpleDecPHasFieldInheritedPrivate  org.aspectj.systemtest.ajc150.HasMember  ","ImageTestCase":" testNothing  org.aspectj.ajdt.internal.compiler.batch.ImageTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Counter":" increment show increment show createMemento setMemento currentValue currentValue ca.ubc.cs.spl.aspectPatterns.examples.memento.aspectj.Counter ca.ubc.cs.spl.aspectPatterns.examples.memento.java.Counter  ","ReflectionFactory":" makeCommand make getTypes OLD_AJC ECLIPSE NONE org.aspectj.bridge.ReflectionFactory  XXX lease, pool\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ConstantOneOverZero":"  i j ConstantOneOverZero  ","Basic2b":" main m2 advice1 simplefield Basic2b X  ","RequireMain":"     ","IndeterminateArg":"     ","IRun":" run makeStatus run makeStatus run RA_IRun OK NOTOK org.aspectj.testing.run.IRun  IMessageHandler?\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AnotherClass":" main  AnotherClass  ","AfterReturningWithBadPCut":" logExit  AfterReturningWithBadPCut  ","NodeImpl":"     ","ModulesTest":" delete tearDown getModules testAllModulesCreation checkModule testClasspathCreation skip_testOSGIModuleCreation getBuilder skip_testBuildingAspectJModule skip_testBuildingProduct buildFinished buildStarted messageLogged targetFinished targetStarted taskFinished taskStarted MODULE_NAMES BASE_DIR tempFiles min org.aspectj.internal.build.ModulesTest  XXX Util\r\n /*String*/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC),\r\n *               2005-2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Wes Isberg     build tests\r\n * ******************************************************************/\r\n","AsmMethod":" setClassDelegate setGenericSignature canBeParameterized getGenericParameterTypes getGenericReturnType getWorld unpackGenericSignature getEffectiveSignature getAssociatedShadowMunger getDeclarationLineNumber isAjSynthetic unpackAspectJAttributes getAttributes getAttributeNames getParameterNames getSourceContext addAnAnnotation getAnnotations getAnnotationTypes hasAnnotation unpackedGenericSignature genericSignature genericReturnType genericParameterTypes canBeParameterized annos esAttribute mdlnAttribute shadowMunger classDelegate attributes unpackedAspectJAttributes org.aspectj.weaver.asm.AsmMethod  genericized version of return and parameter types\r\n  ok, we have work to do...\r\n  generic method declaration\r\n  put method formal in front of type formals for overriding in lookup\r\n  this is a development bug, so fail fast with good info\r\n  development bug, fail fast with good info\r\n  development bug, fail fast with good info\r\n  for testing - if we have this attribute, return it\r\n  for testing - use with the method above\r\n /*Attribute*/\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","MakeDeclsPublicVisitor":" endVisit endVisit endVisit endVisit endVisit  org.aspectj.ajdt.internal.compiler.ast.MakeDeclsPublicVisitor  import org.aspectj.org.eclipse.jdt.internal.compiler.ast.AnonymousLocalTypeDeclaration;\r\n  import org.aspectj.org.eclipse.jdt.internal.compiler.ast.LocalTypeDeclaration;\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.ASTVisitor#endVisit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.BlockScope)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.ASTVisitor#endVisit(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration, org.eclipse.jdt.internal.compiler.lookup.ClassScope)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","TernaryAssignments":" main realMain  TernaryAssignments  ","MementoProtocol":"     ","Three":"  i3 Three  ","EclipseResolvedMember":" getAnnotations getAnnotationTypes getParameterNames NO_ARGS realBinding argumentNames org.aspectj.ajdt.internal.compiler.lookup.EclipseResolvedMember  ensure resolved\r\n  this is what to add\r\n  ensure resolved\r\n  this is what to add\r\n  dont like this - why isnt the method found sometimes? is it because other errors are being reported?\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     Andy Clement                 initial implementation\r\n * ******************************************************************/\r\n","DDIV":" accept  org.aspectj.apache.bcel.generic.DDIV  ","InterfaceAndObject":" main toString clone clone equals t InterfaceAndObject Root C C1 I0 I I1  public void toString();\r\n ","CFlowPlusState":" get state org.aspectj.runtime.internal.CFlowPlusState  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Basic1b":" main someField Basic1b X  ","AjPipeliningCompilerAdapter":" afterDietParsing beforeCompiling beforeProcessing beforeResolving afterResolving beforeAnalysing afterAnalysing beforeGenerating afterGenerating afterCompiling afterProcessing queueForWeaving acceptResult getBinarySourcesFrom notifyRequestor weaveQueuedEntries ensureWeaverInitialized weave postWeave containsAnAspect containsAnAspect isAspect getPipelineDebugOutput getResultsPendingWeave compiler weaver eWorld isBatchCompile reportedErrors isXTerminateAfterCompilation proceedOnError inJava5Mode noAtAspectJAnnotationProcessing intermediateResultsRequestor progressListener outputFileNameProvider binarySourceProvider weaverMessageHandler binarySourceSetForFullWeave processingToken resolvingToken analysingToken generatingToken incrementalCompilationState resultsPendingWeave pipelineStalled weaverInitialized toWaitFor droppingBackToFullBuild aspectSig pipelineTesting pipelineOutput debugPipeline org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter  Maintains a list of whats weaving - whilst the pipeline is stalled, this accumulates aspects.\r\n  pipelining info\r\n  If we determine we are going to drop back to a full build - don't need to tell the weaver to report adviceDidNotMatch\r\n  Do we need to reset the message handler or create a new one? (This saves a ton of memory lost on incremental compiles...)\r\n  TODO break or exit here?\r\n  Break the units into two lists...\r\n  what does this mean?\r\n  ...and put them back together, aspects first\r\n  Work out how long to stall the pipeline\r\n  TESTING\r\n  } else {\r\n  nothing got compiled, doesnt mean there is nothing to do... (binary weaving)\r\n  Don't wrap AbortCompilation exceptions!\r\n  which will then then log it as a compiler problem.\r\n  not great ... but one more check before we continue, see pr132314\r\n  no point weaving... just tell the requestor we're done\r\n  Map is fileName |-> List<UnwovenClassFile>\r\n  XXX - see bugs 57432,58679 - final parameter on next call should be \"compiler.options.maxProblemsPerUnit\"\r\n  by doing this only once, are we saying needToReweaveWorld can't change once the aspects have been stuffed into the weaver?\r\n  dont need to do those again\r\n  force full recompilation from source\r\n  ensure weaver state is set up correctly\r\n  force full recompilation from source\r\n  loop through top level types in the file\r\n  loop through inner types\r\n  loop through inner types\r\n  code style\r\n  force annotation resolution\r\n  another problem is being reported, so don't crash here\r\n  check for annotation style\r\n  code style\r\n /* fileName > List<UnwovenClassFile> */\r\n /*InterimResult*/\r\n /* fileName |-> List<UnwovenClassFile> */\r\n /*\r\n\t * Called from the weaverAdapter once it has finished weaving the class files\r\n\t * associated with a given compilation result.\r\n\t */\r\n","Library":" method  lib.Library  ","ContextBasedMatcher":" couldMatchJoinPointsInType couldMatchJoinPointsInType mayNeedDynamicTest matchesStatically matchesDynamically  org.aspectj.weaver.tools.ContextBasedMatcher  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","AnnotationFinder":" setClassLoader setWorld getAnnotation getAnnotationFromMember getAnnotationFromClass getAnnotations  org.aspectj.weaver.reflect.AnnotationFinder  /*ResolvedType*/\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","PR113447":"     ","INode":" setParent getParent setParent getParent setParent getParent  bugsOtherPackage.INode bugsOtherPackage.INode bugsOtherPackage.INode  ","PatternParser":" setPointcutDesignatorHandlers maybeParsePerClause parsePerCflow parsePerObject parsePerTypeWithin parsePerSingleton parseDeclare parseDeclareAnnotation parseDeclareAtType parseDeclareAtMethod parseDeclareAtField parseDominates parseParents parseSoft parseErrorOrWarning parsePointcut parseNotOrPointcut parseAtomicPointcut parseSinglePointcut assertNoTypeVariables parseAnnotationPointcut parseAtAnnotationPointcut parseConstructorSignaturePattern parseWithinCodePointcut parseCflowPointcut parseWithinPointcut parseThisOrTargetPointcut parseThisOrTargetAnnotationPointcut parseWithinAnnotationPointcut parseWithinCodeAnnotationPointcut parseArgsPointcut parseArgsAnnotationPointcut parseReferencePointcut parseDesignatorPointcut parseDottedIdentifier parseKindedPointcut parseMonitorPointcut parseTypePattern parseTypePattern parseNotOrTypePattern parseAtomicTypePattern setAnnotationPatternForTypePattern maybeParseAnnotationPattern maybeParseSingleAnnotationPattern parseSingleTypePattern parseSingleTypePattern parseHasMethodTypePattern parseHasFieldTypePattern parseGenericsWildcardTypePattern parseAnnotationNameOrVarTypePattern parseSimpleAnnotationName isAnnotationPattern parseDottedNamePattern parseNamePattern checkLegalName isAdjacent parseModifiersPattern parseArgumentsPattern parseArgumentsAnnotationPattern parseOptionalThrowsPattern parseMethodOrConstructorSignaturePattern maybeEatNew parseFieldSignaturePattern tryToExtractName maybeParseTypeVariableList maybeParseSimpleTypeVariableList maybeParseTypeParameterList parseTypeVariable maybeParseAdditionalInterfaceBounds parsePossibleStringSequence parseStringLiteral parseIdentifier eatIdentifier maybeEatIdentifier eat eat nextToken maybeEat maybeEatIdentifier peek checkEof tokenSource sourceContext allowHasTypePatterns pointcutDesignatorHandlers world pendingRightArrows org.aspectj.weaver.patterns.PatternParser  PTWIMPL Parse the pertypewithin clause\r\n  treat as a reference pointcut\r\n  @style support allows if(), if(true), if(false)\r\n  TODO - Alex has some token stuff going on here to get a readable name in place of \"\"...\r\n  String[] typeVariables = maybeParseSimpleTypeVariableList();\r\n  parseIdentifier();\r\n  parseIdentifier();\r\n  parseIdentifier();\r\n  parseIdentifier();\r\n  type,\r\n  type,\r\n  ??? we lose source location for true start of !type\r\n  need the test because (A+) should not set subtypes to false!\r\n  ???\r\n  LALR(2) - fix by making \"!@\" a single token\r\n  not for us!\r\n  not for us!\r\n  ??? what about the source location of any's????\r\n  match.\r\n  the @ has already been eaten...\r\n  Remember if we just dealt with an ellipsis (PR61536)\r\n  System.err.println(\"literal kind: \" + tok.getString());\r\n  ??? so-so\r\n  go on\r\n  no elipsis or dotted name part\r\n  System.err.println(\"parsed: \" + names);\r\n  System.err.println(\"literal kind: \" + tok.getString());\r\n  ??? so-so\r\n  ???might want an error for a second ! without a paren\r\n  XXX should add check for any Java keywords\r\n  here we can check for 'new'\r\n  System.err.println(\"parsed field: \" + declaringType.toString());\r\n  of the form execution<T,S,V> - allows identifiers only\r\n  to be one less otherwise the end position isn't set correctly.\r\n  handle problem of >> and >>> being lexed as single tokens\r\n  XXX doesn't handle errors for extra tokens very well (sometimes ignores)\r\n /*\r\n\t\t * simplified design requires use of raw types for declare parents, no generic spec. allowed\r\n\t\t * String[] typeParameters = maybeParseSimpleTypeVariableList();\r\n\t\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n *               2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation\r\n *     Adrian Colyer many updates since.... \r\n * ******************************************************************/\r\n","PublicClassWrongFilename":" main  TargetClass  ","NonexistentFieldInitializers":"     ","AbstractTrace":" enter enter exit exit event event enter enter enter exit warn error fatal formatMessage formatMessage formatDate formatObj formatArray formatCollection formatArgs tracedClass timeFormat org.aspectj.weaver.tools.AbstractTrace  /*\r\n\t * Convenience methods\r\n\t */\r\n /*\r\n\t * Formatting\r\n\t */\r\n /* Use classname@hashcode */\r\n /* Classes can provide an alternative implementation of toString() */\r\n /* These classes have a safe implementation of toString() */\r\n","TypeVariableReference":" getTypeVariable  org.aspectj.weaver.TypeVariableReference  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","CHECKCAST":" getExceptions getLoadClassType accept  org.aspectj.apache.bcel.generic.CHECKCAST  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","AfterThrowingNotWoven":"     ","SimpleClass2":"   SimpleClass2  ","StructureTree":" setRootFilePath getRootFilePath jbInit getToggleClickCount serialVersionUID DEFAULT_FONT rootFilePath org.aspectj.ajde.ui.swing.StructureTree  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Ajctest":" propertyChange fire fire createArgfile setNoverify setOwningTarget setTestId setArgs parse createJarg createArg setClasspath createClasspath setClasspathRef setInternalclasspath createInternalclasspath setInternalclasspathRef setDestdir setDir setErrorfile createJava setClasses setTestclass setAjdoc setAjdocargs addAjdoc createAjdoc setName setValues setValue setAlways toString setNocompile toString createTestset setNoclean setDepends setName createArg getCommandline toString toString setIncludes setExcludes setIncludesfile setExcludesfile setArgfile setArgfiles createArgfile createJava addJava setJava setTestclass setClasses setClasspath createClasspath setClasspathRef setInternalclasspath createInternalclasspath setInternalclasspathRef setAjdoc getAjdoc setAjdocargs addAjdoc createAjdoc setFork setNoclean setDepends resolve check setArgs createJarg createArg prepare finish log enough log execute execute delete make getAntProperty isSet setClassname setup executeJava setClassesDir setBootbootclasspath createBootbootclasspath setBootbootclasspathRef setBootbootclasspatha createBootbootclasspatha setBootbootclasspathaRef setBootbootclasspathp createBootbootclasspathp setBootbootclasspathpRef executeJava classname setClassname toString post date ms run w s a toString argcombo run createCommandline run getMainClassName getMainClassName ajdocArgs getMainClassName getMainClassName setExtraclasspath toString createCommandline handle combinations gui propertyChange p add inc valueChanged add setText setFailure setText forLabel forLastLabel forField forLastField CURRENT_AJCTEST firstTime bean dumpresults ajdocStats ajcStats runStats NO_TESTID workingdir testId args testsets classpath internalclasspath destdir dir errorfile testclasses nocompile ajdoc noclean noverify depends name values always isj goods fails name value isj name cmd argfileNames argfiles files args classname havecludes testclasses classpath internalclasspath ajdoc fork noclean depends LINK_WRAPPER_CLASS PROP_NAME CLASSDIR_NAME WRAPPER_CLASS classname classesDir bootclasspath bootclasspatha bootclasspathp msgs _classname allErrors errors startTime stopTime testset args msgs exit type time testId msgs sb testset args needsClasspath extraClasspath gui fail table status ajdoc runs ajc goods fails total model table failures list msgs info fields org.aspectj.internal.tools.ant.taskdefs.Ajctest  import java.util.Collection;\r\n  import org.apache.tools.ant.taskdefs.ExecTask;\r\n  todo shutdown hook assumes one task per VM\r\n  private Stats errorStats   = new Stats();\r\n  XXX\r\n  fields\r\n  Run testclass = new Run();\r\n  todo: capture failures here?\r\n  AjcWrapper ajc = new AjcWrapper(testset, args);\r\n  XXX dependency on Ant property ajctest.compiler\r\n  }\r\n  todo: since reflective, avoid direct\r\n  todo: 1.2 or later..\r\n  todo dependence on name  snarf - also load all classes?\r\n  public class Run extends Java\r\n  this.project = Ajctest.this.project;\r\n  todo: add timeout feature todo: this or below?\r\n  setup oneLine\r\n  setup multiLine\r\n  print both multiLine and oneLine\r\n  todo: dependency on ant script variable name ajctest.pathelement\r\n  \r\n   /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","SimpleClass1":" getInteger  SimpleClass1  ","SimpleSpec":" m  SimpleSpec  ","TypePatternQuestions":" askQuestion anyChanges toString ask equals hashCode toString questionsAndAnswers pattern type kind org.aspectj.weaver.patterns.TypePatternQuestions  ??? doesn't change\r\n  System.out.println(question + \":\" + currentAnswer);\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AnnotationReturnType":"     ","UnderIfFalse":" foo main val UnderIfFalse  ","SimpleStringAnnotation":"     ","DeclareAnnotationDeclaration":" analyseCode getDeclaredAnnotation shouldDelegateCodeGeneration addAnnotation postParse internalPatternNodeProperty internalAnnotationNameProperty internalAnnotationNamePropertyFactory internalPatternNodePropertyFactory getPatternNode setPatternNode getAnnotationName setAnnotationName annotation pattern name org.aspectj.ajdt.internal.compiler.ast.DeclareAnnotationDeclaration org.aspectj.org.eclipse.jdt.core.dom.DeclareAnnotationDeclaration  there is an error that will already be getting reported (e.g. incorrect pattern on decaf  not be reported on as we *do* store it against a method in this case\r\n  declare annotation needs a method to be written out.\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  lazy init must be thread-safe for readers\r\n /* *******************************************************************\r\n * Copyright (c) 2005 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer initial implementation \r\n *      Andy Clement wired up to back end\r\n * ******************************************************************/\r\n","RunListeners":" addListener removeListener runStarting runCompleted addingChild listeners org.aspectj.testing.run.RunListeners  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DeclareInterfaceExtendsClass":"     ","DeclareClassImplementsClass":"     ","BuildModuleTest":" setUp tearDown deleteTempFiles testAllJunitTests testBuild testUtil testAsm testRuntime testAspectj5rt testNoDuplicates testAjbrowser testTestingUtils testAjdt testTesting testTestingDrivers testWeaver testAspectjtools checkBuildProduct getAntJar getJUnitJar getJarDir getTask checkBuild checkBuild shouldBuild debugging duplicateEntryError name deleteJar checkBuild doTask doTask checkJavac printInfoMessages printedMessage REMOVE_JARS_AFTER_DEBUGGING DEBUGS SKIPS SKIP_MESSAGE BUILD_CONFIG tempFiles jarDir deleteJars building org.aspectj.internal.build.BuildModuleTest  to just build one module verbosely\r\n  = {};\r\n  also skip big ones to avoid slowing the build too much\r\n  must be enabled for tests to run\r\n  todo\r\n  XXX platform\r\n  XXX platform\r\n  help message\r\n  ant needed\r\n  }\r\n  compiler version\r\n  \r\n  ajdoc relies on tools.jar\r\n  task.setVerbose(true);\r\n  verify if possible\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC),\r\n *               2005-2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","TracingTest":" test main  TracingTest  ","Coordinator":"     ","ChildCE":"     ","AspectJBuilder":" build getBatchImageBuilder getIncrementalImageBuilder getAdapter createBuildNotifier initWorldAndWeaver setLintProperties acceptResult getIntermediateResults handleMessage isIgnoring dontIgnore getOutputClassFileName getBinarySourcesForThisWeave myWeaver myBcelWorld cpManager unwovenResultCollector fileNameProvider isBatchBuild results project outputLocation org.aspectj.ajdt.internal.core.builder.AspectJBuilder  One builder instance per project  (important)\r\n  adapter.\r\n  TODO get aspectj options from project and add into map before...\r\n  update the nameEnvironment each time we compile...\r\n  * an eclipse factory  -- create from AjLookupEnvironment, need to hide AjBuildManager field\r\n  TODO deal with inpath, injars here...\r\n  * the intermediate result set from the last batch compile\r\n  itself.\r\n  simply return the default output directory for the project.\r\n  default impl class until the implementation is extended to cope with inpath, injars\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.core.internal.events.InternalBuilder#build(int, java.util.Map, org.eclipse.core.runtime.IProgressMonitor)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.ICompilerAdapterFactory#getAdapter(org.eclipse.jdt.internal.compiler.Compiler)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.core.builder.JavaBuilder#createBuildNotifier(org.eclipse.core.runtime.IProgressMonitor, org.eclipse.core.resources.IProject)\r\n\t */\r\n /* (non-Javadoc)\r\n\t\t * @see org.aspectj.ajdt.internal.compiler.IIntermediateResultsRequestor#acceptResult(org.aspectj.ajdt.internal.compiler.InterimCompilationResult)\r\n\t\t */\r\n /* (non-Javadoc)\r\n\t\t * @see org.aspectj.bridge.IMessageHandler#handleMessage(org.aspectj.bridge.IMessage)\r\n\t\t */\r\n /* (non-Javadoc)\r\n\t\t * @see org.aspectj.bridge.IMessageHandler#isIgnoring(org.aspectj.bridge.IMessage.Kind)\r\n\t\t */\r\n /* (non-Javadoc)\r\n\t\t * @see org.aspectj.ajdt.internal.compiler.IOutputClassFileNameProvider#getOutputClassFileName(char[], org.eclipse.jdt.internal.compiler.CompilationResult)\r\n\t\t */\r\n /* (non-Javadoc)\r\n\t\t * @see org.aspectj.ajdt.internal.compiler.IBinarySourceProvider#getBinarySourcesForThisWeave()\r\n\t\t */\r\n","MultiDispatchCp":"     ","PrintableFlyweightFactory":" getPrintableFlyweight printables ca.ubc.cs.spl.aspectPatterns.examples.flyweight.java.PrintableFlyweightFactory  ","AnnotationEnumElement":"     ","Pilot":" getGame getNumber getShip setShip getGame getNumber getShip setShip getGame getNumber getShip setShip getGame getNumber getShip setShip getGame getNumber getShip setShip game number ship game number ship game number ship game number ship game number ship spacewar.Pilot spacewar.Pilot spacewar.Pilot spacewar.Pilot spacewar.Pilot  /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\n*/\r\n","Thirteen":" foo  I Thirteen  ","WeavingContextTest":" testWeavingContext testGetResources testGetBundleIdFromURL testGetClassLoaderName testGetFile testGetId getBundleIdFromURL getClassLoaderName getFile getId getResources isLocallyDefined setUp called loader org.aspectj.weaver.loadtime.WeavingContextTest  ","Derived":" foo main onlyDerived both onlyDerivedNonStatic bothNonStatic m y onlyDerived both sample.Derived fluffy.Derived  ","InstructionList":" isEmpty findHandle findHandle getInstructionsAsArray findHandle append append append append append append append append append append append append insert insert insert insert insert insert insert insert insert insert insert insert move move remove delete delete delete delete findInstruction1 findInstruction2 contains contains setPositions setPositions getByteCode getInstructions toString toString iterator getInstructionHandles getInstructionPositions copy replaceConstantPool clear dispose getStart getEnd getLength size redirectBranches redirectLocalVariables redirectExceptionHandlers addObserver removeObserver update start end length byte_positions ih observers org.aspectj.apache.bcel.generic.InstructionList  number of elements in list\r\n  byte code offsets corresponding to instructions\r\n  && end == null\r\n  Do a binary search since the pos array is ordered\r\n  found it\r\n  else constrain search area\r\n  target > j\r\n  else constrain search area\r\n  found it\r\n  Can't be more than that\r\n  Contains actual length\r\n  Remember byte offset and associate it with the instruction\r\n  Use proper append() method\r\n  Trim to proper size\r\n  Search for target position\r\n  Search failed\r\n  Update target\r\n  Either LOOKUPSWITCH or TABLESWITCH\r\n  Search failed\r\n  Update target\r\n  If it is a Select instruction, update all branch targets\r\n  Nothing to do\r\n  i == end ?\r\n  Update end ...\r\n  Update length\r\n  Also applies for empty list\r\n  Nothing to do\r\n  was end.instruction\r\n  Update length\r\n  Nothing to do\r\n  ih == start ?\r\n  Update start ...\r\n  Update length\r\n  Code is identical for this case\r\n  At end of list, end not found yet\r\n  target may be null\r\n  start == this.start!\r\n  end == this.end!\r\n  append to start of list\r\n  First and last deleted instruction\r\n  At start of list\r\n  At end of list\r\n  singleton list\r\n  Completely separated from rest of list\r\n  e.g. BranchInstructions release their targets\r\n  Still got targeters?\r\n  target instruction within list?\r\n  Trim to proper size\r\n  Update position indices of instructions\r\n  Traverse list\r\n  Use clone for shallow copy\r\n  old target\r\n  New target is in hash map\r\n  Either LOOKUPSWITCH or TABLESWITCH\r\n  Update all targets\r\n  Traverse in reverse order, because ih.next is overwritten\r\n  Either LOOKUPSWITCH or TABLESWITCH\r\n  Update targets\r\n  Update targets\r\n  Update targets\r\n /* Read one instruction from the byte stream, the byte position is set\r\n\t * accordingly.\r\n\t */\r\n /* Pass 1: Create an object for each byte code and append them\r\n     * to the list.\r\n     */\r\n /* Pass 2: Look for BranchInstruction and update their targets, i.e.,\r\n     * convert offsets to instruction handles.\r\n     */\r\n /* Pass 0: Sanity checks\r\n     */\r\n /* Get an estimate about how many additional bytes may be added, because\r\n       * BranchInstructions may have variable length depending on the target\r\n       * offset (short vs. int) or alignment issues (TABLESWITCH and\r\n       * LOOKUPSWITCH).\r\n       */\r\n /* Pass 1: Set position numbers and sum up the maximum number of bytes an\r\n     * instruction may be shifted.\r\n     */\r\n /* Pass 2: Expand the variable-length (Branch)Instructions depending on\r\n     * the target offset (short or int) and ensure that branch targets are\r\n     * within this list.\r\n     */\r\n /* Pass 3: Update position numbers (which may have changed due to the\r\n     * preceding expansions), like pass 1.\r\n     */\r\n /* Pass 1: Make copies of all instructions, append them to the new list\r\n     * and associate old instruction references with the new ones, i.e.,\r\n     * a 1:1 mapping.\r\n     */\r\n /* Pass 2: Update branch targets.\r\n     */\r\n /* Causes BranchInstructions to release target and targeters, because it\r\n       * calls dispose() on the contained instruction.\r\n       */\r\n","DUP2":" accept  org.aspectj.apache.bcel.generic.DUP2  ","DeclareAtMethodDeclaration":" clone0 subtreeMatch0 accept0 internalModifiersProperty internalModifiers2Property internalJavadocProperty propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty internalPatternNodeProperty internalAnnotationNameProperty JAVADOC_PROPERTY PATTERN_PROPERTY ANNOTATION_NAME_PROPERTY PROPERTY_DESCRIPTORS org.aspectj.org.eclipse.jdt.core.dom.DeclareAtMethodDeclaration  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  allow default implementation to flag the error\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - therefore\r\n\t * we don't do anything with this\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - therefore\r\n\t * we don't do anything with this\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on BodyDeclaration.\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on ASTNode.\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on DeclareAnnotationDeclaration.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on DeclareAnnotationDeclaration.\r\n\t */\r\n","ArrayInstruction":" getExceptions getType  org.aspectj.apache.bcel.generic.ArrayInstruction  ","Deprecation":" main  Deprecation  ","ConstructorExecInitFails":"     ","EnclosingMethod":" accept copy getEnclosingClassIndex getEnclosingMethodIndex setEnclosingClassIndex setEnclosingMethodIndex getEnclosingClass getEnclosingMethod dump classIndex methodIndex org.aspectj.apache.bcel.classfile.EnclosingMethod  innermost class that encloses the declaration of the current class.\r\n  lexically enclosing method that includes the local  Ctors - and code to read an attribute in.\r\n  Accessors\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","TestLib":" main getFive  TestLib  ","TargetLostException":" getTargets targets org.aspectj.apache.bcel.generic.TargetLostException  ","BuildOptionsAdapter":" getJavaOptionsMap getCharacterEncoding getIncrementalMode getNonStandardOptions getComplianceLevel getSourceCompatibilityLevel getWarnings getDebugLevel getNoImportError getPreserveAllLocals VERSION_13 VERSION_14 WARN_CONSTRUCTOR_NAME WARN_PACKAGE_DEFAULT_METHOD WARN_DEPRECATION WARN_MASKED_CATCH_BLOCKS WARN_UNUSED_LOCALS WARN_UNUSED_ARGUMENTS WARN_UNUSED_IMPORTS WARN_SYNTHETIC_ACCESS WARN_ASSERT_IDENITIFIER WARN_NLS DEBUG_SOURCE DEBUG_LINES DEBUG_VARS DEBUG_ALL org.aspectj.ajde.BuildOptionsAdapter  Version constants\r\n  Warning constants\r\n  Debug constants\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     \tinitial implementation \r\n *     AMC\t01.20.2003  extended for AspectJ 1.1 compiler options\r\n * ******************************************************************/\r\n","DefaultMessageHandler":" handleMessage isIgnoring dontIgnore isVerbose showWeaveInfo showWarn org.aspectj.weaver.loadtime.DefaultMessageHandler  ","Demo":" main go foo bar propertyChange main save restore main main go foo bar main m go foo bar m2 main go foo bar main go foo bar propertyChange main save restore propertyChange main save restore d fileName d d d d fileName fileName tjp.Demo bean.Demo observer.Demo tjp.Demo tjp.Demo tjp.Demo tjp.Demo bean.Demo bean.Demo  /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n*/\r\n /*\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n*/\r\n /*\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n*/\r\n /* blah blah blah */\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n*/\r\n /*\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n*/\r\n /*\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n*/\r\n","JoinPointImplTest":" testGetArgs  org.aspectj.runtime.reflect.JoinPointImplTest  ","PointcutExpression":" asString setMatchingContext couldMatchJoinPointsInType mayNeedDynamicTest matchesMethodExecution matchesConstructorExecution matchesStaticInitialization matchesAdviceExecution matchesInitialization matchesPreInitialization matchesMethodCall matchesMethodCall matchesConstructorCall matchesConstructorCall matchesHandler matchesHandler matchesFieldSet matchesFieldSet matchesFieldGet matchesFieldGet getPointcutExpression  org.aspectj.lang.reflect.PointcutExpression org.aspectj.weaver.tools.PointcutExpression  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","AbstractPointcutCE":" pc pc pc  I C Concrete  CE\r\n  CE\r\n  CE\r\n ","LangUtilTest":" main check checkUnflatten skiptestUnflatten testArrayList testCombineStrings checkCombineStrings testDiffsEmptyIdentities testDiffsEmpties testDiffsIdentities testDiffsEvens testDiffsOdds testSoftDiffs makeList checkDiff checkSame checkDiffSoft checkSameSoft toString testExtractOptions testVersion testExtractOptionsArrayCollector testOptionVariants checkOptionVariants testCommaSplit checkCommaSplit testElideEndingLines ME sABCDE sABC sDE sabcde sabc sde s12345 s13579 s02468 s135 s79 s24 s0 s068 unmodifiable modifiable lABCDE lABC lDE labcde labc lde l12345 l13579 l02468 l135 l79 l24 l0 l068 rlabcde rlabc rlde rlABCDE rlABC rlDE rl12345 rl13579 rl02468 rl135 rl79 rl24 rl0 rl068 NONE toUnflatten unflattened spec org.aspectj.testing.util.LangUtilTest org.aspectj.util.LangUtilTest  LangUtil.FlattenSpec COMMA = LangUtil.FlattenSpec.COMMA;\r\n  ---------------------- utilities\r\n  XXX does not detect bad order\r\n  just convert and string-compare?\r\n  assume String\r\n  no input, no output\r\n  one input, nothing extracted\r\n  one input, extracted\r\n  ------- booleans\r\n  one input, extracted\r\n  one input, not extracted\r\n  min vm now - floor may change\r\n  get args back, no options set\r\n  brittle - will fail under different top-level drivers\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PerTargetAndVariablesWithNumbersInTheirNames":"     ","DSTORE":" accept  org.aspectj.apache.bcel.generic.DSTORE  ","SWFrame":" getGame getDisplay getMenu actionPerformed getGame getDisplay getMenu actionPerformed getGame getDisplay getMenu actionPerformed getGame getDisplay getMenu actionPerformed getGame getDisplay getMenu actionPerformed game display menu game display menu game display menu game display menu game display menu spacewar.SWFrame spacewar.SWFrame spacewar.SWFrame spacewar.SWFrame spacewar.SWFrame  create menu\r\n  create menu\r\n  create menu\r\n  create menu\r\n  create menu\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nSWFrame.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nSWFrame.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nSWFrame.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nSWFrame.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n","Attribute":" accept dump addAttributeReader removeAttributeReader readAttribute getName getLength setLength setNameIndex getNameIndex getTag getConstantPool setConstantPool clone copy toString name_index length tag constant_pool readers org.aspectj.apache.bcel.classfile.Attribute  Points to attribute name in constant pool\r\n  Content length of attribute field\r\n  Tag to distiguish subclasses\r\n  Unknown attribute\r\n  Get class name from constant pool via 'name_index' indirection\r\n  Length of data in bytes\r\n  found!\r\n  Compare strings to find known attribute\r\n  J5SUPPORT:\r\n  Never reached\r\n  Call proper constructor, depending on `tag'\r\n  Never occurs\r\n /* Class method reads one attribute from the input data stream.\r\n   * This method must not be accessible from the outside.  It is\r\n   * called by the Field and Method constructor methods.\r\n   *\r\n   * @see    Field\r\n   * @see    Method\r\n   * @param  file Input stream\r\n   * @param  constant_pool Array of constants\r\n   * @return Attribute\r\n   * @throws  IOException\r\n   * @throws  ClassFormatException\r\n   */\r\n","SourceLocationImpl":" getWithinType getFileName getLine getColumn toString withinType fileName line org.aspectj.runtime.reflect.SourceLocationImpl  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","JTreeNodeGenericTreeNodeFactory":" getRootClass createGenericTreeNode compare SINGLETON SINGLETON org.aspectj.testing.compare.adapters.JTreeNodeGenericTreeNodeFactory  sample uses TreeModel...\r\n  result.init(parent, GenericTreeNode.COMPARATOR, rootNode, kids, null);\r\n  urk - broken unless wrapper\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","FieldOrMethod":" dump getAttributes setAttributes getConstantPool setConstantPool getNameIndex setNameIndex getSignatureIndex setSignatureIndex getName getSignature getDeclaredSignature copy_ ensureAnnotationsUpToDate getAnnotations addAnnotation getGenericSignature getSignature getName getClassName getClassType getLoadClassType name_index signature_index attributes_count attributes annotations constant_pool signatureAttributeString searchedForSignatureAttribute annotationsOutOfDate dontKnowSignature signature dontKnowName name dontKnowClassname classname org.aspectj.apache.bcel.classfile.FieldOrMethod org.aspectj.apache.bcel.generic.FieldOrMethod  Points to field name in constant pool\r\n  Points to encoded signature\r\n  No. of attributes\r\n  Collection of attributes\r\n  annotations defined on the field or method\r\n  Annotations are collected from certain attributes, don't do it more than necessary!\r\n  Find attributes that contain annotation data\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","ClassLoaderRepository":" getBootClassLoader storeClass removeClass findClass loadClass loadClass clear bootClassLoader loader loadedClasses org.aspectj.apache.bcel.util.ClassLoaderRepository  CLASSNAME X JAVACLASS\r\n ","AbstractStandard":" start preGenerationClasses postGenerationClasses checkClasses getConfiguration makeConfiguration configuration indexBuilder startGeneration title gen generate cond message cond gen title generatePrePasses generatePostPasses generateCheckPasses generatePasses generatePackageCycle generatePackages generateClassCycle generateClasses optionLength validOptions refCount classtree root cs std org.aspectj.tools.doclets.standard.AbstractStandard  todo wes removed restriction, but implemented Standard as singleton via proxy\r\n  todo these are the heinous globals that impose one process per classloader\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","JavaRun":" appendClasspath setupAjcRun run runInSameVM runInOtherVM expectedException expectedException setupTester setupTester toString getFile getProperty copy getBootclasspath initClone clone isLTW setJavaVersion setClassName setLTW setAspectpath setException setClasspath setErrStreamIsError setOutStreamIsError setSkipTester setFork setVmArgs addDirChanges makeRunIterator writeXml toLongString toString doAdoptParentValues setJavaRunThread releaseJavaRunThread checkExit checkAwtEventQueueAccess checkSystemClipboardAccess checkAccept checkAccess checkAccess checkConnect checkConnect checkCreateClassLoader checkDelete checkExec checkLink checkListen checkMemberAccess checkMulticast checkMulticast checkPackageAccess checkPackageDefinition checkPermission checkPermission checkPrintJobAccess checkPropertiesAccess checkPropertyAccess checkRead checkRead checkRead checkSecurityAccess checkSetFactory checkTopLevelWindow checkWrite checkWrite spec sandbox done failed code FORK_KEY JAVA_KEY VM_ARGS_KEY JAVA_HOME_KEY BOOTCLASSPATH_KEY FORK fork bootclasspath java javaHome vmargs XMLNAME NAMES className javaVersion skipTester outStreamIsError errStreamIsError forkSpec aspectpath useLTW classpath expectedException ME runThread exitCode org.aspectj.testing.harness.bridge.JavaRun  this and following clauses catch ExitCalledException\r\n  XXX need to update run validator (a) to accept null result or (b) to require zero result, and set 0 if completed normally\r\n  Class testAspect = loader.loadClass(\"org.aspectj.lang.JoinPoint\");\r\n  assert spec.fork || !LangUtil.isEmpty(spec.aspectpath);\r\n  verify 1.4 or above, assuming same vm as running this\r\n  assume harness VM classpath has WeavingURLClassLoader (but not others)\r\n  appendClasspath writes trailing delimiter\r\n  setup to run asynchronously, pipe streams through, and report errors\r\n  no errors\r\n  handle errors\r\n  give it 3 minutes...\r\n  hit second timeout - bail\r\n  wait 1 minute to evaluate results of stopping\r\n  caller sets value for returns normally\r\n  Tester.clear();\r\n  Tester.setMessageHandler(handler);\r\n  Tester.setBASEDIR(baseDir);\r\n  baseDirSet = Tester.getBASEDIR();\r\n  XXX need name for JavaRun\r\n  defaults to true\r\n  used by constrained calls\r\n  permit everything else\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","WrappedRunIterator":" abortOnFailure hasNextRun iterationCompleted nextRun toString id run org.aspectj.testing.run.WrappedRunIterator  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","InitCatcher":"     ","TestJava5ReflectionBasedReferenceTypeDelegate":" suite testResolveGeneric testResolveEnum testResolveClass testGenericInterfaceSuperclass_ReflectionWorldResolution  org.aspectj.weaver.TestJava5ReflectionBasedReferenceTypeDelegate  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Andrew Clement          Initial implementation\r\n * ******************************************************************/\r\n","Connection":" getState getCaller getReceiver complete drop connects PENDING COMPLETE DROPPED caller receiver state telecom.Connection  /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","GenericTreeNodeListOrdererFactoryI":" produce  org.aspectj.testing.compare.GenericTreeNodeListOrdererFactoryI  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PrinterSingleton":" instance print objectsSoFar onlyInstance id ca.ubc.cs.spl.aspectPatterns.examples.singleton.java.PrinterSingleton  ","GenericPerTypeWithin":"     ","LocalInners":" main l t LocalInners  ","PatternNode":" getNodeType0 memSize getStart getEnd getSourceContext getFileName setLocation copyLocationFrom getSourceLocation write writeLocation readLocation accept traverse start end sourceContext org.aspectj.org.eclipse.jdt.core.dom.PatternNode org.aspectj.weaver.patterns.PatternNode  should make a PATTERN_NODE type constant\r\n  stub method\r\n  System.err.println(\"no context: \" + this);\r\n  System.out.println(\"get context: \" + this + \" is \" + sourceContext);\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Problem2":"     ","Problem1":"     ","Select":" updatePosition dump initFromFile toString setTarget updateTarget containsTarget dispose getMatchs getIndices getTargets match indices targets fixed_length match_length padding org.aspectj.apache.bcel.generic.Select  matches, i.e., case 1: ...\r\n  target offsets\r\n  target objects in instruction list\r\n  fixed length defined by subclasses\r\n  number of cases\r\n  number of pad bytes for alignment\r\n  Additional offset caused by preceding SWITCHs, GOTOs, etc.\r\n  Update length\r\n  Padding bytes\r\n  Padding bytes\r\n  Padding bytes\r\n  Write default target offset\r\n  Compute number of pad bytes\r\n  Default branch target common for both cases (TABLESWITCH, LOOKUPSWITCH)\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n /* Alignment on 4-byte-boundary, + 1, because of tag byte.\r\n     */\r\n","ClassLibraryImpl":" getClassPreProcessor setClassPreProcessor preProcessor org.aspectj.bea.jvm.ClassLibraryImpl  ","ASTORE":" accept  org.aspectj.apache.bcel.generic.ASTORE  ","InterTypeConstructorDeclaration":" getParameterTypes getGenericParameterTypes getExceptionTypes parseStatements getPrefix resolve raiseNoFieldInitializersWarning suppressingNoExplicitConstructorCall makePreMethod build makeAttribute generateCode getShadowKindForBody SUPPRESSAJWARNINGS NOEXPLICITCONSTRUCTORCALL preMethod explicitConstructorCall org.aspectj.lang.reflect.InterTypeConstructorDeclaration org.aspectj.ajdt.internal.compiler.ast.InterTypeConstructorDeclaration  after annotations have been resolved...\r\n  reset calls.  This is SAFE\r\n  newParent);\r\n  If it is null then we are going to report something else is wrong with this code!\r\n  Error message output in isTargetAnnotation\r\n  Error message output in isTargetEnum\r\n  We encountered a problem building the scope, don't continue - error already reported\r\n  This signature represents what we want consumers of the targetted type to 'see'\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ASequence":"     ","IRunSpec":" makeRunIterator  org.aspectj.testing.harness.bridge.IRunSpec  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","NoReturnInProceed":"     ","CallsParams":"     ","AjctestsAdapter":" make make log addTest addTestSuite getName runTest getSuiteDir getValidator getRunner getHolder getSpec getSandbox putSpecTestsFor getSpecTestsFor safeName filename classnameToPath runTest getSpec runTest countTestCases getAjcTestSpec run getName toString VERBOSE_NAME VERBOSE suitePath options spec runner validator holder sandbox suiteDir name TESTS mAjctestsAdapter mDescriptionToAjcTestSpec mTests name spec suite org.aspectj.testing.drivers.AjctestsAdapter  reportResult handles null TestResult\r\n  ------------------------------------\r\n  ------------------------------------\r\n  runTest handles null TestResult\r\n  this could implement Test, but Ant batchtest fails to pull name\r\n /*\r\n * Adapt Harness tests to JUnit driver. This renders suite files as TestSuite\r\n * and AjcTest as TestCase. When run, aborts are reported as error and fails as\r\n * failures, with all messages stuffed into the one JUnit exception message.\r\n * Test options are supported, but no harness options. The TestSuite\r\n * implementation prevents us from re-running tests. In the Eclipse JUnit test\r\n * runner, the tests display hierarchically and with annotations and with\r\n * messages. You can stop the tests, but not traverse to the source or re-run\r\n * the test.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation\r\n * ******************************************************************/\r\n","QueueState":" insert getFirst removeFirst insert getFirst removeFirst  ca.ubc.cs.spl.aspectPatterns.examples.state.aspectj.QueueState ca.ubc.cs.spl.aspectPatterns.examples.state.java.QueueState  ","OneB":" firstMethod secondMethod thirdMethod fourthMethod fifthMethod  OneB  ","WeaveSpec":" execute setClassesFiles setAspectsFiles createJar collectClassFiles copyFile buildWeaveArgs classesFiles aspectsFiles classFilesFromClasses org.aspectj.testing.WeaveSpec  so subsequent steps in same test see my results\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.testing.ITestStep#execute(org.aspectj.tools.ajc.AjcTestCase)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer, \r\n * ******************************************************************/\r\n","ParentInterfaceUsingChildInnerInterface":" ok getChildInner main getChildInner  Child Parent ParentInterfaceUsingChildInnerInterface Example  ","BeforeUnlock":"     ","OneA":" firstMethod secondMethod thirdMethod fourthMethod fifthMethod  OneA  ","OutputSpec":" addLine matchAgainst expectedOutputLines org.aspectj.testing.OutputSpec  /* Avoid trying to match on ajSandbox source names that appear in messages */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer, \r\n * ******************************************************************/\r\n","IStateListener":" detectedClassChangeInThisDir aboutToCompareClasspaths pathChangeDetected detectedAspectDeleted buildSuccessful recordDecision recordInformation  org.aspectj.ajdt.internal.core.builder.IStateListener  ","NonNullaryAnonymous":" main x NonNullaryAnonymous  ","PopInstruction":"   org.aspectj.apache.bcel.generic.PopInstruction  ","PointcutPrimitive":"  CALL EXECUTION GET SET INITIALIZATION PRE_INITIALIZATION STATIC_INITIALIZATION HANDLER ADVICE_EXECUTION WITHIN WITHIN_CODE CFLOW CFLOW_BELOW IF THIS TARGET ARGS REFERENCE AT_ANNOTATION AT_THIS AT_TARGET AT_ARGS AT_WITHIN AT_WITHINCODE org.aspectj.weaver.tools.PointcutPrimitive  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","TABLESWITCH":" dump initFromFile accept  org.aspectj.apache.bcel.generic.TABLESWITCH  jump offsets\r\n  jump offsets\r\n  jump offsets\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n /* Alignment remainder assumed\r\n\t\t\t\t\t      * 0 here, until dump time */\r\n","Decoration":" getDecoration getDecoration  ca.ubc.cs.spl.aspectPatterns.examples.facade.aspectj.Decoration ca.ubc.cs.spl.aspectPatterns.examples.facade.java.Decoration  ","Not":" accept getBody toString equals body org.aspectj.weaver.ast.Not  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","PrivatePointcut":"     ","GenericImplementingClass":" asInt  GenericImplementingClass  ","MemberSignature":"   org.aspectj.lang.reflect.MemberSignature  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","My_error":"     ","TestTester":" main run  TestTester  does this empty\r\n  now check(String[])\r\n ","AdviceWithParameters":"     ","PointcutQualification2":"     ","DuplicateManifestTest":" setUp testWeave compareManifests PROJECT_DIR injarName aspectjarName outjarName org.aspectj.ajde.DuplicateManifestTest  Tidy up !\r\n /*\r\n\t * Ensure the output directpry in clean\r\n\t */\r\n","Attributable":"     ","AsmRelationshipUtils":" genDeclareMessage genPointcutDetails UNDEFINED DECLARE_PRECEDENCE DECLARE_SOFT DECLARE_PARENTS DECLARE_WARNING DECLARE_ERROR DECLARE_UNKNONWN POINTCUT_ABSTRACT POINTCUT_ANONYMOUS DOUBLE_DOTS MAX_MESSAGE_LENGTH DEC_LABEL org.aspectj.weaver.AsmRelationshipUtils  ","IScope":" lookupType getWorld getEnclosingType getMessageHandler lookupFormal getFormal getFormalCount getImportedPrefixes getImportedNames message message message  org.aspectj.weaver.patterns.IScope  these next three are used to create {@link BindingTypePattern} objects.\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","MediatorImplementation":"     ","StringFold":" main xx StringFold StringFoldHelper  ","Dest":"   b.Dest  ","PrivilegedHandler":" getPrivilegedAccessField getPrivilegedAccessMethod notePrivilegedTypeAccess checkWeaveAccess getMembers inAspect accessors org.aspectj.ajdt.internal.compiler.lookup.PrivilegedHandler  Thread.dumpStack();\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Sample":" main currentView Sample  private\r\n ","SimpleAround":"     ","AssertsCv":" main warnGlobalAssertions main testContexts requireAssertions testExpressions check result throwError testExpressions testExpressions getValue throwError toString x j i string AssertsCv AssertTest MyError StringWrapper  programmatic enablement does not work after class is initialized\r\n  static initialization\r\n  use getCause() in 1.4\r\n  field initialization of inner class\r\n  instance initialization of inner class\r\n  anonymous inner class - method\r\n  anonymous inner class - field initializer\r\n  first is any boolean expression\r\n  parser questions\r\n  the second expression is not evaluated\r\n  touch expression2 type bases\r\n  the assert statement completes abruptly, throwing this exception\r\n  first is any boolean expression\r\n  parser questions\r\n  the second expression is not evaluated\r\n  touch expression2 type bases\r\n  the assert statement completes abruptly, throwing this exception\r\n  copy  variable from enclosing instance\r\n  parser questions\r\n  the second expression is not evaluated\r\n  touch expression2 type bases\r\n  the assert statement completes abruptly, throwing this exception\r\n  copy ","DeclareInterfaceImplementsInterface":"     ","IntList":" add contains theList org.aspectj.apache.bcel.verifier.statics.IntList  ","VarargsTests":" suite getSpecFile test001_cantMatchVarargsWithObjectArray_callPCD test002_cantMatchVarargsWithObjectArray_execPCD test003_cantMatchVarargsWithObjectArray_initPCD test003_cantMatchVarargsWithObjectArray_withincodePCD test_usingVarargsInPointcuts1 test_usingVarargsInPointcuts2 testAJDKExamples testStarVarargs testVarargsWithDotDotInPointcut  org.aspectj.systemtest.ajc150.VarargsTests  \"an array type as the last parameter in a signature does not match on the varargs declared method: <blah>\"\r\n  check when signature is from an execution PCD\r\n  check when signature is from an initialization PCD\r\n  check when signature is from an withincode PCD\r\n  before(): call(* *(Integer...)) { }\r\n  before(): call(* *(int,Integer...)) { } - slightly more complex pcut\r\n ","AlternateLabelCreatorImplementation":"     ","DeclareAnnotationImpl":" getDeclaringType getKind getSignaturePattern getTypePattern getAnnotation getAnnotationAsText toString theAnnotation annText declaringType kind typePattern signaturePattern org.aspectj.internal.lang.reflect.DeclareAnnotationImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareAnnotation#getDeclaringType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareAnnotation#getKind()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareAnnotation#getSignaturePattern()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareAnnotation#getTypePattern()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.DeclareAnnotation#getAnnotation()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","NoNew_PR398":"     ","OneX":"     ","IdentityPointcutVisitor":" visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit  org.aspectj.weaver.patterns.IdentityPointcutVisitor  ","AjASTFactory":" getAST  org.aspectj.ajdt.core.dom.AjASTFactory  ","OutputDecorator":" print outputComponent ca.ubc.cs.spl.aspectPatterns.examples.decorator.java.OutputDecorator  ","MissingTypeInDeclareParents":"     ","MissingExposure":"     ","Middle1":" publicMethod protectedMethod defaultMethod privateMethod main  Middle1 Middle1  ","CompileError":"     ","Middle2":" publicMethod_voidReturn publicMethod_StringReturn publicMethod_IntegerReturn  Middle2 Middle2  ","Middle3":" m absMethod1  Middle3 Middle3  ","Middle4":" absMethod1  Middle4 Middle4  ","CopyEmitter":" getResultTreeFragment characters comment endDocument endElement processingInstruction setDocumentLocator setEscaping setNamePool setUnparsedEntity setWriter startDocument startElement getResultTreeFragment characters comment endDocument endElement processingInstruction setDocumentLocator setEscaping setNamePool setUnparsedEntity setWriter startDocument startElement rtf rtfEmitter namePool rtf rtfEmitter namePool com.nwalsh.saxon.CopyEmitter com.nwalsh.saxon.CopyEmitter  ","Modules":" getModule modules baseDir jarDir handler org.aspectj.internal.tools.build.Modules  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","JemmyDriver":"     /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AnnotationPointcut":" getAnnotationTypePattern couldMatchKinds parameterizeWith fastMatch matchInternal findMethod resolveBindings concretize1 findResidueInternal getBindingAnnotationTypePatterns getBindingTypePatterns write read equals hashCode buildDeclarationText toString accept annotationTypePattern munger declarationText org.aspectj.weaver.patterns.AnnotationPointcut  only set after concretization\r\n  FIXME asc should include supers with getInterTypeMungersIncludingSupers?\r\n  FIXME asc perf cache the result of discovering the member that contains the real annotations\r\n  \"]    pointcut is at [\"+getSourceLocation()+\"]\");\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#fastMatch(org.aspectj.weaver.patterns.FastMatchInfo)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#match(org.aspectj.weaver.Shadow)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#concretize1(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.IntMap)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#findResidue(org.aspectj.weaver.Shadow, org.aspectj.weaver.patterns.ExposedState)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingAnnotationTypePatterns()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingTypePatterns()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PatternNode#write(java.io.DataOutputStream)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","PointcutDoc":" resultType overriddenClass isAbstract  org.aspectj.ajdoc.PointcutDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","PrinterAdapter":" write adaptee ca.ubc.cs.spl.aspectPatterns.examples.adapter.java.PrinterAdapter  ","APointcut":" myPointcut main  APointcut  ","LocalInitializerVariableNotBlank":" main greys LocalInitializerVariableNotBlank  ","CrosscuttingMembers":" addConcreteShadowMunger addShadowMungers addShadowMunger addTypeMungers addTypeMunger addLateTypeMungers addLateTypeMunger addDeclares addDeclare exposeTypes exposeType addPrivilegedAccesses addPrivilegedAccess getCflowEntries replaceWith setPerClause getDeclareDominates getDeclareParents getDeclareSofts getShadowMungers getTypeMungers getLateTypeMungers getDeclareAnnotationOnTypes getDeclareAnnotationOnFields getDeclareAnnotationOnMethods inAspect world perClause shadowMungers typeMungers lateTypeMungers declareParents declareSofts declareDominates declareAnnotationsOnType declareAnnotationsOnField declareAnnotationsOnMethods shouldConcretizeIfNeeded org.aspectj.weaver.CrosscuttingMembers  These are like declare parents type mungers\r\n  includes ctors\r\n  assert m is concrete\r\n  we don't do mungers for abstract aspects\r\n  return;   FIXME asc perf Possible Improvement. Investigate why this is called twice in a weave ?\r\n  Ordered so that during concretization we can check the related munger\r\n  this is not extensible, oh well\r\n  System.err.println(\"add priv access: \" + member);\r\n  bug 129163: use set equality rather than list equality\r\n  *sigh* dirty fix for dirty hacky implementation pr149305\r\n  which will force a full build - bug 134541\r\n  of shadowMungers\r\n  }\r\n  DECAT for when attempting to replace an aspect\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","BetaA.40":"     ","InstructionComparator":" equals equals DEFAULT org.aspectj.apache.bcel.generic.InstructionComparator  See AspectJ bug 104957\r\n ","IfdefsAndAdvice":"     ","MethodInner":"     ","BigOps":" main bytePlus byteMinus byteBitNot byteTimes byteDiv byteRem byteAdd byteSub byteShl byteShr byteUshr byteLt byteGt byteLe byteGe byteEq byteNe byteAnd byteXor byteOr byteTest byteSwitch shortPlus shortMinus shortBitNot shortTimes shortDiv shortRem shortAdd shortSub shortShl shortShr shortUshr shortLt shortGt shortLe shortGe shortEq shortNe shortAnd shortXor shortOr shortTest shortSwitch charPlus charMinus charBitNot charTimes charDiv charRem charAdd charSub charShl charShr charUshr charLt charGt charLe charGe charEq charNe charAnd charXor charOr charTest charSwitch intPlus intMinus intBitNot intTimes intDiv intRem intAdd intSub intShl intShr intUshr intLt intGt intLe intGe intEq intNe intAnd intXor intOr intTest intSwitch longPlus longMinus longBitNot longTimes longDiv longRem longAdd longSub longShl longShr longUshr longLt longGt longLe longGe longEq longNe longAnd longXor longOr longTest longSwitch floatPlus floatMinus floatTimes floatDiv floatRem floatAdd floatSub floatLt floatGt floatLe floatGe floatEq floatNe floatTest floatSwitch doublePlus doubleMinus doubleTimes doubleDiv doubleRem doubleAdd doubleSub doubleLt doubleGt doubleLe doubleGe doubleEq doubleNe doubleTest doubleSwitch booleanLogNot booleanEq booleanNe booleanAnd booleanXor booleanOr booleanTest booleanSwitch  BigOps  byte tests\r\n  short tests\r\n  char tests\r\n  int tests\r\n  long tests\r\n  float tests\r\n  double tests\r\n  boolean tests\r\n ","CompileAndRunTestCase":" testAround testInterType testInterTypeMethods testIf testDeclareParentsFail testDeclareParents testPerCflow testPerObject testDeclareSoft testPrivileged testHandler testInterConstructors testAroundA1  org.aspectj.ajdt.internal.compiler.batch.CompileAndRunTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","UnwovenClassFile":" getFilename makeInnerFileName getBytes getJavaClass exists writeUnchangedBytes writeWovenBytes writeChildClasses writeChildClassFile deleteAllChildClasses deleteChildClassFile unchanged getClassName toString deleteRealFile equals hashCode toString filename bytes writtenChildClasses className name bytes org.aspectj.weaver.bcel.UnwovenClassFile  protected byte[] writtenBytes = null;\r\n  strip the .class\r\n  if (bytes == null) bytes = javaClass.getBytes();\r\n  Thread.currentThread().dumpStack();\r\n  XXX this is an important optimization\r\n  ??? how much that will affect performance\r\n  XXX is this right\r\n  record\r\n /* ChildClass */\r\n /* private */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","BadVar":"     ","InvalidReturn":"     ","FlyweightImplementation":"     ","ImportingInnerInterfacesStars_PR386":" main  ImportingInnerInterfacesStars_PR386 I1 I2 I3  ","IRETURN":" accept  org.aspectj.apache.bcel.generic.IRETURN  ","BadGetPCD":"     ","AnonymousWithInner":" main foo x AnonymousWithInner  we're getting two 'cause we called toString twice\r\n ","OfClauseDoc":" toString kind kind EACH_CFLOW EACH_JVM EACH_OBJECT org.aspectj.ajdoc.OfClauseDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","CommandProtocol":"     ","AnonFolding":" main m toString ANON AnonFolding  ","StructureSearchManagerTest":" main suite testFindPatternMatch testFindPatternAndKindMatch testFindNonExistent setUp tearDown CONFIG_FILE_PATH org.aspectj.ajde.ui.StructureSearchManagerTest  TODO-path\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AssertsCF":" main  AssertsCF  ERR: b might not be assigned\r\n  ERR: b might not be assigned\r\n ","CloneMethod":"     ","ReflectionWorldTest":" testDelegateCreation testArrayTypes testPrimitiveTypes testDelegateCreation testArrayTypes testPrimitiveTypes  org.aspectj.weaver.reflect.ReflectionWorldTest org.aspectj.weaver.reflect.ReflectionWorldTest  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ConstantInterfaceMethodref":" accept  org.aspectj.apache.bcel.classfile.ConstantInterfaceMethodref  ","OverloadedPointcuts":"     ","Middle6":" publicMethod protectedMethod defaultMethod privateMethod anotherPublicMethod anotherProtectedMethod main  Middle6  ","AnnotationMoodIndicator":" getMood setMood getMood setMood getMood setMood getMood setMood mood implementedInterface mood introduced moody.AnnotationMoodIndicator moodytest.AnnotationMoodIndicator  ","Cachable":"     ","StrictFp":" main go ran StrictFp  ","ClassPath":" getSystemClassPath toString hashCode equals getPathComponents getClassPath getInputStream getInputStream getClassFile getClassFile getBytes getBytes getPath getPath getClassFile getInputStream getPath getBase getTime getSize getClassFile toString getClassFile SYSTEM_CLASS_PATH paths class_path dir zip org.aspectj.apache.bcel.util.ClassPath  ","Visitor":" visitCode visitCodeException visitConstantClass visitConstantDouble visitConstantFieldref visitConstantFloat visitConstantInteger visitConstantInterfaceMethodref visitConstantLong visitConstantMethodref visitConstantNameAndType visitConstantPool visitConstantString visitConstantUtf8 visitConstantValue visitDeprecated visitExceptionTable visitField visitInnerClass visitInnerClasses visitJavaClass visitLineNumber visitLineNumberTable visitLocalVariable visitLocalVariableTable visitMethod visitSignature visitSourceFile visitSynthetic visitUnknown visitStackMap visitStackMapEntry visitEnclosingMethod visitRuntimeVisibleAnnotations visitRuntimeInvisibleAnnotations visitRuntimeVisibleParameterAnnotations visitRuntimeInvisibleParameterAnnotations visitAnnotationDefault visitLocalVariableTypeTable visitStackInstruction visitLocalVariableInstruction visitBranchInstruction visitLoadClass visitFieldInstruction visitIfInstruction visitConversionInstruction visitPopInstruction visitStoreInstruction visitTypedInstruction visitSelect visitJsrInstruction visitGotoInstruction visitUnconditionalBranch visitPushInstruction visitArithmeticInstruction visitCPInstruction visitInvokeInstruction visitArrayInstruction visitAllocationInstruction visitReturnInstruction visitFieldOrMethod visitConstantPushInstruction visitExceptionThrower visitLoadInstruction visitVariableLengthInstruction visitStackProducer visitStackConsumer visitACONST_NULL visitGETSTATIC visitIF_ICMPLT visitMONITOREXIT visitIFLT visitLSTORE visitPOP2 visitBASTORE visitISTORE visitCHECKCAST visitFCMPG visitI2F visitATHROW visitDCMPL visitARRAYLENGTH visitDUP visitINVOKESTATIC visitLCONST visitDREM visitIFGE visitCALOAD visitLASTORE visitI2D visitDADD visitINVOKESPECIAL visitIAND visitPUTFIELD visitILOAD visitDLOAD visitDCONST visitNEW visitIFNULL visitLSUB visitL2I visitISHR visitTABLESWITCH visitIINC visitDRETURN visitFSTORE visitDASTORE visitIALOAD visitDDIV visitIF_ICMPGE visitLAND visitIDIV visitLOR visitCASTORE visitFREM visitLDC visitBIPUSH visitDSTORE visitF2L visitFMUL visitLLOAD visitJSR visitFSUB visitSASTORE visitALOAD visitDUP2_X2 visitRETURN visitDALOAD visitSIPUSH visitDSUB visitL2F visitIF_ICMPGT visitF2D visitI2L visitIF_ACMPNE visitPOP visitI2S visitIFEQ visitSWAP visitIOR visitIREM visitIASTORE visitNEWARRAY visitINVOKEINTERFACE visitINEG visitLCMP visitJSR_W visitMULTIANEWARRAY visitDUP_X2 visitSALOAD visitIFNONNULL visitDMUL visitIFNE visitIF_ICMPLE visitLDC2_W visitGETFIELD visitLADD visitNOP visitFALOAD visitINSTANCEOF visitIFLE visitLXOR visitLRETURN visitFCONST visitIUSHR visitBALOAD visitDUP2 visitIF_ACMPEQ visitIMPDEP1 visitMONITORENTER visitLSHL visitDCMPG visitD2L visitIMPDEP2 visitL2D visitRET visitIFGT visitIXOR visitINVOKEVIRTUAL visitFASTORE visitIRETURN visitIF_ICMPNE visitFLOAD visitLDIV visitPUTSTATIC visitAALOAD visitD2I visitIF_ICMPEQ visitAASTORE visitARETURN visitDUP2_X1 visitFNEG visitGOTO_W visitD2F visitGOTO visitISUB visitF2I visitDNEG visitICONST visitFDIV visitI2B visitLNEG visitLREM visitIMUL visitIADD visitLSHR visitLOOKUPSWITCH visitDUP_X1 visitFCMPL visitI2C visitLMUL visitLUSHR visitISHL visitLALOAD visitASTORE visitANEWARRAY visitFRETURN visitFADD visitBREAKPOINT  org.aspectj.apache.bcel.classfile.Visitor org.aspectj.apache.bcel.generic.Visitor  Java5\r\n ","NameConvertor":" convertFromSignature getFullyQualifiedTypeName createShortName getTypeName BOOLEAN BYTE CHAR DOUBLE FLOAT INT LONG SHORT ARRAY RESOLVED UNRESOLVED PARAMETERIZED BOOLEAN_NAME BYTE_NAME CHAR_NAME DOUBLE_NAME FLOAT_NAME INT_NAME LONG_NAME SHORT_NAME SQUARE_BRACKETS GREATER_THAN LESS_THAN COMMA BACKSLASH_LESSTHAN SEMICOLON org.aspectj.util.NameConvertor  we have something like '>;'\r\n  we have something like 'Ljava  we have something like 'Ljava  we have something like 'Ljava  middle of a '<...>'\r\n  the '<' back.\r\n  the first part\r\n  close the generic signature\r\n  we have something like '>;'\r\n  we have something like 'Ljava  we have something like 'Ljava  we have something like 'Ljava  so add the ';' back\r\n  the '<' back.\r\n  the first part\r\n  close the generic signature\r\n ","ObjectChecker":" isValid toString isValid toString isValid toString isValid ANY NOT_NULL ANY_ZERO org.aspectj.testing.util.ObjectChecker  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CombinedLogic":" main test  CombinedLogic  ","LocalVariablesInfo":" getLocalVariableInfo add localVariableInfos org.aspectj.apache.bcel.verifier.statics.LocalVariablesInfo  ","ArgsTestCase":" testMatchJP testBinding testMatchJPWithPrimitiveTypes checkMatches checkNoMatch anInt anInteger x y z t needToSkipPointcutParserTests setUp wildcardArgs oneA oneAandaC BthenAnything singleArg needToSkip org.aspectj.weaver.patterns.ArgsTestCase  ReflectionBasedReferenceTypeDelegate.class.getClassLoader());\r\n /* (non-Javadoc)\r\n\t * @see junit.framework.TestCase#setUp()\r\n\t */\r\n","ClassExtendingAspect":"     ","CastAndBinary":" main  CastAndBinary  ","BetaA.20":"     ","CompoundInstruction":" getInstructionList  org.aspectj.apache.bcel.generic.CompoundInstruction  ","MethodSignatureImpl":" getReturnType createToString getMethod method returnType org.aspectj.runtime.reflect.MethodSignatureImpl  nothing we can do, user will see null return\r\n /* name is consistent with reflection API */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.MemberSignature#getAccessibleObject()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ParentsFail":"     ","SourceContextImpl":" configureFromAttribute getSourceFile tidy getOffset makeSourceLocation makeSourceLocation makeSourceLocation makeSourceLocation getOffset tidy delegate lineBreaks UNKNOWN_SOURCE_CONTEXT org.aspectj.weaver.SourceContextImpl  ??? have more info\r\n  1st char of given line is next char after previous end of line\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","InterTypeMethodDeclaration":" getName getReturnType getGenericReturnType getParameterTypes getGenericParameterTypes getTypeParameters getExceptionTypes parseStatements getPrefix isFinal analyseCode resolve resolveStatements build makeAttribute generateCode generateDispatchMethod getShadowKindForBody checkAndSetModifiersForMethod clone0 accept0  org.aspectj.lang.reflect.InterTypeMethodDeclaration org.aspectj.ajdt.internal.compiler.ast.InterTypeMethodDeclaration org.aspectj.org.eclipse.jdt.core.dom.InterTypeMethodDeclaration  the method HAS a body --> abstract native modifiers are forbiden\r\n  to do it for args...\r\n  Work out the real method binding that we can use for comparison\r\n  Go up the hierarchy, looking for something we override\r\n  return types compatible? (allow for covariance)\r\n  superclass of object is null\r\n  If we couldn't find something we override, report the error\r\n  Need to verify\r\n  check @Override annotation - based on MethodDeclaration.resolveStatements() @Override processing\r\n  Check the target for ITD is not an interface\r\n  has already been reported.\r\n  return null;\r\n  Error message output in isTargetAnnotation\r\n  Error message output in isTargetEnum\r\n  We encountered a problem building the scope, don't continue - error already reported\r\n  referred to in the parameters  System.err.println(\"no code for \" + this);\r\n  this makes the interMethodBody\r\n  annotations on the ITD declaration get put on this method\r\n  damage the attributes generated for the dispatch binding.\r\n  TypeBinding type;\r\n  for reported problems, we want the user to see the declared selector\r\n  after this point, tests on the 16 bits reserved.\r\n  check for abnormal modifiers\r\n  check for incompatible modifiers in the visibility bits, isolate the visibility bits\r\n  need to keep the less restrictive so disable Protected  check for modifiers incompatible with abstract modifier\r\n  native methods cannot also be tagged as strictfp\r\n  static members are only authorized in a static member or top level type\r\n  restore the true selector now that any problems have been reported\r\n  XXX this code is copied from MethodScope, with a few adjustments for ITDs...\r\n  visit children in normal left to right reading order\r\n  n.b. visit return type even for constructors\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n","MigrationTests":" suite getSpecFile testMigrationFrom121_pointcutsAndAdvice  org.aspectj.systemtest.ajc150.MigrationTests  ","LLOAD":" accept  org.aspectj.apache.bcel.generic.LLOAD  ","SupersAndInterfaces":"     ","ReflectionFastMatchInfo":" getMatchingContext context org.aspectj.weaver.reflect.ReflectionFastMatchInfo  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","IHasSourceLocation":" getSourceContext getSourceLocation  org.aspectj.weaver.IHasSourceLocation  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Fixes":"     ","AdviceOnEmptyConstructor":"     ","JavaLoaderFactory":" makeLoader  jxxload_help.JavaLoaderFactory  Copyright 2000 Samuele Pedroni\r\n ","BetaA.30":"     ","FalseThrowsCE":" main  FalseThrowsCE  (false) CE: Throwable never thrown\r\n  potential NPE, SecurityException\r\n ","InterfaceArrayCast":" main foo  A I InterfaceArrayCast  ","ChildMethodCE":" main run defineMethod  child.ChildMethodCE child.Target child.ParentChild  expect CE here: child does not define \"defineMethod()\" b  expect CE here: child does not define \"defineMethod()\" b ","GameSynchronization":"     ","DRETURN":" accept  org.aspectj.apache.bcel.generic.DRETURN  ","SampleAspect":"     ","GenericAnnotation":"     ","SortingStrategy":" sort  ca.ubc.cs.spl.aspectPatterns.examples.strategy.java.SortingStrategy  ","CatchAdvice":"     ","SignatureImpl":" createToString toString toString toShortString toLongString getModifiers getName getDeclaringType getDeclaringTypeName fullTypeName stripPackageName shortTypeName addFullTypeNames addShortTypeNames addTypeArray setLookupClassLoader getLookupClassLoader extractString extractInt extractType extractStrings extractTypes setUseCache getUseCache get set get set array makeCache useCache modifiers name declaringTypeName declaringType stringCache stringRep lookupClassLoader SEP EMPTY_STRING_ARRAY EMPTY_CLASS_ARRAY INNER_SEP toStringCacheRef org.aspectj.runtime.reflect.SignatureImpl  lazy version\r\n  separate implementation so we don't need SoftReference to hold the field...\r\n /* Use a soft cache for the short, middle and long String representations */\r\n /*\r\n\t * Used for testing\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AdviceInteraction":"     ","PerThisOrTargetPointcutVisitor":" getPerTypePointcut visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit MAYBE m_isTarget m_fromAspectType org.aspectj.weaver.patterns.PerThisOrTargetPointcutVisitor  pertarget(.. && !within(Foo)) => true as well !\r\n  pertarget(.. && !withincode(* Foo.do())) => true as well !\r\n  FIXME AV - can we optimize ? perthis(@withincode(Foo)) = hasmethod(..)\r\n  TODO AV - can we do better ?\r\n  see for example pr114054\r\n  perthis(@target(Foo))\r\n  perthis(target(Foo)) => maybe\r\n  the parser here..\r\n  TODO AV - we do like a deep copy by parsing it again.. quite dirty, would need a clean deep copy\r\n  TODO AV - see dirty replace from $ to . here as inner classes are with $ instead (#108488)\r\n  this should not happen since concretize will fails but just in case..\r\n  quiet unexpected since a KindedPointcut but do as if...\r\n  while I use back parsing for check purpose.\r\n ","PrototypeProtocol":"     ","Order":" print  com.designpattern.decorator.Order  ","SubApp":" invoke around  ataspectj.hierarchy.app.SubApp  simple echo. May be advised or not depending on the aspect deployed there\r\n  this child aspect will be LTW for only one variation of the SubApp\r\n ","DeclareErrorDeclaration":" clone0 subtreeMatch0 accept0 internalModifiersProperty internalModifiers2Property internalJavadocProperty propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty getPointcut setPointcut getMessage setMessage JAVADOC_PROPERTY POINTCUT_PROPERTY MESSAGE_PROPERTY PROPERTY_DESCRIPTORS_2_0 PROPERTY_DESCRIPTORS_3_0 pointcut message org.aspectj.org.eclipse.jdt.core.dom.DeclareErrorDeclaration  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  allow default implementation to flag the error\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - \r\n\t * therefore we don't do anything with this\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - \r\n\t * therefore we don't do anything with this\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n","InnerClassInPrivilegedAspect":"     ","ButtonCreator":" createComponent getTitle createComponent getTitle  ca.ubc.cs.spl.aspectPatterns.examples.factoryMethod.aspectj.ButtonCreator ca.ubc.cs.spl.aspectPatterns.examples.factoryMethod.java.ButtonCreator  ","Identifiable":" getId setId getId setId getId setId getId setId  Identifiable Identifiable Identifiable Identifiable  ","AssertInAdvice":"     ","SwallowedException":" foo bar  SwallowedException  ","TestClassLoader":" getResource getResourceAsStream maybeTestClassName loadClass readClass getClassData toString dirs urlsForDebugString org.aspectj.testing.util.TestClassLoader  and our dirs again (if not maybe test)\r\n  subvert the dominant paradigm...\r\n  resolved by superclass\r\n /*File*/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PR119543":"     ","AfterThrowingAdviceDeclaration":" propertyDescriptors internalGetSetChildProperty getThrowing setThrowing clone0 treeSize accept0 throwingJAVADOC_PROPERTY throwingPARAMETERS_PROPERTY throwingPOINTCUT_PROPERTY throwingTHROWN_EXCEPTIONS_PROPERTY throwingBODY_PROPERTY throwingPROPERTY_DESCRIPTORS_2_0 throwingPROPERTY_DESCRIPTORS_3_0 throwingTHROWING_PROPERTY throwing org.aspectj.org.eclipse.jdt.core.dom.AfterThrowingAdviceDeclaration  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  visit children in normal left to right reading order\r\n ","AnnotationRuntimeTests":" suite getSpecFile test002_MustHaveRuntimeRetention test003_InheritableOrNot test004_CantUseinDecEoW test005_ArgsSuite test006_CantUseinDecEoW  org.aspectj.systemtest.ajc150.AnnotationRuntimeTests  ","TraceInstance":"     ","ClassGen":" unpackAnnotations getJavaClass addInterface removeInterface getMajor setMajor setMinor getMinor addAttribute addAnnotation addMethod addEmptyConstructor addField containsField containsField containsMethod removeAttribute removeAnnotation removeMethod replaceMethod replaceField removeField getClassName getSuperclassName getFileName setClassName setSuperclassName getMethods setMethods setMethodAt getMethodAt getInterfaceNames getInterfaces getFields getAttributes getAnnotations getConstantPool setConstantPool setClassNameIndex setSuperclassNameIndex getSuperclassNameIndex getClassNameIndex addObserver removeObserver update clone isAnnotation isEnum getSUID compare compare compare class_name super_class_name file_name class_name_index superclass_name_index major minor cp field_vec method_vec attribute_vec interface_vec annotation_vec unpackedAnnotations observers org.aspectj.apache.bcel.generic.ClassGen  Template for building up constant pool\r\n  ArrayLists instead of arrays to gather fields, methods, etc.\r\n  Put everything needed by default into the constant pool and the vectors\r\n  J5TODO: Could make unpacking lazy, done on first reference\r\n  Dont add attributes for annotations as those will have been unpacked\r\n  TODO: Sometime later, trash any attributes called 'RuntimeVisibleAnnotations' or 'RuntimeInvisibleAnnotations'\r\n  Must be last since the above calls may still add something to it\r\n  Push `this'\r\n  J5TODO: Should we make calling unpackAnnotations() lazy and put it in here?\r\n  1. classname\r\n  2. classmodifiers: ACC_PUBLIC, ACC_FINAL, ACC_INTERFACE, and ACC_ABSTRACT\r\n  remove abstract if we have it but have no methods\r\n  3. ordered list of interfaces\r\n  ACC_TRANSIENT)\r\n  now used for methods\r\n  3. The descriptor of the method, ()V.\r\n  ACC_NATIVE, ACC_ABSTRACT and ACC_STRICT\r\n  <init>\r\n  6. sorted non-private constructors\r\n  7. sorted non-private methods\r\n  use the bytes we have\r\n  (long)(sha[6]&0xff) << 48 | (long)(sha[7]&0xff) << 56);\r\n  can ignore the name...\r\n /* Corresponds to the fields found in a JavaClass object.\r\n   */\r\n /*AnnotationGen*/\r\n","StreamsHandler":" show hide restoreStreams getLogStream log lnlog startListening endListening endListening out err listening log loggedLine outSniffer errSniffer outDelegate errDelegate outListener errListener EMPTY out err org.aspectj.testing.util.StreamsHandler  final PrintStream HIDE = NullPrintStream.NULL_PrintStream;\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ArrayAnnotationVisitor":" visit visitEnum visitAnnotation visitArray visitEnd arrayValues vis val org.aspectj.weaver.asm.ArrayAnnotationVisitor  new AnnotationNameValuePair(name,val));\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","ATest":"     ","AccumulatingFileFilter":" accept accumulate getFiles files org.aspectj.testing.util.AccumulatingFileFilter  /* *******************************************************************\r\n * Copyright (c) 1999-2000 Xerox Corporation. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","InnerClasses":" main method accept dump getInnerClasses setInnerClasses toString copy inner_classes number_of_classes InnerClasses org.aspectj.apache.bcel.classfile.InnerClasses  ","RegressionComparePackageMode":" main test runCommand CORRECT_RESULTS_DIR RUN_RESULTS_DIR FILES_TO_COMPARE AJDOC_ARGS RegressionComparePackageMode  ","AsmRelationshipsTest":" testUsesPointcut testDeclareParents testDeclareWarningAndError testInterTypeDeclarations testAdvice checkDeclareMapping checkUniDirectionalMapping checkMapping checkInterTypeMapping setUp tearDown manager CONFIG_FILE_PATH org.aspectj.ajde.AsmRelationshipsTest  TODO-path\r\n  see pr148027\r\n  didn't find it\r\n  String set = to;\r\n  String handle2 = (String)rel2.getTargets().get(0);\r\n  didn't find it\r\n /*List relations = */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","DoMonitorErrors":"   pkg1.monitoring.DoMonitorErrors  ","MONITOREXIT":" getExceptions accept  org.aspectj.apache.bcel.generic.MONITOREXIT  ","TheObject":" main realMain private_call protected_call package_call public_call main private_int protected_int package_int public_int TheObject TheObject  /*package*/\r\n /*package*/\r\n","ClassDocImpl":" getInstance getInstance find docForDec docForDec docForDec nonNullTypeDec createInnerTypes createImports createInterfaces postProcess createConstructors createPointcuts createMethods createFields getFilter dec typeDec qualifiedName toString name findClass fields isExternalizable isSerializable methods serializationMethods serializableFields definesSerializableFields superclass subclassOf interfaces constructors innerClasses importedClasses importedPackages pointcuts isAbstract isException isError introducers isInterface isClass isAspect isOrdinaryClass modifierSpecifier asClassDoc dimension qualifiedTypeName typeName createIntroducers find getInstance getInstance makeInstance put factory typeDec introducers fieldDocs methodDocs constructorDocs innerclassDocs interfaceDocs importedClasses importedPackages pointcutDocs filter typeDecsToClassDocs qualifiedNamesToClassDocs org.aspectj.tools.ajdoc.ClassDocImpl  RootDocImpl sets inclusion of world classes\r\n  have to install before creating imports to avoid cycles\r\n  TODO error ???\r\n  NameType type = (NameType)typeDec.getType();\r\n  can't do this on construction since advising aspect may exist but be uninitialized\r\n  XXX harmless error System.err.println(\"Unable to post-process\");\r\n  if ajc changes so typedec start  ArrayList removed = new ArrayList();\r\n  XXX workaround for ajc bug of default constructor source location\r\n  use source location clone without comment from class\r\n  if line  nb: called during construction\r\n  still may be null\r\n  Sanity check\r\n  The result\r\n  [0] The trivial case, the classname is this class\r\n  [1] Look up the fully qualified name.\r\n  }\r\n  [3] Search in this package\r\n  is full package-qualified.\r\n  [5] Search the package imports for the fully-qualified name.\r\n  TODO: check that this is made final, if not, make it static\r\n  Found nothing.\r\n  TODO\r\n  TODO: make lazy\r\n  TODO: make lazy\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","WeavingClassLoader":" getAspectURLs  org.aspectj.weaver.tools.WeavingClassLoader  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Matthew Webster, Adrian Colyer, \r\n *     Martin Lippert     initial implementation \r\n * ******************************************************************/\r\n","IUSHR":" accept  org.aspectj.apache.bcel.generic.IUSHR  ","WorldTestCase":" getWorld xtestTraceJar testIterator testObjectCoersion assertCouldBeCoercibleFrom assertCouldNotBeCoercibleFrom world org.aspectj.weaver.bcel.WorldTestCase  this tests for declared mungers\r\n  XXX fix the various XXXs before expecting this test to work\r\n  modifiersTest(clone, Modifier.PROTECTED | Modifier.NATIVE);\r\n /*Member constr = */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ExceptionThrower":" getExceptions  org.aspectj.apache.bcel.generic.ExceptionThrower  ","ClassMethods":"     ","MethVisitor":" visitAnnotationDefault visitAnnotation visitAttribute visitParameterAnnotation visitCode visitInsn visitIntInsn visitVarInsn visitTypeInsn visitFieldInsn visitMethodInsn visitJumpInsn visitLabel visitLdcInsn visitIincInsn visitTableSwitchInsn visitLookupSwitchInsn visitMultiANewArrayInsn visitTryCatchBlock visitLocalVariable visitLineNumber visitMaxs visitEnd am org.aspectj.weaver.asm.MethVisitor  means we are ignoring default values - is that a problem?\r\n  AJ doesnt support these yet\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","pr113073":"     ","PR94167":"     ","InterTypeMethodDeclarationImpl":" getName getReturnType getGenericReturnType getParameterTypes getGenericParameterTypes getTypeParameters getExceptionTypes toString name baseMethod parameterAdjustmentFactor parameterTypes genericParameterTypes returnType genericReturnType exceptionTypes org.aspectj.internal.lang.reflect.InterTypeMethodDeclarationImpl  no of fake params at start of baseMethod\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeMethodDeclaration#getName()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeMethodDeclaration#getReturnType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeMethodDeclaration#getGenericReturnType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeMethodDeclaration#getParameters()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeMethodDeclaration#getGenericParameters()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeMethodDeclaration#getTypeParameters()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ImportingStaticInnerInterfacesStars2_PR386":" main  ImportingStaticInnerInterfacesStars2_PR386 I1 I2  ","AbstractStateListener":" detectedClassChangeInThisDir aboutToCompareClasspaths pathChangeDetected detectedAspectDeleted buildSuccessful recordDecision recordInformation  org.aspectj.ajdt.internal.core.builder.AbstractStateListener  ","Timer":" getGame run getGame run getGame run start stop getTime getGame run getGame run TICK_PERIOD game TICK_PERIOD game TICK_PERIOD game startTime stopTime TICK_PERIOD game TICK_PERIOD game spacewar.Timer spacewar.Timer spacewar.Timer telecom.Timer spacewar.Timer spacewar.Timer  time between ticks in millis\r\n  time between ticks in millis\r\n  time between ticks in millis\r\n  time between ticks in millis\r\n  time between ticks in millis\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nTimer.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nTimer.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nTimer.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nTimer.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n","NewParentTypeMunger":" write getNewParent equals hashCode newParent hashCode org.aspectj.weaver.NewParentTypeMunger  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ParserTestCase":" testNamePatterns testParse testParseExecutionWithAnnotation testParseExecutionWithMultipleAnnotations testParseCallWithMultipleAnnotations testParseGetWithAnnotations testParseBadGetWithAnnotations testParseGetWithAndAggregationAnnotations testParseSetWithAnnotations testParseHandlerWithAnnotations testParseInitializationWithAnnotations testParsePreInitializationWithAnnotations testStaticInitializationWithAnnotations testWithinWithAnnotations testWithinCodeWithAnnotations testAtAnnotation testBadAtAnnotation testAtAnnotationWithBinding testDoubleAtAnnotation testAtWithin testAtWithinCode testAtThis testAtTarget testAtArgs testParseSimpleTypeVariable testParseExtendingTypeVariable testParseExtendingTypeVariableWithPattern testParseExtendingTypeVariableWithInterface testParseExtendingTypeVariableWithInterfaceList testParseTypeParameterList testParseTypeParameterListWithSeveralTypeParameters testParseAllowedSuperInTypeVariable testParseAnythingTypeVariable testParseAnythingExtendsTypeVariable testParseAnythingSuperTypeVariable testParseDeclareParentsWithTypeParameterList testParameterizedTypePatternsAny testParameterizedTypePatternsSimple testNestedParameterizedTypePatterns testSimpleTypeVariableList testSimpleTypeVariableListError testParseCallPCDWithTypeVariables testParseCallPCDWithIllegalBounds testNoTypeVarsForHandler testNoTypeVarsForThis testNoTypeVarsForTarget testNoTypeVarsForArgs testNoTypeVarsForIf testNoTypeVarsForCflow testNoTypeVarsForCflowbelow testNoTypeVarsForAtWithin testNoTypeVarsForAtAnnotation testNoTypeVarsForAtWithinCode testNoTypeVarsForAtThis testNoTypeVarsForAtTarget testNoTypeVarsForAtArgs testExecutionWithTypeVariables testInitializationWithTypeVariables testPreInitializationWithTypeVariables testStaticInitializationWithTypeVariables testWithinWithTypeVariables testTypeParamList testWithinCodeWithTypeVariables testCallWithTypeVariables testGetWithTypeVariables testSetWithTypeVariables makeSimpleScope world org.aspectj.weaver.patterns.ParserTestCase  System.out.println(p);\r\n  XXX - needs finishing...\r\n  note... toString on a pointcut is a very quick and easy way to test a successful parse\r\n  assertEquals(\"expecting T\",\"T\",tvp[0]);\r\n  assertEquals(\"S extends Number\",new PatternParser(\"S extends Number\").parseTypePattern(false),tvs.getTypePatterns()[1]);\r\n  assertEquals(\"T\",tvps[0]);\r\n  test cases for pointcuts involving type variable specification.\r\n  assertEquals(\"T\",tvs[0]);\r\n  assertEquals(\"T\",tvs[0]);\r\n  assertEquals(\"T\",tvs[0]);\r\n  assertEquals(\"T\",tvs[0]);\r\n  assertEquals(\"T\",tvs[0]);\r\n  assertEquals(\"R\",tps[2].toString());\r\n  assertEquals(\"R\",tvs[2]);\r\n  assertEquals(\"T\",tvs[0]);\r\n  assertEquals(\"T\",tvs[0]);\r\n  assertEquals(\"T\",tvs[0]);\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ControlFlowGraph":" getTag setTag getExceptionHandlers getOutFrame execute toString mergeInFrames getExecutionChain extendMessageWithFlow getInstruction lastExecutionJSR getSuccessors _getSuccessors contextOf contextsOf getInstructionContexts isDead TAG instruction inFrames outFrames executionPredecessors method_gen subroutines exceptionhandlers instructionContexts org.aspectj.apache.bcel.verifier.structurals.ControlFlowGraph  key: the last-executed JSR\r\n  key: the last-executed JSR\r\n  Type: InstructionContext\r\n  sanity check\r\n  shortcut: no need to merge equal frames.\r\n  if there was an \"old\" inFrame\r\n  no incoming frame was set, so set it.\r\n  new inFrame is already merged in, see above.\r\n  InstConstraintVisitor icv = InstConstraintVisitor.getInstance(VerifierFactory.getVerifier(method_gen.getClassName()));\r\n  ExecutionVisitor ev = ExecutionVisitor.getInstance(VerifierFactory.getVerifier(method_gen.getClassName()));\r\n  getInstruction().accept(ExecutionVisitor.withFrame(workingFrame));\r\n  new inFrame was different from old inFrame so merging them\r\n  a subroutine?\r\n  TODO: Can be performance-improved.\r\n  return empty;   TODO: remove\r\n  Terminates method normally.\r\n  subroutines not to be protected by exception handlers.\r\n  See method comment.\r\n  thanks to Eli Tilevich for reporting.\r\n  default case: Fall through.\r\n  TODO: implement caching!\r\n  keys: InstructionHandle, values: InstructionContextImpl\r\n /* Satisfies InstructionContext.getTag(). */\r\n /* Satisfies InstructionContext.setTag(int). */\r\n /*\r\n\t\t * Fulfils the contract of InstructionContext.getInstruction().\r\n\t\t */\r\n /* Satisfies InstructionContext.getSuccessors(). */\r\n","ArrayMethod":" main go array1 array2  ArrayMethod  ","PointcutExpressionTest":" testMatchesMethodCall testMatchesMethodExecution testMatchesConstructorCall testMatchesConstructorExecution testMatchesAdviceExecution testMatchesHandler testMatchesInitialization testMatchesPreInitialization testMatchesStaticInitialization testMatchesFieldSet testMatchesFieldGet testArgsMatching testGetPointcutExpression testCouldMatchJoinPointsInType testMayNeedDynamicTest setUp a aa aaa b aa foo bar p asCons bsCons bsStringCons clientCons a aa aaa x y b bsaa n foo bar x y n org.aspectj.weaver.tools.PointcutExpressionTest  this\r\n  target\r\n  test args\r\n  within\r\n  withincode\r\n  test this\r\n  test target\r\n  test args\r\n  within\r\n  withincode\r\n  this\r\n  target\r\n  args\r\n  within\r\n  withincode\r\n  test this\r\n  test target\r\n  within\r\n  withincode\r\n  args\r\n  test this\r\n  test target\r\n  test within\r\n  withincode\r\n  test args\r\n  test this\r\n  target - no target for exception handlers\r\n  args\r\n  within\r\n  withincode\r\n  test this\r\n  test target\r\n  within\r\n  withincode\r\n  args\r\n  test this\r\n  test target\r\n  within\r\n  withincode\r\n  args\r\n  staticinit\r\n  this\r\n  target\r\n  args\r\n  within\r\n  withincode\r\n  this\r\n  target\r\n  args\r\n  within\r\n  withincode\r\n  this\r\n  target\r\n  args - no args at get join point\r\n  within\r\n  withincode\r\n  too few args\r\n  one too few + ellipsis\r\n  exact number + ellipsis\r\n  too many + ellipsis\r\n  exact match\r\n  maybe match\r\n  never match\r\n ","InterTypeDeclarationImpl":" getDeclaringType getTargetType getModifiers declaringType targetTypeName targetType modifiers org.aspectj.internal.lang.reflect.InterTypeDeclarationImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeDeclaration#getDeclaringType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeDeclaration#getTargetType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.InterTypeDeclaration#getModifiers()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","CreatorImplementation":"     ","BuildConfigNode":" toString getChildren addChild addChild removeChild compareTo getName getSourceLocation setSourceLocation getMessage setMessage getParent setParent setName getResourcePath setResourcePath isValidResource isActive setActive toString equals isDeclareKind readResolve getBuildConfigNodeKind parent name kind children message sourceLocation resourcePath isActive serialVersionUID FILE_JAVA FILE_ASPECTJ FILE_LST ERROR DIRECTORY ALL name nextOrdinal ordinal org.aspectj.ajde.ui.BuildConfigNode  children.listIterator() should support remove() operation\r\n  The 4 declarations below are necessary for serialization\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CFlowCounter":" inc dec isValid getThreadLocalStackFactory getThreadLocalStackFactoryFor11 selectFactoryForVMVersion getSystemPropertyWithoutSecurityException getThreadStackFactoryClassName tsFactory flowHeightHandler org.aspectj.runtime.internal.CFlowCounter  Java 1.2 is version 46.0 and above\r\n  System.err.println(\"Trying to use thread local implementation? \"+useThreadLocalImplementation);\r\n  For debug ...\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","PR691":"     ","SuperClass":" getX checkX setX superClass protectedStatic protectedMethod toString x SUPERCLASS protectedStaticObject protectedObject SuperClass target.SuperClass pack.SuperClass  ","OrderOfCatches":"     ","JDKVersionTest":" testNothing  org.aspectj.tools.ajdoc.JDKVersionTest  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","Removed":" main  Removed  ","IIntermediateResultsRequestor":" acceptResult  org.aspectj.ajdt.internal.compiler.IIntermediateResultsRequestor  ","SignatureTest":" testGetDeclaringTypeName testToShortMiddleLongString testClearCache  org.aspectj.runtime.reflect.SignatureTest  should be cached.\r\n  should be cached.\r\n  should be cached.\r\n  should be cached.\r\n  should be cached.\r\n ","InitializationOrder":" main s p o InitializationOrder C S Sub  if (o), then C E illegal use of uninitialized value\r\n ","CallExpr":" accept getArgs getMethod getType method args returnType org.aspectj.weaver.ast.CallExpr  assert m.return value is boolean\r\n  yes, stored in method as well, but that one isn't resolved\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ArrayElementValueGen":" getElementValue dump stringifyValue getElementValues getElementValuesSize addElement evalues org.aspectj.apache.bcel.generic.annotation.ArrayElementValueGen  J5TODO: Should we make this an array or a list?  A list would be easier to modify ...\r\n  u1 type of value (ARRAY == '[')\r\n /*ElementValueGen*/\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","AjASTVisitor":" endVisit endVisit endVisit endVisit endVisit endVisit endVisit endVisit endVisit endVisit visit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit visit endVisit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit endVisit visit visit visit visit visit visit visit visit visit visit endVisit visit endVisit visit endVisit  org.aspectj.org.eclipse.jdt.core.dom.AjASTVisitor  ajh02: method added\r\n  ajh02: method added\r\n  ajh02: method added\r\n ","RuntimeWrites":"     ","DeclareParentsDeclaration":" clone0 subtreeMatch0 accept0 internalModifiersProperty internalModifiers2Property internalJavadocProperty propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty internalGetSetBooleanProperty internalGetChildListProperty parentTypePatterns getChildTypePattern setChildTypePattern isExtends setExtends JAVADOC_PROPERTY CHILD_TYPE_PATTERN_PROPERTY IS_EXTENDS_PROPERTY PARENTS_TYPE_PATTERNS_LIST_PROPERTY PROPERTY_DESCRIPTORS_2_0 PROPERTY_DESCRIPTORS_3_0 isExtends childTypePattern parentTypePatterns org.aspectj.org.eclipse.jdt.core.dom.DeclareParentsDeclaration  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  allow default implementation to flag the error\r\n  allow default implementation to flag the error\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - \r\n\t * therefore we don't do anything with this\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - \r\n\t * therefore we don't do anything with this\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n","IRunIterator":" hasNextRun nextRun abortOnFailure iterationCompleted  org.aspectj.testing.run.IRunIterator  XXX supply IRun or IRunStatus?\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Method":" accept setAttributes getCode getExceptionTable getLocalVariableTable getLineNumberTable toString copy getReturnType getArgumentTypes ensureParameterAnnotationsUnpacked getAnnotationsOnParameter parameterAnnotationsOutOfDate parameterAnnotationsVis parameterAnnotationsInvis org.aspectj.apache.bcel.classfile.Method  annotations on parameters of this method\r\n  Short cuts to constant pool\r\n  Get name and signature from constant pool\r\n  Find attributes that contain annotation data\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","PR78021":"     ","Binkley2":"     ","InvalidNewQualifier7CE":" test  InvalidNewQualifier7CE Outer OuterInterface OuterOuter  CE 7 new qualification unneeded\r\n  new OuterOuter.Inner(){}.new OuterOuter.Inner.I(){};   ok\r\n ","LTWTests":" suite getSpecFile test001 testOutxmlFile testOutxmlJar testNoAopxml testDefineConcreteAspect testDeclareAbstractAspect testAspectsInclude testAspectsIncludeWithLintWarning testXsetEnabled testXsetDisabled testXlintfileEmpty testXlintfileMissing testXlintWarningAdviceDidNotMatchSuppressed testXlintfile testXlintDefault testXlintWarning testNonstandardJarFiles testOddzipOnClasspath testJ14LTWWithXML testJ14LTWWithASPECTPATH testWeavingTargetOfCallAggressivelyInLTW_DeclareParents_pr133770 testWeavingTargetOfCallAggressivelyInLTW_DeclareParents_pr133770_Deactivate testWeavingTargetOfCallAggressivelyInLTW_DeclareParents_Nested_pr133770 testWeavingTargetOfCallAggressivelyInLTW_DeclareParents_Hierarchy_pr133770 testSeparateCompilationDeclareParentsCall_pr133770 setSystemProperty copyProperty setUp tearDown NULL savedProperties org.aspectj.systemtest.ajc150.ltw.LTWTests  setSystemProperty(WeavingAdaptor.SHOW_WEAVE_INFO_PROPERTY,\"true\");\r\n /*\r\n  \t * Allow system properties to be set and restored\r\n  \t * TODO maw move to XMLBasedAjcTestCase or RunSpec\r\n  \t */\r\n /* Restore system properties */\r\n","FSUB":" accept  org.aspectj.apache.bcel.generic.FSUB  ","AjdeInteractionTestbedLauncher":" main buildProject  org.aspectj.systemtest.incremental.tools.AjdeInteractionTestbedLauncher  MultiProjectIncrementalTests.VERBOSE = true;\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ClassWithNestedAspect2":"     ","CopyAndInlineStylesheet":" setFile setTodir execute doStyleSheet isStyleSheet file todir org.aspectj.internal.tools.ant.taskdefs.CopyAndInlineStylesheet  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DecParents":"     ","MyAspect":" m  a.MyAspect  before(): call(* print(..)) {\r\n ","NestedSyncWithResult":" main checkSynchronization sleep bug holdA aWaiterDone aHolderDone lockA lockB NestedSyncWithResult Bug  ","WeaverMessageHandler":" resetCompiler setCurrentResult handleMessage isIgnoring dontIgnore getStartPos getEndPos findReferenceContextFor buildSeeAlsoProblems sink currentlyWeaving compiler org.aspectj.ajdt.internal.compiler.WeaverMessageHandler  we only care about warnings and errors here...\r\n  case (By calling sink.handleMessage()) - this ensures we don't put out bogus source context info.\r\n  we're not an EclipseSourceLocation we're a SourceLocation.\r\n  must be a problem found during completeTypeBindings phase of begin to compile\r\n  XXX this is ok for ajc, will have to do better for AJDT in time...\r\n  Stick more info in supplementary message info\r\n  Remember if this message was due to a deow\r\n ","EajcModuleTests":" suite  org.aspectj.ajdt.EajcModuleTests  /* FIXME maw move these Java 5 dependent tests to a separate project */\r\n","MethodLocalAroundReturns":"     ","Deprecated":" accept dump getBytes setBytes toString copy bar bytes org.aspectj.apache.bcel.classfile.Deprecated Deprecated  ","MismatchedParens":"     ","UnweavableTest":" testUnweavableProxy giveOne getProxy before testJit testJitNotMatched getJit getJitNoMatch before main suite I I ataspectj.UnweavableTest  just load a jit to make sure the weaver does not complains for classes coming from nowhere\r\n ","Gamma.60":"     ","InitializerSignature":" getInitializer  org.aspectj.lang.reflect.InitializerSignature  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ThisJoinPointAssignments":"     ","InitializerSignatureImpl":" getName createToString getInitializer constructor org.aspectj.runtime.reflect.InitializerSignatureImpl  nothing we can do, caller will see null\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.runtime.reflect.MemberSignatureImpl#createAccessibleObject()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CFlowStack":" getThreadStack push pushInstance push pop peek get peekInstance peekCFlow peekTopCFlow isValid getThreadLocalStackFactory getThreadLocalStackFactoryFor11 selectFactoryForVMVersion getSystemPropertyWithoutSecurityException getThreadStackFactoryClassName tsFactory stackProxy org.aspectj.runtime.internal.CFlowStack  XXX dangerous, try to remove\r\n  Java 1.2 is version 46.0 and above\r\n  System.err.println(\"Trying to use thread local implementation? \"+useThreadLocalImplementation);\r\n  For debug ...\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DeclareErrorOrWarning":" getDeclaringType getPointcutExpression getMessage isError toString equals hashCode accept write read isError getMessage getPointcut resolve parameterizeWith isAdviceLike getNameSuffix isError pointcut message org.aspectj.lang.reflect.DeclareErrorOrWarning org.aspectj.weaver.patterns.DeclareErrorOrWarning  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","NoByteToInt":"     ","pr115607":"     ","BigHorribleClass":" main m compareTo m2 main m compareTo m2 anInt aBoolean foo fo2 anInt aBoolean foo fo2 BigHorribleClass BigHorribleClass  ","QualifiedNewCP":" main m helper foo m  QualifiedNewCP Base I  public abstract void m();\r\n ","DefaultPointcut":" getDetail setDetail propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty clone0 subtreeMatch0 accept0 treeSize detail org.aspectj.org.eclipse.jdt.core.dom.DefaultPointcut  allow default implementation to flag the error\r\n  dispatch to correct overloaded match method\r\n ","VisitorTestCase":" setUp feed testPointcuts testTypePatterns pointcuts typePatterns org.aspectj.weaver.patterns.VisitorTestCase  ","AbstractDeclare":"     ","TesterDriver":" main  TesterDriver  ","Regexp":" getGroups matches setPattern getPattern  org.aspectj.testing.compare.Regexp  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","LDIV":" getExceptions accept  org.aspectj.apache.bcel.generic.LDIV  ","ILOAD":" accept  org.aspectj.apache.bcel.generic.ILOAD  ","Ajc153Tests":" testIncorrectDeprecatedAnnotationProcessing_pr154332 testPipeliningProblemWithAnnotationsDecp_pr153380_1 testUnwantedPointcutWarning_pr148219 testDecpAndCflowadderMungerClash_pr152631 testGenericInheritanceDecp_pr150095 testIllegalStateException_pr148737 testAtajInheritance_pr149305_1 testAtajInheritance_pr149305_2 testAtajInheritance_pr149305_3 testVerificationFailureForAspectOf_pr148693 testIncorrectAnnotationValue_pr148537 testVerifyErrNoTypeCflowField_pr145693_1 testVerifyErrInpathNoTypeCflowField_pr145693_2 testCpathNoTypeCflowField_pr145693_3 testGenericSignatures_pr148409 testCantFindType_pr149322_01 testCantFindType_pr149322_02 testCantFindType_pr149322_03 testParsingBytecodeLess_pr152871 testMatchVolatileField_pr150671 testDuplicateJVMTIAgents_pr151938 testLTWWorldWithAnnotationMatching_pr153572 suite getSpecFile  org.aspectj.systemtest.ajc153.Ajc153Tests  public void testAmbiguousBinding_pr121805() { runTest(\"ambiguous binding\");}\r\n  build the code\r\n  verify it <<< BRAND NEW VERIFY UTILITY FOR EVERYONE TO TRY ;)\r\n  public void testAdviceNotWovenAspectPath_pr147841()          { runTest(\"advice not woven on aspectpath\");}\r\n  public void testBrokenIfArgsCflowAtAj_pr145018() { runTest(\"ataj crashing with cflow, if and args\");}\r\n   ","AjIncrementalImageBuilder":" acceptResult  org.aspectj.ajdt.internal.core.builder.AjIncrementalImageBuilder  /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.ICompilerRequestor#acceptResult(org.eclipse.jdt.internal.compiler.CompilationResult)\r\n\t */\r\n","NewConstructorTypeMunger":" equals hashCode write readConstructor getExplicitConstructor getSyntheticConstructor setExplicitConstructor getMatchingSyntheticMember check parameterizedFor syntheticConstructor explicitConstructor hashCode org.aspectj.weaver.NewConstructorTypeMunger  reset hashCode so that its recalculated with new value\r\n  For raw and 'normal' parameterized targets  (e.g. Interface, Interface<String>)\r\n  in the original ITD declaration to the ones used in the actual target type declaration.\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","MyClass":" getRandomInt getValue test main main print main setMyField foo _myField blah.MyClass MyClass MyClass MyClass a.MyClass test.MyClass MyClass  ","MainFailure":"     ","Covariance":"     ","TypeVariableTestCase":" testDefaultBounds testName testUpperBound testAdditionalUpperBounds testLowerBound testResolution testBindWithoutResolve testCanBindToUpperMatch testCanBindToUpperFail testCanBindToInterfaceMatch testCanBindToInterfaceFail testCanBindToLowerMatch testCanBindToLowerFail setUp tearDown testDefaultBounds testName testUpperBound testAdditionalUpperBounds testLowerBound testResolution testBindWithoutResolve testCanBindToUpperMatch testCanBindToUpperFail testCanBindToInterfaceMatch testCanBindToInterfaceFail testCanBindToLowerMatch testCanBindToLowerFail setUp tearDown javaLangNumber javaLangDouble javaUtilList javaIoSerializable world javaLangNumber javaLangDouble javaUtilList javaIoSerializable world org.aspectj.weaver.TypeVariableTestCase org.aspectj.weaver.TypeVariableTestCase  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","AjdocCompiler":" err makeRootDoc instance init setFilter getFilter expandAtFile cantResolve resolveSourcePath resolveFilesAndPackages resolvePackageOrClass findFile maybeAddPkg addClass maybeAddClass maybeAddClass isValidClass addPkg maybeAddPkg addFile maybeAdd isValidJavaFile isValidPkg loading createParserPass transform addPasses programName err pkgnames classnames files srcfiles srcSrcfilenames pkgSrcfilenames clsSrcfilenames sourcepaths filter instance filesToClassnames filesToPkgnames filesToFilenames org.aspectj.tools.ajdoc.AjdocCompiler  Compile the srcfiles - have to add passes first\r\n  This is the world with which we create the root\r\n  to the list of specified classnames\r\n  from the our world\r\n  do another pass at RootDoc after constructed\r\n  TODO: make empty\r\n  we only support valid filenames, not options\r\n /*file.isAbsolute() &&*/\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","UnresolvedType":" isPrimitiveType isSimpleType isRawType isGenericType isParameterizedType isTypeVariableReference isGenericWildcard isExtends isSuper getTypekind isArray equals hashCode parameterize getSize makeArray forName forNames forGenericType forGenericTypeSignature forGenericTypeVariables forRawTypeName add insert forSignature forSignatures getName getSimpleName getRawName getBaseName getSimpleBaseName getNames getSignature getErasureSignature needsModifiableDelegate setNeedsModifiableDelegate getRawType getUpperBound getLowerBound setUpperBound setLowerBound getOutermostType getComponentType toString toDebugString resolve signatureToName nameToSignature write read writeArray readArray getNameAsIdentifier getPackageNameAsIdentifier getPackageName getTypeParameters getClassName getTypeVariables toString isParameterizedWithAMemberTypeVariable getTypeVariableNamed toTraceString NONE OBJECT OBJECTARRAY CLONEABLE SERIALIZABLE THROWABLE RUNTIME_EXCEPTION ERROR AT_INHERITED AT_RETENTION ENUM ANNOTATION JAVA_LANG_CLASS JAVA_LANG_STRING JAVA_LANG_EXCEPTION JAVA_LANG_REFLECT_METHOD SUPPRESS_AJ_WARNINGS AT_TARGET SOMETHING ARRAY_WITH_JUST_OBJECT MISSING_NAME typeKind signature signatureErasure typeParameters typeVariables upperBound lowerBound isSuper isExtends needsModifiableDelegate PRIMITIVE SIMPLE RAW GENERIC PARAMETERIZED TYPE_VARIABLE WILDCARD type org.aspectj.weaver.UnresolvedType  common types referred to by the weaver\r\n  this doesn't belong here and will get moved to ResolvedType later in the refactoring\r\n  what kind of type am I?\r\n  for any reference type, we can get some extra information...\r\n  called from TypeFactory\r\n  TODO asc generics needs a declared sig\r\n  + \" - \" + getKind();\r\n  it's one of our parameterized type sigs\r\n  Map<String,List<Integer>> -> Ljava  if (signature.charAt(1)=='>') return signatureToName(signature.substring(2));\r\n  check if someone is calling us with something that is a signature already\r\n  not parameterised\r\n  an inner type of a parameterized type that specifies no type parameters of its own.\r\n  a type with NO type parameters  the erasure of a generic type\r\n  a generic type\r\n  a parameterized type\r\n  a type variable\r\n  a generic wildcard type\r\n /* *******************************************************************\r\n * Copyright (c) 2002,2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n *     Andy Clement  start of generics upgrade...\r\n *     Adrian Colyer - overhaul\r\n * ******************************************************************/\r\n","DeclareWarningDeclaration":" clone0 subtreeMatch0 accept0 internalModifiersProperty internalModifiers2Property internalJavadocProperty propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty getPointcut setPointcut getMessage setMessage JAVADOC_PROPERTY POINTCUT_PROPERTY MESSAGE_PROPERTY PROPERTY_DESCRIPTORS_2_0 PROPERTY_DESCRIPTORS_3_0 pointcut message org.aspectj.org.eclipse.jdt.core.dom.DeclareWarningDeclaration  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  allow default implementation to flag the error\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - \r\n\t * therefore we don't do anything with this\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - \r\n\t * therefore we don't do anything with this\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n","Gamma.40":"     ","Logging":"     ","Answer1c":"     ","Foo":" main main hello hello hello foo privateClassMethod privateInstanceMethod protectedClassMethod protectedInstanceMethod publicClassMethod publicInstanceMethod ClassMethod InstanceMethod test0 test1 test2 test3 test4 test5 test6 test7 test8 test9 test10 test11 test12 test13 test14 test15 test16 test17 test18 test19 test20 test21 test22 test23 test24 test25 test26 test27 test28 test29 test30 test31 test32 test33 test34 test35 test36 test37 test38 test39 test40 test41 test42 test43 test44 test45 test46 test47 test48 test49 i main doStuff ancientI ancientI ancientJ main main foo main getParameterMetaData main getFoo construct construct name b _name PRIVATECONST privateClassVar privateInstanceVar protectedClassVar protectedInstanceVar publicClassVar publicInstanceVar ClassVar InstanceVar hs foo goo f f Foo Foo p1.Foo p1.Foo pack1.Foo pack2.Foo pack3.Foo Foo Foo foo.Foo foo.AncientFoo Foo Foo Foo Sub PreparedStatement MyException ParameterMetaData SubParameterMetaData Foo a.Foo org.xyz.Foo Foo Foo Foo pkg2.Foo pkg2.Foo p1.Foo p1.p2.Foo  int x = b;\r\n  int y = null;\r\n ","pr102357":"     ","Fourteen":"     ","MultiAndAround":"     ","TestAspect":"  introduced TestAspect  ","LinkedList":"     ","AnnotationAccessFlagTest":" setUp testAnnotationClassSaysItIs tearDown verbose org.aspectj.apache.bcel.classfile.tests.AnnotationAccessFlagTest  /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation \r\n * ******************************************************************/\r\n","WeaverMessagesTestCase":" testAllMessagesDefined  org.aspectj.weaver.WeaverMessagesTestCase  ","SimpleTracing":"     ","AsmDelegateTests":" getWorld testWeDontGoBang testDifferentiatingBetweenAspectAndClass testRecognizingDifferentTypes testAnnotationsBehaving testInterfaceflag testCompareDelegates testCompareDelegatesComplex testCompareDelegatesMonster testCompareDelegatesLoadingPerformance checkEquivalent compareAnnotations ensureTheSame stringify testDifferentAnnotationKinds testLoadingAttributesForTypes testLoadingAttributesForMethods testLoadingAnnotationsForFields testLoadingAnnotationsForMethods compareAttributeNames stringifyStringArray world org.aspectj.weaver.bcel.AsmDelegateTests  should be 6 type mungers\r\n  System.err.println(\" ASM=>\\n\"+stringifyStringArray(asmMemberAttributes));\r\n  org.aspectj.weaver.AjSynthetic\r\n  org.aspectj.weaver.EffectiveSignature\r\n  org.aspectj.weaver.MethodDeclarationLineNumber\r\n  org.aspectj.weaver.Advice\r\n  @SimpleAnnotation(id=2) String s;\r\n  public void method2() {    }\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","AbstractSubWriterAJ":" printCrosscuts printSummaryCrosscuts hasCrosscuts printIntroducedSummaryAnchor printIntroducedSummaryLabel  org.aspectj.tools.doclets.standard.AbstractSubWriterAJ  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","NoMembers":"   foo.NoMembers  /*\r\n * Created on Jan 12, 2005\r\n */\r\n","DecwClassCastException":"     ","Answer1b":"     ","Answer1a":"     ","Gamma.50":"     ","QueueContext":" setState  ca.ubc.cs.spl.aspectPatterns.examples.state.java.QueueContext  ","DMUL":" accept  org.aspectj.apache.bcel.generic.DMUL  ","AtAjAnnotationGenTests":" suite getSpecFile testSimpleAspect testSimpleAspectIn14Mode testAspectAlreadyAnnotated testPrivilegedAspect testPerThisAspect testPerTargetAspect testPerCflowAspect testPerCflowbelowAspect testPertypewithinAspect testInnerAspectOfClass testInnerAspectOfAspect testAdvice testSimplePointcut testPointcutModifiers testPointcutParams testPointcutRefs testBeforeWithBadReturn testTwoAnnotationsOnSameElement testBadPcutInAdvice testBadParameterBinding testSimpleAtPointcut testPointcutMedley testAdviceDeclaredInClass testDeows testDecP testDecPAdvanced testDecS testDecPrecedence testDecAnnotation testITDs  org.aspectj.systemtest.ajc150.ataspectj.AtAjAnnotationGenTests  ","AssertsCF1":" main  AssertsCF1  ERR: boolean expected\r\n ","Answer2f":"     ","Answer2e":"     ","AssertsCF2":" main  AssertsCF2  ERR: s might not be assigned\r\n ","IntroductionDoc":" targets  org.aspectj.ajdoc.IntroductionDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Answer2d":"     ","IntroductionOfInitializer":"     ","ClickChain":"     ","AbstractPointcutAccessCE":"     ","Outer":"     ","ClassStack":" push pop top empty stack org.aspectj.apache.bcel.util.ClassStack  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","NoMethodName":"     ","FileStructureView":" getSourceFile setSourceFile setRootNode getName sourceFilePath org.aspectj.ajde.ui.FileStructureView  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PackFoo":" bar  test135.pack.PackFoo  ","Field":" accept getConstantValue toString copy getType  org.aspectj.apache.bcel.classfile.Field  Short cuts to constant pool\r\n  Get names from constant pool\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","Ajc120Tests":" suite getSpecFile test001 test002 test003 test004 test005 test006 test007 test008 test009 test010 test011 test012 test013 test014 test015 test016 test017 test018 test019 test020 test021 test022 test023 test024 test025 test026 test027 test028 test029 test030 test031 test032 test033 test034 test035 test036 test037 test038 test039 test040 test041 test042 test043 test044 test045 test046 test047 test048 test049 test050 test051 test052 test053 test054 test055 test056  org.aspectj.systemtest.ajc120.Ajc120Tests  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","Obj":"     ","FastMatchInfo":" getKind getType toString kind type org.aspectj.weaver.patterns.FastMatchInfo  /* *******************************************************************\r\n * Copyright (c) 2004 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Jim Hugunin     initial implementation \r\n * ******************************************************************/\r\n","Answer2c":"     ","Answer2b":"     ","Answer2a":"     ","RegularFactory":" getName createLabel createButton getName  ca.ubc.cs.spl.aspectPatterns.examples.abstractFactory.aspectj.RegularFactory ca.ubc.cs.spl.aspectPatterns.examples.abstractFactory.java.RegularFactory  ","InpathAspect":"     ","RootDocImpl":" classes classNamed packageNamed world options specifiedClasses specifiedPackages quiet speak printError printNotice printWarning name createSpecifiedPackages addWorldTypes createSpecifiedClasses addSpecifiedClasses addSpecifiedPackages addClass setupDominatesRelations ensureWorldInclusion specifiedPackages specifiedClasses packages classes options world filter notice org.aspectj.tools.ajdoc.RootDocImpl  modifiable to prune empty packages\r\n  but should come after since packages are removed if empty\r\n  no cycles, right?\r\n  Find just the aspects\r\n  Iterate over the aspects, if\r\n  todo: update to consider enclosing class privileges\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Answer3e":"     ","BubbleSort":" exchange sort exchange sort  ca.ubc.cs.spl.aspectPatterns.examples.strategy.aspectj.BubbleSort ca.ubc.cs.spl.aspectPatterns.examples.strategy.java.BubbleSort  ","Coverage":"     ","ElementValue":" toString getElementValueType stringifyValue dump readElementValue toShortString type cpool STRING ENUM_CONSTANT CLASS ANNOTATION ARRAY PRIMITIVE_INT PRIMITIVE_BYTE PRIMITIVE_CHAR PRIMITIVE_DOUBLE PRIMITIVE_FLOAT PRIMITIVE_LONG PRIMITIVE_SHORT PRIMITIVE_BOOLEAN org.aspectj.apache.bcel.classfile.annotation.ElementValue  byte\r\n  char\r\n  double\r\n  float\r\n  int\r\n  long\r\n  short\r\n  boolean\r\n  String\r\n  Enum constant\r\n  Class\r\n  Annotation\r\n  the same as the 'super annotation' in which we are contained?\r\n  Array\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","Broken":"     ","BinaryTreeVisitor":" visitNode visitLeaf report  ca.ubc.cs.spl.aspectPatterns.examples.visitor.java.BinaryTreeVisitor  ","ThreadStackImpl11":" getThreadStack stacks cached_thread cached_stack change_count COLLECT_AT MIN_COLLECT_AT org.aspectj.runtime.internal.cflowstack.ThreadStackImpl11  should be >1 b /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n * \t\t\t\t\t   Copied from bits of original CFlowStack\r\n * ******************************************************************/\r\n","Secure":"     ","Gamma.30":"     ","Asserts":" main main m  Asserts TestAsserts  C.m(9);\r\n ","Answer3d":"     ","Good":"     ","Answer3c":"     ","Answer3b":"     ","Answer3a":"     ","SuperClosure":"     ","EclipseScope":" lookupType computeImports addClassAndParentsToPrefixes getImportedNames getImportedPrefixes lookupFormal getFormal getFormalCount makeSourceLocation getMessageHandler message message message getWorld getEnclosingType scope world enclosingType bindings importedPrefixes importedNames org.aspectj.ajdt.internal.compiler.lookup.EclipseScope  FIXME ??? need reasonable error handling...\r\n  Binding(tokens, bits & RestrictiveFlagMASK, this)\r\n  add any enclosing types to this list\r\n  System.err.println(\"package: \" + packageName);\r\n  XXX wrong behavior for java.util.Map.*\r\n  System.err.println(\"prefixes: \" + Arrays.asList(importedPrefixes));\r\n  XXX add good errors when would bind to extra parameters\r\n  System.out.println(\"message: \" + message + \" loc: \" + makeSourceLocation(location));\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ExpandedDotDotPattern":"     ","Access":" printSummaryType printSummaryLink printInheritedSummaryLink printHeader printBodyHtmlEnd printMember printDeprecatedLink printNavSummaryLink printNavDetailLink printTags printDeprecatedAPI printParameters printUseInfo printUseInfo printCommentDef writer pkgSet classdoc print  org.aspectj.tools.ajdoc.Access  package com.sun.tools.doclets.standard;\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","AnotherItem":"   AnotherItem AnotherItem  ","Aspect":" ajc_before_0 ajc_before_0 ajc_around_0 ajc_before_0 ajc_before_method_execution ajc_before_method_execution ajc_after_method_execution ajc_after_method_execution ajc_afterReturning_method_execution ajc_afterReturning_method_execution ajc_afterThrowing_method_execution ajc_afterThrowing_method_execution ajc_around ajc_around ajc_before_method_call ajc_before_method_call ajc_after_method_call ajc_after_method_call ajc_afterReturning_method_call ajc_afterReturning_method_call ajc_afterThrowing_method_call ajc_afterThrowing_method_call ajc_around_method_call ajc_before_constructor_call ajc_before_constructor_call ajc_after_constructor_call ajc_after_constructor_call ajc_afterReturning_constructor_call ajc_afterReturning_constructor_call ajc_afterThrowing_constructor_call ajc_afterThrowing_constructor_call ajc_around_constructor_call ajc_before_constructor_execution ajc_before_constructor_execution ajc_after_constructor_execution ajc_after_constructor_execution ajc_afterReturning_constructor_execution ajc_afterReturning_constructor_execution ajc_afterThrowing_constructor_execution ajc_afterThrowing_constructor_execution ajc_around_constructor_execution ajc_before_field_get ajc_before_field_get ajc_after_field_get ajc_after_field_get ajc_afterReturning_field_get ajc_afterReturning_field_get ajc_afterThrowing_field_get ajc_afterThrowing_field_get ajc_afterThrowing_field_get ajc_around_field_get ajc_before_field_set ajc_before_field_set ajc_after_field_set ajc_after_field_set ajc_afterReturning_field_set ajc_afterReturning_field_set ajc_afterThrowing_field_set ajc_afterThrowing_field_set ajc_afterThrowing_field_set ajc_around_field_set ajc_before ajc_before ajc$perObjectBind hasAspect aspectOf ajc$perCflowPush hasAspect aspectOf ajc_before ignoreMe before_method_call afterReturning_method_call afterThrowing_method_execution aroundFun objects ajc$perCflowStack ajc$perSingletonInstance ajc$cflowStack$0 org.aspectj.weaver.test.Aspect fluffy.Aspect  proceed(s)\r\n  don't call this method for callee-side call join points\r\n /* This file is part of the compiler and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Palo Alto Research Center,\r\n * Incorporated (PARC). Portions created by PARC are are\r\n * Copyright (C) 2002 Palo Alto Research Center, Incorporated.\r\n * All Rights Reserved.\r\n *\r\n * Contributor(s):\r\n */\r\n","Utility":" accessToString accessToString classOrInterface codeToString codeToString codeToString compactClassName compactClassName compactClassName setBit clearBit isSet methodTypeToSignature methodSignatureArgumentTypes methodSignatureArgumentTypes methodSignatureReturnType methodSignatureReturnType methodSignatureToString methodSignatureToString methodSignatureToString replace signatureToString signatureToString signatureToStringInternal getSignature typeOfMethodSignature searchOpcode byteToShort toHexString format fillup equals printArray printArray printArray printArray printArray isJavaIdentifierPart encode decode read read write write write convertString getListOfAnnotationNames getAnnotationAttributes getParameterAnnotationAttributes is_digit is_space getResult getConsumedChars typeOfSignature typeOfSignature readClassTypeSignatureFrom readClassTypeSignatureFrom countBrackets codeToString pow2 getStackTrace beautifyLocation createSuperInvoke createInvoke createGet createGetOn createSet createInvoke stringToUTF createInstanceof createInvoke createInvoke makeArgNames appendConversion createConversion createConversion createConstant makeJavaClass arrayToString replaceInstruction replaceInstruction deleteInstruction deleteInstruction copyInstruction getSourceLine setSourceLine makePublic makePrivate pushAndReturnArrayOfVars isConstantPushInstruction isSuppressing getSuppressedWarnings isSimple wide FREE_CHARS CHAR_MAP MAP_CHAR ESCAPE_CHAR result consumed BYTE CHAR DOUBLE FLOAT INT LONG SHORT BOOLEAN VOID validBoxing testingParseCounter org.aspectj.apache.bcel.classfile.Utility org.aspectj.apache.bcel.verifier.exc.Utility org.aspectj.weaver.bcel.Utility  Loop through known flags\r\n  Special case: see comment at top of class...\r\n  Should be sufficient\r\n  Skip `index' lines of code\r\n  Skip `index' lines of code\r\n  Skip `index' lines of code\r\n  Is '  If string starts with 'prefix' and contains no further dots\r\n  void can't be a method argument\r\n  Read all declarations between for `(' and `)'\r\n  current string position\r\n  Read return type after `)'\r\n  \r\n  Should never occur\r\n  Read all declarations between for `(' and `)'\r\n  current string position\r\n  Read return type after `)'\r\n  Tack off the extra \", \"\r\n  May be an empty string\r\n  append prefix\r\n  append replacement\r\n  Skip 'old'.length chars\r\n  While we have something to replace\r\n  append rest of string\r\n  This is the default, read just one char\r\n  Should never occur\r\n  Look for closing `;'\r\n  Jump to the correct ';'\r\n  \"Lblabla;\" `L' and `;' are removed\r\n  FIXME asc going to need a lot more work in here for generics\r\n  Array declaration\r\n  Accumulate []'s\r\n  Count opening brackets and look for optional size argument\r\n  The rest of the string denotes a `<field_type>'\r\n  Class name\r\n  Just one digit, so prepend 0\r\n  Normalize to unsigned\r\n  Rough estimate\r\n  A-Z, g-z, _, $\r\n  Reverse map\r\n  Special escape\r\n  Normal escape\r\n  Escape character\r\n  Normal escape\r\n  Special escape\r\n  put the annotations in the right output stream\r\n  put the annotations in the right output stream\r\n  Lets do the visible ones\r\n  First goes number of parameters\r\n  Lets do the invisible ones\r\n  First goes number of parameters\r\n  Should never occur\r\n  FIXME ASC Need a state machine to check we are parsing the right stuff here !\r\n  Full class name\r\n  Look for closing ';' or '<'\r\n  we might have finished now, depending on whether this is a parameterized type...\r\n  Array declaration\r\n  Both cases have a field default_offset in common\r\n  Two address bytes + offset from start of byte stream form the jump target\r\n  32-bit wide jumps\r\n  Index byte references local variable (register)\r\n  Clear flag\r\n  Array of basic type\r\n  Access object  Operands are references to classes in constant pool\r\n  Operands are references to methods in constant pool\r\n  historical, redundant\r\n  Last byte is a reserved space\r\n  Operands are references to items in constant pool\r\n  Array of references\r\n  Multidimensional array of references\r\n  Increment local variable\r\n  Never reached\r\n  private helpers\r\n  can't use File.getName() as this fails when a Linux box encounters a path created on Windows and vice-versa\r\n  XXX don't need the world now\r\n  ??? these should perhaps be cached.  Remember to profile this to see if it's a problem.\r\n  us the method name in the Conversions class\r\n  XXX I'm sure this test can be simpler but my brain hurts and this works\r\n  assert ! fromType.isPrimitive() && ! toType.isPrimitive()\r\n  assert toType.isPrimitive()\r\n  XXX could optimize by using any java boxing code that may be just before the call...\r\n  assert fromType.isPrimitive()\r\n  assert toType.equals(UnresolvedType.OBJECT)\r\n  assert fromType.equals(UnresolvedType.OBJECT)\r\n  PR71273\r\n  unboxing\r\n  boxing\r\n  Use clone for shallow copy...\r\n  Create a new targets array that looks just like the existing one\r\n  Create a new select statement with the new targets array\r\n  ,boolean goforwards) {\r\n  if (goforwards) ih=ih.getNext(); else\r\n  arbitrary rule that we will never lookahead more than 100 instructions for a line #\r\n  System.err.println(\"no line information available for: \" + ih);\r\n  assumes that there is no already extant source line tag.  Otherwise we'll have to be better.\r\n  2. there are values specified (i.e. @SuppressAjWarnings(\"A\") or @SuppressAjWarnings({\"A\",\"B\"})\r\n  We know the value is an array value\r\n  We know values in the array are strings\r\n  (1)\r\n  Check for the SuppressAjWarnings annotation\r\n  Go through the annotation types on the advice\r\n  Go through the annotation types\r\n  2. there are values specified (i.e. @SuppressAjWarnings(\"A\") or @SuppressAjWarnings({\"A\",\"B\"})\r\n  We know the value is an array value\r\n  We know values in the array are strings\r\n  (1)\r\n  Check for the SuppressAjWarnings annotation\r\n  expensive!\r\n  if current instruction is an invocation, indicate that it can't be trivial\r\n  if it is return immediately (can't be trivial)\r\n  not yet used...\r\n /* The `WIDE' instruction is used in the byte code to allow 16-bit wide indices for local \r\n   * variables. This opcode precedes an 'ILOAD', e.g.. The opcode immediately following takes \r\n   * an extra byte which is combined with the following byte to form a 16-bit value.\r\n   */\r\n /*Array of lists, array size depends on #params */\r\n /* Special case: Skip (0-3) padding bytes, i.e., the\r\n     * following bytes are 4-byte-aligned\r\n     */\r\n /* Table switch has variable length arguments.\r\n       */\r\n /* Lookup switch has variable length arguments.\r\n       */\r\n /*\r\n       * Remember wide byte which is used to form a 16-bit address in the\r\n       * following instruction. Relies on that the method is called again with\r\n       * the following opcode.\r\n       */\r\n /*\r\n\t * Ensure we report a nice source location - particular in the case\r\n\t * where the source info is missing (binary weave).\r\n\t */\r\n /*Lint.Kind*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Delta.40":" foo  secondary.Delta  ","TraversalVisitor":" visitNode visitLeaf report visitNode visitLeaf report result result ca.ubc.cs.spl.aspectPatterns.examples.visitor.aspectj.TraversalVisitor ca.ubc.cs.spl.aspectPatterns.examples.visitor.java.TraversalVisitor  ","OrPointcut":" getLeft setLeft getRight setRight propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty clone0 subtreeMatch0 accept0 treeSize couldMatchKinds fastMatch matchInternal toString equals hashCode resolveBindings write read findResidueInternal concretize1 parameterizeWith getLeft getRight accept traverse left LEFT_PROPERTY right RIGHT_PROPERTY left right couldMatchKinds org.aspectj.org.eclipse.jdt.core.dom.OrPointcut org.aspectj.weaver.patterns.OrPointcut  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  allow default implementation to flag the error\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","CFlowPoints":"     ","AJDBTest":" stringCommands getSourceName death disconnect start access breakpoint exception modification step checkLines checkLines vmDeathEvent vmDisconnectEvent vmStartEvent accessWatchpointEvent breakpointEvent exceptionEvent modificationWatchpointEvent stepEvent realMain realMain commands ex ex commands main classpath debugger ajdb isRunning COMMENT FILENAME AJDBTest  Methods for VMListener\r\n  Methods for StopListener\r\n  VMListener\r\n  StopListener\r\n ","OfClauseDocImpl":" getInstance instances kind createInstances kind kind getInstance factory instances EACH_CFLOW EACH_JVM org.aspectj.tools.ajdoc.OfClauseDocImpl  ??? error\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","OrAnnotationTypePattern":" matches resolve resolveBindings parameterizeWith accept traverse read write equals hashCode toString getLeft getRight left right org.aspectj.weaver.patterns.OrAnnotationTypePattern  /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.AnnotationTypePattern#resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings, boolean)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","Answer4a":"     ","ProceedVisitor":" computeJoinPointParams isRef isRef endVisit canTreatAsStatic visit replaceEffectivelyStaticRef removeUnusedExtraArguments removeParameter removeParameter removeLocalBinding needsDynamic needsStatic needsStaticEnclosing hasEffectivelyStaticRef thisJoinPointDec thisJoinPointStaticPartDec thisEnclosingJoinPointStaticPartDec thisJoinPointDecLocal thisJoinPointStaticPartDecLocal thisEnclosingJoinPointStaticPartDecLocal replaceEffectivelyStaticRefs method inBlockThatCantRun org.aspectj.ajdt.internal.compiler.ast.ProceedVisitor  walk my body to see what is needed\r\n  replace effectively static refs with thisJoinPointStaticPart\r\n  System.err.println(\"check:  \"+ hasEffectivelyStaticRef + \", \" + needsDynamic);\r\n  System.err.println(\"isRef: \" + expr + \", \" + binding);\r\n  System.err.println(\"has static reg\");\r\n  System.err.println(\"replace static ref\");\r\n  thisJoinPointStaticPartDec;\r\n  TypeBinding[] parameters = method.binding.parameters;\r\n  ??? for performance we should do this in-place\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Answer4e":"     ","AttributeHTML":" codeLink close writeAttribute writeAttribute class_name file attr_count constant_html constant_pool org.aspectj.apache.bcel.util.AttributeHTML  name of current class\r\n  file to write to\r\n  Don't know what to do about this one\r\n  Increment number of attributes found so far\r\n  Some directly printable values\r\n  Get handled exceptions and list them\r\n  Index in constant pool\r\n  Create Link to _cp.html\r\n  Reference _cp.html\r\n  Reference _cp.html\r\n  List thrown exceptions\r\n  List line number pairs\r\n  breakable\r\n  List name, range and type\r\n  List inner classes\r\n  Such as Unknown attribute or Deprecated\r\n /* Handle different attributes\r\n     */\r\n","Answer4d":"     ","Answer4c":"     ","ColorControl":"     ","Answer4b":"     ","BuildConfigModel":" getNodeForPath searchUpPaths getNodeForPathHelper getActiveNodes getActiveNodesHelper getSourceFile setSourceFile getRoot setRoot findNodeForSourceLine findNodeForSourceLineHelper matches hasMoreSpecificChild root sourceFile org.aspectj.ajde.ui.BuildConfigModel  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","TypeSafeEnum":" toString getName getKey write key name org.aspectj.util.TypeSafeEnum  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AjcTask":" setupAjc findAspectjtoolsJar isAspectjtoolsjar toString reset ignore validCommaList validCommaList setIncremental setLogCommand setHelp setVersion setXTerminateAfterCompilation setXReweavable setXJoinpoints setXNoWeave setNoWeave setXNotReweavable setXaddSerialVersionUID setXNoInline setShowWeaveInfo setNowarn setDeprecation setWarn setDebug setDebugLevel setEmacssym setCrossrefs setXlintwarnings setXlint setXlintfile setPreserveAllLocals setNoImportError setEncoding setLog setProceedOnError setVerbose setListFileArgs setReferenceInfo setTime setNoExit setFailonerror isForked setFork setMaxmem createJvmarg setTagFile setOutjar setOutxml setOutxmlfile setDestdir setTarget setCompliance setSource setCopyInjars setSourceRootCopyFilter setInpathDirCopyFilter setX setXDoneSignal setMessageHolder setMessageHolderClass setCommandEditor setCommandEditorClass incPath setSourcerootsref setSourceRoots createSourceRoots setXWeaveDir setInjarsref setInpathref setInjars setInpath createInjars createInpath setClasspath setClasspathref createClasspath setBootclasspath setBootclasspathref createBootclasspath setForkclasspath setForkclasspathref createForkclasspath setExtdirs setExtdirsref createExtdirs setAspectpathref setAspectpath createAspectpath setSrcDir createSrc createSrcdir isInIncrementalMode isInIncrementalFileMode setArgfilesref setArgfiles createArgfiles execute quit makeCommand setupOptions zipDirectory verifyOptions executeInSameVM executeInOtherVM execInOtherVM addFlaggedPath addListArgs check doCompletionTasks completeDestdir completeOutjar addFiles addFile readArguments logVerbose isEmpty addFlag addOption addFlagged extractArguments limitTo handleMessage isIgnoring dontIgnore MAX_COMMANDLINE DEFAULT_DESTDIR USAGE_SUBSTRING VALID_XOPTIONS VALID_WARNINGS VALID_DEBUG VALID_XLINT COMMAND_EDITOR_NAME TARGET_INPUTS SOURCE_INPUTS COMPLIANCE_INPUTS COMMAND_EDITOR verbose listFileArgs failonerror fork maxMem logger cmd srcdir injars inpath classpath bootclasspath forkclasspath extdirs aspectpath argfiles ignored sourceRoots xweaveDir xdoneSignal adapterFiles adapterArguments messageHolder commandEditor copyInjars copyInpath sourceRootCopyFilter inpathDirCopyFilter destDir outjar outjarFixedup tmpOutjar executing main executingInOtherVM inIncrementalMode inIncrementalFileMode logCommand javaCmd args index command logger taskLevelVerbose handledMessage org.aspectj.tools.ant.taskdefs.AjcTask  no null checks b  mimic Javac task's behavior in copying resources,\r\n  ajc.setSrcDir(javac.getSrcdir());\r\n  arguments can override the filter, add to paths, override options\r\n  prefix.length();\r\n  prefixLength + infix.length() + suffix.length();\r\n  many now deprecated: reweavable*\r\n  ---------------------------- state and Ant interface thereto\r\n  ------- single entries dumped into cmd\r\n  ------- lists resolved in addListArgs() at execute() time\r\n  ----- added by adapter - integrate better?\r\n  need declare for \"all fields initialized in ...\"\r\n  non-standard default\r\n  used by entries with internal commas\r\n  ----------------\r\n  ajc-only eajc-also docDone\r\n  new special case: allow -Xset:anything\r\n  skip Ant interface?\r\n  ajc-only eajc-also docDone\r\n  when forking, Adapter handles failonerror\r\n  then copy temp jar contents and resources to output jar\r\n  package-private for testing\r\n  XXX remove zip explicitly..\r\n  File result = new File(tempDir,\r\n  HACK: this ignores the Usage message\r\n  try to use javaw instead on windows\r\n  when forking, do completion only at end and when successful\r\n  todo: ignore any srcdir if any argfiles and no explicit includes\r\n  relies on compiler to prune non-source files\r\n  XXXX remove as unused since 1.1.1\r\n  XXX slow, stupid, unmaintainable\r\n  not null or empty\r\n  ignored - will be flagged by setter\r\n  sigh - have to count anyway for now\r\n  adapted from DefaultCompilerAdapter.executeExternalCompile\r\n /* File */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHandler#handleMessage(org.aspectj.bridge.IMessage)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHandler#isIgnoring(org.aspectj.bridge.IMessage.Kind)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessageHandler#dontIgnore(org.aspectj.bridge.IMessage.Kind)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2001-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC)\r\n *               2003-2004 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Wes Isberg     2003-2004 changes\r\n * ******************************************************************/\r\n","VerifyWeaveTestCase":"   org.aspectj.ajdt.internal.compiler.batch.Ignore  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","PR82570_1":"     ","MultipleIntros":"     ","UtilsTest":" checkOthers run checkOthers checkNamesAndValues skip_testOSGIManifests testReportMemberDiffs PREFIX LOADER TESTS name expectedNames expectedValues classpathEntries requiredBundleNames org.aspectj.internal.tools.build.UtilsTest  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg       initial implementation \r\n * ******************************************************************/\r\n","Synthetic":" accept dump getBytes setBytes toString copy bytes org.aspectj.apache.bcel.classfile.Synthetic  ","Pass2Verifier":" getLocalVariablesInfo do_verify every_class_has_an_accessible_superclass final_methods_are_not_overridden constant_pool_entries_satisfy_static_constraints checkIndex visitJavaClass visitConstantClass visitConstantFieldref visitConstantMethodref visitConstantInterfaceMethodref visitConstantString visitConstantInteger visitConstantFloat visitConstantLong visitConstantDouble visitConstantNameAndType visitConstantUtf8 visitField visitMethod visitSourceFile visitDeprecated visitSynthetic visitInnerClasses visitConstantValue visitCode visitExceptionTable visitLineNumberTable visitLocalVariableTable visitUnknown visitLocalVariable visitCodeException visitConstantPool visitInnerClass visitLineNumber field_and_method_refs_are_valid visitConstantFieldref visitConstantMethodref visitConstantInterfaceMethodref validClassName validMethodName validClassMethodName validJavaLangMethodName validInterfaceMethodName validJavaIdentifier validFieldName innerClassReferenced visitConstantClass tostring localVariablesInfos myOwner CONST_Class CONST_String CONST_Integer CONST_Float CONST_Long CONST_Double CONST_NameAndType CONST_Utf8 jc cp cplen carrier field_names field_names_and_desc method_names_and_desc cp hasInnerClass jc cp org.aspectj.apache.bcel.verifier.statics.Pass2Verifier  It's cached, don't worry.\r\n  the Code attributes.\r\n  default.\r\n  save class names to detect circular inheritance\r\n  If supername already is in the list\r\n  static methods don't inherit\r\n  static methods don't inherit\r\n  Well, for OBJECT this returns OBJECT so it works (could return anything but must not throw an Exception).\r\n  to constants of the appropriate type and such.\r\n  constructor implicitely traverses jc\r\n  ==jc.getConstantPool() -- only here to save typing work and computing power.\r\n  == cp.getLength() -- to save computing power.\r\n  This is a costly check; existing verifiers don't do it!\r\n  vmspec2 4.7.7\r\n  inner classes\r\n      checkIndex(obj, obj.getDescriptorIndex(), CONST_Utf8);   isInterface!\r\n  A descriptor is often named signature in BCEL\r\n  Field or Method signature(=descriptor)\r\n  sometimes BCEL is a little harsh describing exceptional situations.\r\n    A descriptor is often named signature in BCEL\r\n  Method's signature(=descriptor)\r\n  needed below the try block.\r\n  Well, BCEL sometimes is a little harsh describing exceptional situations.\r\n  Check if referenced objects exist.\r\n  Nearly forgot this! Funny return values are allowed, but a non-empty arguments list makes a different method out of it!\r\n  vmspec2, p.116, 2nd paragraph\r\n  isInterface!\r\n  ..may also have ACC_STRICT set, but none of the other flags in table 4.5 (vmspec2, page 115)\r\n  A specific instance initialization method... (vmspec2,Page 116).\r\n  Class and interface initialization methods...\r\n  vmspec2 page120, 4.7.3\r\n    ==obj.getSourceFileName() ?\r\n    vmspec2 4.7.10\r\n  vmspec2 4.7.6\r\n  not a constant!\r\n  ConstantValue attributes are quite senseless if the predecessor is not a field.\r\n  Field constraints have been checked before -- so we are safe using their type information.\r\n    satisfy compiler\r\n  we can assume this method was visited before;\r\n  In JustIce, the check for correct offsets into the code array is delayed to Pass 3a.\r\n  if 0, it catches all Throwables\r\n  cannot be sure this ConstantClass has already been visited (checked)!\r\n  the ancestor hierarchy.\r\n  It's a subclass of Throwable, OKAY, leave.\r\n  TODO: rework it.\r\n  Mmmmh. Can we be sure BCEL does not sometimes instantiate new objects?\r\n  Now iterate through the attributes the Code attribute has.\r\n  LineNumberTable or LocalVariableTable\r\n  In JustIce, the check for correct offsets into the code array is delayed to Pass 3a.\r\n  Local signature(=descriptor)\r\n  sometimes BCEL is a little harsh describing exceptional situations.\r\n  one certain Code attribute.\r\n    incorrectly named, it's the Exceptions attribute (vmspec2 4.7.4)\r\n  cannot be sure this ConstantClass has already been visited (checked)!\r\n  convert internal notation on-the-fly to external notation\r\n  the ancestor hierarchy.\r\n  It's a subclass of Throwable, OKAY, leave.\r\n  vmspec2 4.7.8\r\n    Represents an unknown attribute.\r\n  Maybe only misnamed? Give a (warning) message.\r\n      ==jc.getConstantPool() -- only here to save typing work.\r\n  Field or Method name\r\n  Class Name in internal form\r\n  Field or Method signature(=descriptor)\r\n  Well, BCEL sometimes is a little harsh describing exceptional situations.\r\n  Field or Method name\r\n  Class Name in internal form\r\n  Field or Method signature(=descriptor)\r\n  Well, BCEL sometimes is a little harsh describing exceptional situations.\r\n  Field or Method name\r\n  Class Name in internal form\r\n  Field or Method signature(=descriptor)\r\n  Well, BCEL sometimes is a little harsh describing exceptional situations.\r\n  I guess we should assume special names forbidden here.\r\n  vmspec2 2.7, vmspec2 2.2\r\n  vmspec2 2.7, vmspec2 2.2\r\n  Don't use.\r\n  Ignore the case where it's not a ConstantUtf8 here, we'll find out later.\r\n /*\r\n        private Class CONST_Fieldref;\r\n\t\tprivate Class CONST_Methodref;\r\n\t\tprivate Class CONST_InterfaceMethodref;\r\n        */\r\n /*\r\n            CONST_Fieldref = org.aspectj.apache.bcel.classfile.ConstantFieldref.class;\r\n\t\t\tCONST_Methodref = org.aspectj.apache.bcel.classfile.ConstantMethodref.class;\r\n\t\t\tCONST_InterfaceMethodref = org.aspectj.apache.bcel.classfile.ConstantInterfaceMethodref.class;\r\n            */\r\n /* String isnot = shouldbe.toString().substring(shouldbe.toString().lastIndexOf(\".\")+1); //Cut all before last \".\" */\r\n /*\r\n         * TODO: implement.\r\n\t\t * Are there any restrictions?\r\n         */\r\n","AspectClinit":" generateSyntheticCode generatePostSyntheticCode hasPre hasPost initFailureField handlerLabel org.aspectj.ajdt.internal.compiler.ast.AspectClinit  BcelClassWeaver.isInitFailureHandler()\r\n  Bug #52394\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","IfPCDAdviceMethods":"     ","CompilerMessagesTest":" testMessages testDeclareMessageContents setUp tearDown CONFIG_FILE_PATH org.aspectj.ajde.CompilerMessagesTest  import org.aspectj.bridge.*;\r\n  TODO-path\r\n  contain the information we expect?\r\n  ignore platform differences in slashes\r\n /*\r\n\t * @see TestCase#setUp()\r\n\t */\r\n /*\r\n\t * @see AjdeTestCase#tearDown()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     AMC 2003     initial version\r\n * ******************************************************************/\r\n","CircularExtends":" main realMain  CircularExtends  ","BcelPerClauseAspectAdder":" munge forceMunge doAggressiveInner doMunge getMatchingSyntheticMember getSignature matches hasPerClauseMembersAlready generatePerClauseMembers generatePerSingletonAspectOfMethod generatePerSingletonHasAspectMethod generatePerSingletonAjcClinitMethod generatePerObjectAspectOfMethod generatePerObjectHasAspectMethod generatePerObjectBindMethod generatePerObjectGetSetMethods generatePerCflowAspectOfMethod generatePerCflowHasAspectMethod generatePerCflowPushMethod generatePerCflowAjcClinitMethod generatePerTWAspectOfMethod generatePerTWHasAspectMethod generatePerTWGetInstanceMethod generatePerTWCreateAspectInstanceMethod flagAsSynthetic kind hasGeneratedInner org.aspectj.weaver.bcel.BcelPerClauseAspectAdder  no inner needed\r\n  Only munge the aspect type\r\n  inner class\r\n  not really an inner class of it but that does not matter, we pass back to the LTW\r\n  gets weaved and impl this interface that is still not defined.\r\n  since we need to eagerly create the nested ajcMighHaveAspect interface on LTW\r\n  FIXME Alex percflowX is not using this one but AJ code style does generate it so..\r\n  patch <clinit> to delegate to ajc$postClinit at the end\r\n  TODO AV - a bit odd, looks like Bcel alters bytecode and has a IMPDEP1 in its representation\r\n  patch <clinit> to delegate to ajc$preClinit at the beginning\r\n  Class[] for \"getDeclaredMethod\"\r\n  Object for \"invoke\", static method\r\n  Object[] for \"invoke\", no arg\r\n ","NotCharInPointcut":"     ","InterSuperFixerVisitor":" endVisit endVisit visit endVisit fixReceiver dec onType superType depthCounter world org.aspectj.ajdt.internal.compiler.ast.InterSuperFixerVisitor  Keeps track of whether we are inside any nested local type declarations\r\n  not a parent interface (if one exists)\r\n  Don't mess with super calls down in nested local type declarations (pr90143)\r\n  FIXME ??? note error\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Introducer":"     ","SuidTest":" run main serialVersionUID i SuidTest  ","GenericType":"     ","FakeAnnotation":" getTypeName getTypeSignature addElementNameValuePair dump getTypeIndex getValues isRuntimeVisible isRuntimeVisible toShortString toString name sig isRuntimeVisible org.aspectj.weaver.FakeAnnotation  ","DocumentParserTest":" testSimple testSimpleWithDtd  org.aspectj.weaver.loadtime.test.DocumentParserTest  ","LTWPackageTest":" main  ltw.LTWPackageTest  ","TopLevelType":"     ","PUTFIELD":" consumeStack getExceptions accept  org.aspectj.apache.bcel.generic.PUTFIELD  ","ExceptionHandling":"     ","SkipList":" add addAll clear contains containsAll remove insert isEmpty iterator randomLevel remove removeAll retainAll get searchLeastSmaller searchNextLarger size toArray toArray hasNext next remove OPTIMAL_P MAX_LEVEL P _NIL _listLevel _listHeader _elementCount _modCount _key _value _forward _index _listModCount _elem common.SkipList  Header is the root of our skip list.\r\n  all levels of skip lists terminate on NIL.\r\n  List level is started at one.\r\n  All forward pointers of list's header point to NIL.\r\n  Reset element count.\r\n ","Flow":" main m n  Flow  ","CastVsParen":" main  CastVsParen  ","MyMessages":"     ","BigFrameTest":" main goo foo  BigFrameTest  ","ModelCoverage":"     ","ISupportsMessageContext":" setMessageContext  org.aspectj.weaver.tools.ISupportsMessageContext  ","RoundTrip":"     ","OtherTargeters":"     ","ResolvedType":" getDirectSupertypes getDeclaredFields getDeclaredMethods getDeclaredInterfaces getDeclaredPointcuts getSuperclass getModifiers isMissing isMissing getAnnotationTypes getSuperclass getResolvedComponentType getWorld equals getFields getMethods getMethodsWithoutIterator addAndRecurse getResolvedTypeParameters lookupField lookupMethod lookupMethodInITDs lookupMember lookupMember lookupResolvedMember matches conflictingSignature getPointcuts findPointcut collectCrosscuttingMembers collectDeclares collectShadowMungers doesNotExposeShadowMungers getPerClause getDeclares getTypeMungers getPrivilegedAccesses isInterface isAbstract isClass isAspect isAnnotationStyleAspect isEnum isAnnotation isAnonymous isNested addAnnotation getAnnotations canAnnotationTargetType getAnnotationTargetKinds isAnnotationWithRuntimeRetention isSynthetic isFinal getMemberParameterizationMap getDeclaredAdvice getDeclaredShadowMungers getDeclaredJavaFields getDeclaredJavaMethods getDeclaredShadowMungersArray filterInJavaVisible getSourceContext resetPrimitives makeArray getDeclaredFields getDeclaredMethods getDeclaredInterfaces getDeclaredPointcuts hasAnnotation getSuperclass isAssignableFrom isAssignableFrom isCoerceableFrom getModifiers getComponentType getResolvedComponentType getSourceContext getSize getModifiers isPrimitiveType hasAnnotation isAssignableFrom isAssignableFrom isCoerceableFrom resolve needsNoConversionFrom getDeclaredFields getDeclaredMethods getDeclaredInterfaces getDeclaredPointcuts getSuperclass getSourceContext getName isMissing hasAnnotation getDeclaredFields getDeclaredMethods getDeclaredInterfaces getDeclaredPointcuts getSuperclass getModifiers isAssignableFrom isAssignableFrom isCoerceableFrom needsNoConversionFrom getSourceContext lookupMemberNoSupers lookupMemberWithSupersAndITDs lookupDirectlyDeclaredMemberNoSupers lookupMemberIncludingITDsOnInterfaces lookupMemberIncludingITDsOnInterfaces getInterTypeMungers getInterTypeParentMungers getInterTypeMungersIncludingSupers getInterTypeParentMungersIncludingSupers collectInterTypeParentMungers collectInterTypeMungers checkInterTypeMungers checkAbstractDeclaration getMungerLocation getDeclaringType isVisible hasBridgeModifier samePackage genericTypeEquals discoverActualOccurrenceOfTypeInHierarchy fillInAnyTypeParameters addInterTypeMunger compareToExistingMembers compareToExistingMembers isDuplicateMemberWithinTargetType checkLegalOverride compareMemberPrecedence isMoreVisible isPackage interTypeConflictError lookupSyntheticMember clearInterTypeMungers isTopmostImplementor getTopmostImplementor findHigher getExposedPointcuts addPointcutsResolvingConflicts getSourceLocation isExposedToWeaver getWeaverState getGenericType getGenericSignature parameterizedWith parameterize hasParameterizedSuperType hasGenericSuperType getParameterizedSuperTypes accumulateParameterizedSuperTypes findPointcut isException isCheckedException isConvertableFrom isAssignableFrom isAssignableFrom isCoerceableFrom needsNoConversionFrom getSignatureForAttribute isParameterizedWithAMemberTypeVariable ajMembersNeedParameterization getAjMemberParameterizationMap setBinaryPath getBinaryPath EMPTY_RESOLVED_TYPE_ARRAY PARAMETERIZED_TYPE_IDENTIFIER resolvedTypeParams binaryPath world validBoxing curr crosscuttingMembers NONE BYTE CHAR DOUBLE FLOAT INT LONG SHORT VOID BOOLEAN MISSING componentType size index assignTable noConvertTable interTypeMungers parameterizedSuperTypes parameterizedWithAMemberTypeVariable org.aspectj.weaver.ResolvedType  return true if this resolved type couldn't be found (but we know it's name maybe)\r\n  'really' missing as some code can continue based solely on the signature\r\n  are equivalent.\r\n  utilities\r\n  Add the methods declared on this type\r\n  new parent type munger can have null signature...\r\n  now add all the inter-typed members too\r\n  Recurse if we aren't at the top\r\n  Go through the interfaces on the way back down\r\n  as those are used for @AJ ITD and we precisely want to skip those\r\n  Dont do interfaces more than once\r\n  might be worth checking the method behind the parameterized method (see pr137496)\r\n  ResolvedMember.Missing;\r\n  Check the names\r\n  Check the signatures\r\n  the subsig might be ()LFastCar; - where FastCar is a subclass of Car\r\n  same order as fields\r\n  System.err.println(\"getting for \" + o);\r\n  System.err.println(f);\r\n  System.err.println(\"looking for pointcuts \" + this);\r\n  pr120521\r\n  should we throw an exception here?\r\n  ??? collecting data-structure, shouldn't really be a field\r\n  FIXME AV - skip but needed ?? or  ?? crosscuttingMembers.addLateTypeMungers(getLateTypeMungers());\r\n  System.err.println(\"collected cc members: \" + this + \", \" + collectDeclares());\r\n  ret.addAll(getDeclares());\r\n  System.out.println(\"super: \" + ty + \", \" + );\r\n  munger.setPointcut(munger.getPointcut().parameterizeWith(typeVariableMap));\r\n  update to use the parameterized signature...\r\n  ---- types\r\n  Sometimes the erasure is different, eg.  [TT;  and [Ljava  return new ResolvedMember[]{cloneMethod};\r\n  B\r\n  C\r\n  D\r\n  F\r\n  I\r\n  J\r\n  S\r\n  V\r\n  Z\r\n  B\r\n  C\r\n  D\r\n  F\r\n  I\r\n  J\r\n  S\r\n  V\r\n  Z\r\n  }\r\n  assert member.getKind() == Member.METHOD || member.getKind() == Member.CONSTRUCTOR\r\n  try interfaces then, but only ITDs now...\r\n  Rule 2\r\n  If the rules above are broken, return right now\r\n  ignore for @AJ ITD as munger.getSignature() is the interface method hence abstract\r\n  Rule 1\r\n  allow for classes starting '$' (pr120474)\r\n  package-visible\r\n  need to tailor this munger instance for the particular target...\r\n  Retrieve the generic type\r\n  Ensure all parts of the member are resolved\r\n  quickly find the targettype in the type hierarchy for this type (it will be either RAW or PARAMETERIZED)\r\n  only bind the tvars if its a parameterized type or the raw type (in which case they collapse to bounds) - don't do it for generic types ;)\r\n  if (!actualTarget.isRawType())\r\n  is discovered and the tvar is collapsed to a bound?\r\n  possibly changed when type parms filled in\r\n  System.err.println(\"add: \" + munger + \" to \" + this.getClassName() + \" with \" + interTypeMungers);\r\n  System.err.println(\"    is visible\");\r\n  the new munger dominates the existing one\r\n  the existing munger dominates the new munger\r\n  System.err.println(\"       compare: \" + c);\r\n  System.err.println(\"match \" + munger + \" with \" + existingMunger);\r\n  now compare to existingMungers\r\n  signature for the ITD so it can be retrieved.\r\n  don't worry about clashing with bridge methods\r\n  could do with a rewrite !\r\n  munger dominates existingMember\r\n  ??? might need list of these overridden abstracts\r\n  existingMember dominates munger\r\n  System.err.println(\"   c: \" + c);\r\n  System.err.println(\"Comparing munger: \"+sig+\" with member \"+existingMember);\r\n  ??? returning too soon\r\n  now have to test that itdMember is visible from targetType\r\n  must be in same package to be visible then...\r\n  trying to put two members with the same signature into the exact same type..., and both visible in that type.\r\n  signature AND more than one of them is concrete AND they are both visible within the target type.\r\n  System.err.println(\"check: \" + child.getDeclaringType() + \" overrides \" + parent.getDeclaringType());\r\n  Look at the generic types when doing this comparison\r\n  In 1.5 mode, allow for covariance on return type\r\n  System.err.println(\"check: \" + child.getModifiers() + \" more visible \" + parent.getModifiers());\r\n  check declared exceptions\r\n  System.err.println(\"checking: \" + childExceptions[i]);\r\n  java rules.  clone goes against these...\r\n  System.err.println(\"conflict at \" + m2.getSourceLocation());\r\n  System.err.println(\"   found: \" + ret);\r\n  System.err.println(\"lookup \" + member + \" in \" + interTypeMungers);\r\n  Handling members for the new array join point\r\n  we don't know anything about supertype, and it can't be exposed to weaver\r\n  Check if my super class is an implementor?\r\n  System.err.println(\"            \" + inherited.isAbstract() + \" in \" + this.isAbstract());\r\n  System.err.println(\"adding: \" + toAdd);\r\n  version from ResolvedTypeX\r\n  If one is primitive and the other isnt\r\n  if there are no type parameters then we cant be...\r\n  assume the worst - if its definetly not a type declared one, it could be anything\r\n  MAYBE means we haven't worked it out yet...\r\n  might extend a parameterized aspect that we also need to consider...\r\n /*Type variable name -> UnresolvedType*/\r\n /* private package */\r\n /* private package protected */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n *     Alexandre Vasseur    @AspectJ ITDs\r\n * ******************************************************************/\r\n","PerformanceTestCase":" xxx_testLazyTjpOff testLazyTjp  org.aspectj.ajdt.internal.compiler.batch.PerformanceTestCase  this is a nice test, but not strictly needed\r\n  Pass -proceedOnError to ensure even though we get that message, we still get the class file on disk\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ParserException":" getLocation token org.aspectj.weaver.patterns.ParserException  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Goto":"     ","BcelClassWeaver":" weave fastMatchShadowMungers canMatch initializeSuperInitializerMap addSuperInitializer addInitializer compareTo fallbackCompareTo addDispatchTarget addLazyMethodGen addOrReplaceLazyMethodGen alreadyDefined signaturesMatch makeBridgeMethod createBridgeMethod weave isOverriding isVisibilityOverride checkForOverride calculateAnyRequiredBridgeMethods weaveDeclareAtMethodCtor reportMethodCtorWeavingMessage getMatchingSubset getITDSubset locateAnnotationHolderForFieldMunger locateAnnotationHolderForMethodCtorMunger weaveAtFieldRepeatedly weaveAtMethodOnITDSRepeatedly dontAddTwice weaveDeclareAtField checkUnusedDeclareAtTypes reportFieldAnnotationWeavingMessage doesAlreadyHaveAnnotation doesAlreadyHaveAnnotation findAspectsForMungers inlineSelfConstructors positionAndImplement positionInitializationShadow isThisCall inlineMethod transformSynchronizedMethod genInlineInstructions rewriteWithMonitorExitCalls genArgumentStores getCalledMethod weaveInAddedMethods addPerSingletonField findSuperOrThisCall match matchInit shouldWeaveBody genInitInstructions match isInitFailureHandler matchSetInstruction matchGetInstruction findResolvedMemberNamed fixAnnotationsForResolvedMember matchInvokeInstruction match implement getLazyClassGen getShadowMungers getWorld setReweavableMode getReweavableMode toString trace clazz shadowMungers typeMungers lateTypeMungers ty world cpg fact addedLazyMethodGens addedDispatchTargets inReweavableMode addedSuperInitializersAsList addedSuperInitializers addedThisInitializers addedClassInitializers mapToAnnotations clinitShadow initializationShadows perKindShadowMungers canMatchBodyShadows canMatchInitialization onType list checkedXsetForLowLevelContextCapturing captureLowLevelContext org.aspectj.weaver.bcel.BcelClassWeaver  clazz.print();\r\n  alias of clazz.getType()\r\n  alias of ty.getWorld()\r\n  alias of clazz.getConstantPoolGen()\r\n  alias of clazz.getFactory();\r\n  Static setting across BcelClassWeavers\r\n  List<IfaceInitList>\r\n  Interface -> IfaceInitList\r\n  List<NewFieldMunger>\r\n  List<NewFieldMunger>\r\n  assert world == clazz.getType().getWorld()\r\n  XXX this is being called, but the result doesn't seem to be being used\r\n  mg is existing's subtype and dominates existing\r\n  existing is mg's subtype and dominates mg\r\n  this means existing was introduced on the class itself\r\n  remove abstract modifier\r\n  ret.makeSynthetic();\r\n  The bridge method in this type will have the same signature as the one in the supertype\r\n  we want to \"touch\" all aspects\r\n  ???System.err.println(\"surprising: \" + o);\r\n  start by munging all typeMungers\r\n  Weave special half type  don't forget to sort addedThisInitialiers according to dominates\r\n  this is in just as bad taste as NOPs\r\n  and it also possibly adds to {@link #initializationShadows}.\r\n  For matching mungers, add their declaring aspects to the list that affected this type\r\n  now we weave all but the initialization shadows\r\n  \"Recursive constructor invocation\"\r\n  if we matched any initialization shadows, we inline and weave\r\n  now proceed with late type mungers\r\n  FIXME asc are these potentially affected by declare annotation?\r\n  finally, if we changed, we add in the introduced methods.\r\n  we can't be overriding a static method\r\n  we can't be overriding a private method\r\n  names dont match (this will also skip <init> and <clinit> too)\r\n  check same number of parameters\r\n  Look at erasures of parameters (List<String> erased is List)\r\n  just check whether these things are in the right relationship for covariance...\r\n  check for covariance\r\n  we just can't tell !\r\n  used when looking at visibility rules\r\n  the method we are going to check\r\n  FIXME asc if its not a BcelTypeMunger then its an EclipseTypeMunger ... do I need to worry about that?\r\n  just double check... the caller should have already verified this\r\n  dont bother if we're an interface\r\n  set if we build any bridge methods\r\n  So what methods do we have right now in this class?\r\n  have already been created, we don't want to do it twice!\r\n  e.g. \"foo(Ljava  This is the local method that we *might* have to bridge to\r\n  Doh!\r\n  ignore static methods\r\n  Skip constructors and static initializers\r\n  Let's take a look at the superclass\r\n  look at the next method\r\n  Check superinterfaces\r\n  look at the next method\r\n  Now go through all the methods in this type\r\n  nothing to do\r\n  deal with ITDs\r\n  Can't use the subset called 'decaMs' as it won't be right for ITDs...\r\n  deal with all the other methods...\r\n  nothing to do\r\n  Single first pass\r\n  an annotation is specified that might be put on by a subsequent decaf\r\n  the annotation is already there\r\n  skip this one...\r\n  remove the declare @method since have matched against it\r\n  lets have another go\r\n  the annotation is already there\r\n  skip this one...\r\n  remove the declare @method since have matched against it\r\n  Multiple secondary passes\r\n  dont use tags, they won't get repaired like for woven methods.\r\n  TAG: WeavingMessage\r\n  FIXME asc refactor this to neaten it up\r\n  an annotation is specified that might be put on by a subsequent decaf\r\n  skip this one...\r\n  skip this one...\r\n  an annotation is specified that might be put on by a subsequent decaf\r\n  skip this one...\r\n  skip this one...\r\n  dontAddMeTwice[i] = null;   nothing to do\r\n  nothing more to do\r\n  Single first pass\r\n  an annotation is specified that might be put on by a subsequent decaf\r\n  the annotation is already there\r\n  it should be runtime visible, so put it on the Field\r\n  remove the declare @field since have matched against it\r\n  go through all the declare @field statements\r\n  lets have another go\r\n  the annotation is already there\r\n  skip this one...\r\n  below code is for recursive things\r\n  remove the declare @field since have matched against it\r\n  Multiple secondary passes\r\n  Quickly check if an ITD meets supplies the 'missing' member\r\n  Error if an exact type pattern was specified\r\n  TAG: WeavingMessage\r\n  Mungers in effect on that shadow\r\n  s.getEnclosingMethod().print();\r\n  assert s.getKind() == Shadow.Initialization\r\n  be an ALOAD_0) to just before the call to super\r\n  this also sets up the initial environment\r\n  System.err.println(\"DEBUG: Transforming synchronized method: \"+synchronizedMethod.getName());\r\n  TRANSFORMING NON STATIC METHOD\r\n  ALOAD_0, DUP, ASTORE_<n>, MONITORENTER\r\n  so lets build that:\r\n  search for 'returns' and make them to the aload_<n>,monitorexit\r\n  !walker.equals(body.getEnd())) {\r\n  System.err.println(\"Adding monitor exit block at \"+element);\r\n  element.setInstruction(InstructionFactory.createLoad(classType,slotForThis));\r\n  now move the targeters from the RET to the start of the monitorexit block\r\n  move it\r\n  move it...\r\n  what kinds are there?\r\n  now the magic, putting the finally block around the code\r\n  now we can put the monitorenter stuff on\r\n  8    13    20   Class java  ? should be the real type ? String or something?\r\n  31:  athrow\r\n  start of catch block\r\n  so lets build that:\r\n  search for 'returns' and make them to the aload_<n>,monitorexit\r\n  !walker.equals(body.getEnd())) {\r\n  System.err.println(\"Adding monitor exit block at \"+element);\r\n  element.setInstruction(InstructionFactory.createLoad(classType,slotForThis));\r\n  now move the targeters from the RET to the start of the monitorexit block\r\n  move it\r\n  move it...\r\n  what kinds are there?\r\n  now the magic, putting the finally block around the code\r\n  now we can put the monitorenter stuff on\r\n  4:   monitorenter\r\n  so lets build that:\r\n  search for 'returns' and make them jump to the aload_<n>,monitorexit\r\n  element.setInstruction(InstructionFactory.createLoad(classType,slotForThis));\r\n  now move the targeters from the RET to the start of the monitorexit block\r\n  move it\r\n  move it...\r\n  what kinds are there?\r\n  now the magic, putting the finally block around the code\r\n  now we can put the monitorenter stuff on\r\n  LDC can handle class literals in Java5 and above *sigh*\r\n  STATIC METHOD TRANSFORMATION\r\n  a computation leak... we're testing this LOTS of times.  Sigh.\r\n  fix frame instructions\r\n  second pass: retarget branch instructions, copy ranges and tags\r\n  retarget branches\r\n  copy over tags and range attributes\r\n  frameEnv.get(oldIndex);\r\n  }\r\n  fix frame instructions\r\n  second pass: retarget branch instructions, copy ranges and tags\r\n  retarget branches\r\n  copy over tags and range attributes\r\n  writing ret back to front because we're popping.\r\n  FIXME asc change from string match if we can, rather brittle.  this check actually prevents field-exec jps\r\n  .isAjSynthetic()) {\r\n  we want to match ajsynthetic constructors...\r\n  XXX the enclosing join point is wrong for things before ignoreMe.\r\n  we don't walk bodies of things where it's a wrong constructor thingie\r\n  walk the body\r\n  insert code in place\r\n  now we add our initialization code\r\n  now add interface inits\r\n  in groups where at least one initialization jp matched.  Future work.\r\n  if (canMatch(Shadow.Monitoring)) {\r\n  we are private\r\n  if it's final.  If it is final, then we don't generate a shadow.\r\n  now we'll do this for everybody.\r\n  assert t.getHandler() == ih\r\n  in the handler we created in AspectClinit.generatePostSyntheticCode()\r\n  synthetic fields are never join points\r\n  sets of synthetics aren't join points in 1.1\r\n  not a join point according to 1.0.6 and 1.1.\r\n  we can't find the field, so it's not a join point.\r\n  synthetic fields are never join points\r\n  sets of synthetics aren't join points in 1.1\r\n  we can't find the field, so it's not a join point.\r\n  FIXME asc remove this catch after more testing has confirmed the above stuff is OK\r\n  AMC temp guard for M4\r\n  ResolvedMember resolvedDooberry = world.resolve(realthing);\r\n  AMC temp guard for M4\r\n  FIXME asc shouldnt really rely on string names !\r\n  System.err.println(method + \", declaredSig: \"  +declaredSig);\r\n  System.err.println(\"call to inter-type member: \" + effectiveSig);\r\n  abracadabra\r\n  static ... so all worlds will share the config for the first one created...\r\n  duplicate blocks - one with context capture, one without, seems faster than multiple 'ifs()'\r\n  Could pass: munger\r\n  Could pass: munger\r\n  System.err.println(\"match: \" + shadow);\r\n  Called by the BcelWeaver to let us know all BcelClassWeavers need to collect reweavable info\r\n /*LazyMethodGen*/\r\n /*AnnotationGen*/\r\n /* Implementation notes:  \r\n\t\t *\r\n\t\t * We allocate two slots for every tempvar so we don't screw up \r\n\t\t * longs and doubles which may share space.  This could be conservatively avoided \r\n\t\t * (no reference to a long/double instruction, don't do it) or packed later.  \r\n\t\t * Right now we don't bother to pack.\r\n\t\t * \r\n\t\t * Allocate a new var for each formal param of the inlined.  Fill with stack\r\n\t\t * contents.  Then copy the inlined instructions in with the appropriate remap\r\n\t\t * table.  Any framelocs used by locals in inlined are reallocated to top of \r\n\t\t * frame,\r\n\t\t */\r\n /*==finally*/\r\n /*==finally*/\r\n /*==finally*/\r\n /*recipient.getBody()*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","InnerSuper":" main makeCounter makeInnerCounter count n o n InnerSuper C Counter  ","DeclareAccess":"     ","UnterminatedDeclareErrorCE":"     ","VoidAround":"     ","LTWApp":" main run loadClass inJar numLoaded org.aspectj.profiling.LTWApp  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","RootDoc":"   org.aspectj.ajdoc.RootDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","IWeavingContext":" getResources getBundleIdFromURL getClassLoaderName getFile getId isLocallyDefined  org.aspectj.weaver.loadtime.IWeavingContext  ","SimpleGets":"     ","ElementValueGen":" getElementValue getElementValueType stringifyValue dump readElementValue getConstantPool copy type cpGen STRING ENUM_CONSTANT CLASS ANNOTATION ARRAY PRIMITIVE_INT PRIMITIVE_BYTE PRIMITIVE_CHAR PRIMITIVE_DOUBLE PRIMITIVE_FLOAT PRIMITIVE_LONG PRIMITIVE_SHORT PRIMITIVE_BOOLEAN org.aspectj.apache.bcel.generic.annotation.ElementValueGen  byte\r\n  char\r\n  double\r\n  float\r\n  int\r\n  long\r\n  short\r\n  boolean\r\n  String\r\n  Enum constant\r\n  Class\r\n  byte\r\n  char\r\n  double\r\n  float\r\n  int\r\n  long\r\n  short\r\n  boolean\r\n  String\r\n  Enum constant\r\n  Annotation\r\n  Array\r\n  Class\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","Ajc152Tests":" testSeparateCallAspectOf_pr148727 testIntegratedCallAspectOf_pr148727 testFreakyNewArrayJoinpoint_pr148786 testPrivilegeGeneric_pr148545 testPrivilegeGeneric_pr148545_2 testUnknownAnnotationNPE testDuplicateBridgeMethods_pr147801_1 testPackageIgnoredForException_pr147701_1 testPackageIgnoredForException_pr147701_2 testPackageIgnoredForException_pr147701_3 testBrokenAddSerialVersionUID_pr145950 testNoUnnecessaryDeclarationOfThrownExcp_pr129282_1 testNoUnnecessaryDeclarationOfThrownExcp_pr129282_2 testNoUnnecessaryDeclarationOfThrownExcp_pr129282_3 testNoUnnecessaryDeclarationOfThrownExcp_pr129282_4 testNoUnnecessaryDeclarationOfThrownExcp_pr129282_5 testNoUnnecessaryDeclarationOfThrownExcp_pr129282_6 testNoUnnecessaryDeclarationOfThrownExcp_pr129282_7 testNoUnnecessaryDeclarationOfThrownExcp_pr129282_8 testNoUnnecessaryDeclarationOfThrownExcp_pr129282_9 testNoUnnecessaryDeclarationOfThrownExcp_pr129282_10 testAtAJVerificationError_pr144602 testLTWAndGeneratingSUID_pr144465 testAspects14PerSingleton_pr122253 testAspects14PerCflow_pr122253 testAspects14PerThis_pr122253 testAspects14PerTypeWithin_pr122253 testFunkyGenericErrorWithITDs_pr126355 testConcretizingAbstractMethods_pr142466 testConcretizingAbstractMethods_pr142466_2 testComplexGenericDecl_pr137568 testItdOnInnerTypeOfGenericType_pr132349 testItdOnInnerTypeOfGenericType_pr132349_2 testItdOnInnerTypeOfGenericType_pr132349_3 testLTWGeneratedAspectAbstractMethod_pr125480 testLTWGeneratedAspectAbstractMethod_pr125480_2 testCompletelyBrokenAopConcretization_pr142165_1 testCompletelyBrokenAopConcretization_pr142165_2 testCompletelyBrokenAopConcretization_pr142165_3 testVerifyErrorLTW_pr135068 testVerifyErrorLTW_pr135068_2 testVerifyErrorLTW_pr135068_3 testVerifyErrorLTW_pr135068_4 testVerifyErrorForComplexCflow_pr136026 testVerifyErrorForComplexCflow_pr136026_2 testAnnotationsAndGenericsBCException_pr129704 testMethodTooBigAfterWeaving_pr138384 testNotAtWithincode_pr138158_1 testNotAtWithincode_pr138158_2 testNotAtWithincode_pr138158_3 testNpeOnDup_pr138143 testPointcutsAndGenerics_pr137496_1 testPointcutsAndGenerics_pr137496_2 testPointcutsAndGenerics_pr137496_3 testPointcutsAndGenerics_pr137496_4 testPointcutsAndGenerics_pr137496_5 testPointcutsAndGenerics_pr137496_6 testAspectLibrariesAndASM_pr135001 testStackOverflow_pr136258 testIncorrectOverridesEvaluation13 testIncorrectOverridesEvaluation15 testAtWithinCodeBug_pr138798 testReferencePCutInDeclareWarning_pr138215 testReferencePCutInPerClause_pr138219 testReferencePCutInPerClause_pr130722 testDoubleAnnotationMatching_pr138223 testSuperCallsInAtAspectJAdvice_pr139749 testNoClassCastExceptionWithPerThis_pr138286 testGenericAspectHierarchyWithBounds_pr147845 testJRockitBooleanReturn_pr148007 testJRockitBooleanReturn2_pr148007 testSyntheticAjcMembers_pr147711 testDeclareAtMethodRelationship_pr143924 testJarChecking_pr137235_1 testJarChecking_pr137235_2 testMakePreMethodNPE_pr136393 testGetParameterHandles_pr141730 testGetParameterTypes_pr141730 testToSignatureString_pr141730 testAspectPathRelWhenNotFillingInModel_pr141730 testNoNPEWithInpathWhenNotFillingInModel_pr141730 testPCDInClassAppearsInModel_pr148027 testNoAspects testWeaveinfoMessages checkParametersForIPE checkSignatureOfIPE checkSignatureOfIPE suite getSpecFile  org.aspectj.systemtest.ajc152.Ajc152Tests  tests added post 152rc1 and before final\r\n  tests adding during 152 development\r\n  AsmManager.setReporting(\"c:  get the IProgramElements corresponding to the different code entries\r\n  check that the debit method has an annotated by relationship with the declare @method\r\n  the relationship with aspectpath\r\n  We expect 3 (the declare @type and declare parents statements plus the filenode)\r\n  the relationship with inpath\r\n  relationship. This should be addressed by pr148027\r\n  setSystemProperty(WeavingAdaptor.WEAVING_ADAPTOR_VERBOSE,\"true\");\r\n   ","AjProblemReporter":" unhandledException isPointcutDeclaration isIntertypeDeclaration abstractMethodCannotBeOverridden inheritedMethodReducesVisibility staticAndInstanceConflict abstractMethodMustBeImplemented disallowedTargetForAnnotation overridesPackageDefaultMethod handle javadocMissingParamTag abstractMethodInAbstractClass itdMethodMustOverride methodMustOverride typesAsString visibilityConflict unusedPrivateType unusedPrivateMethod caseExpressionMustBeConstant unusedArgument finalMethodCannotBeOverridden duplicateInheritedMethods createProblem getMessage getArguments getID getMessage getOriginatingFileName getSourceEnd getSourceLineNumber getSourceStart isError isWarning setSourceEnd setSourceLineNumber setSourceStart setSeeAlsoProblems seeAlso setSupplementaryMessageInfo getSupplementaryMessageInfo DUMP_STACK factory delegate message org.aspectj.ajdt.internal.compiler.problem.AjProblemReporter  PR 72157 - calls to super   This means it must either be the same type or a subtype\r\n  System.err.println(\"matched callSite: \"  + callSite + \" with \" + d);\r\n  System.err.println(\"matched enclosingExec: \"  + enclosingExec + \" with \" + d);\r\n  ??? is this always correct\r\n  abstractMethod.declaringClass);\r\n  If the type is anonymous, look at its supertype\r\n  if either of the MethodBinding is an ITD, we have already reported it.\r\n  if this is a PointcutDeclaration then there is no error\r\n  when there is a problem with an ITD not being implemented, it will be reported elsewhere\r\n  ??? think through how this could go wrong\r\n  ??? be sure this is always right\r\n  abstractMethod.declaringClass);\r\n  If the type is anonymous, look at its supertype\r\n  could be forward reference\r\n  if the annotation's recipient is an ITD, it might be allowed after all...\r\n  not our special case, report the problem...\r\n  PR71076\r\n  This will already have been reported, see: PointcutDeclaration.postParse()\r\n  ignore ajc$ methods\r\n  affects other code in the problem reporter that looks through ITDs...\r\n  match, so dont need to report a problem!\r\n  report the error...\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  DONT WORRY if its ITDs since the error will be reported another way...\r\n  don't output unused type warnings for aspects!\r\n  don't output unused warnings for pointcuts...\r\n  don't warn if this is an aj synthetic arg\r\n  If the unused argument is in a pointcut, don't report the problem (for now... pr148219)\r\n  pinpoint info, don't do it twice...\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.org.eclipse.jdt.internal.compiler.problem.ProblemReporter#disallowedTargetForAnnotation(org.aspectj.org.eclipse.jdt.internal.compiler.ast.Annotation)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","DeclareParentsImplementsTest":" target intro intro before log testDecPInt testDecPIntAdvised testAddedMethodKeepAnnotation main suite field1 i s_log ataspectj.DeclareParentsImplementsTest  ","NoSoftener":" main foo  test.NoSoftener  ","Tester":" setBASEDIR getBASEDIR setMessageHandler clear clearNotes clearEvents event note check check throwable throwable checkFailed checkAndClear check checkEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkNotEqual checkEqual checkNonNull checkEqual checkEqual checkEqual checkEqual checkEqual checkEqual checkEqual checkEqual checkEqual checkEqual checkEqual checkEqual checkEqual checkEqual checkEqual checkEqual checkEqualIgnoreDups diffIgnoreDups checkEqual checkEqual checkEqual checkEq expectEvent expectEvent expectEventsInString expectEventsInString expectEvents expectEvents checkAllEvents checkAllEventsIgnoreDups checkEventsFromFile checkEqualLists checkEvents checkEvents checkAndClearEvents checkAndClearEvents printEvents unexpectedExceptionFailure handle test getClassName setDebug go debug setClassPath setRoot setVerbose add quit print stopin stopin stopat stopat stopon clear clear clear clear step stepi stepup next de toString stop locals threads where requestSetEvent requestClearEvent requestDeferredEvent requestFailedEvent setErr setOut down up stall getMaxStallTime stall cont sd db db stop stop ex outln out err errln check check msg getRunArgs setRunArgs _getArgs startTest classPath startTest messageHandler BASEDIR notes actualEvents expectedEvents ROOT PCKG PATH FILE CLASS classPath time verboseSuccess d out err mutex good failures debug errFile breaks msg line frames locals names sizes time runArgs org.aspectj.testing.Tester Tester  remove all instances of it\r\n  XXX TestDriver\r\n  final File parentDir = (null == file? null : file.getParentFile());\r\n  XXX bug reads into current expected and checks all - separate read and check\r\n  XXX System.out\r\n  XXX no clients?\r\n  XXX consider creating exception for new API throwFailure(String m)\r\n  \"C:  \"debugger.\";\r\n  \"debugger  true;\r\n  true;\r\n  d.exit(false);\r\n  System.out.println(d.format(e));\r\n /*String*/\r\n /*String*/\r\n /*final boolean handled = */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2000 Xerox Corporation. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n /*Debugger*/\r\n","MessageHandler":" init init clearMessages handleMessage isIgnoring ignore dontIgnore hasAnyMessage numMessages getUnmodifiableListView getMessages getErrors getWarnings setInterceptor toString handleMessage isIgnoring dontIgnore messages ignoring handleMessageResult interceptor org.aspectj.bridge.MessageHandler MessageHandler  Off by default, need to explicitly be enabled (see -showWeaveInfo)\r\n  XXX sync\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","P1P2Statics":"  I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c p1.p2.P1P2Statics  ","ThreadTester":" main getClassName test stop1 getMaxStallTime times stopTimes max stopMax thread pairs thread time ThreadTester  ","ResolvedMemberSignaturesTestCase15":" testBaseOnlyStaticMethod testBothStaticMethod testDerivedStaticMethod testBaseOnlyMethod testBothMethod testDerivedMethod testChangingThrowsClause testNoWalkUpMatchingConstructor testNoWalkUpNoMatchingConstructor testBaseOnlyField testBothField testDerivedField setUp world baseType derivedType org.aspectj.weaver.ResolvedMemberSignaturesTestCase15  to obj.getClass().foo() even if the static method is defined in a super type.\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","BcelObjectType":" setJavaClass initializeFromJavaclass isInterface isEnum isAnnotation isAnonymous isNested getModifiers getSuperclass getDeclaredInterfaces getDeclaredMethods getDeclaredFields getTypeVariables getTypeMungers getDeclares getPrivilegedAccesses getDeclaredPointcuts isAspect isAnnotationStyleAspect ensureAspectJAttributesUnpacked processAttributes resolveAnnotationDeclares getPerClause getJavaClass ensureDelegateConsistent resetState finishedWith getWeaverState setWeaverState printWackyStuff getLazyClassGen isSynthetic getWeaverVersionAttribute addParent getAnnotationTypes getAnnotations hasAnnotation addAnnotation isAnnotationWithRuntimeRetention getRetentionPolicy canAnnotationTargetType getAnnotationTargetKinds ensureAnnotationsUnpacked getDeclaredGenericSignature getGenericClassTypeSignature ensureGenericSignatureUnpacked getAllFormals isNestedClass getOuterClass getFormalTypeParametersFromOuterClass ensureGenericInfoProcessed isGeneric toString evictWeavingState weavingCompleted getAttributes getAttributeNames addPointcutDefinition hasBeenWoven javaClass lazyClassGen modifiers className superclassSignature superclassName interfaceSignatures fields methods annotationTypes annotations typeVars retentionPolicy annotationTargetKinds wvInfo pointcuts privilegedAccess weaverState perClause typeMungers declares formalsForResolution cachedGenericClassTypeSignature declaredSignature hasBeenWoven isGenericType isInterface isEnum isAnnotation isAnonymous isNested isObject isAnnotationStyleAspect isCodeStyleAspect bitflag DISCOVERED_ANNOTATION_RETENTION_POLICY UNPACKED_GENERIC_SIGNATURE UNPACKED_AJATTRIBUTES DISCOVERED_ANNOTATION_TARGET_KINDS DISCOVERED_DECLARED_SIGNATURE DISCOVERED_WHETHER_ANNOTATION_STYLE DAMAGED org.aspectj.weaver.bcel.BcelObjectType  set lazily if it's an aspect\r\n  Aspect related stuff (pointcuts *could* be in a java class)\r\n  set upon construction\r\n  set upon construction\r\n  not redundant with field above!\r\n  discovery bits\r\n  see note(1) below\r\n  see note(2) below\r\n  @AJ pc refs annotation in class hierarchy\r\n  the only class in Java-1.4 with no superclasses\r\n  repeat initialization\r\n  Java related\r\n  javaClass.getGenericClassTypeSignature();\r\n  this is a development bug, so fail fast with good info\r\n  Aspect related\r\n  Pass in empty list that can store things for readAj5 to process\r\n  we can finally process the aspect and its associated perclause...\r\n  Set the weaver version used to build this type\r\n  System.err.println(\"unpacking: \" + this + \" and \" + a);\r\n  At this point we are relying on the world to not evict if it might want to reweave multiple times\r\n  System.err.println(\"creating lazy class gen for: \" + this);\r\n  System.err.println(\"made LCG from : \" + this.getJavaClass().getSuperclassName );\r\n  evil mutator - adding state not stored in the java class\r\n  null means we have no idea\r\n  null means we have no idea or the @Target annotation hasn't been used\r\n  we have to find any type variables from the outer type before proceeding with resolution.\r\n  development bug, fail fast with good info\r\n  this.interfaces = new ResolvedType[cSig.superInterfaceSignatures.length];\r\n  development bug, fail fast with good info\r\n  getResolvedTypeX().getWorld());\r\n  update resolved typex to point at generic type not raw type.\r\n  genericType.setSourceContext(this.resolvedTypeX.getSourceContext());\r\n  Can't chuck all this away\r\n  Force retrieval of any lazy information\r\n  later.\r\n  discard expensive bytecode array containing reweavable info\r\n  for testing - if we have this attribute, return it - will return null if it doesnt know anything\r\n  for testing - use with the method above - this returns *all* including those that are not Aj attributes\r\n  for testing\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n *     RonBodkin/AndyClement optimizations for memory consumption/speed\r\n * ******************************************************************/\r\n","Changed":" main  Changed  ","EclipseSourceType":" eclipseWorld isAspect isAnonymous isNested isAnnotationStyleAspect isAnnotationStylePointcut getWeaverState getSuperclass getDeclaredInterfaces fillDeclaredMembers makeResolvedPointcutDefinition getDeclaredFields getDeclaredMethods getDeclaredPointcuts getModifiers toString checkPointcutDeclarations isInterface isEnum isAnnotation addAnnotation isAnnotationWithRuntimeRetention getRetentionPolicy canAnnotationTargetType getAnnotationTargetKinds hasAnnotation getAnnotations convertEclipseAnnotation generateAnnotation generateElementValue generateElementValueForNonConstantExpression getAnnotationTypes getPerClause getPerClauseForTypeDeclaration determinePerClause lookupPerClauseKind getDeclares getPrivilegedAccesses getTypeMungers doesNotExposeShadowMungers getDeclaredGenericSignature isGeneric getTypeVariables typeParameter2TypeVariable ensureDelegateConsistent pointcutSig aspectSig declaredPointcuts declaredMethods declaredFields declares typeMungers factory binding declaration unit annotationsResolved resolvedAnnotations discoveredAnnotationTargetKinds annotationTargetKinds annotations NO_ANNOTATION_TYPES NO_ANNOTATIONS ACC_ANNOTATION ACC_ENUM org.aspectj.ajdt.internal.compiler.lookup.EclipseSourceType  XXX happens if we do this very early from buildInterTypeandPerClause\r\n  an @Pointcut in a code-style aspect\r\n  XXX what about java.lang.Object\r\n  the important side-effect of this call is to make sure bindings are completed\r\n  consider pointcuts defined via annotations\r\n  these are ignored during compilation and only used during weaving\r\n  these are handled in a separate pass\r\n  these are handled in a separate pass\r\n  there is another error that has caused this... pr138143\r\n  ??? might want to use null\r\n  only return the real Java modifiers, not the extra eclipse ones\r\n  now check all inherited pointcuts to be sure that they're handled reasonably\r\n  ??? this is an odd construction\r\n  XXX make sure this is applied to classes and interfaces\r\n  XXXAJ5: Should be constants in the eclipse compiler somewhere, once it supports 1.5\r\n  yet.  Not sure if this method will be called in practice...\r\n  null means we have no idea or the @Target annotation hasn't been used\r\n  return targetKind;\r\n  Make sure they are resolved\r\n  which will result in a separate error message.\r\n  only do this once\r\n  forces resolution and sets resolvedAnnotations\r\n  TODO if it is sourcevisible, we shouldn't let it through!!!!!!!!! testcase!\r\n  this is a marker annotation (no member value pairs)\r\n  this is a single member annotation (one member value)\r\n  is this just a marker annotation?\r\n  class type\r\n  , attributeOffset);\r\n  array type\r\n  Make sure they are resolved\r\n  new ResolvedType[0];\r\n  at least try to get the right perclause\r\n  returning a perFromSuper is enough to get the correct kind.. (that's really a hack - AV)\r\n  at this stage of compilation is not worth the trouble\r\n  fallback strategy just to avoid NPE\r\n  it is an @Aspect(...something...)\r\n  TODO cast safe ?\r\n  it is an @Aspect(...something...)\r\n  TODO cast safe ?\r\n  needs to use PerFromSuper if declaration extends a super aspect\r\n  if no super aspect, we have a @Aspect() means singleton\r\n  found @Aspect(...)\r\n  no @Aspect annotation at all (not as aspect)\r\n  fallback strategy just to avoid NPE\r\n  XXX need to handle this too\r\n  XXX should not happen\r\n  if @Aspect: perFromSuper, else if @Aspect(..) get from anno value, else null\r\n  code style\r\n  clause is null for non aspect classes since coming from BCEL attributes\r\n  adapted from AspectDeclaration\r\n  XXX what about lower binding?\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC                 initial implementation\r\n *     Alexandre Vasseur    support for @AJ perClause\r\n * ******************************************************************/\r\n","CyclicInterfaceInheritance":" main a b a b  CyclicInterfaceInheritance C A B  no bug if any class implements the interfaces\r\n  ERR: A <- B <- A\r\n  ERR: B <- A <- B\r\n ","CompilationAndWeavingContext":" reset setMultiThreaded registerFormatter getCurrentContext enteringPhase leavingPhase getContextStack nextToken getFormatter getData toString formatEntry nextTokenId BATCH_BUILD INCREMENTAL_BUILD PROCESSING_COMPILATION_UNIT RESOLVING_COMPILATION_UNIT ANALYSING_COMPILATION_UNIT GENERATING_UNWOVEN_CODE_FOR_COMPILATION_UNIT COMPLETING_TYPE_BINDINGS PROCESSING_DECLARE_PARENTS CHECK_AND_SET_IMPORTS CONNECTING_TYPE_HIERARCHY BUILDING_FIELDS_AND_METHODS COLLECTING_ITDS_AND_DECLARES PROCESSING_DECLARE_ANNOTATIONS WEAVING_INTERTYPE_DECLARATIONS RESOLVING_POINTCUT_DECLARATIONS ADDING_DECLARE_WARNINGS_AND_ERRORS VALIDATING_AT_ASPECTJ_ANNOTATIONS ACCESS_FOR_INLINE ADDING_AT_ASPECTJ_ANNOTATIONS FIXING_SUPER_CALLS_IN_ITDS FIXING_SUPER_CALLS OPTIMIZING_THIS_JOIN_POINT_CALLS WEAVING PROCESSING_REWEAVABLE_STATE PROCESSING_TYPE_MUNGERS WEAVING_ASPECTS WEAVING_CLASSES WEAVING_TYPE MATCHING_SHADOW IMPLEMENTING_ON_SHADOW MATCHING_POINTCUT MUNGING_WITH PROCESSING_ATASPECTJTYPE_MUNGERS_ONLY PHASE_NAMES contextMap contextStack formatterMap defaultFormatter multiThreaded tokenId contextToken phaseId dataRef org.aspectj.bridge.context.CompilationAndWeavingContext  \"FRONT END\"\r\n  phase names\r\n  context stacks, one per thread\r\n  single thread mode stack\r\n  formatters, by phase id\r\n  for testing...\r\n  dumb data structure\r\n  don't lose vital info because of bad toString\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","IndeterminateArgsCE":"     ","AnnotationAnnotationValue":" getAnnotation stringify toString value org.aspectj.weaver.AnnotationAnnotationValue  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","AnnotatedMethods":" method1 method2 method1 method2  AnnotatedMethods AnnotatedMethods  ","StringTransformer":" transformToUpper transformToLower transformToUpper transformToLower  ca.ubc.cs.spl.aspectPatterns.examples.facade.aspectj.StringTransformer ca.ubc.cs.spl.aspectPatterns.examples.facade.java.StringTransformer  ","CommentAfterClass":" main test  CommentAfterClass  ","Delta.30":" foo  secondary.Delta secondary.DeltaExtra  ","IntroducedDocImpl":" dec createTargets member name findMember toString introducedDec member org.aspectj.tools.ajdoc.IntroducedDocImpl  used by findMember\r\n  XXX weakEquals is unimplemented\r\n  why fixup only fields?\r\n  XXX unused?\r\n  XXX\r\n  PR790, 712\r\n  TODO: a little hacky now\r\n /*\r\n         * HACK:\r\n         * Because the compiler doesn't resolve the types\r\n         * of introductions, yet, we have to set the introduced\r\n         * doc (member) with the appropriate fields, whether it's a\r\n         *  - field\r\n         *  - method\r\n         *  - constructor\r\n         */\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","ThreadCounterImpl11":" getThreadCounter inc dec isNotZero counters cached_thread cached_counter change_count COLLECT_AT MIN_COLLECT_AT value org.aspectj.runtime.internal.cflowstack.ThreadCounterImpl11  should be >1 b /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n * \t\t\t\t\t   Copied from bits of original CFlowStack\r\n * ******************************************************************/\r\n","TreeWriter":" print generateLevelInfo generateTree generate del org.aspectj.tools.doclets.standard.TreeWriter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","WeaveOrderTestCase":" testLexicalOrder testLexicalOrderWithAfter testSubtypes testDominates testDominatesHarder makeConcreteAdvice  org.aspectj.weaver.bcel.WeaveOrderTestCase  ??? concretize dom\r\n  ??? concretize dom\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","NewarrayJoinpointTests":" testTheBasics_1 testTheBasics_2 testWhatShouldntMatch testThisJoinPoint testDifferentAdviceKinds testArgs testBasicWithAPrimitiveArray testBasicWithAMultiDimensionalArray testArgsWithAMultiDimensionalArray testOptionoff testUsingTargetAndAfterReturningAdvice testUsingItForReal testDifferentiatingArrayTypes testStructureModel suite getSpecFile  org.aspectj.systemtest.ajc151.NewarrayJoinpointTests  when its the creation of a new 'object' (not a primitive) single dimension array\r\n  when it is the creation of a new array of primitives\r\n  when it is the creation of a new multi-dimensional array\r\n  various\r\n  AsmManager.setReporting(\"c:  \r\n ","CloneablePoint.20":"     ","ITestVisitor":" visit visit visit visit visit visit visit visit visit  org.aspectj.weaver.ast.ITestVisitor  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","MultiProjectIncrementalTests":" testDontLoseAdviceMarkers_pr134471 testTheBasics testInvalidAspectpath_pr121395 testSimpleChanges testAddingAnAspect testBuildingTwoProjectsInTurns testBuildingTwoProjectsMakingSmallChanges testPr134371 testBuildingTwoProjectsAndVerifyingModel testBuildingTwoProjectsAndVerifyingStuff testStateManagement1 testStateManagement2 testStateManagement3 testStateManagement4 testStateManagement5 testBuildingDependantProjects testPr85132 testPr125405 testPr128618 testPr92837 testPr119570 testPr119570_2 testPr117209 testPr114875 testPr117882 testPr117882_2 testPr115251 testPr141956_IncrementallyCompilingAtAj testPr121384 testPr93310_1 testPr93310_2 testPr113531 testPr119882 testPr112736 testPr113257 testPr123612 testPr152257 testPr128655 testPr128655_2 testPr129163 testPr129163_2 testPr129163_3 testPr133117 testPr131505 testPr136585 testPr133532 testPr133532_2 testPr134541 testJDTLikeHandleProviderWithLstFile_pr141730 testMovingAdviceDoesntChangeHandles_pr141730 testSwappingAdviceAndHandles_pr141730 testInitializerCountForJDTLikeHandleProvider_pr141730 testPr134471_IncrementalCompilationAndModelUpdates testPr134471_MovingAdvice testAddingAndRemovingDecwWithStructureModel testPr134471_IncrementallyRecompilingTheAffectedClass testPr134471_IncrementallyRecompilingAspectContainingDeclare testPr134471_IncrementallyRecompilingTheClassAffectedByDeclare testDontLoseXlintWarnings_pr141556 testLintMessage_pr141564 testAdviceDidNotMatch_pr152589 getRelatedElements getFirstRelatedElement getRelatedElements findAdvice findAdvice findCode findCode checkCompileWeaveCount checkWasntFullBuild checkWasFullBuild checkForNode printModel alter log checkXMLAspectCount getProjectRelativePath getProjectOutputRelativePath  org.aspectj.systemtest.incremental.tools.MultiProjectIncrementalTests  see pr148027 AsmHierarchyBuilder.shouldAddUsesPointcut=true;\r\n  see pr148027 AsmHierarchyBuilder.shouldAddUsesPointcut=false;\r\n  In inc1 the first advised line is 'commented out'\r\n  This will be the line 6 entry in C.java\r\n  This will be the line 7 entry in A.java\r\n  This first build will be batch\r\n  Compile a single simple project\r\n  This first build will be batch\r\n  source code doesnt matter, we are checking invalid path handling\r\n  This first build will be batch\r\n  adds a single class\r\n  Make simple changes to a project, adding a class\r\n  build 1, weave 1\r\n  adds a class\r\n  adds an aspect\r\n  build 1,\r\n  it *will* be a full build under the new\r\n  we compile X and A (the delta) find out that\r\n  and compile X,A,C, then weave them all.\r\n  On my config, first build time is 2093ms  and the second is 30ms\r\n  Make simple changes to a project, adding a class and an aspect\r\n  adds a class\r\n  adds an aspect\r\n  adding an aspect makes us go back to the source\r\n  structure model is right after each build\r\n  full build\r\n  adds a method to the class C.java\r\n  need this change in here so 'inc4' can be applied without making\r\n  full build\r\n  changes body of main() method but does *not* change the structure of C.java\r\n  full build\r\n  adds a space to C.java\r\n  full build\r\n  minor change to C.java\r\n  full build\r\n  minor change to C.java\r\n  now everything is consistent and compiled\r\n  adds a second class\r\n  although a second class was added - P2 can't be using it, so we don't full build here :)\r\n  structurally changes one of the classes\r\n  build notices the structural change\r\n  build sees a change but works out its not structural\r\n  \"only abstract aspects can have type parameters\"\r\n  parameterization of generic aspects\r\n  If you fiddle with the compiler options - you must manually reset the options at the end of the test\r\n  back to the source for an aspect change\r\n  AjdeInteractionTestbed.configureBuildStructureModel(true);\r\n  back to the source for an aspect\r\n  AjdeInteractionTestbed.configureBuildStructureModel(true);\r\n  back to the source...\r\n  AjdeInteractionTestbed.VERBOSE=true;\r\n  back to the source\r\n  AsmManager.setReporting(\"c:  Stage3: Add a new aspect whilst there is a compile error !\r\n  fullBuild(\"PR119882\");\r\n  There shouldn't be a BCExcpetion saying can't find delegate for pack.C2\r\n  back to the source\r\n  back to the source\r\n  Bugzilla Bug 152257 - Incremental compiler doesn't handle exception declaration correctly\r\n  back to the source\r\n  check they are the same\r\n  back to the source\r\n  check they are the same\r\n  Similar to above, but now the annotation is in the default package\r\n  test for comment #31 - NPE\r\n  want to behave like AJDT\r\n  shouldn't be a full build because the\r\n  aspect hasn't changed\r\n  we shouldn't go back to source.\r\n  should be a full build because initializing project\r\n  should be a full build because initializing project\r\n  should be an incremental build because although\r\n  changed so we shouldn't go back to source\r\n  should be an incremental build because nothing has\r\n  within the running of the test\r\n  correctly that we don't have to go back to source.\r\n  System.exit();\r\n  aop.xml file shouldn't contain any aspects\r\n  add a new aspect A which should be included in the aop.xml file\r\n  of the aop.xml file\r\n  ...there should be no duplicate entries in the file\r\n  delete aspect A1 which meanss that aop.xml file should only contain A\r\n  and pkg.A should be included in the aop.xml file\r\n  the line number has changed... but nothing structural about the code\r\n  the line number has changed... but nothing structural about the code\r\n  of the buildconfig file\r\n  add a line which shouldn't change the handle\r\n  handle as 'after(): execPCD..' originally did.\r\n  see pr148027 AsmHierarchyBuilder.shouldAddUsesPointcut=false;\r\n  Step1.  Build the code, simple advice from aspect A onto class C\r\n  Step2. Quick check that the advice points to something...\r\n  Step3. Check the advice applying at the first 'code' join point in pkg.C is from aspect pkg.A, line 7\r\n  Step4. Simulate the aspect being saved but with no change at all in it\r\n  Step5. Quick check that the advice points to something...\r\n  Step6. Check the advice applying at the first 'code' join point in pkg.C is from aspect pkg.A, line 7\r\n  134471 related tests perform incremental compilation and verify features of the structure model post compile\r\n  Step1. build the project\r\n  Step2. confirm advice is from correct location\r\n  Step3. No structural change to the aspect but the advice has moved down a few lines... (change in source location)\r\n  the line number has changed... but nothing structural about the code\r\n  the line number has changed... but nothing structural about the code\r\n  Step4. Check we have correctly realised the advice moved to line 11\r\n  now the advice moves down a few lines - hopefully the model will notice... see discussion in 134471\r\n  see pr148027 AsmHierarchyBuilder.shouldAddUsesPointcut=false;\r\n  Step1. build the project\r\n  Step2. confirm advice is from correct location\r\n  Step3. No change to the aspect at all\r\n  Step4. Quick check that the advice points to something...\r\n  Step5. No change to the file C but it should still be advised afterwards\r\n  Step6. confirm advice is from correct location\r\n  same as first test with an extra stage that asks for C to be recompiled, it should still be advised...\r\n  Step1. build the project\r\n  Step2. confirm declare warning is from correct location, decw matches line 7 in pkg.C\r\n  Step3. confirm advice is from correct location, advice matches line 6 in pkg.C\r\n  Step4. Move declare warning in the aspect\r\n  the line number has changed... but nothing structural about the code\r\n  the line number has changed... but nothing structural about the code\r\n  Step5. confirm declare warning is from correct location, decw (now at line 12) in pkg.A matches line 7 in pkg.C\r\n  Step6. Now just simulate 'resave' of the aspect, nothing has changed\r\n  Step7. confirm declare warning is from correct location, decw (now at line 12) in pkg.A matches line 7 in pkg.C\r\n  similar to previous test but with 'declare warning' as well as advice\r\n  Step1. build the project\r\n  Step2. confirm declare warning is from correct location, decw matches line 7 in pkg.C\r\n  Step3. confirm advice is from correct location, advice matches line 6 in pkg.C\r\n  Step4. Move declare warning in the aspect\r\n  the line number has changed... but nothing structural about the code\r\n  the line number has changed... but nothing structural about the code\r\n  Step5. confirm declare warning is from correct location, decw (now at line 12) in pkg.A matches line 7 in pkg.C\r\n  Step6. Now just simulate 'resave' of the aspect, nothing has changed\r\n  Step7. confirm declare warning is from correct location, decw (now at line 12) in pkg.A matches line 7 in pkg.C\r\n  Step8. Now just simulate resave of the pkg.C type - no change at all... are relationships gonna be repaired OK?\r\n  Step9. confirm declare warning is from correct location, decw (now at line 12) in pkg.A matches line 7 in pkg.C\r\n  similar to previous test but with 'declare warning' as well as advice\r\n  add a space to the Aspect but dont do a build\r\n  remove the space so that the Aspect is exactly as it was\r\n  build the project and we should not have lost the xlint warning\r\n /*\r\n\tA.aj\r\n\tpackage pack;\r\n\tpublic aspect A {\r\n\t        pointcut p() : call(* C.method\r\n\t        before() : p() { // line 7\r\n\t        }\r\n\t}\r\n\r\n\tC.java\r\n\tpackage pack;\r\n\tpublic class C {\r\n\t        public void method1() {\r\n\t          method2(); // line 6\r\n\t        }\r\n\t        public void method2() {   }\r\n\t        public void method3() { \r\n\t          method2();  // line 13\r\n\t        }\r\n\r\n\t}*/\r\n /*IProgramElement*/\r\n /*IRelationship*/\r\n /*String*/\r\n /*IProgramElement*/\r\n /*\r\n\t * Applies an overlay onto the project being tested - copying\r\n\t * the contents of the specified overlay directory.\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n * Andy Clement          initial implementation\r\n* ******************************************************************/\r\n","AjTypeDeclaration":" clone0 internalGetSetBooleanProperty propertyDescriptors isAspect setAspect getPointcuts getSuperInterfaceNames getTypeParameters ASPECT_PROPERTY ajPROPERTY_DESCRIPTORS_2_0 ajPROPERTY_DESCRIPTORS_3_0 isAspect org.aspectj.org.eclipse.jdt.core.dom.AjTypeDeclaration  $NON-NLS-1$\r\n  Need to fix up the property lists created during the super's static initializer\r\n  Need to fix up the property lists created during the super's static initializer\r\n  allow default implementation to flag the error\r\n  ajh02: method added, currently returning none :-  ajh02: 0 bodyDeclarations :- /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n","Unknown":" accept dump getBytes getName setBytes toString copy bytes name org.aspectj.apache.bcel.classfile.Unknown  ","ErrPrinter":" printError printWarning printNotice getNumErrors getNumWarnings getKeys getMsgs invocationTargetException internalError internalError error error error error error ex ex ex ex ex warning warning warning warning warning notice notice notice notice notice text text text text text text string getErr getOut instance programName out err bundle keys msgs cnt org.aspectj.tools.ajdoc.ErrPrinter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","SynchronizedMethodsOnInterfaces":"     ","AjMethodDeclaration":" addAttribute generateInfoAttributes generateInfoAttributes addDeclarationStartLineAttribute attributes org.aspectj.ajdt.internal.compiler.ast.AjMethodDeclaration  used by @AspectJ visitor to add pointcut attribute to @Advice\r\n  add extra attributes into list then call 2-arg version of generateInfoAttributes...\r\n ","CounterMemento":" setState getState state ca.ubc.cs.spl.aspectPatterns.examples.memento.java.CounterMemento  ","AbstractAspectNPEChild":" method test  ataspectj.bugs.AbstractAspectNPEChild  ","Pack":" method  pack.Pack  ","Orleans":"     ","DefineInterface":"     ","VerifierFactory":" getVerifier notify getVerifiers attach detach hashMap observers org.aspectj.apache.bcel.verifier.VerifierFactory  notify the observers\r\n  Because vs is big enough, vs is used to store the values into and returned!\r\n ","BracketDecorator":" print  ca.ubc.cs.spl.aspectPatterns.examples.decorator.java.BracketDecorator  ","ConstructorSignature":" getConstructor  org.aspectj.lang.reflect.ConstructorSignature  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DisplayUpdating":"     ","Test$$EnhancerByCGLIB$$12345":" main  com.foo.bar.Test$$EnhancerByCGLIB$$12345  ","CircularFolding":" main x x x CircularFolding Hoo Goo  ","PerObjectInterfaceTypeMunger":" equals hashCode getTestTypePattern write getInterfaceType getTestPointcut matches isLateMunger interfaceType testPointcut lazyTestTypePattern hashCode org.aspectj.weaver.PerObjectInterfaceTypeMunger  reset hashCode so that its recalculated with the new lazyTestTypePattern\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC                 initial implementation\r\n *     Alexandre Vasseur    rearchitected for #75442 finer grained matching\r\n * ******************************************************************/\r\n","NullIdeStructureViewRenderer":" updateView setActiveNode setActiveNode getHasBeenNotified setHasBeenNotified hasBeenNotified org.aspectj.ajde.ui.NullIdeStructureViewRenderer  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","TypeNotExposed":"     ","RuntimeVisibleParameterAnnotationAttributeTest":" setUp testAccessingRuntimeVisibleParameterAnnotations testAccessingParameterAnnotationsThroughGetAnnotations testParameterAnnotationsReadWrite checkFooMethod checkAnnotation checkValue tearDown  org.aspectj.apache.bcel.classfile.tests.RuntimeVisibleParameterAnnotationAttributeTest  Write it out\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation \r\n * ******************************************************************/\r\n","POP":" accept  org.aspectj.apache.bcel.generic.POP  ","ReferenceTypeTestCase":" testIsRawTrue testIsRawFalse testIsGenericTrue testIsGenericFalse testIsRawTrue testIsRawFalse testIsGenericTrue testIsGenericFalse  org.aspectj.weaver.ReferenceTypeTestCase org.aspectj.weaver.ReferenceTypeTestCase  XXX - couldn't find any unit test cases for the rest of the ReferenceType class\r\n  XXX - couldn't find any unit test cases for the rest of the ReferenceType class\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","JoinPointSignatureIterator":" reset hasNext next remove addSignaturesUpToFirstDefiningMember accumulateTypesInBetween shouldWalkUpHierarchy findSignaturesFromSupertypes isVisibleTo warnOnMissingType signaturesOfMember firstDefiningMember firstDefiningType world discoveredSignatures additionalSignatures discoveredSignaturesIterator superTypeIterator visitedSuperTypes yetToBeProcessedSuperMembers iteratingOverDiscoveredSignatures couldBeFurtherAsYetUndiscoveredSignatures member type org.aspectj.weaver.JoinPointSignatureIterator  new ArrayList();\r\n  first defining type\r\n  Aha, this must be the array constructor call join point - a 'special'...\r\n  focus on one problem at a time...\r\n  we haven't looked in this type yet\r\n  issue a warning, stop looking for join point signatures in this line\r\n  declaring type can be unresolved if the member can from an ITD...\r\n  for next time we are reset\r\n  for this time\r\n  for next time we are reset\r\n  for this time\r\n  if this was a parameterized type, look in the generic type that backs it too\r\n  which it should be...\r\n /*JoinPointSignature*/\r\n /*SearchPair*/\r\n /* (non-Javadoc)\r\n\t * @see java.util.Iterator#hasNext()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.util.Iterator#next()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.util.Iterator#remove()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","RequestCounter":" safeRequest regularRequest unsafeRequest realSubject regularRequests ca.ubc.cs.spl.aspectPatterns.examples.proxy.java.RequestCounter  ","Sixteen":"     ","RuntimeInvisibleParameterAnnotations":" accept copy  org.aspectj.apache.bcel.classfile.annotation.RuntimeInvisibleParameterAnnotations  ","BadCast":"     ","BasicEditor":" getCurrFile showSourceLine showSourceLine pasteToCaretPos showSourceLine showSourcelineAnnotation addEditorViewForSourceLine saveContents getPanel showSourceForFile showSourceForLine showSourceForSourceLine getCurrSourceFilePath setBreakpointRequest clearBreakpointRequest readFile jbInit NO_FILE filePath editor_panel currHighlightStart currHighlightEnd borderLayout1 jScrollPane1 editorPane org.aspectj.tools.ajbrowser.BasicEditor  @todo    get rid of these\r\n  URL url = ClassLoader.getSystemResource(filePath);\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","One":"  i1 One  ","FooProducer":" main N_METHODS N_STATEMENTS FooProducer  ","ImportInnerFromInterfaceImplementor":"   pack.C  ","HandleProviderDelimiter":" getDelimiter getDelimiter JAVAPROJECT PACKAGEFRAGMENT FIELD METHOD INITIALIZER COMPILATIONUNIT CLASSFILE TYPE IMPORTDECLARATION COUNT ESCAPE PACKAGEFRAGMENTROOT PACKAGEDECLARATION LOCALVARIABLE TYPE_PARAMETER ASPECT_CU ADVICE ASPECT_TYPE CODEELEMENT ITD DECLARE POINTCUT empty delim org.aspectj.asm.internal.HandleProviderDelimiter  taken from JavaElement\r\n  these below are not currently used because no iprogramelement.kind equivalent\r\n  AspectJ specific ones\r\n ","PR417b":" main run INT i b l d f s c PR417b  ","PR417a":" main run INT i b l d f s c INT i b l d f s c PR417a  ","BuildClasspathTest":" testKindsGet same testClasspath testBuildClasspath print  org.aspectj.internal.build.BuildClasspathTest  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg       initial implementation \r\n * ******************************************************************/\r\n","BcweaverModuleTests15":" suite  org.aspectj.weaver.BcweaverModuleTests15  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","LineNumberGen":" containsTarget updateTarget getLineNumber setInstruction clone getInstruction setSourceLine getSourceLine ih src_line org.aspectj.apache.bcel.generic.LineNumberGen  ","CodeExceptionGen":" getCodeException setStartPC setEndPC setHandlerPC updateTarget containsTarget setCatchType getCatchType getStartPC getEndPC getHandlerPC toString clone start_pc end_pc handler_pc catch_type org.aspectj.apache.bcel.generic.CodeExceptionGen  /* Set start of handler \r\n   * @param start_pc Start of handled region (inclusive)\r\n   */\r\n /* Set end of handler \r\n   * @param end_pc End of handled region (inclusive)\r\n   */\r\n /* Set handler code\r\n   * @param handler_pc Start of handler\r\n   */\r\n","EnergyPacket":" getSize getEnergy handleCollision getSize getEnergy handleCollision getSize getEnergy handleCollision getSize getEnergy handleCollision getSize getEnergy handleCollision SIZE energy SIZE energy SIZE energy SIZE energy SIZE energy spacewar.EnergyPacket spacewar.EnergyPacket spacewar.EnergyPacket spacewar.EnergyPacket spacewar.EnergyPacket  Can't be changed for now!!!\r\n  Can't be changed for now!!!\r\n  Can't be changed for now!!!\r\n  Can't be changed for now!!!\r\n  Can't be changed for now!!!\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nEnergyPacket.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nEnergyPacket.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nEnergyPacket.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nEnergyPacket.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n","ObviousTraceNothing":"     ","Context":"     ","OfEachObjectDoc":" instances  org.aspectj.ajdoc.OfEachObjectDoc  public com.sun.javadoc.ClassDoc[] instances();\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","pr109728":"     ","TagImpl":" doc err start ident space split name toString kind text setText locale inlineTags firstSentenceTags locale err name text doc org.aspectj.tools.ajdoc.TagImpl  doc());\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","TypePatternMatcherImpl":" matches pattern world org.aspectj.weaver.internal.tools.TypePatternMatcherImpl  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","PrivateCall_Instance_Package2":" test main  def.PrivateCall_Instance_Package2  ","PrivateCall_Instance_Package1":"     ","IntRange":" make isValid acceptInt inRange inRange toString NONE ZERO ONE OPTIONAL MANY POSITIVE NEGATIVE ANY min max cache org.aspectj.testing.util.IntRange  create cache to view during debugging\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2000 Xerox Corporation. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ContextToken":"   org.aspectj.bridge.context.ContextToken  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","CalloutEmitter":" setupCallouts characters formatPad addCallout endElement startElement skipThisElement closeOpenElements openClosedElements getNameCode getAttributes getNamespaces getNSCount setupCallouts characters formatPad addCallout endElement startElement skipThisElement closeOpenElements openClosedElements getNameCode getAttributes getNamespaces getNSCount elementStack tempStack firstElement foURI defaultColumn foStylesheet lineNumber colNumber callout calloutCount calloutPos fCallout _nameCode _attributes _namespaces _nscount elementStack tempStack firstElement foURI defaultColumn foStylesheet lineNumber colNumber callout calloutCount calloutPos fCallout _nameCode _attributes _namespaces _nscount com.nwalsh.saxon.CalloutEmitter com.nwalsh.saxon.CalloutEmitter  <  Now sort them\r\n  If we hit characters, then there's no first element...\r\n  if there are any text nodes, there's at least one line\r\n  Walk through the text node looking for callout positions\r\n  What if we need to pad this line?\r\n  Now let's see if we can interpret the coordinates...\r\n  Make sure we aren't going to blow past the end of our array\r\n  if there's only one number, assume it's the line\r\n  assume linecolumn\r\n  Ok, add the callout\r\n  be empty when we get to the end of the first element...\r\n  Don't push the outer-most wrapping div, pre, or fo:block\r\n  Close all the open elements...\r\n  Now \"reopen\" the elements that we closed...\r\n  <  Now sort them\r\n  If we hit characters, then there's no first element...\r\n  if there are any text nodes, there's at least one line\r\n  Walk through the text node looking for callout positions\r\n  What if we need to pad this line?\r\n  Now let's see if we can interpret the coordinates...\r\n  Make sure we aren't going to blow past the end of our array\r\n  if there's only one number, assume it's the line\r\n  assume linecolumn\r\n  Ok, add the callout\r\n  be empty when we get to the end of the first element...\r\n  Don't push the outer-most wrapping div, pre, or fo:block\r\n  Close all the open elements...\r\n  Now \"reopen\" the elements that we closed...\r\n ","ReflectOnCodeStyleITDs":" main runTests testDeclaredInterTypeConstructors testInterTypeConstructors testDeclaredInterTypeMethods testInterTypeMethods testDeclaredInterTypeFields testInterTypeFields assertEquals  ReflectOnCodeStyleITDs  ","BrowserOptionsPanel":" loadOptions saveOptions jbInit serialVersionUID runOptions_panel build_panel flowLayout1 classToRun_field jLabel4 borderLayout4 buildPaths_panel compileOptions_box2 classpath_field outputPath_field jLabel16 jLabel15 compileOptions_box3 borderLayout1 border1 titledBorder1 border2 border3 titledBorder2 border4 org.aspectj.tools.ajbrowser.BrowserOptionsPanel  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Class2HTML":" main referenceClass referenceType toHTML writeMainHTML java_class dir class_package class_name constant_pool org.aspectj.apache.bcel.util.Class2HTML  current class object\r\n  name of package, unclean to make it static, but ...\r\n  name of current class, dito\r\n  Remember full name\r\n  Get package name by tacking off everything after the last `.'\r\n  default package\r\n  Write main file (with frames, yuk)\r\n  Where to store HTML files\r\n  add file name to list *  Specify target directory, default `.�\r\n  Create target directory if necessary\r\n  command line switch\r\n  Create parser object from zip file\r\n  Create parser object from file\r\n  Loop through files ...\r\n  Type is an array?\r\n  Tack of the `['\r\n  test for basic type\r\n  Never occurs\r\n  Filter any characters HTML doesn't like such as < and > in particular\r\n /* Attributes can't be written in one step, so we just open a file\r\n     * which will be written consequently.\r\n     */\r\n /* Parse command line arguments.\r\n       */\r\n","AbstractCflows":"     ","StaticCodeConstraintException":"   org.aspectj.apache.bcel.verifier.exc.StaticCodeConstraintException  ","ConstantPool":" accept constantToString escape constantToString dump getConstant getConstant getConstantPool getConstantString getLength setConstant setConstantPool toString copy constant_pool_count constant_pool org.aspectj.apache.bcel.classfile.ConstantPool  Never reached\r\n  Finally get the string from the constant pool\r\n /* Quote from the JVM specification:\r\n       * \"All eight byte constants take up two spots in the constant pool.\r\n       * If this is the n'th byte in the constant pool, then the next item\r\n       * will be numbered n+2\"\r\n       * \r\n       * Thus we have to increment the index counter.\r\n       */\r\n /* constant_pool[0] is unused by the compiler and may be used freely\r\n     * by the implementation.\r\n     */\r\n /* This switch() is not that elegant, since the two classes have the\r\n     * same contents, they just differ in the name of the index\r\n     * field variable.\r\n     * But we want to stick to the JVM naming conventions closely though\r\n     * we could have solved these more elegantly by using the same\r\n     * variable name or by subclassing.\r\n     */\r\n","WeaveMessage":" constructWeavingMessage constructWeavingMessage getAspectname getAffectedtypename getMessage WEAVEMESSAGE_DECLAREPARENTSIMPLEMENTS WEAVEMESSAGE_ITD WEAVEMESSAGE_ADVISES WEAVEMESSAGE_DECLAREPARENTSEXTENDS WEAVEMESSAGE_SOFTENS WEAVEMESSAGE_ANNOTATES affectedtypename aspectname message org.aspectj.bridge.WeaveMessage  %7 is information like \"[with runtime test]\"\r\n  private ctor - use the static factory method\r\n  private int id;\r\n  this.id = id;\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement IBM     initial implementation 30-May-2004\r\n * ******************************************************************/\r\n","SimpleAnnotationValue":" setValueString setValueByte setValueChar setValueInt stringify toString theByte theChar theInt theString theDouble theFloat theLong theShort theBoolean org.aspectj.weaver.SimpleAnnotationValue  byte\r\n  char\r\n  double\r\n  float\r\n  int\r\n  long\r\n  short\r\n  boolean\r\n  String\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","After":"     ","NoAspect":"     ","Selfex":" testExclusion enterExclusion exitExclusion printNames testExclusion enterExclusion exitExclusion printNames testExclusion enterExclusion exitExclusion printNames testExclusion enterExclusion exitExclusion printNames testExclusion enterExclusion exitExclusion printNames methodName thread count methodName thread count methodName thread count methodName thread count methodName thread count coordination.Selfex coordination.Selfex coordination.Selfex coordination.Selfex coordination.Selfex  note that if count wasn't 0\r\n  not stricly necessary, but...\r\n  note that if count wasn't 0\r\n  not stricly necessary, but...\r\n  note that if count wasn't 0\r\n  not stricly necessary, but...\r\n  note that if count wasn't 0\r\n  not stricly necessary, but...\r\n  note that if count wasn't 0\r\n  not stricly necessary, but...\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","SuperInIntroductionCE":"     ","GlobalViewProperties":" setGranularity getGranularity setHierarchy getHierarchy getName granularity hierarchy org.aspectj.ajde.ui.GlobalViewProperties  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Display":" windowClosing addToFrame windowClosing actionPerformed windowClosing actionPerformed needsRepaint frame display display display display observer.Display ca.ubc.cs.spl.aspectPatterns.examples.abstractFactory.aspectj.Display ca.ubc.cs.spl.aspectPatterns.examples.abstractFactory.java.Display figures.Display  /*\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n*/\r\n","AnotherPackageInterface":"   anotherPackage.AnotherPackageInterface  ","AjTypeTests":" setUp testCreateAjType testGetName testGetPackage testGetInterfaces testGetModifiers testGetSupertype testObjectSupertype testInterfaceSupertype testGetGenericSupertype testGetEnclosingMethod testGetEnclosingConstructor testGetEnclosingType testGetDeclaringType testIsAnnotationPresent testGetAnnotation testGetAnnotations testGetDeclaredAnnotations testGetAjTypes testGetDeclaredAjTypes testGetConstructor testGetConstructors testGetDeclaredConstructor testGetDeclaredConstructors testGetDeclaredField testGetDeclaredFields testGetField testGetFields testGetDeclaredMethod testGetMethod testGetDeclaredMethods testGetMethods testGetEnumConstants testGetTypeParameters testIsEnum testIsInstance testIsInterface testIsLocalClass testIsArray testIsPrimitive testIsAspect testIsMemberAspect testIsPrivileged testEquals testHashCode foo stringType y x z xx g g2 org.aspectj.internal.lang.reflect.AjTypeTests org.aspectj.internal.lang.reflect.Foo org.aspectj.internal.lang.reflect.Goo  Alex -> Adrian: looks like you can not make assumption on the ordering\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer       initial implementation \r\n * ******************************************************************/\r\n","ConcreteImplementingClass":" asInt  ConcreteImplementingClass  make sure this method starts on line 5...\r\n ","ConstructorNotFound_PR408":" main  ConstructorNotFound_PR408  ","Click":" hasShiftMask hasAltMask hasCtrlMask hasShiftMask hasAltMask hasCtrlMask description description ca.ubc.cs.spl.aspectPatterns.examples.chainOfResponsibility.aspectj.Click ca.ubc.cs.spl.aspectPatterns.examples.chainOfResponsibility.java.Click  ","DNEG":" accept  org.aspectj.apache.bcel.generic.DNEG  ","DeclarationsInLoopsCE":"     ","Ops":" main  Ops  boolean\r\n  int unary\r\n  int+\r\n  int-\r\n  int*\r\n  int  Tester.checkEqual(2   Tester.checkEqual(1   Tester.checkEqual(0   Tester.checkEqual(-1   Tester.checkEqual(-2   int%\r\n  Tester.checkEqual(2 % 0, 99, \"2 % 0\");\r\n  Tester.checkEqual(1 % 0, 99, \"1 % 0\");\r\n  Tester.checkEqual(0 % 0, 99, \"0 % 0\");\r\n  Tester.checkEqual(-1 % 0, 99, \"-1 % 0\");\r\n  Tester.checkEqual(-2 % 0, 99, \"-2 % 0\");\r\n  int&\r\n  int|\r\n  int^\r\n  int<<\r\n  int>>\r\n  int>>>\r\n  long unary\r\n  long+\r\n  long-\r\n  long*\r\n  long  Tester.checkEqual(2L   Tester.checkEqual(1L   Tester.checkEqual(0L   Tester.checkEqual(-1L   Tester.checkEqual(-2L   long%\r\n  Tester.checkEqual(2L % 0L, 99L, \"2 % 0\");\r\n  Tester.checkEqual(1L % 0L, 99L, \"1 % 0\");\r\n  Tester.checkEqual(0L % 0L, 99L, \"0 % 0\");\r\n  Tester.checkEqual(-1L % 0L, 99L, \"-1 % 0\");\r\n  Tester.checkEqual(-2L % 0L, 99L, \"-2 % 0\");\r\n  long&\r\n  long|\r\n  long^\r\n  long<<\r\n  long>>\r\n  long>>>\r\n ","Literal":" accept toString noTest val TRUE FALSE org.aspectj.weaver.ast.Literal  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","BaseTypes":" main m  BaseTypes A B C  ","AjTypeConstants":" getJoinPointType getJoinPointStaticPartType getAroundClosureType getConversionsType getConversionMethodToObject getConversionMethodFromObject ORG ASPECTJ RUNTIME LANG INTERNAL ORG_ASPECTJ_LANG_JOINPOINT ORG_ASPECTJ_LANG_JOINPOINT_STATICPART ORG_ASPECTJ_RUNTIME_INTERNAL_AROUNDCLOSURE ORG_ASPECTJ_RUNTIME_INTERNAL_CONVERSIONS org.aspectj.ajdt.internal.compiler.lookup.AjTypeConstants  Constant compound names\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","PointcutRewriter":" rewrite rewrite isDNF isDNFHelper format distributeNot pullUpDisjunctions not createAndsFor removeDeclaringTypePattern simplifyAnds simplifyAnd sortOrs removeNothings collectAndNodes collectOrNodes isNot isAnd isOr isExecution isWithinCode isAnyType WATCH_PROGRESS org.aspectj.weaver.patterns.PointcutRewriter  if (WATCH_PROGRESS) System.out.println(\"Removing nothings gives    ==> \" + format(result));\r\n  s=s.replaceAll(\"if.true.\",\"N\");\r\n  !(X || Y) => !X && !Y\r\n  !(X && Y) => !X || !Y\r\n  !!X => X\r\n  !(X || Y) => !X && !Y\r\n  dive into left and right here...\r\n  (A || B) && (C || D) => (A && C) || (A && D) || (B && C) || (B && D)\r\n  A && (B || C) => (A && B) || (A && C)\r\n  (A || B) && C => (A && C) || (B && C)\r\n  (A || B) && (C || D) =>  (�A && B && �C && D) || (B && C) || (A && �C && D) || (A && �B && C)\r\n  dumb case\r\n  recursion exit case\r\n  otherwise ...\r\n  !!X => X\r\n  - the result is written out with the least expensive branch leftmost\r\n  If it can't match anything, the whole AND can't match anything\r\n  look for A and !A, or IfFalse\r\n  write out with cheapest on left\r\n  write out with cheapest on left\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","Canvas":" updateHistory updateHistory updateHistory updateHistory updateHistory updateHistory  figures.Canvas figures.Canvas figures.Canvas figures.Canvas  /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n","BcweaverJarMaker":" main makeJar0 makeJar1 makeJarObviousNothing makeJarHardNothing makeJar1a makeJar2 makeTestJars makeURLWeavingClassLoaderJars buildJarWithClasspath buildShowWeaveInfoTestingJars makeDuplicateManifestTestJars makeAspectPathTestJars makeAjc11TestJars makeOutjarTestJars cp org.aspectj.ajdt.internal.compiler.batch.BcweaverJarMaker  For PR55341\r\n  buildJarWithClasspath(\"Simple_nodebug.jar\",\"Simple.java\",null,true);\r\n /*\r\n\t\t * Vanilla classes\r\n\t\t */\r\n /* \r\n\t\t * Woven classes\r\n\t\t */\r\n /*\r\n\t\t * Advice\r\n\t\t */\r\n /*\r\n\t\t * Declare warning advice\r\n\t\t */\r\n /*\r\n\t\t * Declare error advice\r\n\t\t */\r\n /*\r\n\t\t * Around closure advice\r\n\t\t */\r\n /*\r\n\t\t * ITD\r\n\t\t */\r\n /*\r\n\t\t * perXXX()\r\n\t\t */\r\n /*\r\n\t\t * injar\r\n\t\t */\r\n /*\r\n\t\t * aspectjar\r\n\t\t */\r\n /*\r\n\t\t * parent\r\n\t\t */\r\n /*\r\n\t\t * child\r\n\t\t */\r\n /*\r\n\t\t * aspects\r\n\t\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","InterTypeDeclaration":" getDeclaringType getTargetType getModifiers setOnType setDeclaredModifiers setSelector getPrefix addAtAspectJAnnotations isTargetAnnotation isTargetEnum resolve fixSuperCallsForInterfaceContext build fixSuperCallsInBody resolveOnType resolveTypeParametersForITDOnGenericType checkSpec makeEffectiveSignatureAttribute setMunger generateInfoAttributes getShadowKindForBody getSignature getDeclaredSelector getOnType determineTypeVariableAliases ensureScopeSetup onType onTypeBinding munger declaredModifiers declaredSelector typeVariableAliases interTypeScope scopeSetup ACC_ANNOTATION ACC_ENUM org.aspectj.lang.reflect.InterTypeDeclaration org.aspectj.ajdt.internal.compiler.ast.InterTypeDeclaration  so others can see (these differ from the modifiers in the superclass)\r\n  XXXAJ5 - When the compiler is changed, these will exist somewhere in it...\r\n  return the selector prefix for this itd that is to be used before resolution replaces it with a \"proper\" name\r\n  newParent);\r\n  error reported elsewhere.\r\n  might be OK... pr132349\r\n  some extra checks...\r\n  Collapse the parameterized reference to its generic type\r\n  type is not generic.\r\n  typeParameters.length) {   phantom contains the fake ones from the ontype, typeparameters will also include extra things if it is a generic method\r\n  Check they have supplied the right number of type parameters on the ITD target type\r\n  check if they used stupid names for type variables\r\n  Can be null in an erroneous program I think\r\n  don't do it again\r\n  Work out the real base type\r\n  resolve it\r\n  pr132349\r\n  to prevent disgusting cascading errors after this problem - lets null out what leads to them (pr105038)\r\n  to prevent disgusting cascading errors after this problem - lets null out what leads to them (pr105038)\r\n  if resolution failed, give up - someone else is going to report an error\r\n  by the AJDT code so we can put out a much nicer message.\r\n  scope.isStatic = Modifier.isStatic(declaredModifiers);\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","NewFieldTypeMunger":" getInitMethod write readField getMatchingSyntheticMember parameterizedFor equals hashCode  org.aspectj.weaver.NewFieldTypeMunger  ??? might give a field where a method is expected\r\n  For raw and 'normal' parameterized targets  (e.g. Interface, Interface<String>)\r\n  in the original ITD declaration to the ones used in the actual target type declaration.\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","InitializerAdvice":"     ","ShadowMatchImpl":" setWithinCode setSubject setWithinType alwaysMatches maybeMatches neverMatches matchesJoinPoint setMatchingContext getPointcutParameters matches visit visit visit visit visit visit visit visit visit match state residualTest params withinCode subject withinType matchContext matches test thisObject targetObject args matchContext org.aspectj.weaver.reflect.ShadowMatchImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.tools.ShadowMatch#setMatchingContext(org.aspectj.weaver.tools.MatchingContext)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","IntValidator":" acceptInt  org.aspectj.testing.util.IntValidator  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","SplitIndexWriter":" print printMemberDesc printClassInfo generate del org.aspectj.tools.doclets.standard.SplitIndexWriter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Func":" doSomething doSomething  com.nwalsh.xalan.Func  Func - Xalann extension function test\r\n ","AspectRedefinesParam":"     ","DeclareAnnotationTests":" suite getSpecFile testDeclareAnnotationParsing testAtType_OneAnnotationHittingOneType_Src testAtType_OneAnnotationHittingMultipleTypes_Src testAtType_PointcutMatchingOnDeclaredAnnotation testAtType_OneAnnotationHittingOneType_Bin testAtType_ComplexAnnotation_BinWeaving testAtType_ComplexAnnotation_SrcWeaving testAtType_TwoAnnotationsOnOneType_BinWeaving testAtType_TwoAnnotationsOnOneType_SrcWeaving testAtType_InteractingWithDeclareParents1_BinWeaving testAtType_InteractingWithDeclareParents1_SrcWeaving testAtType_InteractingWithDeclareParents2_BinWeaving testAtType_InteractingWithDeclareParents2_SrcWeaving testAtType_InteractingWithDeclareParents3_BinWeaving testAtType_InteractingWithDeclareParents3_SrcWeaving testAtType_InteractingWithDeclareParents4_BinWeaving testAtType_InteractingWithDeclareParents4_SrcWeaving testAtType_AnnotatingAlreadyAnnotatedType_BinWeaving testAtType_AnnotatingAlreadyAnnotatedType_SrcWeaving testAtType_UsingWrongAnnotationOnAType_SrcWeaving testAtType_UsingWrongAnnotationOnAType_TypeSpecifiedByPattern_SrcWeaving testAtType_ComplexDecpDecAtTypeInteractions_BinWeaving testAtType_ComplexDecpDecAtTypeInteractions_SrcWeaving testAtType_PuttingIncorrectAnnosOnTypes_SrcWeaving testAtType_PuttingIncorrectAnnosOnTypes_BinWeaving testAtType_PuttingIncorrectAnnosOnTypesWithPatterns_SrcWeaving testAtType_PuttingIncorrectAnnosOnTypesWithPatterns_BinWeaving testAtType_UsingClassOrEnumElementValuesInAnnotations_BinWeaving testAtField_SimpleSource testAtField_SimpleBinary testAtField_TwoTheSameOnOneSource testAtField_TwoTheSameOnOneBinary testAtField_TwoDifferentOnOneSource testAtField_TwoDifferentOnOneBinary testAtField_WrongTargetSource testAtField_RightTargetSource testAtField_RightTargetBinary testAtField_RecursiveSource testAtField_RecursiveBinary testAtField_RecursiveOtherOrderSource testAtField_RecursiveOtherOrderBinary testAtMethod_SimpleSource testAtMethod_SimpleBinary testAtCtor_SimpleSource testAtCtor_SimpleBinary testAtMethodCtor_WrongTargetSource testAtMethodCtor_RightTargetSource testAtMethodCtor_RightTargetBinary testAtMethodCtor_TwoTheSameOnOneSource testAtMethodCtor_TwoTheSameOnOneBinary testAtMethodCtor_TwoDifferentOnOneSource testAtMethodCtor_TwoDifferentOnOneBinary testStructureModel testDeclareTypeMisspelled  org.aspectj.systemtest.ajc150.DeclareAnnotationTests  parsing the various forms of declare @\r\n  declare @type for one simple annotation on one specific type\r\n  declare @type for one simple annotation to multiple types\r\n  declare @type for one simple annotation and a pointcut that matches on it\r\n  binary weaving declare @type, one annotation on one type\r\n  is declared upon a single type\r\n  two annotations are declared on a type\r\n  result in the same thing\r\n  }\r\n  }\r\n  testing how multiple decAtType  lint warning\r\n  lint warning\r\n  lint warning\r\n  lint warning\r\n  AsmManager.setReporting(\"c:  dump of the structure model in c: ","EclipseTypeMunger":" supportsKind toString munge mungeNewMethod mungeNewConstructor mungeNewField shouldTreatAsPublic findOrCreateInterTypeMemberFinder getSourceLocation setSourceLocation getSourceMethod parameterizedFor targetTypeX sourceMethod world sourceLocation org.aspectj.ajdt.internal.compiler.lookup.EclipseTypeMunger  protected ReferenceBinding targetBinding = null;\r\n  Won't be persisted unless ResolvedTypeMunger.persistSourceLocation is true.\r\n  AMC, needed until generic and raw have distinct sigs...\r\n  might be the topmost implementor of an interface we care about\r\n  so we do need access, and this type could be it...\r\n  drive the JDT MethodVerifier correctly)\r\n  \" with \" + targetTypeX);\r\n  we're munging an interface ITD onto a topmost implementor\r\n  no-one else can provide an implementation\r\n  already have an implementation, so don't do anything\r\n  so that we find methods from our superinterfaces later on...\r\n  retain *only* the visibility modifiers and abstract when putting methods on an interface...\r\n  ??? are in the same package\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","BcelWeaver":" setShadowMungers addLibraryAspect addLibraryJarFile addAspectsFromJarFile addAspectsFromDirectory addIfAspect addDirectoryContents addJarFile needToReweaveWorld addClassFile addClassFile deleteClassFile setIsBatchWeave prepareForWeave rewritePointcuts shareEntriesFromMap validateBindings validateOrBranch validateSingleBranch validateSingleBranchRecursion couldEverMatchSameJoinPoints findFirstPointcutIn raiseNegationBindingError raiseAmbiguousBindingError raiseAmbiguityInDisjunctionError raiseUnboundFormalError addManifest getManifest weave weave allWeavingComplete warnOnUnmatchedAdvice weaveParentsFor prepareToProcessReweavableState processReweavableStateIfPresent weaveAndNotify getClassType addParentTypeMungers addNormalTypeMungers getClassFilesFor weaveParentTypeMungers applyDeclareAtType verifyTargetIsOK applyDeclareParents weaveNormalTypeMungers weaveWithoutDump weave weave dumpUnchanged getEntryName dump writeZipEntry fastMatch setProgressListener setReweavableMode isReweavable getWorld tidyUp world xcutSet progressListener progressMade progressPerClassFile inReweavableMode trace addedClasses deletedTypenames manifest needToReweaveWorld isBatchWeave shadowMungerList typeMungerList lateTypeMungerList declareParentsList zipOutputStream MANIFEST_NAME WEAVER_MANIFEST_VERSION CREATED_BY WEAVER_CREATED_BY lineNo inAspect org.aspectj.weaver.bcel.BcelWeaver  private Map  sourceJavaClasses = new HashMap();     private Map  resources         = new HashMap();   setup by prepareForWeave\r\n  setup by prepareForWeave\r\n  setup by prepareForWeave\r\n  setup by prepareForWeave\r\n  only called for testing\r\n  1 - resolve as is\r\n  fallback on inner class lookup mechanism\r\n  System.out.println(\"BcelWeaver.addLibraryAspect \" + fixedName);\r\n  FIXME AV - better warning upon no such aspect from aop.xml\r\n  Bug 119657 ensure we use the unwoven aspect\r\n  => mainly for nothing for LTW - pbly for something in incremental build...\r\n  System.out.println(\"type: \" + type + \" for \" + aspectName);\r\n  ??? buffered\r\n  FIXME ASC performance? of this alternative soln.\r\n  Get a list of all files (i.e. everything that isnt a directory)\r\n  For each file, add it either as a real .class file or as a resource\r\n  System.err.println(\"? addJarFile(\" + inFile + \", \" + outDir + \")\");\r\n  System.out.println(\"? addJarFile() filename='\" + filename + \"'\");\r\n  Is this a directory we are looking at?\r\n  }\r\n  or we are in trouble...\r\n  System.err.println(\"BCELWeaver: processing class from input directory \"+classFile);\r\n  sourceJavaClasses.remove(typename);\r\n  System.err.println(\"added: \" + type + \" aspect? \" + type.isAspect());\r\n  update mungers\r\n  world.debug(\"shadow mungers=\" + shadowMungerList);\r\n  inconsistent pointcuts could lead to problems\r\n  evaluate the alternative set of formals. pr125699\r\n  text.\r\n  pc identity.\r\n  some things cant be shared...\r\n  same instance (identity)\r\n  primitive pcd\r\n  nothing to check\r\n  cant have problems if you dont match!\r\n  common.\r\n  if each branch binds it in exactly the same way...\r\n  ATAJ soften the unbound error for implicit bindings like JoinPoint in @AJ style\r\n  we know that numFormals > 0 or else we would not be called\r\n  nots can only appear at leaves in DNF\r\n  each formal must appear exactly once\r\n  look for withins\r\n  look for kinded\r\n  join points can have multiple signatures and so on.\r\n  System.out.println(\"? addManifest() newManifest=\" + newManifest);\r\n  this flushes and closes the acutal file\r\n  Used by some test cases only...\r\n  remove all relationships where this file being woven is the target of the relationship\r\n  special case for AtAspectJMungerOnly - see #113587\r\n  there *cant* be any reweavable state... (he bravely claimed...)\r\n  clear all state from files we'll be reweaving\r\n  (and this mechanism is applied recursively)\r\n  the eclipse source type) - pr113531\r\n  first weave into aspects\r\n  bug 119882 - see above comment for bug 113531\r\n  TODO urgh - put a method on the interface to check this, string compare is hideous\r\n  then weave into non-aspects\r\n  variation of \"weave\" that sources class files from an external source.\r\n  This will stop us incorrectly reporting deow Checkers\r\n  (cflow creates multiple mungers for the same advice)\r\n  element.getSourceLocation());\r\n  find that ba.getSignature() is not a BcelMethod - for example it might be a cflow entry munger.\r\n  if a piece of advice hasn't matched anywhere and we are in -1.5 mode, put out a warning\r\n  Look at the supertype first\r\n  Then look at the superinterface list\r\n  Now do this type\r\n  and remove it from the list of those to process\r\n  If the class is marked reweavable, check any aspects around when it was built are in this world\r\n  Check all necessary types are around!\r\n  keep track of them just to ensure unique missing aspect error reporting\r\n  see #104218\r\n  new: reweavable default with clever diff\r\n  clazz is null if the classfile was unchanged by weaving...\r\n  Perhaps it would have matched if a 'dec @type' had modified the type\r\n  First pass - apply all decp mungers\r\n  Still first pass - apply all dec @type mungers\r\n  }\r\n  check the annotation is suitable for the target\r\n  TAG: WeavingMessage\r\n  (like transform super calls) - that is done in BcelTypeMunger.mungeNewParent()\r\n  System.err.println(\"need to do declare parents for: \" + onType);\r\n  exposed for ClassLoader dynamic weaving\r\n  non-private for testing\r\n  Don't touch synthetic classes\r\n  Decide if we need to do actual weaving for this class\r\n  May need bridge methods if on 1.5 and something in our hierarchy is affected by ITDs\r\n  recover from crash whilst producing debug string\r\n  recover from crash whilst producing debug string\r\n  System.err.println(\"got lazy gen: \" + clazz + \", \" + clazz.getWeaverState());\r\n  that aggressively defines the inner <aspect>$mayHaveAspect interface.\r\n  this is very odd return behavior trying to keep everyone happy\r\n  XXX what does bcel's getClassName do for inner names\r\n  ??? get compression scheme right\r\n  this will remove all obvious non-matches and see if we need to do any weaving\r\n  Could pass: munger.getPointcut().toString(),info\r\n  setup by prepareForWeave\r\n  setup by prepareForWeave\r\n  setup by prepareForWeave\r\n  setup by prepareForWeave\r\n /* List<UnovenClassFile> */\r\n /*<Pointcut,Pointcut>*/\r\n /*ShadowMunger*/\r\n /*\r\n     * Rewrite all of the pointcuts in the world into their most efficient\r\n     * form for subsequent matching. Also ensure that if pc1.equals(pc2)\r\n     * then pc1 == pc2 (for non-binding pcds) by making references all \r\n     * point to the same instance.\r\n     * Since pointcuts remember their match decision on the last shadow, \r\n     * this makes matching faster when many pointcuts share common elements,\r\n     * or even when one single pointcut has one common element (which can\r\n     * be a side-effect of DNF rewriting).\r\n     */\r\n /*BindingTypePattern*/\r\n /*BindingAnnotationTypePattern*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n *     Alexandre Vasseur    support for @AJ aspects\r\n * ******************************************************************/\r\n","Shadow":" getIWorld getMungers hasThis getThisType getThisVar hasTarget getTargetType getTargetVar getArgTypes isShadowForArrayConstructionJoinpoint isShadowForMonitor getArgumentTypesForArrayConstructionShadow getGenericArgTypes getArgType getArgCount getEnclosingType getArgVar getThisJoinPointVar getThisJoinPointStaticPartVar getThisEnclosingJoinPointStaticPartVar getKindedAnnotationVar getWithinAnnotationVar getWithinCodeAnnotationVar getThisAnnotationVar getTargetAnnotationVar getArgAnnotationVar getEnclosingCodeSignature getKind getSignature getMatchingSignature setMatchingSignature getResolvedSignature getReturnType howMany toLegalJavaIdentifier argsOnStack allowsExtraction isSet hasHighPriorityExceptions hasReturnValue isEnclosingKind isTargetSameAsThis neverHasTarget neverHasThis getSimpleName read checkMunger checkCanThrow isDeclaredException addMunger implement sortMungers possiblyReportUnorderedAdvice prepareForMungers beautifyLocation reportWeavingMessage areTheSame determineRelKind implementMungers makeReflectiveFactoryString getSourceLocation toString toResolvedString toSet nextShadowID kind signature matchingSignature resolvedSignature enclosingShadow mungers shadowId MethodCall ConstructorCall MethodExecution ConstructorExecution FieldGet FieldSet StaticInitialization PreInitialization AdviceExecution Initialization ExceptionHandler SynchronizationLock SynchronizationUnlock MethodCallBit ConstructorCallBit MethodExecutionBit ConstructorExecutionBit FieldGetBit FieldSetBit StaticInitializationBit PreInitializationBit AdviceExecutionBit InitializationBit ExceptionHandlerBit SynchronizationLockBit SynchronizationUnlockBit MAX_SHADOW_KIND SHADOW_KINDS ALL_SHADOW_KINDS_BITS NO_SHADOW_KINDS_BITS bit hasReturnValueFlag isEnclosingKindFlag isTargetSameAsThisFlag neverHasTargetFlag neverHasThisFlag org.aspectj.weaver.Shadow  easier to spot than zero.\r\n  every time we build a shadow, it gets a new id\r\n  ----\r\n  will return the right length array of ints depending on how many dimensions the array has\r\n  annotation variables\r\n  Bits here are 1<<(Kind.getKey()) - and unfortunately keys didn't start at zero so bits here start at 2\r\n  !!! this is false for handlers!\r\n  XXX revisit along with removal of priorities\r\n  XXX much too lenient rules here, need to walk up exception handlers\r\n  from advice in \\'\" + munger. + \"\\'\",\r\n  Bunch of code to work out whether to report xlints for advice that isn't ordered at this Joinpoint\r\n  this means that we have circular dependencies\r\n  precedence specified between the two aspects at this shadow.\r\n  Ask the world if it knows about precedence between these\r\n  create to support other features of the language.\r\n  Make sure they are the right type\r\n  Compare every pair of advice mungers\r\n  not quite optimal... but the xlint is ignore by default\r\n  can't use File.getName() as this fails when a Linux box encounters a path created on Windows and vice-versa\r\n  we have been woven by a binary aspect\r\n  only want to add the extra info if we're from a jar file\r\n  if it's a binary file then also want to give the file name\r\n  (e.g. IdWeaveTestCase in the weaver testcases)\r\n  Only report on interesting advice kinds ...\r\n  Don't report it again!\r\n  hmmm, this means some kind of nesting is going on, urgh\r\n  this is the first time through, let's continue...\r\n  woven both exit points\r\n  System.err.println(\"Dont want a message about this: \"+ak);\r\n  What is being applied\r\n  Where is it being applied\r\n  What kind of advice?\r\n  Is a runtime test being stuffed in the code?\r\n  TAG: WeavingMessage\r\n  System.err.println(\"munger: \" + munger + \" on \" + this);\r\n  XXX\r\n  + getSourceLines();\r\n /*ShadowMunger*/\r\n /*\r\n\t * Ensure we report a nice source location - particular in the case\r\n\t * where the source info is missing (binary weave).\r\n\t */\r\n /*\r\n\t * Report a message about the advice weave that has occurred.  Some messing about\r\n\t * to make it pretty !  This code is just asking for an NPE to occur ...\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","DeclareParentsInterfaceTest":" target before log testDecPInt testDecPIntAdvised main suite introduce s_log ataspectj.DeclareParentsInterfaceTest  ","PackageManager":" getLoader checkLoader resetLoader findClass addJarDir addJar factory loader jxxload_help.PackageManager  ??pending add cache support?\r\n  Copyright 2000 Samuele Pedroni\r\n ","PublicPublic":"     ","Pair":"     ","BCELFactory":" start visitInstruction visitLocalVariableInstruction visitArrayInstruction visitFieldInstruction visitInvokeInstruction visitAllocationInstruction createConstant visitLDC visitLDC2_W visitConstantPushInstruction visitINSTANCEOF visitCHECKCAST visitReturnInstruction visitBranchInstruction visitRET updateBranchTargets updateExceptionHandlers _mg _out _cp branch_map branches org.aspectj.apache.bcel.util.BCELFactory  Map<Instruction, InstructionHandle>\r\n  memorize container\r\n  Handled below\r\n  Memorize BranchInstructions that need an update\r\n ","ThreadStackFactoryImpl11":" getNewThreadStack getNewThreadCounter  org.aspectj.runtime.internal.cflowstack.ThreadStackFactoryImpl11  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","RuntimeModuleTests":" suite testNoAspectBoundException testSoftExceptionPrintStackTrace checkSoftExceptionString  org.aspectj.runtime.RuntimeModuleTests  minimum 1 test (testNothing)\r\n  save to specified PrintStream\r\n  save to specified PrintWriter\r\n  check System.err redirect\r\n ","ITestStep":" execute addExpectedMessage setBaseDir setTest  org.aspectj.testing.ITestStep  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer, \r\n * ******************************************************************/\r\n","TryWorksLikeEnvironment":" main foo i TryWorksLikeEnvironment  ","PreparedStatement":" getParameterMetaData  PreparedStatement  ","PcdLookup":"     ","NavigationHistoryModel":" navigateBack navigateForward navigateToNode currNode backHistory forwardHistory org.aspectj.ajde.ui.internal.NavigationHistoryModel  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","MethodCalledAround":" around  MethodCalledAround  ","ArgsInCflowCf":"     ","BuildModuleTests":" suite getLicense findSourceRoots testSuffixList testLicense_ajbrowser testLicense_ajde testLicense_aspectj5rt testLicense_asm testLicense_bridge testLicense_build testLicense_org_aspectj_ajdt_core testLicense_org_aspectj_lib testLicense_org_eclipse_jdt_core testLicense_runtime testLicense_taskdefs testLicense_testing testLicense_testing_client testLicense_testing_drivers testLicense_testing_util testLicense_util testLicense_weaver testLicense_ajdoc testLicense_loadtime testLicense_loadtime5 testLicense_weaver5 checkLicense checkSourceDirectory accept unknownFiles replacing replaceFailed BASE_DIR JDT_SOURCE_DIRS SOURCE_NAMES SINGLETON STATIC_ERRORS KNOWN_SUFFIXES org.aspectj.build.BuildModuleTests  XXX never to enable again...\r\n  use permissive default\r\n  skip (testdata) packages fluffy, reflect\r\n  }\r\n  separate check to verify all file types (suffixes) are known\r\n  Builder.BINARY_SOURCE_PATTERN and Builder.RESOURCE_PATTERN\r\n  sources from org.aspectj.util.FileUtil.SOURCE_SUFFIXES\r\n  just because we know...\r\n  others from Builder\r\n  to do not accepting uppercase suffixes...\r\n ","Advisable":" addJoinPoint  ataspectj.ltwreweavable.Advisable  ","TopFoo":" bar  test135.TopFoo  ","ReflectionBasedResolvedMemberImpl":" getMember setGenericSignatureInformationProvider getGenericParameterTypes getGenericReturnType isSynthetic isVarargsMethod isBridgeMethod setAnnotationFinder hasAnnotation hasAnnotations getAnnotationTypes unpackAnnotations annotationFinder gsigInfoProvider reflectMember org.aspectj.weaver.reflect.ReflectionBasedResolvedMemberImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedMemberImpl#getGenericParameterTypes()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedMemberImpl#getGenericReturnType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedMemberImpl#isSynthetic()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedMemberImpl#isVarargsMethod()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedMemberImpl#isBridgeMethod()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","TestMain":" main  TestMain  ","UnlockSignatureImpl":" createToString getParameterType parameterType org.aspectj.runtime.reflect.UnlockSignatureImpl  ","AndAnnotationTypePattern":" matches resolve resolveBindings parameterizeWith read write equals hashCode toString getLeft getRight accept traverse left right org.aspectj.weaver.patterns.AndAnnotationTypePattern  /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.AnnotationTypePattern#resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings, boolean)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","TypeAnnotationsTest":" setUp testMarkerAnnotationsOnTypes  org.aspectj.apache.bcel.classfile.tests.TypeAnnotationsTest  /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation \r\n * ******************************************************************/\r\n","Editor":"   editor.Editor editor.Editor  ","IXmlWritable":" writeXml  org.aspectj.testing.xml.IXmlWritable  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","BindingTest":" main suite substract dup echo testAroundArgs testProceedArgs testProceedInInner testNoProceed testDoubleProceed testDoubleProceedOneInner testAccessAspectState testTryCatch callWithinStatic pc aaround pc2 aaround2 aaround3 aaround4 aaround5 aaround6 aaround7 aaround8 m_count ataspectj.BindingTest  see +1 here\r\n  see x3 here\r\n  should be 2 without around advice\r\n  advice will change arg with arg-1\r\n  advice will x2 using an inner\r\n  advice will return 0 and not proceed\r\n  advice will proceed twice and add the returned values\r\n  advice will proceed twice with one in inner and add the returned values\r\n  see rather fancy ordering here..\r\n  see here ordering remade consistent\r\n  see return int here.\r\n  since no proceed() is call, this advice won't be inlined\r\n  since inlining occured, proceed was never called\r\n  will be wrapped for inlining support\r\n ","PossibleGenericsSigs":" a b c d e f r s t u v w x y z a b c d e f r s t u v w x y z  PossibleGenericsSigs PossibleGenericsSigs  ","P1Statics":"  I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c I b s i l f d c p1.P1Statics  ","UninitializedObjectType":" getInitialized equals initialized org.aspectj.apache.bcel.verifier.structurals.UninitializedObjectType  ","prefix":"   p.prefix  ","Parents":"     ","Display2":"     ","VariableLengthInstruction":"   org.aspectj.apache.bcel.generic.VariableLengthInstruction  ","ReflectionBasedReferenceTypeDelegateTest":" testIsAspect testIsAnnotationStyleAspect testIsInterface testIsEnum testIsAnnotation testIsAnnotationWithRuntimeRetention testIsClass testIsGeneric testIsExposedToWeaver testHasAnnotation testGetAnnotations testGetAnnotationTypes testGetTypeVariables testGetPerClause testGetModifiers testGetSuperclass testArrayArgsSig findMethod findMethod testGetDeclaredMethods testGetDeclaredFields testGetDeclaredInterfaces testGetDeclaredPointcuts testSerializableSuperclass testSubinterfaceSuperclass testVoidSuperclass testIntSuperclass testGenericInterfaceSuperclass_BcelWorldResolution testCompareSubclassDelegates setUp testIsAspect testIsAnnotationStyleAspect testIsInterface testIsEnum testIsAnnotation testIsAnnotationWithRuntimeRetention testIsClass testIsGeneric testIsExposedToWeaver testHasAnnotation testGetAnnotations testGetAnnotationTypes testGetTypeVariables testGetPerClause testGetModifiers testGetSuperclass findMethod findMethod testGetDeclaredMethods testGetDeclaredFields testGetDeclaredInterfaces testGetDeclaredPointcuts testSerializableSuperclass testSubinterfaceSuperclass testVoidSuperclass testIntSuperclass testGenericInterfaceSuperclass_BcelWorldResolution testCompareSubclassDelegates testArrayArgsSig setUp world objectType classType world objectType classType org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegateTest org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegateTest  the good old ibm vm seems to offer clinit through its reflection support (see pr145322)\r\n  the numbers can be out by one in favour of bcel\r\n  the numbers must be exact\r\n  FIXME asc maybe.  The reflection list of methods returned doesn't include <clinit> (the static initializer) ... is that really a problem.\r\n  the good old ibm vm seems to offer clinit through its reflection support (see pr145322)\r\n  the numbers can be out by one in favour of bcel\r\n  the numbers must be exact\r\n  FIXME asc maybe.  The reflection list of methods returned doesn't include <clinit> (the static initializer) ... is that really a problem.\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ALOAD":" accept  org.aspectj.apache.bcel.generic.ALOAD  ","ArgsAlone":"     ","SuppressAjWarnings":"     /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg       initial implementation \r\n *   Andy Clement       fleshed out to match SuppressWarnings\r\n * ******************************************************************/\r\n","Display1":"     ","SignatureTypes":" update read getI l l2 d d2 expensive org.xyz.C org.xyz.D org.xyz.I org.xyz.E  ","ThreadAspectLib":"     ","EnumElementValueGen":" getElementValue dump stringifyValue getEnumTypeString getEnumValueString getValueIndex getTypeIndex typeIdx valueIdx org.aspectj.apache.bcel.generic.annotation.EnumElementValueGen  For enum types, these two indices point to the type and value\r\n  was addClass(t);\r\n  was addString(value);\r\n  was addClass(value.getEnumTypeString());\r\n  was addString(value.getEnumValueString());\r\n  u1 type of value (ENUM_CONSTANT == 'e')\r\n  u2\r\n  u2\r\n  return ((ConstantUtf8)getConstantPool().getConstant(cu8.getNameIndex())).getBytes();\r\n  BCELBUG: Should we need to call utility.signatureToString() on the output here?\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","AnnotationDefaultAttributeTest":" setUp testMethodAnnotations tearDown  org.aspectj.apache.bcel.classfile.tests.AnnotationDefaultAttributeTest  /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation \r\n * ******************************************************************/\r\n","VarargsTest":" setUp testVarargs testVarargsReadWrite checkMarkedVarargs checkValue tearDown  org.aspectj.apache.bcel.classfile.tests.VarargsTest  Write it out\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation \r\n * ******************************************************************/\r\n","EnumAccessFlagTest":" setUp testEnumClassSaysItIs tearDown verbose org.aspectj.apache.bcel.classfile.tests.EnumAccessFlagTest  /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation \r\n * ******************************************************************/\r\n","Switch":"     ","ExposedState":" isFullySetUp set get size getAspectInstance setAspectInstance toString setErroneousVar isErroneousVar vars erroneousVars aspectInstance expectedVarTypes org.aspectj.weaver.patterns.ExposedState  enables us to check that binding is occurring with the *right* types\r\n  XXX there maybe something about target for non-static sigs\r\n  throw new BCException(\"Expected type \"+expectedVarTypes[i]+\" in slot \"+i+\" but attempt to put \"+var.getType()+\" into it\");\r\n  check the type is OK if we can... these are the same rules as in matchesInstanceOf() processing\r\n  prevents us blowing up in later code gen.\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","LstBuildConfigFileParser":" showWarning parseImportedConfigFile showError getImportedFiles getProblemEntries importedFiles problemEntries org.aspectj.ajde.internal.LstBuildConfigFileParser  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CompilerRunTest":" dummyRunning setUp tearDown testExtDirs checkCommandLine checkCompilerRun run runCommand repeatCommand dummyReports testBaseDir command org.aspectj.testing.harness.bridge.CompilerRunTest  String[] globals = null;\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation\r\n * ******************************************************************/\r\n","AppException":"   com.company.app.AppException  ","pr107953":" missingBindingOfThrowingFormal bar  pr107953 Foo  ","NonexistentInitializers":"     ","EllipsesStar":"     ","CflowBelowTest":"     ","StaticClassesInInterfaces":" main realMain  StaticClassesInInterfaces  ","AjConstructorDeclaration":" generateInfoAttributes addDeclarationStartLineAttribute  org.aspectj.ajdt.internal.compiler.ast.AjConstructorDeclaration  add extra attributes into list then call 2-arg version of generateInfoAttributes...\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration#generateInfoAttributes(org.eclipse.jdt.internal.compiler.ClassFile)\r\n\t */\r\n","ImportingInnerInterfacesStars2_PR386":" main  ImportingInnerInterfacesStars2_PR386 I1 I2  ","CountingMessageHandler":" makeCountingMessageHandler handleMessage isIgnoring dontIgnore toString numMessages hasErrors numMessages increment reset delegate proxy counters count org.aspectj.bridge.CountingMessageHandler  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","GetsSets":"     ","BadDesignator":"     ","FullNames":" main realMain a b c  FullNames  XXX changed w  XXX changed w ","ConcreteExtendingClass":"   ConcreteExtendingClass  blank\r\n ","TestCompareClassFile":" main runStatic privateRunStatic defaultRunStatic protectedRunStatic run run privateRun defaultRun protectedRun getListInMap getSortedSetInMap copy elideEndingLines STATIC_CONST privateLong privateFinalObject org.aspectj.testingutil.TestCompareClassFile  tc static references\r\n  method-local inner class\r\n  Collections Util\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PointcutImpl":" getPointcutExpression getName getModifiers getParameterTypes getDeclaringType getParameterNames splitOnComma toString name pc baseMethod declaringType parameterNames org.aspectj.internal.lang.reflect.PointcutImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.Pointcut#getPointcutExpression()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ArgsInCflow2":"     ","QualifiedThisMatchesExactly":" main foo  QualifiedThisMatchesExactly A C  ","PointcutAssortment":" pc1 pc2 pc3 pc4 pc5 pc6 pc7 pc8 pc9 intSet  PointcutAssortment OtherClass  ","PointcutDesignatorHandlerTests":" setUp needToSkipPointcutParserTests testParseWithoutHandler testParseWithHandler testParseWithHandlerAndMultipleSegments testStaticMatch testDynamicMatch testFastMatch getDesignatorName parse getExpressionLastAskedToParse couldMatchJoinPointsInType couldMatchJoinPointsInType mayNeedDynamicTest matchesStatically matchesDynamically needToSkip askedToParse simulateDynamicTest beanNamePattern simulateDynamicTest org.aspectj.weaver.tools.PointcutDesignatorHandlerTests  ReflectionBasedReferenceTypeDelegate.class.getClassLoader());\r\n /* (non-Javadoc)\r\n\t\t * @see org.aspectj.weaver.tools.PointcutDesignatorHandler#parse(java.lang.String)\r\n\t\t */\r\n /* (non-Javadoc)\r\n\t\t * @see org.aspectj.weaver.tools.ContextBasedMatcher#couldMatchJoinPointsInType(java.lang.Class)\r\n\t\t */\r\n /* (non-Javadoc)\r\n\t\t * @see org.aspectj.weaver.tools.ContextBasedMatcher#mayNeedDynamicTest()\r\n\t\t */\r\n /* (non-Javadoc)\r\n\t\t * @see org.aspectj.weaver.tools.ContextBasedMatcher#matchesDynamically(org.aspectj.weaver.tools.MatchingContext)\r\n\t\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ImportingInnerInterfacesStars3_PR386":" main  ImportingInnerInterfacesStars3_PR386 I1  ","ResolvedTypeMunger":" setSourceLocation getSourceLocation concretize matches toString read readSuperMethodsCalled writeSuperMethodsCalled readSourceLocation writeSourceLocation write getKind read toString setSuperMethodsCalled getSuperMethodsCalled getSignature getMatchingSyntheticMember changesPublicSignature needsAccessToTopmostImplementor readInTypeAliases writeOutTypeAliases getTypeVariableAliases hasTypeVariableAliases sharesTypeVariablesWithGenericType parameterizedFor setDeclaredSignature getDeclaredSignature isLateMunger existsToSupportShadowMunging kind signature declaredSignature typeVariableAliases superMethodsCalled location Field Method Constructor PerObjectInterface PrivilegedAccess Parent PerTypeWithinInterface AnnotationOnType MethodDelegate FieldHost SUPER_DISPATCH_NAME org.aspectj.weaver.ResolvedTypeMunger  might need serializing the class file for binary weaving.\r\n  Lost during serialize  fromType is guaranteed to be a non-abstract aspect\r\n  to munge, then this is ok...\r\n  System.err.println(\"matching: \" + this + \" to \" + matchType + \" onType = \" + onType);\r\n  Location persistence for type mungers was added after 1.2.1 was shipped...\r\n  This exception occurs if processing an 'old style' file where the\r\n  (but I thought that was just an EOFException?)\r\n  occur on the next line and we ignore it.\r\n  oos.writeObject(location);\r\n  TODO we may want something for fieldhost ?\r\n  not serialized, only created during concretization of aspects\r\n  PTWIMPL not serialized, used during concretization of aspects\r\n  not serialized\r\n  serialized, @AJ ITDs\r\n  serialized, @AJ ITDs\r\n  Write any type variable aliases\r\n /*String*/\r\n /* resolvedMembers */\r\n /* private */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation\r\n *     Alexandre Vasseur    @AspectJ ITDs\r\n * ******************************************************************/\r\n","KindedAnnotationAccessVar":" toString createLoad createStore createCopyFrom appendLoad createLoadInstructions buildArray appendLoadAndConvert insertLoad kind containingType member org.aspectj.weaver.bcel.KindedAnnotationAccessVar  What kind of shadow are we at?\r\n  The type upon which we want to ask for 'member'\r\n  For method call  annotations for fieldset  Stick the target on the stack\r\n  Stick what we are after on the stack\r\n  Variant (1) Use the target directly\r\n  annotations for fieldset  init  Calls getAnnotation\r\n  Calls getDeclaredMethod\r\n  Calls getAnnotation\r\n  FIXME asc Refactor all this stuff - there is a lot of commonality\r\n /* *******************************************************************\r\n * Copyright (c) 2005 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","ConstantString":" accept dump getStringIndex setStringIndex toString getConstantValue getBytes string_index org.aspectj.apache.bcel.classfile.ConstantString  Identical to ConstantClass except for this name\r\n ","AfterReturningWeaveTestCase":" testAfterReturning testAfterReturningParam testAfterReturningCheckcastParam testAfterReturningConversionParam  org.aspectj.weaver.bcel.AfterReturningWeaveTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ComponentFactory":" createLabel createButton getName createLabel createButton getName  ca.ubc.cs.spl.aspectPatterns.examples.abstractFactory.aspectj.ComponentFactory ca.ubc.cs.spl.aspectPatterns.examples.abstractFactory.java.ComponentFactory  ","Builder":" commaStrings moduleAliasFor setBuildingEnabled setVerbose verifyBuildSpec specifyResultFor build cleanup isLogging skipUptodate buildAll buildOnly addTempFile buildProduct copyBinaries copyNonBinaries buildProductModule discoverModules removeLibraryFilesToSkip getAntecedantResults compile assemble assembleAll buildInstaller copyFile copyFiles RESOURCE_PATTERN BINARY_SOURCE_PATTERN ALL_PATTERN FILTER_ON FILTER_OFF SKIP_LIBRARIES_KEY SKIP_LIBRARIES ERROR_KEY PROPS handler buildingEnabled tempDir tempFiles useEclipseCompiles verbose org.aspectj.internal.tools.build.Builder  derive baseDir from moduleDir parent\r\n  user.home?\r\n  rule: base is parent\r\n  user.home?\r\n  derive moduleDir from baseDir + module\r\n  derive module name from directory\r\n  XXXNameLiteral\r\n  FileLiteral\r\n  ---- discover modules to build, and build them\r\n  ---- assemble product distribution\r\n  copy non-binaries (with filter)\r\n  copy binaries (but not module flag files)\r\n  copy binaries associated with module flag files\r\n  ---- create installer\r\n  XXXFileLiteral\r\n  empty jar files\r\n  XXXFileLiteral\r\n  XXXFileLiteral\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC),\r\n *               2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC           initial implementation \r\n * ******************************************************************/\r\n","IfMethodDeclaration":" parseStatements generateInfoAttributes resolveStatements ifPointcut org.aspectj.ajdt.internal.compiler.ast.IfMethodDeclaration  import org.aspectj.org.eclipse.jdt.internal.compiler.lookup.ClassScope;\r\n  XXX this is where we should remove unavailable args if we're in a cflow\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","TestBean3":" m m main implementationInterface a.b.c.I a.b.c.Impl a.b.c.TestBeanAdvice a.b.c.TestBean3 a.b.c.BeansException  error!!!  implements I {\r\n  simple version - we go bang if Impl doesnt implement I...\r\n ","TestBean2":" m m main implementationInterface a.b.c.I a.b.c.Impl a.b.c.TestBeanAdvice a.b.c.TestBean2 a.b.c.BeansException  ","InstructionFactory":" createInvoke createPrintln createConstant createInvoke isString createAppend createFieldAccess createThis createReturn createBinaryIntOp createBinaryLongOp createBinaryFloatOp createBinaryDoubleOp createBinaryOperation createPop createDup createDup_2 createDup_1 createStore createLoad createArrayLoad createArrayStore createCast createGetField createGetStatic createPutField createPutStatic createCheckCast createInstanceOf createNew createNew createNewArray createNull createBranchInstruction setClassGen getClassGen setConstantPool getConstantPool cg cp arg_types result_type arg_names class_name name access append_mos org.aspectj.apache.bcel.generic.InstructionFactory  Count size of arguments\r\n  Count size of arguments\r\n  Count size of arguments\r\n  indices 2, 3\r\n  indices 2, 3\r\n  No append(byte)\r\n  No append(byte)\r\n  No append(byte)\r\n  No append(byte)\r\n  No append(short)\r\n  No append(short)\r\n  No append(short)\r\n  No append(short)\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","TransportAspect":" bruiser bruiser crateName crateName apples.TransportAspect TransportAspect  ","AjcTestsUsingJUnit":" suite SUITES SKIPS OPTIONS org.aspectj.testing.drivers.AjcTestsUsingJUnit  /* *******************************************************************\r\n * Copyright (c) 2003 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","AjdocTests":" suite suite ASPECTJRT_PATH org.aspectj.tools.ajdoc.AjdocTests org.aspectj.tools.ajdoc.AjdocTests  $JUnit-BEGIN$\r\n  !!! must be last because it exists\r\n  $JUnit-END$\r\n  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg       initial implementation \r\n * ******************************************************************/\r\n /* -*- Mode: Java; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the compiler and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n *\r\n * Contributor(s):\r\n */\r\n","MyMain":" main sayHello main  de.test.MyMain blah.MyMain  ","ThreadStack":" getThreadStack  org.aspectj.runtime.internal.cflowstack.ThreadStack  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","IDIV":" getExceptions accept  org.aspectj.apache.bcel.generic.IDIV  ","Indirect":"     ","BrowserViewManager":" getBrowserPanel extractAndInsertSignatures browserPanel DECLARATION_VIEW CROSSCUTTING_VIEW INHERITANCE_VIEW DECLARATION_VIEW_PROPERTIES CROSSCUTTING_VIEW_PROPERTIES INHERITANCE_VIEW_PROPERTIES org.aspectj.ajde.ui.swing.BrowserViewManager  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AllTests14":" suite  org.aspectj.systemtest.AllTests14  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /*\r\n * Created on 03-Aug-2004\r\n *\r\n * TODO To change the template for this generated file go to\r\n * Window - Preferences - Java - Code Style - Code Templates\r\n */\r\n","Aspect4":"     ","Aspect5":"     ","MessageHolder":" handleMessage startsAs size dump s_messages ataspectj.ltwlog.MessageHolder  ","Aspect6":"     ","ToolsTests":" suite  org.aspectj.weaver.tools.ToolsTests  $JUnit-END$\r\n /* FIXME maw The CLASSPATH is wrong so run them in weaver5 instead */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","Aspect1":" before before  ataspectj.ltwlog.Aspect1 ataspectj.ltwreweavable.Aspect1  ","Aspect2":" before  ataspectj.ltwreweavable.Aspect2  ","Aspect3":"     ","AllTests15":" suite  org.aspectj.systemtest.AllTests15  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* FIXME maw Many of these tests do not depend on Java 5 but they\r\n\t\t * cannot be executed in Eclipse with 1.3 because of XML issues and\r\n\t\t * are excluded on the build machine so moving them here loses nothing\r\n\t\t * for the moment.\r\n\t\t */\r\n /*\r\n * Created on 19-01-2005\r\n */\r\n","TaskdefsTests":" suite  org.aspectj.tools.ant.taskdefs.TaskdefsTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC),\r\n *               2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Wes Isberg     some 2003 tests\r\n * ******************************************************************/\r\n","Concrete":"     ","BasicProgram1":" main staticM nonstaticM  BasicProgram1  ","AnnotationPatternTestCase":" testParseSimpleAnnotationPattern testParseAndAnnotationPattern testParseNotAnnotationPattern testParseBracketedAnnotationPattern testParseFQAnnPattern testParseComboPattern testParseBadPattern testParseBadPattern2 testParseNameOrVarAnnotationPattern testParseNameOrVarAnnotationPatternWithNot testParseNameOrVarAnnotationPatternWithOr testParseNameOrVarAnnotationWithBinding testParseNameOrVarAnnotationPatternWithAnd testMaybeParseAnnotationPattern testParseTypePatternsWithAnnotations testParseTypePatternsWithAnnotationsComplex testNotSyntax testParseMethodOrConstructorSigNoAP testParseMethodOrConstructorSigSimpleAP testParseMethodOrConstructorSigComplexAP testParseMethodFieldSigNoAP testParseFieldSigSimpleAP testParseFieldSigComplexAP testExactAnnotationPatternMatching testBindingAnnotationPatternMatching testAndAnnotationPatternMatching testNotAnnotationPatternMatching testAnyAnnotationPatternMatching makeSimpleScope hasAnnotation getAnnotationTypes annotationTypes org.aspectj.weaver.patterns.AnnotationPatternTestCase  \r\n  cannot start with ( so, we get ANY\r\n  PatternParser p = new PatternParser(\"!((@Foo || @Goo) && !@Boo)\");\r\n  \r\n  rest of pattern not consumed...\r\n  rest of pattern not consumed...\r\n  \r\n  testcode contains Foo  TODO Auto-generated method stub\r\n /* (non-Javadoc)\r\n\t\t * @see org.aspectj.weaver.AnnotatedElement#getAnnotationTypes()\r\n\t\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","TestEmptyPointcutAtAspect":" scope scope2  TestEmptyPointcutAtAspect  ","ExtendsOuterAbstract_PR408":" go  ExtendsOuterAbstract_PR408  ","AspectInterfaces":"     ","ZipFileWeaver":" weave inFile org.aspectj.weaver.bcel.ZipFileWeaver  XXX delete very soon\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Config":"  DECL_ID_STRING DECL_ID_TERMINATOR WORKING_DIR DIR_SEP_CHAR USAGE org.aspectj.tools.ajdoc.Config  default\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Mik Kersten\t  port to AspectJ 1.1+ code base\r\n * ******************************************************************/\r\n","FromJavac":" foo  FromJavac  ","StrictFpCErr1":" test1  StrictInterfaceBadFunction  Has to be error, may not generate strictfp, but has to set strictfp in bytecode\r\n ","StrictFpCErr2":"     ","StrictFpCErr3":"     ","Temp":"   C  ","ConstructorDeclaration":"     ","DeprecatedAPIListBuilder":" buildDeprecatedAPIInfo _composeDeprecatedList _composeDeprecatedList getDeprecatedAdivce getDeprecatedPointcuts getDeprecatedFieldIntroductions getDeprecatedMethodIntroductions getDeprecatedConstructorIntroductions getDeprecatedSuperIntroductions deprecatedadvice deprecatedpointcuts deprecatedfieldintroductions deprecatedmethodintroductions deprecatedconstructorintroductions deprecatedsuperintroductions org.aspectj.tools.doclets.standard.DeprecatedAPIListBuilder  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","ArrayAnnotationValue":" setValues getValues stringify toString values org.aspectj.weaver.ArrayAnnotationValue  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","PR62475":"     ","ProjectPropertiesAdapter":" getProjectName getRootProjectDir getBuildConfigFiles getDefaultBuildConfigFile getLastActiveBuildConfigFile getProjectSourceFiles getProjectSourcePath getClasspath getOutputPath getOutputLocationManager getBootClasspath getClassToExecute getExecutionArgs getVmArgs getInJars getInpath getSourcePathResources getOutJar getSourceRoots getAspectPath  org.aspectj.ajde.ProjectPropertiesAdapter  @todo: move to build options\r\n  @todo: move all below to execution options\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC       initial implementation \r\n *     AMC  01.20.2003  extended for AspectJ 1.1 compiler options\r\n * ******************************************************************/\r\n","AspectX":"     ","CommonsTrace":" enter enter exit exit exit isTraceEnabled setTraceEnabled debug info warn error fatal log className org.aspectj.weaver.tools.CommonsTrace  ","IntertypeOverrides":"     ","JavaClass":" accept Debug dump dump getBytes dump dump getAttributes getAnnotations getClassName getPackageName getClassNameIndex getConstantPool getFields getFileName getInterfaceNames getInterfaceIndices getMajor getMethods getMethod getMethod getField getMinor getSourceFileName getSuperclassName getSuperclassNameIndex setAttributes setClassName setClassNameIndex setConstantPool setFields setFileName setInterfaceNames setInterfaces setMajor setMethods setMinor setSourceFileName setSuperclassName setSuperclassNameIndex toString indent copy isSuper isClass isAnonymous isNested computeNestedTypeStatus isAnnotation isEnum getSource getRepository setRepository instanceOf implementationOf getSuperClass getSuperClasses getInterfaces getAllInterfaces getGenericSignature isGeneric loadGenericSignatureInfoIfNecessary getGenericClassTypeSignature file_name package_name source_file_name class_name_index superclass_name_index class_name superclass_name major minor constant_pool interfaces interface_names fields methods attributes annotations source isGeneric isAnonymous isNested computedNestedTypeStatus HEAP FILE ZIP debug sep annotationsOutOfDate signatureAttributeString signatureAttribute searchedForSignatureAttribute repository org.aspectj.apache.bcel.classfile.JavaClass  Compiler version\r\n  Constant pool\r\n  implemented interfaces\r\n  Fields, i.e., variables of class\r\n  methods defined in the class\r\n  attributes defined in the class\r\n  annotations defined on the class\r\n  Generated in memory\r\n  Debugging on  directory separator\r\n  Annotations are collected from certain attributes, don't do it more than necessary!\r\n  state for dealing with generic signature string\r\n  Allowed for backward compatibility\r\n  Get source file name if available\r\n  May be zero -> class is java.lang.Object\r\n  Find attributes that contain annotation data\r\n  Debugging ... on  Get path separator either   Never reached\r\n /* According to the specification the following entries must be of type\r\n     * `ConstantClass' but we check that anyway via the \r\n     * `ConstPool.getConstant' method.\r\n     */\r\n /* Print debug information depending on `JavaClass.debug'\r\n   */\r\n","MissingResolvedTypeWithKnownSignature":" isMissing getDeclaredFields getDeclaredMethods getDeclaredInterfaces getDeclaredPointcuts getSuperclass getModifiers getSourceContext isAssignableFrom isAssignableFrom isCoerceableFrom hasAnnotation getInterTypeMungers getInterTypeMungersIncludingSupers getInterTypeParentMungers getInterTypeParentMungersIncludingSupers collectInterTypeMungers raiseWarningOnJoinPointSignature raiseWarningOnMissingInterfaceWhilstFindingMethods raiseCantFindType raiseCantFindType NO_MEMBERS NO_TYPES issuedCantFindTypeError issuedJoinPointWarning issuedMissingInterfaceWarning org.aspectj.weaver.MissingResolvedTypeWithKnownSignature  MessageUtil.warn(world.getMessageHandler(),message);\r\n  MessageUtil.warn(world.getMessageHandler(),message);\r\n  MessageUtil.error(world.getMessageHandler(),message);\r\n  MessageUtil.error(world.getMessageHandler(),message);\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedType#getDeclaredFields()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedType#getDeclaredMethods()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedType#getDeclaredInterfaces()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedType#getDeclaredPointcuts()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedType#getSuperclass()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedType#getModifiers()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedType#getSourceContext()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedType#isAssignableFrom(org.aspectj.weaver.ResolvedType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ResolvedType#isCoerceableFrom(org.aspectj.weaver.ResolvedType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.AnnotatedElement#hasAnnotation(org.aspectj.weaver.UnresolvedType)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","Aspects":" aspectOf aspectOf aspectOf hasAspect hasAspect hasAspect getSingletonOrThreadAspectOf getPerObjectAspectOf getPerTypeWithinAspectOf checkAspectOf getSingletonOrThreadHasAspect getPerObjectHasAspect getPerTypeWithinHasAspect checkHasAspect EMPTY_CLASS_ARRAY PEROBJECT_CLASS_ARRAY PERTYPEWITHIN_CLASS_ARRAY EMPTY_OBJECT_ARRAY ASPECTOF HASASPECT org.aspectj.lang.Aspects  e.getCause());\r\n  e.getCause());\r\n  e.getCause());\r\n ","InnerInFieldInit":"     ","LMUL":" accept  org.aspectj.apache.bcel.generic.LMUL  ","Java15AnnotationFinder":" setClassLoader setWorld getAnnotation getAnnotationFromClass getAnnotationFromMember getAnnotations getAnnotations getParameterNames getParameterNamesFromLVT bcelRepository classLoader world org.aspectj.weaver.reflect.Java15AnnotationFinder  must have no-arg constructor for reflective construction\r\n  the answer is cached and we don't want to hold on to memory\r\n  convert to our Annotation type\r\n  memory.\r\n  memory.\r\n  no luck\r\n  basic error, we can't get the names...\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.reflect.AnnotationFinder#getAnnotation(org.aspectj.weaver.ResolvedType, java.lang.Object)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ExceptionsOnInters":"     ","UnwovenClassFileWithThirdPartyManagedBytecode":" getBytes getBytes provider org.aspectj.weaver.bcel.UnwovenClassFileWithThirdPartyManagedBytecode  ","IdWeaveTestCase":" testFancyId testId  org.aspectj.weaver.bcel.IdWeaveTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","TesterNotesFail":" main  TesterNotesFail  fail\r\n ","String":"   java.lang.String  CE 7 here?\r\n ","CalculatePI":" main approximate r piApproximation repetitions iteration inSquare inCircle CalculatePI  ","SuperC":" main  weaved.SuperC  ","Mixin":" m  Mixin  ","NotAndPointcut":"     ","ParameterAnnotationsTest":" setUp testParameterAnnotations_builtOK testParameterAnnotations_savedAndLoadedOK testParameterAnnotations_loadedThenModifiedThenSavedAndLoadedOK testParameterAnnotations_loadedThenModifiedWithInvisibleAnnotationThenSavedAndLoadedOK findMethod dumpClass dumpClass buildClassContentsWithAnnotatedMethods buildClassContents getClassFrom createClassGen createMethodGen createSimpleVisibleAnnotation createCombinedAnnotation createSimpleInvisibleAnnotation tearDown  org.aspectj.apache.bcel.classfile.tests.ParameterAnnotationsTest  @SimpleAnnotation(id=3) @AnnotationEnumElement(enumval=SimpleEnum.Red) String arg2)\r\n    Build a modifiable version of the foo method\r\n  Check the annotations survived that transform\r\n  That worked, so let's add a new parameter annotation\r\n  @SimpleAnnotation(id=3) @AnnotationEnumElement(enumval=SimpleEnum.Red) String arg2)\r\n  delete the old method and add the new one\r\n      @SimpleAnnotation(id=3) @AnnotationEnumElement(enumval=SimpleEnum.Red) String arg2)\r\n    Build a modifiable version of the foo method\r\n  Check the annotations survived that transform\r\n  That worked, so let's add a new parameter annotation\r\n  @SimpleAnnotation(id=3) @AnnotationEnumElement(enumval=SimpleEnum.Red) String arg2)\r\n  delete the old method and add the new one\r\n    attributes vanish !\r\n  Create method 'public static void main(String[]argv)'\r\n  Use predefined constant\r\n  \"in\" valid from here\r\n  \"name\" valid from here\r\n  Type.STRING, Type.NO_ARGS, Constants.INVOKEVIRTUAL));\r\n  Allow instruction handles to be reused\r\n  Create method 'public static void main(String[]argv)'\r\n  Use predefined constant\r\n  \"in\" valid from here\r\n  \"name\" valid from here\r\n  Type.STRING, Type.NO_ARGS, Constants.INVOKEVIRTUAL));\r\n  Allow instruction handles to be reused\r\n  access flags\r\n  return type\r\n  argument types\r\n  arg names\r\n  method, class\r\n  method, class\r\n  Create an annotation instance\r\n /*\r\n\t * Load an existing class, add new parameter annotations, save and then reload it\r\n\t */\r\n","DeclareOnlyAspectConstructorCE":"     ","ThisJoinPointLock":"     ","AroundCalls":"     ","CastInCast":"     ","JarManifestTest":" setUp testWeave testNoweave checkManifest PROJECT_DIR srcDir binDir outjarName org.aspectj.ajde.JarManifestTest  /*\r\n * Created on 16-Mar-2004\r\n *\r\n * To change the template for this generated file go to\r\n * Window>Preferences>Java>Code Generation>Code and Comments\r\n */\r\n /*\r\n\t * Ensure the output directpry in clean\r\n\t */\r\n","IMessage":" getMessage getKind isError isWarning isDebug isInfo isAbort isTaskTag isFailed getDeclared getID getSourceStart getSourceEnd getThrown getSourceLocation compare isSameOrLessThan compareTo toString getDetails getExtraSourceLocations publish getStackTrace create create main RA_IMessage WEAVEINFO INFO DEBUG TASKTAG WARNING ERROR FAIL ABORT KINDS COMPARATOR precedence name org.aspectj.bridge.IMessage IMessage IErrorMessage IObjectFactory MessageFactory Main  int values must sync with KINDS order below\r\n  represents a 'TODO' from eclipse - producted by the compiler and consumed by AJDT\r\n  XXX ambiguous\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AdviceOnPrivileged":"     ","MethodsWithTheSameName":" main f f toString strings s MethodsWithTheSameName  ","HelloWorld":" say main println main main main main main main println main println main println main println println testStackTrace printRelevantStackEntries main main main main main main  example.HelloWorld HelloWorld HelloWorld HelloWorld HelloWorld de.rohith.HelloWorld HelloWorld HelloWorld HelloWorld HelloWorld hello.HelloWorld HelloWorld HelloWorld HelloWorld HelloWorld org.aspectj.weaver.test.HelloWorld  /*\r\n * Copyright (c) 2004 IBM Corporation and others.\r\n * All rights reserved. This program and the accompanying materials \r\n * are made available under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution, and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n * \r\n * Contributors:\r\n *     Matthew Webster    initial implementation\r\n */\r\n /* Copyright (c) 2002 Contributors.\r\n * \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n */\r\n","ParenKeywords":" main foo  ParenKeywords  ","KnownFieldReference":" resolveType  org.aspectj.ajdt.internal.compiler.ast.KnownFieldReference  XXX handle source locations\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","IntroducedDoc":" member  org.aspectj.ajdoc.IntroducedDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","AnnotatedWithEnumClass":"   AnnotatedWithEnumClass AnnotatedWithEnumClass  ","MockJoinPoint":" getArgs getKind getSignature getSourceLocation getStaticPart getTarget getThis toLongString toShortString me sig args org.aspectj.aopalliance.tests.MockJoinPoint  /*\r\n * Created on 07-May-2004\r\n *\r\n * TODO To change the template for this generated file go to\r\n * Window - Preferences - Java - Code Generation - Code and Comments\r\n */\r\n","Ajc5Tests":" aspectjrtClasspath suite  org.aspectj.tools.ajc.Ajc5Tests  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Matthew Webster  initial implementation \r\n * ******************************************************************/\r\n","Test2CP":" main  circle.Test2CP circle.Base circle.Type  ","TestSoftening":"     ","OrderOfTypes":" main  OrderOfTypes Root Second First  ","AlternateOutputImplementation":" alternateRequest  ca.ubc.cs.spl.aspectPatterns.examples.proxy.aspectj.AlternateOutputImplementation  ","ITDTest":" testITDDeclaredOn testITDMatchesDeclare testNoAspectDeclarations  org.aspectj.tools.ajdoc.ITDTest  check field itd appears\r\n  check the modifiers are correct in the declare detail summary\r\n  check the modifiers are correct in the declare summary\r\n  Check the contents of C.html\r\n  check that the required sections exist\r\n  check the modifier information in the sections is correct\r\n ","NoReturnStatementSimple":" noReturn main  NoReturnStatementSimple  compile error here detected by javac\r\n ","InstructionFinder":" reread mapName compilePattern getMatch search search search search makeChar getInstructionList checkCode precompile pattern2string pattern2string OFFSET NO_OPCODES map il il_string handles org.aspectj.apache.bcel.util.InstructionFinder  char + OFFSET is outside of LATIN-1\r\n  Potential number, some are not used\r\n  Map<String,Pattern>\r\n  instruction list as string\r\n  map instruction list to array\r\n  Create a string with length equal to il length\r\n  Map opcodes to characters\r\n  Where to start search from (index)\r\n  Some aliases\r\n  Precompile some aliases first\r\n  Omit already precompiled patterns\r\n  precompile all patterns\r\n  Not an invalid opcode\r\n /*\r\n   * Internal debugging routines.\r\n   */\r\n","Test2CF":"   circle.Test2CF circle.Base circle.Type circle.Derived  CE cyclic inheritance\r\n  CE cyclic inheritance\r\n ","TryOffEnd":"     ","ParameterizedType":" giveMeAT giveMeAnS sComesBeforeT theMadMapper convert aTField anSField ParameterizedType  /*\r\n * test case fodder for basic member matching with parameterized types\r\n */\r\n","GUIMediator":" colleagueChanged  ca.ubc.cs.spl.aspectPatterns.examples.mediator.java.GUIMediator  ","IRunValidator":" runPassed  org.aspectj.testing.run.IRunValidator  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","LibModuleTests":" suite  org.aspectj.lib.LibModuleTests  ","I2B":" accept  org.aspectj.apache.bcel.generic.I2B  ","I2D":" accept  org.aspectj.apache.bcel.generic.I2D  ","CommonsTraceFactoryTest":" testGetTraceFactory  org.aspectj.weaver.CommonsTraceFactoryTest  ","I2C":" accept  org.aspectj.apache.bcel.generic.I2C  ","I2F":" accept  org.aspectj.apache.bcel.generic.I2F  ","ThisOrTargetPointcut":" isBinding getType isThis parameterizeWith couldMatchKinds fastMatch couldMatch matchInternal write read resolveBindings postRead getBindingAnnotationTypePatterns getBindingTypePatterns equals hashCode toString findResidueInternal concretize1 accept isThis type declarationText thisKindSet targetKindSet org.aspectj.weaver.patterns.ThisOrTargetPointcut  AVPT was DYNAMIC\r\n  look for parameterized type patterns which are not supported...\r\n  if no preference is specified, just say TRUE which means no residue\r\n  Enforce rule about which designators are supported in declare\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingAnnotationTypePatterns()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingTypePatterns()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","I2L":" accept  org.aspectj.apache.bcel.generic.I2L  ","ExactAnnotationTypePattern":" getResolvedAnnotationType getAnnotationType fastMatches matches matchesRuntimeType resolve resolveBindings parameterizeWith maybeGetSimpleName verifyIsAnnotationType write read equals hashCode toString accept annotationType formalName resolved bindingPattern VERSION org.aspectj.weaver.patterns.ExactAnnotationTypePattern  resolved, and we're not yet...\r\n  a static match is good enough\r\n  a subtype could match at runtime\r\n  this version should be called for @this, @target, @args\r\n  Non binding case\r\n  We may not have found it if it is in a package, lets look it up...\r\n  rev if serialisation form changes\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.AnnotationTypePattern#resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings, boolean)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PatternNode#write(java.io.DataOutputStream)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#equals(java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#hashCode()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","Goo":"   org.xyz.Goo  ","AtInnerAJAspect":" m  AtInnerAJAspect  ","PR353e":"     ","PR353d":"     ","PR353c":"     ","I2S":" accept  org.aspectj.apache.bcel.generic.I2S  ","PR353b":"     ","SignaturePattern":" asString getDetail setDetail propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty clone0 subtreeMatch0 accept0 treeSize resolveBindings checkForIncorrectTargetKind reportUnmatchedTargetKindMessage visit visit visit visit visit visit containedIncorrectTargetKind getIncorrectTargetKinds postRead parameterizeWith matches matchesExactly matchesExactlyStaticInitialization matchesExactlyField matchesExactlyMethod matchesExactlyConstructor matchesVarArgs matchesAnnotations findMethod declaringTypeMatchAllowingForCovariance getDeclaringTypes getName getDeclaringType getKind toString equals hashCode write read getModifiers getParameterTypes getReturnType getThrowsPattern matchedArrayAgainstVarArgs getAnnotationPattern isStarAnnotation accept detail kind modifiers returnType declaringType name parameterTypes throwsPattern annotationPattern hashcode scope incorrectTargetKinds targetsOtherThanTypeAllowed org.aspectj.lang.reflect.SignaturePattern org.aspectj.org.eclipse.jdt.core.dom.SignaturePattern org.aspectj.weaver.patterns.SignaturePattern  allow default implementation to flag the error\r\n  dispatch to correct overloaded match method\r\n  warning has been turned off, or if the patternNode is *\r\n  everything is incorrect since we've already checked whether we have the TYPE target annotation\r\n  of pointcuts which don't go through SignaturePattern.resolveBindings(..)\r\n  fail (or succeed!) fast tests...\r\n  do the hard work then...\r\n  if we got a \"MAYBE\" it's worth looking at the other signatures\r\n  Java5 introduces bridge methods, we match a call to them but nothing else...\r\n  modifiers match on the *subject*\r\n  annotations match on the *subject*\r\n  and MAYBE if it doesn't but an ancester member could.\r\n  ok, it's bad.\r\n  looking bad, but there might be parameterization to consider...\r\n  passed all the guards...\r\n  Check the throws pattern\r\n  ok, it's bad.\r\n  looking bad, but there might be parameterization to consider...\r\n  It could still be a match based on the generic sig parameter types of a parameterized type\r\n  check that varargs specifications match\r\n  passed all the guards..\r\n  It could still be a match based on the generic sig parameter types of a parameterized type\r\n  check that varargs specifications match\r\n  Check the throws pattern\r\n  passed all the guards..\r\n  the method ends with an array type, check that we don't *require* a varargs\r\n  XXX - Ideally the shadow would be included in the msg but we don't know it...\r\n  we have at least one parameter in the pattern list, and the method has a varargs signature\r\n  optimization before we go digging around for annotations on ITDs\r\n  FIXME asc should include supers with getInterTypeMungersIncludingSupers?\r\n  relevant member in the original aspect\r\n  do NOT look at ancestor members...\r\n  fastmatch\r\n  It must be in here, or we have *real* problems\r\n  might be currently looking at the generic type and we need to continue searching in case we hit a parameterized version of this same type...\r\n  lookupMethod rather than lookupMemberNoSupers()\r\n  FIXME AV - bad, cannot be parsed again\r\n  we have at least one parameter in the pattern list, and the method has a varargs signature\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* PatternNode -> AnnotationTargetKind[] */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Super2":" m  Super2  ","Super1":" m  Super1  ","StripNonBodyHtml":" setSrcdir setDestdir execute processFile strip readToString writeBodyTo processBody stripTags findStart findEnd barf srcDir destDir temp buf serialVersionUID org.aspectj.internal.tools.ant.taskdefs.StripNonBodyHtml  , end;\r\n  if we get confused, just don't write the file.\r\n  <------------ invalid exit\r\n  <------------ invalid exit\r\n  <------------ valid exit\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","StaticIntroducedReferences":"     ","Parameter":"   org.aspectj.ajdoc.Parameter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","IntFieldOnInterface":"     ","Pass3aVerifier":" do_verify delayedPass2Checks pass3StaticInstructionChecks pass3StaticInstructionOperandsChecks contains getMethodNo max_locals constraintViolated indexValid visitLoadClass visitLDC visitLDC2_W visitFieldInstruction visitInvokeInstruction visitINSTANCEOF visitCHECKCAST visitNEW visitMULTIANEWARRAY visitANEWARRAY visitNEWARRAY visitILOAD visitFLOAD visitALOAD visitISTORE visitFSTORE visitASTORE visitIINC visitRET visitLLOAD visitDLOAD visitLSTORE visitDSTORE visitLOOKUPSWITCH visitTABLESWITCH visitPUTSTATIC visitGETSTATIC visitINVOKEINTERFACE visitINVOKESPECIAL visitINVOKESTATIC visitINVOKEVIRTUAL objarrayequals myOwner method_no instructionList code cpg org.aspectj.apache.bcel.verifier.statics.Pass3aVerifier  did not pass Pass 2.\r\n  and satisfies static constraints of Pass 2.\r\n  IF mg HAS NO CODE (static constraint of Pass 2)\r\n  No Code? Nothing to verify!\r\n  instruction and so on.\r\n  default\r\n    TODO: Make this a binary search! The instructionPositions array is naturally ordered!\r\n  may appear in any order.\r\n  WARNING: This is not true for BCEL's \"generic\" API.\r\n  contradicts vmspec2 page 152 (\"Limitations\"), but is on page 134.\r\n  We currently go the safe way here.\r\n  verifier's subroutine semantics one cannot predict reachability.\r\n  JSR   Checks for the things BCEL does _not_ handle itself.\r\n  An \"own\" constraint, due to JustIce's new definition of what \"subroutine\" means.\r\n  vmspec2, page 134-137\r\n  null means \"no class is loaded\"\r\n  LDC and LDC_W (LDC_W is a subclass of LDC in BCEL's model)\r\n  LDC2_W\r\n  getfield, putfield, getstatic, putstatic\r\n  if (o instanceof INVOKEINTERFACE){\r\n  Invoked method must not be <init> or <clinit>\r\n  Constants are okay due to pass2.\r\n  If it's an interface, it can be set only in <clinit>.\r\n  too. So are the allowed method names.\r\n  too. So are the allowed method names.\r\n  too. So are the allowed method names.\r\n  implies it's not abstract, verified in pass 2.\r\n  too. So are the allowed method names.\r\n /* We cannot use code.getLocalVariableTable() because there could be more\r\n\t\t   than only one. This is a bug in BCEL. */\r\n /* TODO: Check if assignment compatibility is sufficient.\r\n\t\t\t\t   What does Sun do? */\r\n /* TODO: also look up if the field is inherited! */\r\n","Interface":" interfaceMethod  Interface  ","Super4":" m  Super4  ","OneArmedPrimitiveTests":" neg pos main doByte doShort doInt doLong doFloat doDouble doChar bn bz b1 sn sz s1 in iz i1 ln lz l1 fn fz f1 fx dn dz d1 dx cz c1 OneArmedPrimitiveTests  ","Super3":"   Super3  ","AnnotationsBinaryWeaving":" suite getSpecFile test001_itdsOnAnnotationsNotAllowed test002_decpOnAnnotationNotAllowed_errors test004_decpOnAnnotationNotAllowed_xlints  org.aspectj.systemtest.ajc150.AnnotationsBinaryWeaving  Cannot make ITD (c  Deals with the cases where an explicit type is specified and it is an annotation type\r\n  Deals with the cases where an wild type pattern is specified and it hits an annotation type\r\n ","IdentifiableAspect":"     ","ClassExtendingAbstractAspectCE":"     ","KeywordAspect":" main realMain pointcut KeywordAspect  ","Creator":" processType processAttribute processValue getRepresentation processType processAttribute processValue getRepresentation representation ca.ubc.cs.spl.aspectPatterns.examples.builder.aspectj.Creator ca.ubc.cs.spl.aspectPatterns.examples.builder.java.Creator  ","WeaverStateInfo":" setReweavableModeDefaults read toString write addConcreteMunger toString getTypeMungers isOldStyle getUnwovenClassFileData setUnwovenClassFileData isReweavable setReweavable addAspectsAffectingType addAspectAffectingType getAspectsAffectingType readAnyReweavableData replaceKeyWithDiff findEndOfKey endOfKeyHere insertArray readInt deleteInArray generateDiff applyDiff serializeInt writeAnyReweavableData typeMungers oldStyle reweavable reweavableCompressedMode reweavableDiffMode aspectsAffectingType unwovenClassFile reweavableDefault reweavableCompressedModeDefault reweavableDiffModeDefault key unwovenClassFileIsADiff UNTOUCHED WOVEN EXTENDED REWEAVABLE_BIT REWEAVABLE_COMPRESSION_BIT REWEAVABLE_DIFF_BIT aspectType typeMunger org.aspectj.weaver.WeaverStateInfo  If true, unwovenClassFile is uncompressed on read\r\n  if true, unwovenClassFile is written and read as a diff\r\n  These must exist in the world for reweaving to be valid\r\n  Original 'untouched' class file\r\n  ajh02: changed from false;\r\n  Then when the wovenClassFile has been made, replaceKeyWithDiff is called.\r\n  Use 'bits' for these capabilities - only valid in EXTENDED mode\r\n  put key in so we can replace it with the diff later\r\n  Load list of aspects that need to exist in the world for reweaving to be 'legal'\r\n  the unwovenClassFile may have been compressed:\r\n  asks for the unwovenClassFile\r\n  so we'll have to fiddle with the four 'int length' bytes\r\n  delete the key\r\n  put the length of the diff infront of the diff\r\n  swap in the serialized newLength for the oldOne:\r\n  add the diff\r\n  looks through the classfile backwards (as the attributes are all near the end)\r\n  should never happen\r\n  should never happen\r\n  make a new array\r\n  copy in the bit before the deleted bit\r\n  copy in the bit after the deleted bit\r\n  find how long the run is\r\n  first 2 bytes of the diff are the constant pool count\r\n  then 4 bytes saying how long the run is\r\n  then we just dump the rest of the unWovenClassFile verbatim\r\n  copy the first 8 bytes from the wovenClassFile\r\n  copy the constant pool count from the diff\r\n  copy the run from the wovenClassFile\r\n  copy the stuff after the run from the diff\r\n  Write out list of aspects that must exist next time we try and weave this class\r\n  otherwise we'll insert it as a diff later\r\n /*Entry*/\r\n /*String*/\r\n /*String*/\r\n /*String*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ClassFormatException":"   org.aspectj.apache.bcel.classfile.ClassFormatException  ","Test":" main sayHello doSayHello run main main main foo toArray toArray getFirst getObjs main foo main foo foo2 foo2 foo main foo main main main foo main foo main run accept makeAnd makeOr makeNot makeInstanceof makeHasAnnotation makeCall makeFieldGetCall main foo testNothingForAntJUnit i intsSet set set t intsSet ints Test Test tjpStaticPart.Test com.Test Test Test Test com.foo.bar.Test com.foo.bar.TTT Test Generic1 Generic2 Test Test Test Test test.Test com.foo.bar.Test other.Test test.Test org.aspectj.weaver.ast.Test org.aspectj.weaver.test.Test  if (b == Literal.NO_TEST) return a;\r\n  if (b == Literal.NO_TEST) return b;\r\n  uses our special rules that anything matches object\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n /* Copyright (c) 2002 Contributors.\r\n * \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n */\r\n","ConditionalTask":" ifs createIf createIf createIf createIf createIf setIfs setIf setName getName setEquals getEquals setStrict isStrict isOk isOk isFalse isTrue isOneOf complement checkIfs getFalses execute TRUE ifs name equals strict falses trues org.aspectj.internal.tools.ant.taskdefs.ConditionalTask  XXX Need a better boolean parser\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Beta.20":" main sayhi main sayhi  primary.Beta primary.Beta  ","CrosscutTest":" main h CrosscutTest  Check \"points to\"\r\n  the introduction declaration, or to the member that was introduced\r\n  Check \"pointed by\"\r\n ","AnnotationMoodTester":" setUp testHappyDefault testOneConfused ami0 ami1 moodytest.AnnotationMoodTester  ","TestNoTester":" main main main  TestNoTester TestNoTester TestNoTester  ","JUnitDriver":"     ","Beta.delete.60":" main sayhi  primary.Beta  ","Twelve":"     ","MyBrokenXOption":"   com.test.MyBrokenXOption  ","IRelationship":" getName getTargets getSourceHandle addTarget getKind hasRuntimeTest isDeclareKind toString readResolve isAffects serialVersionUID DECLARE_WARNING DECLARE_ERROR ADVICE_AROUND ADVICE_AFTERRETURNING ADVICE_AFTERTHROWING ADVICE_AFTER ADVICE_BEFORE ADVICE DECLARE DECLARE_INTER_TYPE USES_POINTCUT DECLARE_SOFT ALL name nextOrdinal ordinal org.aspectj.asm.IRelationship  The 4 declarations below are necessary for serialization\r\n /*String*/\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","NonPersistent":"     ","AspectInIntroducedMethod":"     ","LabelCreator":" createComponent getTitle createComponent getTitle  ca.ubc.cs.spl.aspectPatterns.examples.factoryMethod.aspectj.LabelCreator ca.ubc.cs.spl.aspectPatterns.examples.factoryMethod.java.LabelCreator  ","NewMethodTypeMunger":" getInterMethodBody getDeclaredInterMethodBody getInterMethodDispatcher getDeclaredInterMethodDispatcher write readMethod getMatchingSyntheticMember parameterizedFor equals hashCode  org.aspectj.weaver.NewMethodTypeMunger  For raw and 'normal' parameterized targets  (e.g. Interface, Interface<String>)\r\n  in the original ITD declaration to the ones used in the actual target type declaration.\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","propertyChanger":"     ","StructureView":" getViewProperties getRootNode setRootNode setViewProperties setRenderer notifyViewUpdated getActiveNode findCorrespondingViewNode findCorrespondingViewNodeHelper setActiveNode setActiveNode rootNode activeNode viewProperties renderer org.aspectj.ajde.ui.StructureView  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AntBuilder":" getBuilder resultToTargetName makeTargetsForResult setupTask copyFile copyFiles copyFileset makeCopyTask dumpMinFile compile setupClasspath assemble getAntecedantResults assembleAll buildInstaller executeTask wrapIfNeeded runtimeJarOnClasspath getAspectJLib aspectJTask getProductInstallResourcesSrc getProductInstallerFileName getProductInstallerMainClass copyBinaries copyNonBinaries buildInstaller getBuildJar log error logException FORCE_FORK_FOR_LIBRARIES project AJCTASK ASPECTJRT_JAR_VARIABLE LIBASPECTJ_RPATH nameToAspectjrtjar NONE project org.aspectj.internal.tools.ant.taskdefs.AntBuilder org.aspectj.internal.tools.ant.taskdefs.ProductBuilder org.aspectj.internal.tools.ant.taskdefs.ProjectMessager  Messager handler = new Messager();   first add the target\r\n  then recursively add any required results\r\n  -- source paths\r\n  nothing to compile - ok\r\n  I suspect it requires the proper adapter setup.\r\n  -- classpath\r\n  otherwise never releases library jars\r\n  -- set output directory\r\n  misc\r\n  1.1 class files - Javac in 1.4 uses 1.4\r\n  compile\r\n  debuglog System.err.println(m);\r\n  be nice to let go of classpath libraries...\r\n  XXX fix test access\r\n  required libraries\r\n  Westodo        Kind kind = result.getKind();\r\n  XXX exported modules not supported\r\n  required modules and their exported libraries\r\n  ---- zip result up\r\n  -- merge any resources in any of the src directories\r\n  XXXFileLiteral\r\n  XXXFileLiteral\r\n  *something* to zip up\r\n  because there are no entries to add, so verify done\r\n  bug: doc says topoSort returns String, but returns Target\r\n  fyi, we don't rely on topoSort to detect cycles - see buildAll\r\n  topoSort always returns target name\r\n  ---- zip result up\r\n  \".jar\".length()\r\n  XXXFileLiteral\r\n  required includes self - exclude manifest from others\r\n  -- merge any antecedents, less any manifest\r\n  System.out.println(\"javac \" + result + \" \" + javac.getClasspath());\r\n  yes, in variables - find aspectjrt.jar to add to classpath\r\n  System.out.println(\"aspectj \" + result + \" \" + javac.getClasspath());\r\n  Westodo                Project project = javac.getProject();\r\n  XXXFileLiteral\r\n  XXXFileLiteral\r\n  XXXNameLiteral\r\n  filter-copy everything but the binaries\r\n  XXXFileLiteral\r\n  XXX\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","IOption":"   com.test.IOption  ","IncrementalStateManager":" recordSuccessfulBuild removeIncrementalStateInformationFor clearIncrementalStates getConfigFilesKnown retrieveStateFor findStateManagingOutputLocation recordIncrementalStates debugIncrementalStates incrementalStates org.aspectj.ajdt.internal.core.builder.IncrementalStateManager  SECRETAPI will consume more memory, so turn on at your own risk ;)  Set to 'true' when memory usage is understood\r\n  forget what you know...\r\n  FIXME asc why can it ever be null?\r\n  FIXME why can it ever be null? due to using outjar?\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n * Andy Clement          initial implementation\r\n * ******************************************************************/\r\n","NotExpression":" evaluate evaluate replace copy exp exp ca.ubc.cs.spl.aspectPatterns.examples.interpreter.aspectj.NotExpression ca.ubc.cs.spl.aspectPatterns.examples.interpreter.java.NotExpression  ","DLOAD":" accept  org.aspectj.apache.bcel.generic.DLOAD  ","FormatDingbatCallout":" formatCallout graphicsMax com.nwalsh.xalan.FormatDingbatCallout  FIXME: this could be a problem...\r\n ","BigString":" main byteOp byteAssign byteTest byteSwitch shortOp shortAssign shortTest shortSwitch charOp charAssign charTest charSwitch intOp intAssign intTest intSwitch longOp longAssign longTest longSwitch floatOp floatAssign floatTest floatSwitch doubleOp doubleAssign doubleTest doubleSwitch booleanOp booleanAssign booleanTest booleanSwitch StringOp StringAssign StringTest StringSwitch  BigString  byte tests\r\n  short tests\r\n  char tests\r\n  int tests\r\n  long tests\r\n  float tests\r\n  double tests\r\n  boolean tests\r\n  String tests\r\n ","BadQualifiedNew":" main  BadQualifiedNew  ","IfPointcut":" couldMatchKinds fastMatch matchInternal alwaysFalse alwaysTrue getResidueSource write read resolveBindings equals hashCode toString findResidueInternal shouldCopyLocationForConcretize concretize1 parameterizeWith makeIfFalsePointcut accept couldMatchKinds alwaysFalse findResidueInternal fastMatch matchInternal match resolveBindings postRead concretize1 write hashCode toString makeIfTruePointcut alwaysTrue findResidueInternal fastMatch matchInternal match resolveBindings postRead concretize1 write hashCode toString testMethod extraParameterFlags enclosingPointcutHint residueSource baseArgsCount findingResidue ifLastMatchedShadowId ifLastMatchedShadowResidue partiallyConcretized org.aspectj.weaver.patterns.IfPointcut  resolved during concretize\r\n  allows to keep track of the @Aj style\r\n  ??? this is not maximally efficient\r\n  enh 76055\r\n  do we have a test method?\r\n  should always have a test method unless @AJ style\r\n  FIXME AV - bad, this makes it unparsable. Perhaps we can use if() for code style behind the scene!\r\n  @AJ style\r\n  There has to be a better way...\r\n  Similar to lastMatchedShadowId - but only for if PCDs.\r\n  Have we already been asked this question?\r\n  @style is slightly different\r\n  we don't use i as JoinPoint.* can be anywhere in the signature in @style\r\n  FIXME AV - \"args(jp)\" test(jp, thejp) will fail here\r\n  is bindings for the arguments\r\n  pr118149\r\n  simply return Test.\r\n  If there are no args to sort out, don't bother with the recursive call\r\n  handle thisJoinPoint parameters\r\n  code style\r\n  Remember...\r\n  Enforce rule about which designators are supported in declare\r\n  @AJ style, we need to find the testMethod in the aspect defining the \"if()\" enclosing pointcut\r\n  but we have no enclosing advice.\r\n  put out a compiler error.\r\n  FIXME AV - will lead to failure for \"args(jp)\" test(jp, thejp)   we can't touch \"if\" methods\r\n  ??? there could possibly be some good optimizations to be done at this point\r\n  can only get here if an earlier error occurred\r\n  Enforce rule about which designators are supported in declare\r\n  can only get here if an earlier error occurred\r\n  Enforce rule about which designators are supported in declare\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC                 initial implementation\r\n *     Alexandre Vasseur    if() implementation for @AJ style\r\n * ******************************************************************/\r\n","ClockTimer":" tick getHour getMinute getSeconds getHour getMinute getSeconds addObserver tick observers clock.ClockTimer clock.ClockTimer  ","JavadocRunner":" has14ToolsAvailable callJavadoc  org.aspectj.tools.ajdoc.JavadocRunner  System.out.println(\"Error: javadoc exited unexpectedly\");\r\n  for JDK 1.4 and above call the execute method...\r\n  Set the security manager back\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Mik Kersten\t  port to AspectJ 1.1+ code base\r\n * ******************************************************************/\r\n","BadA":"     ","ISequence":"   ISequence  ","Holder":"   sample.Holder  ","StrategyProtocol":"     ","INVOKESPECIAL":" getExceptions accept  org.aspectj.apache.bcel.generic.INVOKESPECIAL  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","DeclareFormsTest":" testCoverage testDeclareStatments testDeclareWarning testMatchesDeclareCall testMatchesDeclareExecution testDeclareParents testAspectDeclarations testDeclareSoft testSoftenedBy testDeclareAnnotation testMethodAnnotatedBy testConstructorAnnotatedBy testFieldAnnotatedBy testTypeAnnotatedBy testMatchesDeclareAndAdvisedBy testTwoDeclareParents declareError declareWarningQuotes declareWarning declareParentsImpl declareSoft declarePrecedence doItHref pointHref cHref doIt org.aspectj.tools.ajdoc.DeclareFormsTest  check the contents of the declare detail summary\r\n  the same strings\r\n  Check for this....\r\n  statement in the declare summary section\r\n  check that the 'annotates' relationship is there\r\n  check that the correct declare statements are there\r\n  exist in the code\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","StreamSniffer":" setBuffer write write write buffer delegate org.aspectj.testing.util.StreamSniffer  XXX\r\n  ---------------- FilterOutputStream\r\n /*\r\n * StreamGrabber.java created on May 16, 2002\r\n *\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AdviceKind":" read stringToKind isAfter isCflow getPrecedence isPerEntry isPerObjectEntry precedence isAfter isCflow Before After AfterThrowing AfterReturning Around CflowEntry CflowBelowEntry InterInitializer PerCflowEntry PerCflowBelowEntry PerThisEntry PerTargetEntry Softener PerTypeWithinEntry org.aspectj.weaver.AdviceKind  these kinds can't be declared, but are used by the weaver\r\n  XXX resolve precednece with the below\r\n  PTWIMPL Advice representing when aspect should be initialized\r\n  PTWIMPL Allow for PTW case\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","MyProfile":"     ","PerClause":" getKind readPerClause concretize1 concretize getKind toDeclarationString read extractPointcut inAspect SINGLETON PERCFLOW PEROBJECT FROMSUPER PERTYPEWITHIN PERCFLOW PERCFLOWBELOW PERTHIS PERTARGET PERTYPEWITHIN org.aspectj.lang.reflect.PerClause org.aspectj.weaver.patterns.PerClause  PTWIMPL New kind added to this class, can be (de)serialized\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","BrowserView":" setSlaveViewVisible isSlaveViewVisible updateConfigs setSelectedConfig getSelectedConfig fixButtonBorders jbInit forward_button_actionPerformed back_button_actionPerformed getListCellRendererComponent configDesigner_button_mouseClicked configDesigner_button_mousePressed configDesigner_button_mouseReleased configDesigner_button_mouseEntered configDesigner_button_mouseExited configDesigner_button_actionPerformed viewManager_button_mouseClicked viewManager_button_mousePressed viewManager_button_mouseReleased viewManager_button_mouseEntered viewManager_button_mouseExited viewManager_button_actionPerformed configs_comboBox_actionPerformed joinpointProbe_button_actionPerformed serialVersionUID slaveView slaveViewVisible lastSelectedConfig icons borderLayout1 default_border toolBar_panel borderLayout2 mainToolBar_panel config_toolBar configs_comboBox borderLayout3 nav_toolBar forward_button back_button gridLayout1 views_splitPane command_toolBar splitView_button zoomToFile_button joinpointProbe_button serialVersionUID org.aspectj.ajde.ui.swing.BrowserView  private BrowserViewPanel masterView;\r\n  this.masterView = masterView;\r\n  structureViews_box.add(comment_editorPane, null);\r\n  setForeground(isSelected ? Color.lightGray : Color.gray);\r\n  TopManager.INSTANCE.VIEW_MANAGER.readStructureView();\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AnnotatedWithClassClass":"   AnnotatedWithClassClass AnnotatedWithClassClass  ","ClassForName":"     ","XMLCreator":" processType processAttribute processValue checkType checkAttribute getRepresentation processType processAttribute processValue getRepresentation type attribute type attribute ca.ubc.cs.spl.aspectPatterns.examples.builder.aspectj.XMLCreator ca.ubc.cs.spl.aspectPatterns.examples.builder.java.XMLCreator  ","InitializerTest":"     ","BeforeWithBadReturn":" logEntry  BeforeWithBadReturn  ","TypeDeclInAdvice":"     ","ScopeWithTypeVariables":" lookupType getWorld getEnclosingType getMessageHandler lookupFormal getFormal getFormalCount getImportedPrefixes getImportedNames message message message delegateScope typeVariableNames typeVarTypeXs org.aspectj.weaver.patterns.ScopeWithTypeVariables  /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.IScope#lookupType(java.lang.String, org.aspectj.weaver.IHasPosition)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.IScope#getWorld()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.IScope#getEnclosingType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.IScope#getMessageHandler()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.IScope#lookupFormal(java.lang.String)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.IScope#getFormal(int)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.IScope#getFormalCount()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.IScope#getImportedPrefixes()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.IScope#getImportedNames()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.IScope#message(org.aspectj.bridge.IMessage.Kind, org.aspectj.weaver.IHasPosition, java.lang.String)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.IScope#message(org.aspectj.bridge.IMessage.Kind, org.aspectj.weaver.IHasPosition, org.aspectj.weaver.IHasPosition, java.lang.String)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","PMGClass":" accept dump getPMGClassIndex setPMGClassIndex getPMGIndex setPMGIndex getPMGName getPMGClassName toString copy pmg_class_index pmg_index org.aspectj.apache.bcel.classfile.PMGClass  ","Test3":"     ","Test2":" foo foo foo2 foo2 foo main doubSet Test2 Generic1 Generic2 Test2  ","BeforeAdviceDeclaration":" clone0 subtreeMatch0 accept0  org.aspectj.org.eclipse.jdt.core.dom.BeforeAdviceDeclaration  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n","DeclareSoftDeclaration":" clone0 subtreeMatch0 accept0 internalModifiersProperty internalModifiers2Property internalJavadocProperty propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty getTypePattern setTypePattern getPointcut setPointcut JAVADOC_PROPERTY TYPE_PATTERN_PROPERTY POINTCUT_PROPERTY PROPERTY_DESCRIPTORS_2_0 PROPERTY_DESCRIPTORS_3_0 typePattern pointcut org.aspectj.org.eclipse.jdt.core.dom.DeclareSoftDeclaration  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  allow default implementation to flag the error\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - \r\n\t * therefore we don't do anything with this\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - \r\n\t * therefore we don't do anything with this\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n","DecoratedStringGenerator":" prepare filter finalize generate prepare filter finalize  ca.ubc.cs.spl.aspectPatterns.examples.templateMethod.aspectj.DecoratedStringGenerator ca.ubc.cs.spl.aspectPatterns.examples.templateMethod.java.DecoratedStringGenerator  ","AroundDoubleAssignmentC":"     ","AroundExceptions":"     ","MemberImpl":" resolve typesToSignature typesToSignature signatureToTypes field field method monitorEnter monitorExit pointcut field method pointcut makeExceptionHandlerSignature fieldFromString methodFromString parseIds equals hashCode compareTo toString toLongString getKind getDeclaringType getReturnType getGenericReturnType getType getName getParameterTypes getSignature getArity getParameterSignature isCompatibleWith equalTypes getModifiers getExceptions isProtected isStatic isStrict isStatic isInterface isPrivate canBeParameterized getCallsiteModifiers getModifiers getExtractableName hasAnnotation getAnnotationTypes getAnnotations getDeclaringTypes walkUp walkUpStatic getSignatureMakerName getSignatureType getSignatureString getHandlerSignatureString getStaticInitializationSignatureString getAdviceSignatureString getMethodSignatureString getMonitorSignatureString getConstructorSignatureString getFieldSignatureString makeString makeString makeString makeString getParameterNames getJoinPointSignatures kind declaringType modifiers returnType name parameterTypes signature paramSignature joinPointSignatures ZERO_STRINGS hashCode org.aspectj.weaver.MemberImpl  break out when the hit the ')'\r\n  assumed 'reference' to a type variable, so just \"Tname;\"\r\n  Have to skip to the *correct* ';'\r\n  posn now points to the correct nextSemicolon :)\r\n  ---- factory methods\r\n  ??? this calls <clinit> a method\r\n  final int len = str.length();\r\n  this is kinda weird\r\n  this is wrong if the member doesn't exist, but that doesn't matter\r\n  buf.append(getName());\r\n  buf.append(getName());\r\n  modifiers\r\n  name\r\n  Declaring Type\r\n  Parameter Types\r\n  Parameter names\r\n  ??? expensive\r\n  this behavior matches the string used by the eclipse compiler for Foo.class literals\r\n  this is the inverse of the odd behavior for Class.forName w /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#resolve(org.aspectj.weaver.World)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#compareTo(java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#toLongString()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getKind()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getDeclaringType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getReturnType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getName()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getParameterTypes()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getSignature()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getParameterSignature()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#isCompatibleWith(org.aspectj.weaver.Member)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getModifiers(org.aspectj.weaver.World)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getExceptions(org.aspectj.weaver.World)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#isProtected(org.aspectj.weaver.World)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#isStatic(org.aspectj.weaver.World)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#isStrict(org.aspectj.weaver.World)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#isStatic()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#isInterface()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#isPrivate()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#canBeParameterized()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getCallsiteModifiers()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getExtractableName()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#hasAnnotation(org.aspectj.weaver.UnresolvedType)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getAnnotationTypes()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getAnnotations()\r\n\t */\r\n /*ResolvedType*/\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getDeclaringTypes(org.aspectj.weaver.World)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getSignatureMakerName()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getSignatureType()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getSignatureString(org.aspectj.weaver.World)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.Member#getParameterNames(org.aspectj.weaver.World)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ParserRecoveryTest":"     ","AmbiguousReferent":"   ambiguousClass.AmbiguousReferent  CE 5 \"Duplicate type name\"\r\n ","VariableContext":" lookup assign lookup assign assignments assignments ca.ubc.cs.spl.aspectPatterns.examples.interpreter.aspectj.VariableContext ca.ubc.cs.spl.aspectPatterns.examples.interpreter.java.VariableContext  ","UnwovenAdviceNotCheckedCE":"     ","Consts":"  A_CONST a.Consts  default visibility - will be OK, TestNPE is in the same package\r\n ","Aspect.20":"     ","Case5":"     ","Rocks":" doIt  fluffy.bunny.rocks.Rocks  ","Case4":"     ","ResolvedPointcutDefinition":" write read toString getPointcut isAjSynthetic parameterizedWith setPointcut pointcut DUMMY org.aspectj.weaver.ResolvedPointcutDefinition  XXXpointcut.assertState(Pointcut.RESOLVED);\r\n  whilst we have a source context, let's remember it\r\n  type variables to their first bound.\r\n  for testing\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Case7":"     ","Case6":"     ","Case1":"     ","ProxyPrintStream":" hide show isHiding write write write print print print print print print print print print println println println println println println println println println println delegate hiding org.aspectj.testing.util.ProxyPrintStream  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Case3":"     ","ReflectionBasedReferenceTypeDelegateFactory":" createDelegate create15Delegate createGenericSignatureProvider createResolvedMember createResolvedMethod createResolvedAdviceMember createStaticInitMember createResolvedConstructor createResolvedField createHandlerMember resolveTypeInWorld toResolvedType toResolvedTypeArray  org.aspectj.weaver.reflect.ReflectionBasedReferenceTypeDelegateFactory  can be null if we didn't find the class the delegate logic loads\r\n  can return 'null' if we can't find the class\r\n  toResolvedType(aConstructor.getDeclaringClass(),(IReflectionWorld)inWorld),\r\n  classes that represent arrays return a class name that is the signature of the array type, ho-hum...\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","Case2":"     ","GOTO":" dump updatePosition accept  org.aspectj.apache.bcel.generic.GOTO  GOTO_W\r\n  Depending on old position value\r\n  Position may be shifted by preceding expansions\r\n  to large for short (estimate)\r\n  5 - 3\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","AdviceDoc":" isAbstract overriddenAspect returnType crosscuts isThrowing isReturning extraType  org.aspectj.ajdoc.AdviceDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","MegaZipTestCase":" setUp tearDown makeAroundMunger getShadowMungers zipTest testEmptyForAntJUnit trytestBig outDir org.aspectj.weaver.bcel.MegaZipTestCase  BcelWorld world = new BcelWorld();\r\n  to try, rename as testBig and put aspectjtools.jar in testdata\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","User2":" main  User2  ","User1":" main  User1  ","HierarchyIntroductions":"     ","AjcTaskTest":" accept main collectMessage deleteTempDir getTempDir tearDown checkRun checkContains getTask getTask handleMessage handleMessage testNullDestDir testOutputRequirement testSourceRootCopyFilter testInpathDirCopyFilter testInpathDirCopyFilterWithJar testInpathDirCopyFilterWithOddjar checkInpathCopy testInpathDirCopyFilterError testLoggingMode testCommandEditor testLimitTo testFindAspectjtoolsJar testMessageHolderClassName skip_testMessageHolderClassWithDoneSignal testDefaultListForkedNoTools testDefaultListForkedIncremental testCompileErrorFailOnErrorDefault testCompileErrorListDefaultHolder testDefaultList testCompileErrorList testShowWeaveInfo testCompileWarningList testNoSuchFileList testVersions testClasspath testNoFile testCompileErrorFile testCompileWarningFile testNoSuchFile testDefaultFileComplete defaultSettings testLogCommand testXOptions testOutxml testOutxmlFile runTest runTest runTest render expectFail check check buildFinished buildStarted messageLogged targetFinished targetStarted taskFinished taskStarted getResults editCommand lastCommand editCommand editCommand NO_EXCEPTION NOFILE tempDir aspectjtoolsJar testdataDir MESSAGES PICK_CLASS_FILES IGNORE NONE INFOS ONE_ERROR ONE_ERROR_ONE_ABORT ONE_WARNING aborts fails errors warnings infos weaveinfos results priority NONE lastCommand VERBOSE NONE VERBOSE INVALID prefix suffix org.aspectj.tools.ant.taskdefs.AjcTaskTest org.aspectj.tools.ant.taskdefs.SnoopingCommandEditor org.aspectj.tools.ant.taskdefs.VerboseCommandEditor org.aspectj.tools.ant.taskdefs.AppendingCommandEditor  when tempDir not used...\r\n  copyInJars now just emits warning b  sourceRootCopyFilter requires destDir\r\n  sourceRootCopyFilter works..\r\n  got expected resources\r\n  didn't get unexpected resources\r\n  inpathDirCopyFilter works with output directory\r\n  got expected resources\r\n  didn't get unexpected resources\r\n  test resource copying for oddball jar files that don't end in .jar\r\n  inpathDirCopyFilter works with output jar\r\n  inpathDirCopyFilter fails with no output directory or jar iff specified\r\n  expecting error\r\n  verifies that the log attribute of AjcTask writes output to the given log file\r\n  no limit\r\n  limited - read file and verify arguments\r\n  exactly one such message\r\n  TODO skipped test - works locally but not on build machine?\r\n  Expect 2 weaving messages\r\n  ok to override Ant?\r\n  ------------------------------------------------------\r\n  re-run forked iff tools.jar and expect to pass\r\n  same vm, then perhaps forked\r\n  can't reset without losing values...\r\n  XXX export to testing-utils\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC)\r\n *               2003 Contributors.\r\n *               2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation\r\n *     IBM\t            ongoing maintenance \r\n * ******************************************************************/\r\n","GenericType2":"     ","AllocationInstruction":"   org.aspectj.apache.bcel.generic.AllocationInstruction  ","IClassFileProvider":" getClassFileIterator getRequestor isApplyAtAspectJMungersOnly  org.aspectj.weaver.IClassFileProvider  ","TypePattern":" asString memSize toString getAnnotationPattern isVarArgs isStarAnnotation isArray setAnnotationTypePattern setTypeParameters getTypeParameters setIsVarArgs couldEverMatchSameTypesAs matchesStatically matchesInstanceof matches matchesExactly matchesExactly matchesSubtypes matchesSubtypes resolveExactType getExactType notExactType resolveBindings resolve parameterizeWith postRead isStar remapAdviceFormals read isIncludeSubtypes couldEverMatchSameTypesAs matchesExactly matchesExactly matchesInstanceof write toString equals hashCode accept parameterizeWith couldEverMatchSameTypesAs matchesExactly matchesExactly matchesInstanceof write matchesSubtypes isStar toString equals hashCode accept parameterizeWith accept couldEverMatchSameTypesAs matchesExactly matchesExactly matchesInstanceof parameterizeWith write read matchesSubtypes isStar toString equals hashCode couldEverMatchSameTypesAs matchesExactly matchesExactly matchesInstanceof write matchesSubtypes isStar toString equals hashCode accept parameterizeWith name STATIC DYNAMIC ELLIPSIS ANY NO includeSubtypes isVarArgs annotationPattern typeParameters WILD EXACT BINDING ELLIPSIS_KEY ANY_KEY NOT OR AND NO_KEY ANY_WITH_ANNO HAS_MEMBER org.aspectj.lang.reflect.TypePattern org.aspectj.org.eclipse.jdt.core.dom.TypePattern org.aspectj.weaver.patterns.TypePattern org.aspectj.weaver.patterns.EllipsisTypePattern org.aspectj.weaver.patterns.AnyTypePattern org.aspectj.weaver.patterns.AnyWithAnnotationTypePattern org.aspectj.weaver.patterns.NoTypePattern  stub method\r\n  answer conservatively...\r\n  XXX non-final for Not, && and ||\r\n  ??? This is part of gracefully handling missing references\r\n  return typeMatch.and(annotationPattern.matches(type));\r\n  return typeMatch.and(annotationPattern.matches(type));\r\n  System.out.println(\"    true\");\r\n  System.out.println(\"matching: \" + this + \" to \" + type);\r\n  pr124808\r\n  if (superType.isParameterizedType()) superType = superType.getRawType().resolve(superType.getWorld());\r\n  FuzzyBoolean ret = FuzzyBoolean.NO;   System.out.println(\"    true\");\r\n  System.out.println(\"matching: \" + this + \" to \" + type);\r\n  FuzzyBoolean ret = FuzzyBoolean.NO;   FIXME AV - bad! toString() cannot be parsed back (not idempotent)\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.TypePattern#couldEverMatchSameTypesAs(org.aspectj.weaver.patterns.TypePattern)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#equals(java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#hashCode()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.TypePattern#couldEverMatchSameTypesAs(org.aspectj.weaver.patterns.TypePattern)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.TypePattern#couldEverMatchSameTypesAs(org.aspectj.weaver.patterns.TypePattern)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#equals(java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#hashCode()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","TwoAnonymous":"     ","PerTargetSubaspectError":"     ","AnnotationGen":" copyValues getAnnotation read dump addElementNameValuePair getTypeIndex getTypeSignature getTypeName getValues toString toShortString isRuntimeVisible isRuntimeVisible typeIndex evs cpool isRuntimeVisible org.aspectj.apache.bcel.generic.annotation.AnnotationGen  u2 index of type name in cpool\r\n  u2 element_value pair count\r\n  ConstantClass c = (ConstantClass)cpool.getConstant(typeIndex);\r\n  BCELBUG: Should I use this instead? Utility.signatureToString(getTypeSignature());\r\n /* ElementNameValuePairGen */\r\n /*ElementNameValuePairGen*/\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","Traceable":" toTraceString  org.aspectj.weaver.tools.Traceable  ","BaseTarget":" default_method public_method protected_method private_method default_method public_method protected_method private_method default_method public_method protected_method private_method default_staticMethod public_staticMethod protected_staticMethod private_staticMethod default_staticMethod public_staticMethod protected_staticMethod private_staticMethod default_staticMethod public_staticMethod protected_staticMethod private_staticMethod trigger main default_int public_int protected_int private_int default_staticInt public_staticInt protected_staticInt private_staticInt packageProtected.concern.BaseTarget  ---- same as Base\r\n ","TypeNames":"     ","MultiInheritCP":"     ","Text":" isInstruction mayContainTemplateBody prepareAttributes validate process isInstruction mayContainTemplateBody prepareAttributes validate process insertfile getFilename  com.nwalsh.saxon.Text com.nwalsh.saxon.Text com.nwalsh.xalan.Text  Get mandatory href attribute\r\n  Text - Saxon extension element for inserting text\r\n  Get mandatory href attribute\r\n  Text - Saxon extension element for inserting text\r\n  nodes? I don't think so...\r\n  Text - Xalan extension element for inserting text\r\n ","MultiInheritCF":"     ","BinaryTreeNode":" getLeft getRight accept getLeft getRight left right left right ca.ubc.cs.spl.aspectPatterns.examples.visitor.aspectj.BinaryTreeNode ca.ubc.cs.spl.aspectPatterns.examples.visitor.java.BinaryTreeNode  ","AroundCallsArgs":"     ","AJDBClass":"     ","Pointcut":" getName getModifiers getParameterTypes getParameterNames getDeclaringType getPointcutExpression fastMatch couldMatchKinds getTypeVariablesInScope setTypeVariablesInScope match matchInternal getPointcutKind resolveBindings resolve concretize concretize isDeclare concretize shouldCopyLocationForConcretize concretize1 findResidue findResidueInternal postRead read check fromString findResidueInternal couldMatchKinds fastMatch matchInternal resolveBindings postRead concretize1 write toString accept parameterizeWith makeMatchesNothing assertState parameterizeWith m_ignoreUnboundBindingForNames SYMBOLIC RESOLVED CONCRETE pointcutKind state lastMatchedShadowId lastMatchedShadowResult typeVariablesInScope hasBeenParameterized KINDED WITHIN THIS_OR_TARGET ARGS AND OR NOT REFERENCE IF CFLOW WITHINCODE HANDLER IF_TRUE IF_FALSE ANNOTATION ATWITHIN ATWITHINCODE ATTHIS_OR_TARGET NONE ATARGS USER_EXTENSION org.aspectj.lang.reflect.Pointcut org.aspectj.weaver.patterns.Pointcut  this next test will prevent a lot of un-needed matching going on....\r\n  DO NOT CHANGE OR REORDER THIS SEQUENCE, THIS VALUE CAN BE PUT OUT BY ASPECTJ1.2.1\r\n  internal, only called from resolve\r\n  copy the unbound ignore list\r\n  if (state == CONCRETE) return this;   XXX this is the signature we're moving to\r\n  ??? Is it actually an error if we get a null munger into this method.\r\n  !!! add this test -- assertState(RESOLVED);\r\n  copy the unbound ignore list\r\n  if (shadow.shadowId == lastMatchedShadowId) return lastMatchedShadowResidue;\r\n  lastMatchedShadowResidue = ret;\r\n  XXX currently it's unused  we're keeping it around as a stub\r\n  this is a quick visitor...\r\n  can only get here if an earlier error occurred\r\n  ??? there could possibly be some good optimizations to be done at this point\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Test1":" foo main intsSet Test1 Test1  ","PerCFlowCompileFromJar":"     ","PointcutReferenceTest":" log main suite hello helloWithRef testPointcutReferenceNoBinding testPointcutReferenceBinding pcRef pcRef2 before pcRefBinding before pcRefObjectBinding s_log ataspectj.PointcutReferenceTest  order of pointcut in source code does not matter for pc refs\r\n  see here outer aspect reference\r\n ","StaticCalls":"     ","ExternalCalls":"     ","ISourceContext":" makeSourceLocation makeSourceLocation getOffset tidy  org.aspectj.weaver.ISourceContext  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ArithmeticInstruction":" getType  org.aspectj.apache.bcel.generic.ArithmeticInstruction  Never reached\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","FieldDoc":"   org.aspectj.ajdoc.FieldDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","LNEG":" accept  org.aspectj.apache.bcel.generic.LNEG  ","PointcutSubWriter":" delegateClass keyName printSignature printResultType printSummaryLink printInheritedSummaryLink printSummaryType printBodyHtmlEnd nonfinalPrintMember printDeprecatedLink getMembers printParameters printParam printParamTags printReturnTag printOverridden printTags  org.aspectj.tools.doclets.standard.PointcutSubWriter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","TopLevelType2":"     ","TopLevelType3":"     ","AjBatchImageBuilder":" acceptResult  org.aspectj.ajdt.internal.core.builder.AjBatchImageBuilder  /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.ICompilerRequestor#acceptResult(org.eclipse.jdt.internal.compiler.CompilationResult)\r\n\t */\r\n","Failing":"     ","ValidateAtAspectJAnnotationsVisitor":" visit endVisit visit endVisit visit endVisit checkTypeDeclaration visit isAspectJAnnotation insideAspect isAspect validateAspectDeclaration validateAdvice toArgumentNames resolveAndSetPointcut ensureVoidReturnType buildFormalAdviceBindingsFrom maybeGetExtraArgName getStringLiteralFor convertToPointcutDeclaration copyAllFields swap hasAspectJAnnotations addAdviceAnnotation visit beforeAdviceSig afterAdviceSig afterReturningAdviceSig afterThrowingAdviceSig aroundAdviceSig pointcutSig aspectSig adviceNameSig orgAspectJLangAnnotation voidType booleanType joinPoint joinPointStaticPart joinPointEnclosingStaticPart proceedingJoinPoint adviceSigs unit typeStack ajAnnotations hasAdviceAnnotation hasPointcutAnnotation hasAspectAnnotation hasAdviceNameAnnotation hasMultipleAdviceAnnotations hasMultiplePointcutAnnotations hasMultipleAspectAnnotations adviceKind adviceAnnotation pointcutAnnotation aspectAnnotation adviceNameAnnotation duplicateAdviceAnnotation duplicatePointcutAnnotation duplicateAspectAnnotation containsIfPcd org.aspectj.ajdt.internal.compiler.ast.ValidateAtAspectJAnnotationsVisitor  check that aspect doesn't have @Aspect annotation, we've already added on ourselves.\r\n  check that class doesn't extend aspect\r\n  simply test for innapropriate use of annotations on code-style members\r\n  it's a nested aspect\r\n  scope is null if its a binarytypebinding (in AJ world, thats a subclass of SourceTypeBinding)\r\n  now create a ResolvedPointcutDefinition,make an attribute out of it, and add it to the method\r\n  abstract\r\n  matches nothing pointcut\r\n  int argsLength = methodDeclaration.arguments == null ? 0 : methodDeclaration.arguments.length;\r\n  }\r\n  has an expression\r\n  this is a matches nothing pointcut\r\n  fine\r\n  && (methodDeclaration.arguments == null || methodDeclaration.arguments.length == 0)) {\r\n  user messed up annotation declaration\r\n /* *******************************************************************\r\n * Copyright (c) 2005 IBM Corporation Ltd\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer  initial implementation \r\n * ******************************************************************/\r\n","InterPerCall":"     ","TestITDMethod":" invokeDeclaredMethods main  TestITDMethod  ","AnnotationDefault":" accept copy getElementValue dump value org.aspectj.apache.bcel.classfile.AnnotationDefault  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","DumpTest":" main  ataspectj.DumpTest  ","ErrorHandler":" handleWarning handleError handleError  org.aspectj.ajde.ErrorHandler  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AbstractRunSpecTest":" testXmlWrite testSetOptions makeRunIterator  org.aspectj.testing.harness.bridge.AbstractRunSpecTest  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","GetReflectMembersTest":" testGetMethod testGetConstructor testGetField setUp tearDown foo bcelRepository jc x org.aspectj.apache.bcel.classfile.tests.GetReflectMembersTest  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","DefaultTraceFactory":" isEnabled getTrace ENABLED_PROPERTY tracingEnabled org.aspectj.weaver.tools.DefaultTraceFactory  ","CompileWarning":"     ","LibraryAspect":"     ","MatchingContextBasedTest":" accept matches matcher org.aspectj.weaver.internal.tools.MatchingContextBasedTest  /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.ast.Test#accept(org.aspectj.weaver.ast.ITestVisitor)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ConstantNameAndType":" accept dump getNameIndex getName getSignatureIndex getSignature setNameIndex setSignatureIndex toString name_index signature_index org.aspectj.apache.bcel.classfile.ConstantNameAndType  Name of field  and its signature.\r\n ","ValidFileFilter":" accept accept accept accept preprocess accept EXIST FILE_EXISTS DIR_EXISTS CLASS_FILE JAVA_FILE RESOURCE delegate IGNORE_CASE prefix substring suffix ignoreCase haveSpecifier org.aspectj.testing.util.ValidFileFilter  ----------------------------- singleton variants\r\n  ----------------------------- members\r\n  ----------------------------- inner subclasses\r\n  todo: StringsFileFilter, accepts String[] variants for each\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2000 Xerox Corporation. \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AspectFromHell":"     ","Transaction":"     ","ShapeFigureElement":" move getShape getBounds contains getLineColor getFillColor paint move getShape getBounds contains getLineColor getFillColor paint move getShape getBounds contains getLineColor getFillColor paint move getShape getBounds contains getLineColor getFillColor paint move getShape getBounds contains getLineColor getFillColor paint  figures.ShapeFigureElement figures.ShapeFigureElement figures.ShapeFigureElement figures.ShapeFigureElement figures.ShapeFigureElement  /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","IALOAD":" accept  org.aspectj.apache.bcel.generic.IALOAD  ","AnalogueClock":" update draw  clock.AnalogueClock  ","SWITCH":" fillup sort matchIsOrdered getInstructionList getInstruction match targets instruction match_length org.aspectj.apache.bcel.generic.SWITCH  (almost) empty switch, or just default\r\n  Swap elements\r\n  Swap elements\r\n  Swap elements\r\n  Swap instructions, too\r\n  Swap instructions, too\r\n  Swap instructions, too\r\n ","Option":" compareTo getFamily permitMultipleValues numArguments acceptValue sameOptionFamily sameOptionIdentifier toString rejectingSuffixedInput validArgument getName getKey optionIdentifier hasPrefix compareTo sameFamily permitMultipleFamilyValues collision doCollision setupFamily registerFamily create create create toString flatten unflatten unflatten convert sameValueIdentifier sameValueIdentifier conflictsWith toString nextInput iterator render forceOff forceOn isSet length prefixLength toString getFullMessage ON NONE FORCE_ON FORCE_OFF LITERAL_PREFIXES STANDARD_PREFIXES FORCE_PREFIXES family name optionIdentifier permittedPrefixes acceptSuffixedInput permitMultipleValues numArguments permittedArguments nameLength familyName permitMultipleFamilyValues factoryName familyNameToFamily names FLATTEN_DELIM NOTARGUMENT value prefix option argIndex list prefix prefixLength name set force err input option org.aspectj.testing.util.options.Option  assert numArguments == permittedInput.length\r\n  assert result.length == 1+inputIndex\r\n /*\r\n     * Create a standard named boolean option,\r\n     * permitting force-on and force-off.\r\n     * @param name the String name of the option, e.g., \"1.3\" for \"-1.3\"\r\n     * @param family\r\n     * @param permittedPrefixes\r\n     * @param acceptSuffixedInput\r\n     * @param permittedArguments\r\n     */\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","GETSTATIC":" produceStack getExceptions accept  org.aspectj.apache.bcel.generic.GETSTATIC  ","BuildOptionsTest":" main suite testCharacterEncoding testVerboseMode testNonStandardOptions testComplianceLevel testSourceCompatibilityLevel testWarnings testDebugLevel testNoImportError testPreserveLocals setUp tearDown buildOptions preferencesAdapter org.aspectj.ajde.BuildOptionsTest  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * \t   AMC 01.21.2003 extended to cover new AspectJ1.1 options\r\n * ******************************************************************/\r\n","Runner":" run run runChild runChild makeChildStatus installChildStatus runIterator abortOnFailure registerFastFailIterator registerFastFailIteratorTypes registerListener wrap getListeners precheck runPrivate makeStatus run toString getListeners makeListeners addListener toString FAIL_NORUN runner iterator listener known clazz org.aspectj.testing.run.Runner  XXX\r\n  XXX leak if ditching run...\r\n  XxX not complete\r\n  XXX unimplemented\r\n  XXX unimplemented\r\n  XXX unregister\r\n  XXX implement registration\r\n  check abort request coming in\r\n  XXX need IMessage.EXCEPTION - WARNING is ambiguous\r\n  listener can set abort request\r\n  XXX should never get here... - hides errors to set result\r\n  let runChild create\r\n  XXX costly and stupid\r\n /* XXX later permit null status\r\n     * If the status is null, this tries to complete\r\n     * the run without a status.  It ignores exceptions\r\n     * from the listeners, but does not catch any from the run.\r\n     */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","JoinPointMatchImpl":" matches getParameterBindings NO_MATCH NO_BINDINGS match bindings org.aspectj.weaver.reflect.JoinPointMatchImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.tools.JoinPointMatch#matches()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.tools.JoinPointMatch#getParameterBindings()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","IEclipseSourceContext":" removeUnnecessaryProblems  org.aspectj.weaver.IEclipseSourceContext  ","Jdk14Trace":" enter enter exit exit exit isTraceEnabled setTraceEnabled debug info warn error fatal logger name org.aspectj.weaver.tools.Jdk14Trace  ","PackagePackage":"     ","ReturnInstruction":" getType getExceptions getType  org.aspectj.apache.bcel.generic.ReturnInstruction  Never reached\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","BcweaverModuleTests":" suite  org.aspectj.weaver.BcweaverModuleTests  ","Monitor":" monitored flagExpectationMismatch  test.Monitor  ","SavedModelConsistencyTest":" main testInterfaceIsSameInBoth testModelIsSamePreAndPostBuild setUp tearDown CONFIG_FILE_PATH org.aspectj.ajde.SavedModelConsistencyTest  TODO-path\r\n  TODO-path\r\n  In order to get a model on the disk to read in, do a build with the right flag set !\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","AjState":" setCouldBeSubsequentIncrementalBuild successfulCompile prepareForNextBuild processDeletedFiles getModifiedFiles getModifiedFiles getModifiedBinaryFiles getModifiedBinaryFiles classFileChangedInDirSinceLastBuild hasStructuralChangedSince pathChange changed getFilesToCompile maybeIncremental getBinaryFilesToCompile removeAllResultsOfLastBuild deleteClassFiles deleteBinaryClassFiles deleteResources maybeDeleteResource deleteResourcesFromDirectory deleteClassFile createUnwovenClassFile noteResult maybeGetExistingClassFileFor deleteTypesThatWereInThisCompilationUnitLastTimeRoundButHaveBeenDeletedInThisIncrement removeFromClassFilesIfPresent recordFQNsResultingFromCompilationUnit recordWhetherCompilationUnitDefinedAspect removeFromPreviousIfPresent recordClassFile hasStructuralChanges modifiersEqual makeStringSet stringifyList addAffectedSourceFiles addDependentsOf addDependentsOf setStructureModel getStructureModel setWeaver getWeaver setWorld getBcelWorld setRelationshipMap getRelationshipMap getNumberOfStructuralChangesSinceLastFullBuild getLastBuildTime getLastFullBuildTime getBuildConfig clearBinarySourceFiles recordBinarySource getClassFileFor getBinarySourceMap getClassNameToFileMap hasResource recordResource getAddedFiles getDeletedFiles forceBatchBuildNextTimeAround requiresFullBatchBuild deleteFromFileSystem wipeAllKnowledge getAspectNames initializeAspectNamesList listenerDefined getListener buildManager couldBeSubsequentIncrementalBuild stateListener FORCE_INCREMENTAL_DURING_TESTING structureModel relmap lastSuccessfulFullBuildTime structuralChangesSinceLastFullBuild lastSuccessfulBuildTime currentBuildTime buildConfig batchBuildRequiredThisTime fullyQualifiedTypeNamesResultingFromCompilationUnit sourceFilesDefiningAspects references binarySourceFiles inputClassFilesBySource resolvedTypeStructuresFromLastBuild classesFromName compiledSourceFiles resources aspectNames qualifiedStrings simpleStrings addedFiles deletedFiles addedBinaryFiles deletedBinaryFiles weaver world EMPTY_CHAR_ARRAY BRACKET_V fullyQualifiedTypeName locationOnDisk className modifiers genericSignature superclassName interfaces fields methods name modifiers signature org.aspectj.ajdt.internal.core.builder.AjState  SECRETAPI static so beware of multi-threading bugs...\r\n  we don't support incremental with an outjar yet\r\n  since the last build will not be deleted from the output directory.\r\n  has changed, or a jar on a path has been modified\r\n  need to add 1000 since lastModTime is only accurate to a second on some (all?) platforms\r\n  not our job to account for new and deleted files\r\n  need to add 1000 since lastModTime is only accurate to a second on some (all?) platforms\r\n  not our job to account for new and deleted files\r\n  Is another process building into that directory?\r\n  no state object to ask so it must have changed\r\n  structurally changed or not\r\n  long lastModTime = file.lastModified();\r\n  'strucModTime'-> the last time the class was structurally changed\r\n  String on classpath, File on other paths\r\n  System.out.println(\"modified: \" + modifiedFiles);\r\n  else incremental...\r\n  remove all binarySourceFiles, and all classesFromName...\r\n  range of bsf is ucfs, domain is files (.class and jars) in inpath  with incremental compilation\r\n  oldResources need to be deleted...\r\n  will ensure it is re-copied\r\n  or we are in trouble...\r\n  For each file, add it either as a real .class file or as a resource\r\n  need to do this before types are deleted from the World...\r\n  still present this time around...\r\n  by the world.\r\n  ignore local types since they're only visible inside a single method\r\n  modifiers\r\n  generic signature\r\n  superclass name\r\n  interfaces\r\n  damn I'm lazy...\r\n  fields\r\n  }\r\n  methods\r\n  }\r\n  matching sigs\r\n  might be overloading\r\n  candidate match\r\n  (no match found)\r\n  }\r\n  the qualifiedStrings are of the form 'p1  if a well known qualified name was found then we can skip over these\r\n  if a well known name was found then we can skip over these\r\n  ??? O(n**2)\r\n  XXX Promote addTo to a Set - then we don't need this rubbish? but does it need to be ordered?\r\n  ??? O(n**2)\r\n  ??? O(n**2)\r\n  slashes...\r\n  slashes...\r\n  sig.toString().toCharArray();\r\n  Will allow us to record decisions made during incremental processing, hopefully aid in debugging\r\n /* File, long */\r\n /*<File, List<ClassFile>*/\r\n /*<File>*/\r\n /*<File, ReferenceCollection>*/\r\n /*File, List<UnwovenClassFile>*/\r\n /*<File,List<ClassFile>*/\r\n /*FQN,CompactStructureRepresentation*/\r\n /*<String, File>*/\r\n /*File*/\r\n /*String*/\r\n /*String*/\r\n /*<String>*/\r\n /*<String>*/\r\n /*BinarySourceFile*/\r\n /*BinarySourceFile*/\r\n /* String -> List<ucf> */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ICommand":" runCommand repeatCommand  org.aspectj.bridge.ICommand  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","KnownLimitationsTests":" suite getSpecFile test001 test002 test003 test004 test005 test006 test007 test008 test009 test010 test011 test012 test013 test014 test015 test016 test017 test018 test019 test020 test021 test022 test023 test024 test025 test026 test027 test028 test029  org.aspectj.systemtest.knownlimitations.KnownLimitationsTests  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","ClassLoader":" addIgnoredPkgs loadClass modifyClass createClass classes ignored_packages repository deferTo org.aspectj.apache.bcel.util.ClassLoader  Hashtable is synchronized thus thread-safe\r\n  Fourth try: Load classes via repository\r\n  Fourth try: Use default class loader\r\n  Adapt the class name to the passed value\r\n /* Second try: Load system class using system class loader. You better\r\n       * don't mess around with them.\r\n       */\r\n /* Third try: Special request?\r\n\t */\r\n /* First try: lookup hash table.\r\n     */\r\n","DeclareWarning":"     /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","BcelRenderer":" renderExpr renderExpr renderExprs renderTest renderTest recur visit visit visit visit visit visit createJumpBasedOnBooleanOnStack visit visit visit visit visit visit visit visit visit instructions fact world sk fk next org.aspectj.weaver.bcel.BcelRenderer  invokevirtual java  aload annotationClass\r\n  il.append(new LDC_W(annClassIndex));\r\n  don't bother generating if it doesn't matter\r\n  assert method.isStatic()\r\n  System.out.println(\"args: \" + Arrays.asList(args));\r\n  XXX only correct for static method calls\r\n  System.out.println(\"rendered args: \" + callIl);\r\n  assert !method.isStatic()\r\n  System.out.println(\"args: \" + Arrays.asList(args));\r\n  System.out.println(\"rendered args: \" + callIl);\r\n  assert field.isStatic()\r\n  assert method.isStatic()\r\n  we generate right to left, btw.\r\n /*\r\n     * Get the instructions representing this test.\r\n     * \r\n     * @param e test to render\r\n     * @param sk instructionHandle to jump to if our rendered check succeeds (typically start of advice)\r\n     * @param fk instructionHandle to jump to if our rendered check fails (typically after end of advice)\r\n     * @param next instructionHandle that will follow this generated code.  Passing in null will generate\r\n     *             one unnecessary GOTO instruction.\r\n     * \r\n     * @returns the instruction list representing this expression\r\n     */\r\n /*\r\n     * Get the instructions representing this test.\r\n     * \r\n     * @param e test to render\r\n     * @param sk instructionHandle to jump to if our rendered check succeeds (typically start of advice)\r\n     * @param fk instructionHandle to jump to if our rendered check fails (typically after end of advice)\r\n     * \r\n     * @returns the instruction list representing this expression\r\n     */\r\n /* (non-Javadoc)\r\n     * @see org.aspectj.weaver.ast.ITestVisitor#visit(org.aspectj.weaver.internal.tools.MatchingContextBasedTest)\r\n     */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Clazz":" main  Clazz  ","ClassDoc":" pointcuts introducers isAspect  org.aspectj.ajdoc.ClassDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","AsmDelegate":" isAnnotationStyleAspect canAnnotationTargetType getAnnotationTargetKinds isGeneric isAnonymous isNested hasAnnotation getAnnotations getAnnotationTypes ensureAnnotationXsUnpacked ensureAnnotationsUnpacked getAllFormals getAttributes getAttributeNames getSourceContext getWeaverState getDeclaredGenericSignature getTypeMungers getPrivilegedAccesses getTypeVariables ensureSignatureUnpacked getOuterClass getFormalTypeParametersFromOuterClass isInterface getRetentionPolicy isAnnotationWithRuntimeRetention isAnnotation isEnum getModifiers getDeclaredFields getDeclaredInterfaces getDeclaredMethods getDeclaredPointcuts getDeclares getSuperclass getPerClause isAspect getWorld addAnnotation ensureDelegateConsistent careAboutMemberAnnotationsAndAttributes w classModifiers pointcuts typeVariables annotationTypes annotationXs annotations methods fields attributes declares typeMungers privilegedAccesses bitflag DISCOVERED_POINTCUTS DISCOVERED_DECLARES DISCOVERED_TYPEMUNGERS DISCOVERED_PRIVILEGEDACCESSES DISCOVERED_SOURCECONTEXT DISCOVERED_WEAVERSTATEINFO SIGNATURE_UNPACKED ANNOTATION_TYPES_CORRECT ANNOTATIONX_CORRECT SUPERSET FIELDSFIXEDUP METHODSFIXEDUP superclassType superclassName interfaceTypes interfaceNames isAspect perClause weaverVersion weaverStateInfo isAnonymous isNested isGenericType declaredSignature isRuntimeRetention retentionPolicy canAnnotationTargetType targetKinds formalsForResolution org.aspectj.weaver.asm.AsmDelegate  filled in when signature is parsed\r\n  see below for the relevant bits\r\n  guard for lazy initialization of pointcuts\r\n  guard for lazy initialization of declares\r\n  guard for lazy initialization of type mungers\r\n  guard for lazy initialization of privileged access list\r\n  Sourcecontext is actually held in supertype\r\n  eager: populated from the 'Aspect' attribute\r\n  eager: populated from the 'WeaverVersionInfo' attribute\r\n  lazy: populated from the 'WeaverStateInfo' attribute\r\n  eager: populated from the visitInnerClass method in the TypeVisitor\r\n  eager: populated from the visit method in the TypeVisitor\r\n  eager: populated from the 'Retention' annotation\r\n  true unless we learn otherwise\r\n  remove SYNTHETIC\r\n  remove DEPRECATED\r\n  dont need them any more!\r\n  for testing - if we have this attribute, return it - will return null if it doesnt know anything\r\n  for testing - use with the method above\r\n  Save space\r\n  this is a development bug, so fail fast with good info\r\n  we have to find any type variables from the outer type before proceeding with resolution.\r\n  development bug, fail fast with good info\r\n  development bug, fail fast with good info\r\n  update resolved typex to point at generic type not raw type.\r\n  genericType.setSourceContext(this.resolvedTypeX.getSourceContext());\r\n  discoveredDeclares=true;\r\n  this type must be jlObject\r\n  to have new annotations added\r\n /*of Declare*/\r\n /*of ConcreteTypeMunger*/\r\n /*of ResolvedMember*/\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","ThreadSub":"     ","GenericService":" setContext  GenericService  ","BrowserViewTreeListener":" valueChanged mouseEntered mouseExited mousePressed mouseReleased mouseClicked singleClickNavigation doubleClickNavigation maybeShowPopup tree serialVersionUID serialVersionUID org.aspectj.ajde.ui.swing.BrowserViewTreeListener  doubleClickNavigation(e);\r\n  int clickCount = e.getClickCount();\r\n  TreePath[] selectionPaths = tree.getSelectionPaths();\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PackageDocImpl":" ajc addClass findClass allClasses aspects ordinaryClasses exceptions errors interfaces name equals toString findDocumentation packages init getPackageDoc getPackageDoc addPackageDoc addPackageDoc excludeEmptyPackages UNNAMED_PACKAGE ajdoc ajc allClasses comment name namesToPackages org.aspectj.tools.ajdoc.PackageDocImpl  unnamed-package\";\r\n  todo wes was null?\r\n  FormalComment comment = new FormalComment(rawCommentText);\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","LinearSort":" exchange sort exchange sort  ca.ubc.cs.spl.aspectPatterns.examples.strategy.aspectj.LinearSort ca.ubc.cs.spl.aspectPatterns.examples.strategy.java.LinearSort  ","MainClass":" getMood setMood getMood setMood main getMood setMood getMood setMood main getMood setMood main main main amethod amethod anotherMethod mood implementedInterface mood implementedInterface mood implementedInterface moody.AnnotationMoodImplementor moody.AnnotationMoodIndicator moody.MainClass moody.AnnotationMoodImplementor moody.AnnotationMoodIndicator moody.MainClass theapp.AnnotationMoodImplementor theapp.AnnotationMoodIndicator theapp.MainClass theapp.MainClass moody.MainClass mainpackage.MainClass mainpackage.MainClass  Choosing types by annotation\r\n ","BALOAD":" accept  org.aspectj.apache.bcel.generic.BALOAD  ","TestTesterFail":" main run  TestTesterFail  does not include events\r\n  should fail if FNF\r\n  fail here - misentered below\r\n  fail here - expected but not found\r\n  \r\n  fail here - space\r\n  fail here - explicitly\r\n  fail here - space\r\n  fail here\r\n ","XLint5Tests":" suite getSpecFile testBug99136  org.aspectj.systemtest.xlint.XLint5Tests  ","IconRegistry":" getAjdeSmallIcon getHideAssociationsIcon getHideNonAJIcon getGranularityIcon getErrorIcon getWarningIcon getInfoIcon getAJBrowserIcon getAJBrowserEnabledIcon getAJBrowserDisabledIcon getPopupIcon getFilterIcon getOrderIcon getRelationsIcon getStartAjdeIcon getStopAjdeIcon getBackIcon getForwardIcon getSearchIcon getBuildIcon getDebugIcon getExecuteIcon getOpenConfigIcon getCloseConfigIcon getOpenIcon getSaveIcon getSaveAllIcon getBrowserOptionsIcon getZoomStructureToFileModeIcon getZoomStructureToGlobalModeIcon getSplitStructureViewIcon getMergeStructureViewIcon getStructureViewIcon getAssociationSwingIcon getStructureIcon getStructureSwingIcon getStructureSwingIcon getAccessibilitySwingIcon convertToSwingIcon createIcon makeIcon RESOURCE_PATH START_AJDE STOP_AJDE BUILD DEBUG EXECUTE AJBROWSER AJBROWSER_ENABLED AJBROWSER_DISABLED STRUCTURE_VIEW HIDE_ASSOCIATIONS HIDE_NON_AJ GRANULARITY AJDE_SMALL ERROR WARNING INFO POPUP FILTER RELATIONS ORDER ZOOM_STRUCTURE_TO_FILE_MODE ZOOM_STRUCTURE_TO_GLOBAL_MODE SPLIT_STRUCTURE_VIEW MERGE_STRUCTURE_VIEW BACK FORWARD SEARCH OPEN_CONFIG CLOSE_CONFIG SAVE SAVE_ALL BROWSER_OPTIONS ACCESSIBILITY_PUBLIC ACCESSIBILITY_PACKAGE ACCESSIBILITY_PROTECTED ACCESSIBILITY_PRIVATE ACCESSIBILITY_PRIVILEGED org.aspectj.ajde.ui.swing.IconRegistry  public static IconRegistry INSTANCE = null;\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Main":" main compilerMain report main main main println main clearState main removeDeclIDsFromFile getSourcePath getRootDir createSignatureFile parseCommandLine setSourcepath getSourcepathAsString parseArgs expandAtSignFile qualifiedFile displayHelpAndExit exit handleInternalError getVersion hasAborted setOutputWorkingDir resetOutputWorkingDir main execute platformErrorMessage main handleException exit loadArgs getTitle getPrefix getReadmeFilename getTitle getPrefix getTitle getPrefix getDefaultLocation verify getTitle getPrefix getDefaultLocation verify finalActions getTitle getPrefix setInstallPane getInstallPane run getPrefix getReadmeFilename setContext getContext getTitle getWidth getHeight getPanes findPaneIndex runGUI moveToPane loadImage makeHeader makeNextAction makeBackAction makeCancelAction makeFinishAction setOutputDir getOutputDir hasGui setHasGui getFont getOS onOS2 onWindows onWindowsPro onMacintosh onUnix isTextFile handleException shouldOverwrite getProperties setContext makePanel makeTextArea hasGui stringFromStream removeHead applyProperties applyProperties loadText makeHTMLArea setHTMLArea makeLocationBox getPanel setListener makeButtons getButtons finish run makePanel makePanel makeButtons finalActions getDefaultLocation makePanel makeButtons actionPerformed verify finish getDefaultJavaHomeLocation chooseFile makeJavaLocationBrowseListener makePanel finish isLegalJavaHome isLegalJDKHome findJavaHome makePanel run makeButtons run progressMessage progressBytesWritten makeOutputFile writeStream writeBinaryStream writeTextStream writeResource unpack writeAJLaunchScript writeAJLaunchScriptContent writeAJWindowsLaunchLine writeAJ5WindowsLaunchLine writeAJUnixLaunchLine writeAJ5UnixLaunchLine writeWindowsHeader writeWindowsLaunchLine writeUnixHeader writeUnixLaunchLine makeExecutable makeScriptArgs quote quote makeScriptFile getPrintStream makeClassPathVar makeClassPath writeScript writeScript checkExistingFile writeScript makeOutputFile writeStream writeBinaryStream writeTextStream writeEntry unpack main spawn runMain run doDangerousThings createGUI main createGUI main main main main main build main build main main main main main indent printStructure main main main main main main main main main assignAndEvaluate main assignAndEvaluate main print main print main main main main main main main main main main main test1 test2 test3 main test1 test2 test3 main testInsert testRemove main testInsert testRemove main show main main main main main main main main main main main bareMain readMessages renderExceptionForUser parmInArgs flagInArgs appendNLabel getMessageHandler setController runMain checkForCustomMessageHolder run quit setHolder getHolder setCompletionRunner systemExit outMessage report fail handleMessage render isIgnoring dontIgnore getStreamFor getStreamFor init running setDelay incremental commandLineIncremental quit buildFresh doRepeatCommand fileCheckDelay main main main run main run main main main main main main main main main main main doit main main main main doit testit doit f1 main m main test main main testMethod testMethodProtected main main fail getSwitch getArg getArg main m m mString main main main main go main go main main main main main run main run main main main main main main main main main main main main main main run main run main main main run main main main main main main main target main test1 test2 addJoinPoint main main main main main main test1 test2 invokeDeclaredMethods main test1 test2 invokeDeclaredMethods main main foo monitored flagExpectationMismatch main foo testMethod methodThatThrows testMethod methodThatThrows main go stop go main main main main doThang main run main doAction toString setUser run run addAction toString loadActions main go main go main main realMain m main foo main main realMain main panel FAIL_MESSAGE options ajcOptions filenames fileList packageList docModifier sourcepath verboseMode packageMode authorStandardDocletSwitch versionStandardDocletSwitch rootDir declIDTable docDir deleteTempFilesOnExit aborted outputWorkingDir internalErrorMessage PLATFORM_ERROR verbose textProperties targetDir forceError1 forceError2 forceHandConfigure installLoc EXIT_MESSAGE EXIT_TITLE RESOURCE_DIR frame context installPane panes header footer body outputDir hasGui javaPath toolsJarPath installer properties TEXT_EXTENSIONS OVERWRITE_MESSAGE OVERWRITE_TITLE OVERWRITE_OPTIONS OVERWRITE_YES OVERWRITE_NO OVERWRITE_ALL overwriteState context backButton nextButton cancelButton styleHeader panel buttons location javaLocation windowsPaths unixPaths suffixes windows progressBar progressItem message makeLaunchScripts nBytes bytesWritten context installPane BUF_SIZE toolsPackage context context installPane BUF_SIZE input factory1 factory2 factory factory1 factory2 factory adaptee myTarget adaptee indent frame button1 button2 label frame button1 button2 label printer1 printer2 printer3 printer1 printer2 printer3 panel panel panel persistMe THROWN_PREFIX OUT_OF_MEMORY_MSG MESSAGE_HOLDER_OPTION controller commandName clientHolder ourHandler lastFails lastErrors completionRunner VERBOSE TERSE verbose logStream TAG_FILE_OPTION INCREMENTAL_OPTION MAX_DELAY DEFAULT_DELAY OPTIONS running quit incremental tagFile fileModTime delay buildFresh order name joinPoints staticString s i name name user actions y samenames org.aspectj.tools.ajbrowser.Main Main figures.gui.Main Main Main org.aspectj.tools.ajdoc.Main org.aspectj.tools.ajdoc.Main $installer$.org.aspectj.Main $installer$.org.aspectj.Options $installer$.org.aspectj.ToolsInstaller $installer$.org.aspectj.DocsInstaller $installer$.org.aspectj.AJDEForJBuilderInstaller $installer$.org.aspectj.AJDEForForteInstaller $installer$.org.aspectj.SrcInstaller $installer$.org.aspectj.Installer $installer$.org.aspectj.InstallContext $installer$.org.aspectj.WizardPane $installer$.org.aspectj.IntroPane $installer$.org.aspectj.FinishPane $installer$.org.aspectj.LocationPane $installer$.org.aspectj.ConfigureLauncherPane $installer$.org.aspectj.InstallPane $installer$.org.aspectj.CurrentJarUnpacker $installer$.org.aspectj.LaunchScriptMaker $installer$.org.aspectj.JarUnpacker com.company.app.Main ca.ubc.cs.spl.aspectPatterns.examples.abstractFactory.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.abstractFactory.java.Main ca.ubc.cs.spl.aspectPatterns.examples.adapter.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.adapter.java.Main ca.ubc.cs.spl.aspectPatterns.examples.bridge.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.bridge.java.Main ca.ubc.cs.spl.aspectPatterns.examples.builder.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.builder.java.Main ca.ubc.cs.spl.aspectPatterns.examples.chainOfResponsibility.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.chainOfResponsibility.java.Main ca.ubc.cs.spl.aspectPatterns.examples.command.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.command.java.Main ca.ubc.cs.spl.aspectPatterns.examples.composite.java.Main ca.ubc.cs.spl.aspectPatterns.examples.decorator.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.decorator.java.Main ca.ubc.cs.spl.aspectPatterns.examples.facade.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.facade.java.Main ca.ubc.cs.spl.aspectPatterns.examples.factoryMethod.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.factoryMethod.java.Main ca.ubc.cs.spl.aspectPatterns.examples.flyweight.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.flyweight.java.Main ca.ubc.cs.spl.aspectPatterns.examples.interpreter.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.interpreter.java.Main ca.ubc.cs.spl.aspectPatterns.examples.iterator.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.iterator.java.Main ca.ubc.cs.spl.aspectPatterns.examples.mediator.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.mediator.java.Main ca.ubc.cs.spl.aspectPatterns.examples.memento.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.memento.java.Main ca.ubc.cs.spl.aspectPatterns.examples.observer.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.observer.java.Main ca.ubc.cs.spl.aspectPatterns.examples.prototype.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.prototype.java.Main ca.ubc.cs.spl.aspectPatterns.examples.proxy.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.proxy.java.Main ca.ubc.cs.spl.aspectPatterns.examples.singleton.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.singleton.java.Main ca.ubc.cs.spl.aspectPatterns.examples.state.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.state.java.Main ca.ubc.cs.spl.aspectPatterns.examples.strategy.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.strategy.java.Main ca.ubc.cs.spl.aspectPatterns.examples.templateMethod.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.templateMethod.java.Main ca.ubc.cs.spl.aspectPatterns.examples.visitor.aspectj.Main ca.ubc.cs.spl.aspectPatterns.examples.visitor.java.Main figures.gui.Main figures.gui.Main figures.gui.Main org.smart.app.Main org.aspectj.tools.ajc.Main packageOne.Main main.Main main.Main main.Target main.Main main.Target main.Main Main Main main.Main delete.Main Main Main figures.Main clock.Main clock.Main Main Main pack.Main pack.Main p1.Main p1.C Main dk.infimum.aspectjtest.Main com.designpattern.decorator.Main Main Main Main Main protectedAccess.Main protectedAccess.SubC1 Main Main Main packageOne.Main packageOne.Main Main Main Main main.Main main.Main main.Target main.Main main.Target main.Main Main Main Main Main main.Main delete.Main app.Main packageOne.Main Main Main Main main.Main main.Main main.Target main.Main main.Target main.Main main.Main main.Main Main Main main.Main main.Main delete.Main app.Main packageOne.Main ataspectj.ltwlog.Main ataspectj.ltwreweavable.Main Main Main Main Main Main Main Main test.Main test.Monitor test.Main test.Main test.Main app.Main app.C app.D main.Main Main Main main.Main Main app.Main app.Action app.User app.UseCase Main conflictingPackageNamesWithPackages.Main pkg1.Main Main pkg1.Main protectedFieldRefInInner.Main samenames.Main packag.Main  in a local sandbox during testing\r\n  add the current directory to the classapth\r\n  create the workingdir if it doesn't exist\r\n  PHASE 0: call ajc\r\n  TODO: wrong option to force model gen\r\n  System.out.println(\">> file to ajc: \" + inputFiles[j].getAbsolutePath());\r\n  System.out.println(Arrays.asList(argsToCompiler));\r\n  PHASE 1: generate Signature files (Java with DeclIDs and no bodies).\r\n  d.printStackTrace();\r\n  PHASE 2: let Javadoc generate HTML (with DeclIDs)\r\n  javadocargs[1] = getSourcepathAsString();\r\n  Remove the decl ids from \"index-all.html\"\r\n  !!!\r\n  System.err.println(argList);\r\n  !!!\r\n  makes things easier for ourselves\r\n  used for discrepancy betwen class  !!!\r\n  last element on classpath\r\n  do this for every item in the classpath\r\n  PACKAGE MODE STUFF\r\n  String entryName = arg.substring(arg.lastIndexOf(File.separator)+1);\r\n  set the default visibility as an option to javadoc option\r\n  strip out any comments of the form # to end of line\r\n  remove extra whitespace that might have crept in\r\n  ignore blank lines\r\n  todo: stolen from ajc.Main\r\n  1.3: failed if class not found\r\n  ignore\r\n  cnfe.printStackTrace(System.err);   err.printStackTrace(System.err);   may be version error\r\n  not in 1.4\r\n  now looking for tools.jar\r\n  ignore\r\n  XXX not sure if this indirection is actually needed.\r\n  UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());\r\n  set output dir and java path in context after minimal validation\r\n  todo: why not use installerContext?\r\n  todo: check javaPath for ... bin  directly set context and run\r\n  let context force whether or not to run gui\r\n  check some default locations\r\n  check some default locations\r\n  !!! this should be done with two install locations, not by moving a file\r\n  -1 unless exiting through done button\r\n  include a few sanity checks on starting position\r\n  XXX deal with threading here?\r\n  , \"No to all\"\r\n  , \"No to all\"\r\n  , \"No to all\"\r\n  System.out.println(\"overwrite: \" + file + \" state \" + overwriteState);\r\n  ${name} -> map.get(name).toString()\r\n  XXX internal error here\r\n  System.out.println(\"key: \" + key + \" -> \" + replaceText);\r\n  System.out.println(text);\r\n  .setDefaultCapable(true);\r\n  XXX hard-coded majorminor version needs to be fixed by 1.1 release\r\n  XXX would like to find the place they last chose...\r\n  {\r\n  };   field.getText());\r\n  c.ipady = 10;\r\n  c.fill = GridBagConstraints.VERTICAL;\r\n  XXX add user.home to prefixes in a rational way\r\n  c.ipady = 10;\r\n  c.fill = GridBagConstraints.VERTICAL;\r\n  lsm.writeScript(\"ajdb\");\r\n  script uniform with those above.\r\n  nextButton.setText(\"Finish\");\r\n  nextButton.addActionListener(installer.makeFinishAction(this));\r\n  XXX performance tradeoff between invokeAndWait and invokeLater...\r\n  XXX performance tradeoff between invokeAndWait and invokeLater...\r\n  System.out.println(\"bytesWritten: \" + bytesWritten);\r\n  System.out.println(\"finding name: \" + name);\r\n  \"\\\"%ASPECTJ_HOME%\\\\lib\\\\aspectjtools.jar;%CLASSPATH%\\\"\"+\r\n  \" -defaultClasspath \" + \"\\\"%CLASSPATH%\\\"\" +\r\n  XXX probably want a context.getOutputBinDir()\r\n  XXX want context.getOutputLibDir()\r\n  ??? unixStyle vs. onUnix()\r\n  final String name = entry.getName();\r\n  KEEP CE 15 declares-factory\r\n  KEEP CW 31 declares-exceptionSpelunking\r\n  KEEP CW 30 declares-exceptionSpelunking\r\n  intentional. See FacadePolicyEnforcement for details.\r\n  for unit testing...\r\n  we can't reasonably continue from this point.\r\n  byte[] b = new byte[100000000]; for testing OoME only!\r\n  try {Thread.sleep(5000); }catch(Exception e) {}\r\n  make sure we handle out of memory gracefully...\r\n  sigh - pluck -noExit\r\n  toss AbortException wrapper\r\n  messages.numMessages(IMessage.FAIL, true);\r\n  messages.numMessages(IMessage.ERROR, false);\r\n  XXX coordinate with MessagePrinter\r\n  XXX \"wrote class file\" messages no eol?\r\n  per Wes' suggestion on dev...\r\n  String[] unused;\r\n  XXX silence for error?\r\n  reset before input request\r\n  result = false;\r\n  seek for one q or a series of [\\n\\r]...\r\n  else, not incremental - false\r\n  final Thread thread = Thread.currentThread();\r\n  1  long curTime;\r\n  Figure fig = new Figure();\r\n  swap following lines to change behavior\r\n  TODO Auto-generated method stub\r\n  ERROR: illegal protected access\r\n  ERROR: illegal protected access\r\n  ERROR: illegal protected access\r\n  ERROR: illegal protected access\r\n  ERROR: method not found\r\n  ERROR: illegal protected access\r\n  ERROR: illegal protected access\r\n  ERROR: illegal protected access\r\n  ERROR: illegal protected access\r\n  XXXX check\r\n  bug 8 initializer picked out as execution\r\n  12\r\n  14\r\n  16\r\n  19\r\n  23\r\n  26\r\n  33\r\n  35\r\n  29\r\n  31\r\n  32\r\n  42\r\n  WARNING: do not change lineation without changing test specification!!\r\n  expecting CE here - Target not public\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\n            for (int ii = 0; ii < inputFiles.length; ii++) {\r\n                String tempFP = inputFiles[ii].getAbsolutePath();\r\n                tempFP = tempFP.substring(0, tempFP.length()-4);\r\n                tempFP += \"ajsym\";\r\n                System.out.println( \">> checking: \" + tempFP);\r\n                File tempF = new File(tempFP);\r\n                if ( !tempF.exists() ) System.out.println( \">>> doesn't exist!\" );\r\n            }\r\n*/\r\n /* This section of code handles errors that occur during compilation */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Mik Kersten\t  port to AspectJ 1.1+ code base\r\n * ******************************************************************/\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n /* {\r\n            public void paint(Graphics g) {\r\n                Graphics2D g2 = (Graphics2D)g;\r\n                g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);\r\n                super.paint(g2);\r\n            }\r\n        };*/\r\n /* *******************************************************************\r\n * Copyright (c) 2000-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n /*unused = */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n /*\r\n * When reading bytecode and source methods with\r\n * inner-class parameter types aren't being found.\r\n */\r\n","ConcretePrecedenceAspectTest":" target before before before testPrecedenceFromXML main suite LOG ataspectj.ConcretePrecedenceAspectTest  ","Delta.delete.60":" foo  secondary.Delta  ","AjBuildNotifier":" setText setProgress setCancelledRequested isCancelledRequested  org.aspectj.ajdt.internal.core.builder.AjBuildNotifier  can't delegate to super methods as they throw exception, which is not what we want inside weaver\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IProgressListener#setText(java.lang.String)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IProgressListener#setProgress(double)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IProgressListener#setCancelledRequested(boolean)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IProgressListener#isCancelledRequested()\r\n\t */\r\n","ReferenceType":" isCastableTo isAssignmentCompatibleWith getFirstCommonSuperclass firstCommonSuperclass fromTypeX addDependentType getSignatureForAttribute isClass isGenericType getGenericSignature getAnnotations addAnnotation hasAnnotation getAnnotationTypes isAspect isAnnotationStyleAspect isEnum isAnnotation isAnonymous isNested getRetentionPolicy isAnnotationWithRuntimeRetention canAnnotationTargetType getAnnotationTargetKinds isCoerceableFrom isCoerceableFromParameterizedType isAssignableFrom isAssignableFrom getSourceContext getSourceLocation isExposedToWeaver getWeaverState getDeclaredFields getDeclaredInterfaces findTypeParameterInList determineThoseTypesToUse getRank getDeclaredMethods getDeclaredPointcuts getTypesForMemberParameterization getRawType getTypeVariables getPerClause getDeclares getTypeMungers getPrivilegedAccesses getModifiers getSuperclass getDelegate setDelegate clearParameterizationCaches getEndPos getStartPos setEndPos setStartPos doesNotExposeShadowMungers getDeclaredGenericSignature setGenericType demoteToSimpleType getGenericType makeParameterizedSignature makeDeclaredSignature derivativeTypes genericType delegate startPos endPos parameterizedMethods parameterizedFields parameterizedPointcuts parameterizedInterfaces parameterizedDeclares org.aspectj.apache.bcel.generic.ReferenceType org.aspectj.weaver.ReferenceType  If this is ever changed in isAssignmentCompatible()\r\n  This is not explicitely stated, but clear. Isn't it?\r\n  'java.io.Serializable'\"\r\n  default.\r\n  this and t are ObjectTypes, see above.\r\n  Waaahh...\r\n  Huh? Did you ask for Type.OBJECT's superclass??\r\n  this and t are ObjectTypes, see above.\r\n  Waaahh...\r\n  Huh? Did you ask for Type.OBJECT's superclass??\r\n  cached values for members\r\n  ??? should set delegate before any use\r\n  ??? needs to be Methods, not just declared methods? JLS 5.5 unclear\r\n  ??? is this cast always safe\r\n  true iff the statement \"this = (ThisType) other\" would compile\r\n  is Sub<Y,Z> coerceable from Base<X> ???\r\n  there's a chance it can be done\r\n  thin ice now... but List<String> may still be coerceable from e.g. List<T>\r\n  we have to match by parameters one at a time\r\n  look at wildcards...\r\n  eg. this=T  other=Ljava  FIXME asc should this say canBeBoundTo??\r\n  true iff the statement \"this = other\" would compile.\r\n  ??? where does this belong\r\n  a parameterized supertype collapses any type vars to their upper bounds\r\n  a generic supertype of a raw type is replaced by its raw equivalent\r\n  What are the type parameters for the supertype?\r\n  -1 probably means it is a reference to a type variable on the outer generic type (see pr129566)\r\n  interface should be the a ref to the type variable in the current type ... but I'm not 100% confident right now.\r\n  raw type, use upper bounds of type variables on generic type\r\n  could cache the result here...\r\n  Don't copy from BcelObjectType to EclipseSourceType - the context may be tidied (result null'd) after previous weaving\r\n  avoids circular updates\r\n  same delegate\r\n  makes sense if someone is specifying that it has a generic form\r\n /* If T is a class type, then this must be the same class as T,\r\n\t or this must be a subclass of T;\r\n      */\r\n /* If T is an interface type, this must implement interface T.\r\n       */\r\n /* If this is a class type then\r\n     */\r\n /* If T is a class type, then T must be Object (�2.4.7).\r\n       */\r\n /* If T is an interface type, then T must be the same interface\r\n       * as this or a superinterface of this (�2.13.2).\r\n       */\r\n /* If this is an interface type, then:\r\n     */\r\n /* If T is a class type, then T must be Object (�2.4.7).\r\n       */\r\n /* TC and SC are the same primitive type (�2.4.1).\r\n\t */\r\n /* TC and SC are reference types (�2.4.6), and type SC is\r\n\t * assignable to TC by these runtime rules.\r\n\t */\r\n /* If T is an array type TC[], that is, an array of components\r\n       * of type TC, then one of the following must be true:\r\n       */\r\n /* If this is an array type, namely, the type SC[], that is, an\r\n     * array of components of type SC, then:\r\n     */\r\n /*ReferenceType*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n *     Andy Clement - June 2005 - separated out from ResolvedType\r\n * ******************************************************************/\r\n","Inner":"     ","TestTesterFile":" main run  TestTesterFile  in TestTester.events\r\n  in TestTester.events\r\n ","EachCFlow0":"     ","LTWHelloWorld":" println main message LTWHelloWorld  ","LstBuildConfigFileUpdater":" updateBuildConfigFile updateBuildConfigFiles exists exists readConfigFile writeConfigFile getIncludedFiles relativizePath writeConfigFile writeFile  org.aspectj.ajde.internal.LstBuildConfigFileUpdater  Set contentsSet = new TreeSet(fileContents);\r\n  List filesToWrite = null;\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ParseTestCase":" testNothingBecauseOthersSkipped skiptestParse parseSuite parseTest parseIRun parseChildrenMessages parseMessage parseChildrenStrings getAttributeString dump  org.aspectj.testing.harness.bridge.ParseTestCase  XXX failing b  RunStatus childStatus = runner.makeChildStatus();\r\n  ??? could add support here\r\n  baseDir;\r\n  XXX\r\n  XXX\r\n /*JavaRun run = */\r\n /*List files = */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","OutputLocationManagerTests":" setUp testDefaultOutputLocationUsedWhenNoOutputLocationManager testTwoSourceRootsWithSeparateOutputLocations testResourceCopying testGeneratedClassesPlacedInAppropriateOutputFolder assertFileExists getOutputLocationForClass getOutputLocationForResource PROJECT_NAME outputLocationManager projectHome org.aspectj.systemtest.incremental.tools.OutputLocationManagerTests  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n * Adrian Colyer          initial implementation\r\n* ******************************************************************/\r\n","A10":" a main main methodCaller method newM2 newM3 prefix A10 M  Bind this and target on call and change it with proceed\r\n ","A11":" a main main methodCaller method newM2 newM3 prefix A11 M  only bind arg subset and change that subset\r\n ","LUSHR":" accept  org.aspectj.apache.bcel.generic.LUSHR  ","AroundInnerCalls":"     ","TryAndProceed":"     ","DeclareAspectConstructorCE":"     ","HistoryUpdating":"     ","Pos":" getX getY move x y Pos  ","StructureViewPanel":" init setCurrentView updateView initView setActiveNode setActiveNode highlightActiveNode jbInit serialVersionUID treeManager currentView border1 border2 tree_ScrollPane structureToolBar_panel borderLayout1 org.aspectj.ajde.ui.swing.StructureViewPanel  if (!(node.getStructureNode() instanceof IProgramElement)) return;\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DefaultConsAndInner":" main  DefaultConsAndInner Outer  ","MemberDocImpl":" weakEquals setIntroduced introduced isSynthetic introduced org.aspectj.tools.ajdoc.MemberDocImpl  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","AjcPre10xTests":" suite getSpecFile test001 test002 test003 test004 test005 test006 test007 test008 test009 test010 test011 test012 test013 test014 test015 test016 test017 test018 test019 test020 test021 test022 test023 test024 test025 test026 test027 test028 test029 test030 test031 test032 test033 test034 test035 test036 test037 test038 test039 test040 test041 test042 test043 test044 test045 test046 test047 test048 test049 test050 test051 test052 test053 test054 test055 test056 test057 test058 test059 test060 test061 test062 test063 test064 test065 test066 test067 test068 test069 test070 test071 test072  org.aspectj.systemtest.pre10x.AjcPre10xTests  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","DeclareSoft":" getDeclaringType getSoftenedExceptionType getPointcutExpression accept parameterizeWith toString equals hashCode write read getPointcut getException resolve isAdviceLike getNameSuffix exception pointcut org.aspectj.lang.reflect.DeclareSoft org.aspectj.weaver.patterns.DeclareSoft  a declare soft in a generic abstract aspect, we need to check the upper bound\r\n  ENH 42743 suggests that we don't soften runtime exceptions.\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","SimpleBefore":" main m before s SimpleBefore  ","InpathTestcase":" setUp testInpathToOutjar testInpathToBin testInpathToOutjar2 testInpathAndInjarToBin fetchFromJar compareJars compareSourceToOutjar compareIndirToBin listSourceResources accept compareDirs PROJECT_DIR binDir indir1Name indir2Name injarName outjarName aspectjResourceFileFilter org.aspectj.ajde.InpathTestcase  expectedOutputJarContents.add(\"test  From src\r\n  Tidy up\r\n  expectedBindirContents.add(\"test  From src\r\n  Tidy up\r\n  From indir1\r\n  From src\r\n  is a different size to the input version.\r\n  From indir1\r\n  From injar.jar\r\n  From src\r\n  Check the input and output versions of HelloWorld.class are different sizes\r\n  Return the size of specified entry from the output jar file\r\n  set should be empty!\r\n  System.err.println(\"Checking \"+name);\r\n /*\r\n\t * Ensure the output directpry in clean\r\n\t */\r\n /*\r\n\t * Ensure -outjar contains all non-Java resouces from injars\r\n\t */\r\n /*\r\n\t * Ensure -outjar contains all non-Java resouces from source and injars\r\n\t */\r\n /*\r\n\t * Ensure bin contains all non-Java resouces from source and injars\r\n\t */\r\n /*\r\n\t * Ensure bin contains all non-Java resouces from source and injars\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation\r\n *    Andy Clement     Copied/changed for -inpath testing \r\n * ******************************************************************/\r\n","FDIV":" accept  org.aspectj.apache.bcel.generic.FDIV  ","SubSubClassLoader":" foo l SubSubClassLoader  ","OutputLine":" getText setText text org.aspectj.testing.OutputLine  /* *******************************************************************\r\n * Copyright (c) 2005 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer, \r\n * ******************************************************************/\r\n","AnnotatedClass":" m1 i AnnotatedClass AnnotatedClass AnnotatedClass  ","TwoDShape":" getX getY distance perimeter area toString x y tracing.TwoDShape  /*\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n*/\r\n","Dominates":"     ","PlusEqualsCantAssignToObject":" main  PlusEqualsCantAssignToObject  ","CompilerAdapter":" showInfoMessages getShowInfoMessages nextBuildFresh requestCompileExit isStructureDirty setStructureDirty compile genBuildConfig signalText signalThrown configureBuildOptions disableWarnings enableWarnings tokenizeString configureNonStandardOptions configureProjectOptions join init handleMessage handleAbort setState getMessageHandler wasFullBuild DEFAULT__AJDE_WARNINGS buildManager messageHandler currNotifier initialized structureDirty showInfoMessages nextBuild taskListManager org.aspectj.ajde.internal.CompilerAdapter  import org.eclipse.core.runtime.OperationCanceledException;\r\n  private Map optionsMap;\r\n  set to false in incremental mode to re-do initial build\r\n  XXX surface in GUI\r\n  !!! will get called twice\r\n  !!! not what the API intended\r\n  always force model generation in AJDE\r\n  nothing to error handler?\r\n  Mik: prepended with 1.5 check\r\n  set default warnings on...\r\n  turn off all warnings\r\n  then selectively enable those in the set\r\n  disable\r\n  won't accidentally get treated as a pair of options (can be needed for xlint props file option)\r\n  dont tokenize within double quotes\r\n  (we don't want to lose the settings we already have)\r\n  copy globals where local is not set\r\n  Handle regular classpath\r\n  Handle boot classpath\r\n  set outputdir and outputjar only if both not set\r\n  set compilation result destination manager if not set\r\n  XXX dup Util\r\n  Ajde.getDefault().setErrorHandler(new DebugErrorHandler());\r\n  XXX need to remove the properties file each time!\r\n  return super.handleMessage(message);  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC),\r\n *               2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC      initial implementation \r\n *     AMC 01.20.2003  extended to support new AspectJ 1.1 options,\r\n * \t\t\t\t       bugzilla #29769\r\n * ******************************************************************/\r\n","Superclass":" staticMethod nonstaticMethod  Superclass  ","TestServer":" initialize loadConfiguration createLoader createRootLoader setExitOntError setWorkingDirectory main run runClass invokeMain error debug exitOnError workingDirectory rootLoader loaders mainClass mainLoader org.aspectj.testing.server.TestServer  /* Sandbox */\r\n /* AspectJ runtime */\r\n","BuildProgressMonitor":" start setProgressText setProgressBarVal incrementProgressBarVal setProgressBarMax getProgressBarMax finish PROGRESS_HEADING org.aspectj.ajde.BuildProgressMonitor  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ConstantPoolGen":" adjustSize lookupString addString lookupClass addClass_ addClass addClass addArrayClass lookupInteger addInteger lookupFloat addFloat lookupUtf8 addUtf8 lookupLong addLong lookupDouble addDouble lookupNameAndType addNameAndType lookupMethodref lookupMethodref addMethodref addMethodref lookupInterfaceMethodref lookupInterfaceMethodref addInterfaceMethodref addInterfaceMethodref lookupFieldref addFieldref getConstant setConstant getConstantPool getSize getFinalConstantPool toString addConstant size constants index METHODREF_DELIM IMETHODREF_DELIM FIELDREF_DELIM NAT_DELIM index string_table class_table utf8_table n_a_t_table cp_table org.aspectj.apache.bcel.generic.ConstantPoolGen  Inital size, sufficient in most cases\r\n  First entry (0) used by JVM\r\n  Already in CP\r\n  Already in CP\r\n  BCELBUG:? Should this we getClassName() - perhaps it should be getSignature() ?!?\r\n  Already in CP\r\n  Already in CP\r\n  Already in CP\r\n  Already in CP\r\n  Wastes one entry according to spec\r\n  Already in CP\r\n  Wastes one entry according to spec\r\n  Already in CP\r\n  Already in CP\r\n  Already in CP\r\n  Already in CP\r\n  Never reached\r\n  Never reached\r\n ","Investigation":" main a b c d e  Investigation  Basic synchronized method\r\n  ... that does something ...\r\n  ... that includes try  ... with multiple synchronized blocks ...\r\n  ... with nested synchronized blocks ...\r\n ","ChainOfResponsibilityException":"   ca.ubc.cs.spl.aspectPatterns.patternLibrary.ChainOfResponsibilityException  ","ISourceLocation":" getSourceFile getLine getColumn getOffset getEndLine getContext getSourceFileName MAX_LINE MAX_COLUMN NO_FILE NO_COLUMN EMPTY org.aspectj.bridge.ISourceLocation  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","SizeIssuesAspect":"     ","IRelationshipMap":" get get get get get put put remove removeAll clear getEntries  org.aspectj.asm.IRelationshipMap  /*IRelationship*/\r\n /*IRelationship*/\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","ParameterizedReferenceTypeTestCase":" testDeclaredMethodWithParameter testDeclaredMethodWithParameterizedReturnType setUp world listOfString org.aspectj.weaver.ParameterizedReferenceTypeTestCase  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","A42":" a main main method newM prefix A42 M  Bind the target and pass in the right order\r\n ","ThrowsPattern":" getRequired getForbidden toString equals hashCode resolveBindings parameterizeWith matches matchesAny read write accept traverse required forbidden ANY org.aspectj.weaver.patterns.ThrowsPattern  int len = types.length;\r\n  XXXret.readLocation(context, s);\r\n /*name -> resolved type*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","DefaultTraceFactoryTest":" testGetTrace  org.aspectj.weaver.DefaultTraceFactoryTest  ","FlatSuiteReader":" isNumber getType make cleanup strip makeMessages readSuite RA_String ME READER clean org.aspectj.testing.harness.bridge.FlatSuiteReader  XXX costly\r\n  XXX\r\n  final String baseDir = reader.getFile().getParent();\r\n  XXX permits exactly one blank line between test records?\r\n  next line is baseDir {option..}\r\n  final File sourceRoot =  new File(baseDir, words[0]);\r\n  next are 1..n source lines: source...\r\n  XXX per-compiler-run errors\r\n  srcs are in test base for old\r\n  XXX\r\n  !compile || noerrors || className {runOption..}\r\n  XXXrun.runDir = sourceRoot;\r\n  XXX unable to specify error in eclipse but not ajc\r\n  XXX weak - also support expected exceptions, etc.\r\n  XXX weak - also support expected exceptions, etc.\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PrivateCall":"     ","ConfigurationStandard":" setSpecificDocletOptions specificDocletOptionLength nocrosscuts nosummarycrosscuts log org.aspectj.tools.doclets.standard.ConfigurationStandard  XXX move persistant resource loader to util\r\n  error below\r\n  error below\r\n  from for loop\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","LTWServerTests":" suite getSpecFile testServerWithHelloWorld testServerWithParentAndChild  org.aspectj.systemtest.ajc150.ltw.LTWServerTests  ","VarargsClass":" foo goo hoo foo goo hoo  VarargsClass VarargsClass  ","InnerMembers":" foo foo m x CONST NOT_CONST x CONST x InnerMembers  ERR: non-constant static in inner\r\n  ERR: non-constant static in inner\r\n  ERR: non-constant static in inner\r\n  ERR: non-constant static in inner\r\n  ERR: non-constant static in inner\r\n  ERR: non-constant static in inner\r\n ","InterfaceInitializerOrder":"     ","ConfigurationListener":" currConfigChanged configsListUpdated  org.aspectj.ajde.ConfigurationListener  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","MyInterface_ch16":" bar  MyInterface_ch16  ","IfInstruction":" negate  org.aspectj.apache.bcel.generic.IfInstruction  ","TreeStructureViewBuilder":" buildView addPackageNode createViewNode isFileView acceptGranularity acceptNode sortView buildCustomTree getRoots acceptNodeAsRoot getInheritanceChildren getCrosscuttingChildren compare compare nodeFactory ALPHABETICAL_COMPARATOR DECLARATIONAL_COMPARATOR org.aspectj.ajde.ui.internal.TreeStructureViewBuilder  StructureViewProperties properties = view.getViewProperties();\r\n  boolean noStructure = false;\r\n  modelRoot;\r\n  }\r\n  new TreeViewNode(root, null, children);\r\n  List relations = ((IProgramElement)node).getRelations();\r\n  List relations = ((IProgramElement)node).getRelations();\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","MainWriter":" main  MainWriter  ","AllTestsAspectJ153":" suite  org.aspectj.systemtest.ajc153.AllTestsAspectJ153  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n ","PointcutParameter":" getName getType getBinding  org.aspectj.weaver.tools.PointcutParameter  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","AllTestsAspectJ152":" suite  org.aspectj.systemtest.ajc152.AllTestsAspectJ152  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n ","IMUL":" accept  org.aspectj.apache.bcel.generic.IMUL  ","ClassUseWriter":" _pkgDivide generate generateClassUse printUseInfo classdoc pkgToAdviceArgs pkgToAdviceReturn pkgToPointcutArgs pkgToPointcutReturn pkgToFieldIntroductions pkgToClassIntroductions pkgToInterfaceIntroductions pkgToClassAdvisors pkgToAspectDominatees pkgToAspectDominators methodSubWriter constrSubWriter fieldSubWriter classSubWriter pointcutSubWriter superIntroductionSubWriter fieldIntroductionSubWriter constrIntroductionSubWriter methodIntroductionSubWriter adviceSubWriter writer org.aspectj.tools.doclets.standard.ClassUseWriter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","SourceLocationCall":"     ","SCCSFixTests":" setUp tearDown testSkipCVS testSkipSCCS doTestSkip baseDir sourceroot MAIN org.aspectj.systemtest.ajc150.SCCSFixTests  ","AllTestsAspectJ151":" suite  org.aspectj.systemtest.ajc151.AllTestsAspectJ151  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n ","AllTestsAspectJ150":" suite  org.aspectj.systemtest.ajc150.AllTestsAspectJ150  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n ","TopLevelBefore":"     ","ArrayCasts":"     ","BrowserManager":" getDefault elementsUpdated init resetEditorFrame resetEditor setStatusInformation setEditorStatusText saveAll showMessages hideMessages getRootFrame openFile getConfigFilesList compileStarted compileFinished compileAborted getConfigFiles getBrowserProjectProperties getEditorManager INSTANCE browserProjectProperties editorManager configFiles TITLE topFrame VIEW_LISTENER BUILD_MESSAGES_LISTENER org.aspectj.tools.ajbrowser.BrowserManager  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ClassWriter":" generate printHeader h2 h2End print printAspectJSummary printMembersSummary printAspectJDetail printMembersDetail printClassDescription printClassLinks printIntroducedSuper navAspectJSummaryLinks navSummaryLink navAspectJDetailLinks navDetailLink _navGap navGap printEnclosingClassInfo printAdviseeInfo printAdvisorInfo printInfo advisors ourMethodSubWriter ourConstrSubWriter ourFieldSubWriter ourInnerSubWriter pointcutSubWriter superIntroductionSubWriter fieldIntroductionSubWriter constrIntroductionSubWriter methodIntroductionSubWriter adviceSubWriter h2warn navstate org.aspectj.tools.doclets.standard.ClassWriter  subwriters to our subwriters delegates.\r\n  subwriters\r\n  TODO  not 'class'\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","NodesAspect":"     ","Joinpoints101":" main callMethod l Joinpoints101  ","PerObject":" getBody setBody isThis setIsThis propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty clone0 subtreeMatch0 accept0 treeSize accept couldMatchKinds fastMatch matchInternal resolveBindings parameterizeWith getVar findResidueInternal concretize write readPerClause getKind isThis toString toDeclarationString getEntry equals hashCode body BODY_PROPERTY isThis isThis entry thisKindSet targetKindSet org.aspectj.org.eclipse.jdt.core.dom.PerObject org.aspectj.weaver.patterns.PerObject  $NON-NLS-1$\r\n  if it's not a perthis, it's a pertarget\r\n  allow default implementation to flag the error\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  -----\r\n  ??? could probably optimize this better by testing could match\r\n  assert bindings == null;\r\n  concreteEntry.state = Pointcut.CONCRETE;\r\n  see #75442 thread. Issue with weaving order.\r\n  ATAJ: add a munger to add the aspectOf(..) to the @AJ aspects\r\n  ATAJ inline around advice support - don't use a late munger to allow around inling for itself\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Class":" foo  pClass.Class  ","SerialFieldTag":"   org.aspectj.ajdoc.SerialFieldTag  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Parent":" main  jar1.Parent Parent  ","AnonymousClassTest":" foo testRegularClassIsNotAnonymous testNamedInnerClassIsNotAnonymous testStaticInnerClassIsNotAnonymous testAnonymousInnerClassIsAnonymous setUp foo repos AnonymousClassTest org.aspectj.apache.bcel.classfile.tests.AnonymousClassTest AnonymousClassTest  ","CastInFieldInit":"     ","AbstractOzonator":" readMethodExecution ozonatedReadExecution aroundGetterCallNoRecurse readMethodExecution ozonatedReadExecution aroundGetterCallNoRecurse  ajtest2.AbstractOzonator com.codesrc.ozonator.AbstractOzonator  ","StringMaker":" makeKindName makeModifiersString stripPackageName makeTypeName makeTypeName makePrimaryTypeName addTypeNames addSignature addThrows shortTypeNames includeArgs includeThrows includeModifiers shortPrimaryTypeNames includeJoinPointTypeName includeEnclosingPoint shortKindName cacheOffset shortStringMaker middleStringMaker longStringMaker org.aspectj.runtime.reflect.StringMaker  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","JavadocCompareClassMode":" main ensureDir test writeStream completeProcess runCommand MIN_SECS MAX_SECS INPUT_FILES FILE_1 FILE_2 OUTPUT_DIR AJDOC_DIR JAVADOC_DIR AJDOC_CALL JAVADOC_CALL JavadocCompareClassMode  setup timeout\r\n  try to wait for the process\r\n  ignore\r\n  misnamed API: the \"input\" stream is our input from the process output\r\n ","ArgsWeaveTestCase":" testAfterReturningArgs testFancyAfterReturningArgs testThrowing testLots getArgsAdviceTag makeArgsMunger  org.aspectj.weaver.bcel.ArgsWeaveTestCase  /* private */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","TwoForThePriceOfOne":" logEntry  TwoForThePriceOfOne  ","AnnotationOnTypeMunger":" write getNewAnnotation equals hashCode newAnnotation hashCode org.aspectj.weaver.AnnotationOnTypeMunger  /* *******************************************************************\r\n * Copyright (c) 2005 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","StreamGrabberTest":" main testHide testGrab printLoop printlnLoop ME org.aspectj.testing.util.StreamGrabberTest  copy /*\r\n * StreamGrabberTest.java created on May 16, 2002\r\n *\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","StockAccount":" getAccountNumber setAccountNumber getQuantity setQuantity getSymbol setSymbol accountNumber symbol quantity services.accountdata.StockAccount  ","BadTypeName":"     ","Ajc11Tests":" suite getSpecFile test001 test002 test003 test004 test005 test006 test007 test008 test009 test010 test011 test012 test013 test014 test015 test016 test017 test018 test019 test020 test021 test022 test023 test024 test025 test026 test027 test028 test029 test030 test031 test032 test033 test034 test035 test036 test037 test038 test039 test040 test041 test042 test043 test044 test045 test046 test047 test048 test049 test050 test051 test052 test053 test054 test055 test056 test057 test058 test059 test060 test061 test062 test063 test064 test065 test066 test067 test068 test069 test070 test071 test072 test073 test074 test075 test076 test077 test078 test079 test080 test081 test082 test083 test084 test085 test086 test087 test088 test089 test090 test091 test092 test093 test094 test095 test096 test097 test098 test099 test100 test102 test103 test104 test105 test106 test107 test108 test109 test110 test111 test112 test113 test114  org.aspectj.systemtest.ajc11.Ajc11Tests  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","ParameterizedDP":"     ","TypePatternListTestCase":" testMatch makeArgumentsPattern checkStaticMatch makeTestScope stupidCheck testSerialization checkSerialization world org.aspectj.weaver.patterns.TypePatternListTestCase  these checks are taken from new  System.out.println(\"type: \" + type);\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","CountingMessageHandlerTest":" main testSimpleWrapping testCounterWrapping checkCountingMessageHandler ME org.aspectj.bridge.CountingMessageHandlerTest  XXX\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Base":" foo getName default_method public_method protected_method private_method default_method public_method protected_method private_method default_method public_method protected_method private_method default_staticMethod public_staticMethod protected_staticMethod private_staticMethod default_staticMethod public_staticMethod protected_staticMethod private_staticMethod default_staticMethod public_staticMethod protected_staticMethod private_staticMethod trigger main main x m1 m2 m3 main x method main method main onlyBase both onlyBaseNonStatic bothNonStatic m x value default_int public_int protected_int private_int default_staticInt public_staticInt protected_staticInt private_staticInt publicIntField privateStringField publicListField protectedListField onlyBase both sample.Base p1.Base packageProtected.core.Base Base Base Base com.aspectj.test.Base com.aspectj.test.Base fluffy.Base  new Base().x();\r\n  \r\n  \r\n ","RunUtils":" enableVerbose numFailures printShort printShort print print print debugString toShortString printRunStatus toString printRunStatus printRunStatus toString printRunStatus printRunStatus toString printRunStatus toString printRunStatus toString printRunStatus VERBOSE_PRINTER TERSE_PRINTER AJCSUITE_PRINTER AJCTEST_PRINTER AJC_PRINTER AJCRUN_PRINTER org.aspectj.testing.util.RunUtils  instanceof hack\r\n  int i = 0;\r\n  ------------------------ printing status\r\n  \"parent\",\r\n  status.getParent(),                 print all messages - these are validator comments\r\n  XXX ignore thrown if failed - will be printed as message anyway?\r\n  out.println(\"------------   END \"  + label);\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PrivateIntro":"     ","AdviceSignature":" getReturnType getAdvice  org.aspectj.lang.reflect.AdviceSignature  /* (some around also return Void.Type)      */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CatchSig":"     ","DeclareCoverage":"     ","SyntheticRepository":" getInstance getInstance storeClass removeClass findClass loadClass loadClass loadClass clear DEFAULT_PATH _instances _path _loadedClasses org.aspectj.apache.bcel.util.SyntheticRepository  CLASSPATH X REPOSITORY\r\n  CLASSNAME X JAVACLASS\r\n  Just in case, canonical form\r\n ","ContextFormatter":" formatEntry  org.aspectj.bridge.context.ContextFormatter  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","LstBuildConfigManagerTest":" main suite testConfigParserErrorMessages testErrorMessages testNonExistentConfigFile testFileRelativePathSameDir setUp tearDown buildConfigManager org.aspectj.ajde.internal.LstBuildConfigManagerTest  private AjcBuildOptions buildOptions = null;\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PointcutDocImpl":" createAdvice dec getFormals getThrows resultType overriddenClass isPointcut isAbstract pointcutDec org.aspectj.tools.ajdoc.PointcutDocImpl  TODO: maybe return VOID\r\n  TODOtyped.getType();\r\n  TODO: This sucks!!!\r\n  TODOresult;\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","IF_ICMPLT":" negate accept  org.aspectj.apache.bcel.generic.IF_ICMPLT  ","ArgsPointcut":" getArguments parameterizeWith couldMatchKinds fastMatch matchInternal getArgumentsToMatchAgainst getBindingAnnotationTypePatterns getBindingTypePatterns write read equals hashCode resolveBindings postRead concretize1 findResidueNoEllipsis isUncheckedArgumentWarningSuppressed findResidueInternal toString accept ASPECTJ_JP_SIGNATURE_PREFIX ASPECTJ_SYNTHETIC_SIGNATURE_PREFIX arguments stringRepresentation org.aspectj.weaver.patterns.ArgsPointcut  empty args() matches jps with no args\r\n  there are one or more synthetic args on the end, caused by non-public itd constructor\r\n  normal arg after AJ type means earlier arg was NOT synthetic\r\n  want to ignore.\r\n  Enforce rule about which designators are supported in declare\r\n  System.err.println(\"boudn to : \" + len + \", \" + patterns.length);\r\n  l1+1 >= l0\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingAnnotationTypePatterns()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingTypePatterns()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Cricket":"     ","TopTop6":" anotherPublicMethod anotherProtectedMethod  TopTop6  ","TopTop4":" absMethod0  TopTop4  ","InformationScreen":" drawInfo drawInfo  ca.ubc.cs.spl.aspectPatterns.examples.bridge.aspectj.InformationScreen ca.ubc.cs.spl.aspectPatterns.examples.bridge.java.InformationScreen  ","SoftSourceLocation":" writeXml getSourceFile getLine getColumn getEndLine getContext setFile setLine setLineAsString getLineAsString setColumn setEndLine setContext convert getLocationContext getOffset toString getSourceFileName NONE XMLNAME sourceFile line column endLine context org.aspectj.testing.xml.SoftSourceLocation  other attributes not supported\r\n  required for no-line comparisons to work\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC),\r\n *               2004 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Wes Isberg     2004 updates\r\n * ******************************************************************/\r\n","ajcPrivileged":"     /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","ModelTestCase":" setUp processFilelocation wantsHandleIds tearDown runModelTest verifyModel compareModel saveModel regenerate debugTest expectedOutDir testid modelFilename handleProvider sandboxDirectory org.aspectj.systemtest.model.ModelTestCase  over different compiles\r\n  following compile wipe it.\r\n  report all information - model, relationships delta processing\r\n  Verify the file matches what we have\r\n  Create the file\r\n  Load the file with the expected output\r\n  String tempDir = expect.readLine();\r\n  Load the file with the output from this test run\r\n  if (j == -1) {\r\n  errorData.append(\"Problem with comparison at line number: \"+)\r\n  iterate over what we found\r\n /* (non-Javadoc)\r\n\t * @see junit.framework.TestCase#setUp()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see junit.framework.TestCase#tearDown()\r\n\t */\r\n","OldStuff":" foo  OldStuff  ","CaseClauses":" main realMain  CaseClauses  ","Injection":"     ","StringFieldOnInterface":"     ","AccessChecker":" doCanAccess doCanAccess doCanAccess doCanAccess canAccess canAccess canAccess canAccess canAccessLog canAccess getOption toString doCanAccess PUBLIC PROTECTED PACKAGE PRIVATE optionName org.aspectj.tools.ajdoc.AccessChecker  avoiding NPE in getEnclosingInstanceTypeDec\r\n  todo: typeDec?\r\n  todo: object unused but useful for logging\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","ButtonCommanding":"     ","ReturnTypes":" main convertDouble  ReturnTypes  ","SoftMessage":" fail writeXml writeXml writeXml getKind isError isWarning isDebug isInfo isTaskTag isAbort isFailed getDeclared getMessage getThrown getSourceLocation setMessageKind setFile setKindAsString setSourceLocation setLineAsString setText toString getDetails setDetails getID setID getSourceStart setSourceStart getSourceEnd setSourceEnd getExtraSourceLocations addSourceLocation XMLNAME NO_FILE message kind thrown sourceLocation details id sourceStart sourceEnd extraSourceLocations file line org.aspectj.testing.xml.SoftMessage  import java.util.Collections;\r\n  collapse enclosed source location for shorter, property-based xml\r\n  XXX short form only, no files\r\n /*ISourceLocation element = (ISourceLocation)*/\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.bridge.IMessage#getExtraSourceLocations()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","IF_ICMPLE":" negate accept  org.aspectj.apache.bcel.generic.IF_ICMPLE  ","PublicTarget":" publicMethod protectedMethod defaultMethod privateMethod readPublicTarget publicPublicInnerMethod protectedPublicInnerMethod defaultPublicInnerMethod privatePublicInnerMethod readPublicInnerTarget publicStaticInt protectedStaticInt defaultStaticInt privateStaticInt publicInt protectedInt defaultInt privateInt publicStaticPublicInnerInt protectedStaticPublicInnerInt defaultStaticPublicInnerInt privateStaticPublicInnerInt publicPublicInnerInt protectedPublicInnerInt defaultPublicInnerInt privatePublicInnerInt pack.PublicTarget  /* def */\r\n /* default */\r\n /* default */\r\n","InnerInterfaceTypesHelper":"     ","NoSource":"     ","SingletonInstance":"     ","ArgsAnnotationPointcut":" getArguments couldMatchKinds parameterizeWith fastMatch matchInternal resolveBindings concretize1 findResidueInternal getBindingAnnotationTypePatterns getBindingTypePatterns write read equals hashCode buildDeclarationText toString accept arguments declarationText org.aspectj.weaver.patterns.ArgsAnnotationPointcut  empty args() matches jps with no args\r\n  Enforce rule about which designators are supported in declare\r\n  do some quick length tests first\r\n  should never happen\r\n  should never happen\r\n  now work through the args and the patterns, skipping at ellipsis\r\n  we know it is exact because nothing else is allowed in args\r\n  we need a test...\r\n  match ellipsisMatchCount args\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#fastMatch(org.aspectj.weaver.patterns.FastMatchInfo)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#match(org.aspectj.weaver.Shadow)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#resolveBindings(org.aspectj.weaver.patterns.IScope, org.aspectj.weaver.patterns.Bindings)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#concretize1(org.aspectj.weaver.ResolvedType, org.aspectj.weaver.IntMap)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.Pointcut#findResidue(org.aspectj.weaver.Shadow, org.aspectj.weaver.patterns.ExposedState)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingAnnotationTypePatterns()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.NameBindingPointcut#getBindingTypePatterns()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.patterns.PatternNode#write(java.io.DataOutputStream)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#equals(java.lang.Object)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#hashCode()\r\n\t */\r\n /* (non-Javadoc)\r\n     * @see java.lang.Object#toString()\r\n     */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","DeclareWarningMain":"     ","MoveInstructionsWeaveTestCase":" testHello testFancyHello counter org.aspectj.weaver.bcel.MoveInstructionsWeaveTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","BaseTests":" suite getSpecFile test001 test002 test003 test004 test005 test006 test007 test008 test009 test010 test011 test012 test013 test014 test015 test016 test017 test018 test019 test020 test021 test022 test023 test024 test025 test026 test027 test028 test029 test030 test031 test032 test033 test034 test035 test036 test037 test038 test039 test040  org.aspectj.systemtest.base.BaseTests  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","IntroductionDocImpl":" getInstance addTarget targets getInstance weakEquals factory targets org.aspectj.tools.ajdoc.IntroductionDocImpl  if (targets == null) targets = createTargets();\r\n  TODO\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Module":" outOfDate sourceFiles sourceFiles addIfNew doFindJarRequirements isSourceFile getModules outOfDate toString toLongString getResult srcDirs libJars classpathVariables exportedLibJars requiredModules myResult init initManifest initClasspath update warnVariable initProperties reviewInit initResults getFullPath end end reset tokenize acceptLine attributesToProperties errorIfNotNull errorIfNull activeEntity next readAttribute writeAttribute error ATTS valid moduleDir name modules release test testAll releaseAll moduleJar libJars classpathVariables exportedLibJars srcDirs properties requiredModules messager START_NAME ATT_STARTED callback input attributes targetEntity entityName attributeName org.aspectj.internal.tools.build.Module  XXXFileLiteral\r\n  required modules\r\n  libraries\r\n  XXXFileLiteral\r\n  ok, not OSGI\r\n  XXXFileLiteral\r\n  OSGI???\r\n  dumb - only handle comment-only lines\r\n  warn non-JRE containers\r\n  'special' for container pointing at AspectJ runtime...\r\n  src dir\r\n  module\r\n  XXXFileLiteral\r\n  no properties to read\r\n  failed XXX log also if verbose\r\n  assume optional for pre-1.5 builds\r\n  results initialized lazily\r\n  check for absolute paths (untested - none in our modules so far)\r\n  testFile.getAbsolutePath());\r\n  not a delimiter\r\n  end quote (or escaped)\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AjdeUIManager":" init init getDefault getViewManager getRootFrame getOptionsFrame showOptionsFrame getBuildOptions compileStarted compileFinished compileAborted getIdeUIAdapter getBuildConfigEditor getFileStructurePanel getIconRegistry isInitialized INSTANCE viewManager buildOptionsAdapter ideUIAdapter buildConfigEditor iconRegistry initialized optionsFrame rootFrame fileStructurePanel STATUS_TEXT_UPDATER org.aspectj.ajde.ui.swing.AjdeUIManager  private UserPreferencesAdapter userPreferencesAdapter = null;\r\n  ConfigurationManager configManager = new LstConfigurationManager();\r\n  this.userPreferencesAdapter = userPreferencesAdapter;\r\n  viewManager.updateView();\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AbstractAspectUsedStatically":"     ","Subroutine":" getEnteringJsrInstructions getLeavingRET getInstructions contains getAccessedLocalsIndices getRecursivelyAccessedLocalsIndices subSubs  org.aspectj.apache.bcel.verifier.structurals.Subroutine  ","ParentCE":"     ","IfPCDAssignmentCE":"     ","Helper":" file getDecl checkPos checkKind checkSignature checkFormalComment checkPointsNothing checkPointsTo checkPointedToByNone checkPointedToBy checkModifiers checkAllDecsOf getName getFilePos sm allDecsFound symbols.Helper  ","NullIdeFileStructureView":" getSourceFile setSourceFile setRootNode sourceFilePath org.aspectj.ajde.ui.NullIdeFileStructureView  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","CFlowNoAdvice":"     ","VerificationException":"   org.aspectj.apache.bcel.verifier.exc.VerificationException  ","InitializerWithThrow":" main ini i InitializerWithThrow  ","AspectInitError":"     ","GenericsTest":" testBuild setUp  org.aspectj.ajde.GenericsTest  ","ProceedOnErrorTestCase":" testNoProceedOnError testProceedOnError pause  org.aspectj.ajdt.internal.compiler.batch.ProceedOnErrorTestCase  Without -proceedOnError supplied, we should *not* change the time stamp on the .class file\r\n  Without -proceedOnError supplied, we should *not* change the time stamp on the .class file\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","PathVFSJavaLoader":" loadClass loadClassFromBytes parent vfs interfaces jxxload_help.PathVFSJavaLoader  Copyright 2000 Samuele Pedroni\r\n ","RuntimeParameterAnnotations":" dump copy getParameterAnnotations getAnnotationsOnParameter areVisible readParameterAnnotations inflate writeAnnotations isInflated toString parameterAnnotations visible inflated annotation_data org.aspectj.apache.bcel.classfile.annotation.RuntimeParameterAnnotations  Keep just a byte stream of the data until someone actually asks for it\r\n /*Annotation[]*/\r\n /*Annotation[]*/\r\n","AfterReturningConstructor":"     ","SystemOutPrinter":" printToSystemOut printToSystemOut  ca.ubc.cs.spl.aspectPatterns.examples.adapter.aspectj.SystemOutPrinter ca.ubc.cs.spl.aspectPatterns.examples.adapter.java.SystemOutPrinter  ","Initialization":"     ","SubclassAccessToEnclosingSuperClassPrivate":" main staticPrivateMethod privateMethod doit doit doit runSubInner runMethodLocalInnerSubclass doit doit doit staticPrivateInt privateInt name SubclassAccessToEnclosingSuperClassPrivate SuperEnclosing Expect  load expectations..\r\n  nested classes\r\n  inner (non-static nested) classes\r\n  run directly\r\n  run indirectly\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  i-c-e\r\n  ---------- non-static inner\r\n ","AjNaiveASTFlattener":" getResult reset printIndent printModifiers printModifiers visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit visit buffer indent org.aspectj.org.eclipse.jdt.core.dom.AjNaiveASTFlattener  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  add empty \"[]\" for each extra array dimension\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  enum constant declarations do not include punctuation\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  for cases like x= i - -1; or x= i++ + ++i;\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  decremented in visit(SwitchStatement)\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  incremented in visit(SwitchCase)\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  but Name, MemberRef, MethodRef, and nested TagElement do not include white space\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  add space if required to separate\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  this.buffer.append(node.isInterface() ? \"interface \" : \"class\");  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  this.buffer.append(node.isInterface() ? \"extends \" : \"implements \");  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  this.buffer.append(node.isInterface() ? \"extends \" : \"implements \");  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  enum constant declarations do not include punctuation\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n /*\r\n\t * @see ASTVisitor#visit(AnnotationTypeDeclaration)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(AnnotationTypeMemberDeclaration)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(AnonymousClassDeclaration)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ArrayAccess)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ArrayCreation)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ArrayInitializer)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ArrayType)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(AssertStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(Assignment)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(Block)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(BlockComment)\r\n\t * @since 3.0\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(BooleanLiteral)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(BreakStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(CastExpression)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(CatchClause)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(CharacterLiteral)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ClassInstanceCreation)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(CompilationUnit)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ConditionalExpression)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ConstructorInvocation)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ContinueStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(DoStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(EmptyStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(EnhancedForStatement)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(EnumConstantDeclaration)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(EnumDeclaration)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ExpressionStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(FieldAccess)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(FieldDeclaration)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ForStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(IfStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ImportDeclaration)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(InfixExpression)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(InstanceofExpression)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(Initializer)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(Javadoc)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(LabeledStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(LineComment)\r\n\t * @since 3.0\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(MarkerAnnotation)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(MemberRef)\r\n\t * @since 3.0\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(MemberValuePair)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(MethodRef)\r\n\t * @since 3.0\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(MethodRefParameter)\r\n\t * @since 3.0\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(MethodDeclaration)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(MethodInvocation)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(Modifier)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(NormalAnnotation)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(NullLiteral)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(NumberLiteral)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(PackageDeclaration)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ParameterizedType)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ParenthesizedExpression)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(PostfixExpression)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(PrefixExpression)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(PrimitiveType)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(QualifiedName)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(QualifiedType)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ReturnStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(SimpleName)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(SimpleType)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(SingleMemberAnnotation)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(SingleVariableDeclaration)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(StringLiteral)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(SuperConstructorInvocation)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(SuperFieldAccess)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(SuperMethodInvocation)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(SwitchCase)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(SwitchStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(SynchronizedStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(TagElement)\r\n\t * @since 3.0\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(TextElement)\r\n\t * @since 3.0\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ThisExpression)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(ThrowStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(TryStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(TypeDeclaration)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(TypeDeclarationStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(TypeLiteral)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(TypeParameter)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(VariableDeclarationExpression)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(VariableDeclarationFragment)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(VariableDeclarationStatement)\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(WildcardType)\r\n\t * @since 3.1\r\n\t */\r\n /*\r\n\t * @see ASTVisitor#visit(WhileStatement)\r\n\t */\r\n","TwoX":"     ","LinkingConstraintException":"   org.aspectj.apache.bcel.verifier.exc.LinkingConstraintException  ","Java15ReflectionBasedReferenceTypeDelegate":" initialize buildGenericType getAnnotations getAnnotationTypes hasAnnotation getDeclaredFields getDeclaredGenericSignature getDeclaredInterfaces getSuperclass getTypeVariables getDeclaredMethods getGenericResolvedType createGenericMethodMember createGenericConstructorMember createGenericFieldMember getDeclaredPointcuts tryToDiscoverParameterNames isAnnotation isAnnotationStyleAspect isAnnotationWithRuntimeRetention isAspect isEnum isGeneric isAnonymous myType annotations pointcuts methods fields typeVariables superclass superInterfaces genericSignature typeConverter annotationFinder argNameFinder org.aspectj.weaver.reflect.Java15ReflectionBasedReferenceTypeDelegate  FIXME is this the right implementation in the reflective case?\r\n  use the MAP to ensure that any aj-synthetic fields are filtered out\r\n  superclass of Object is null\r\n  If the superclass is null, return Object - same as bcel does\r\n  basic initialization\r\n  stash it\r\n  now fill in the details...\r\n  methods that really shouldn't be seen in this list\r\n  getGenericResolvedType(),\r\n  resolution can sometimes cause us to recurse, and this two stage process allows us to cope with that\r\n  phase 2, now go back round and resolve in-place all of the pointcuts\r\n  phase 3, now concretize them all\r\n  for @AspectJ pointcuts compiled by javac only...\r\n  return false;  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","BcelTests":" suite  org.aspectj.weaver.bcel.BcelTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","MethodState":" enterInThread exitInThread hasOtherThreadThan enterInThread exitInThread hasOtherThreadThan enterInThread exitInThread hasOtherThreadThan enterInThread exitInThread hasOtherThreadThan enterInThread exitInThread hasOtherThreadThan threads threads threads threads threads coordination.MethodState coordination.MethodState coordination.MethodState coordination.MethodState coordination.MethodState  /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n /* -*- Mode: Java; -*-\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n \r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","Super":"   Super  ","PublicPackage":"     ","$Proxy4":" foo  $Proxy4  ","TypePatternBasedPerClause":" getTypePattern  org.aspectj.lang.reflect.TypePatternBasedPerClause  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","TestsModuleTests":" suite  org.aspectj.tests.TestsModuleTests  suite.addTest(TestUtil.skipTest(\"for 1.4 and 1.5\"));\r\n  suite.addTest(TestUtil.skipTest(\"for 1.5\"));\r\n  compiler tests, wrapped for JUnit\r\n ","AjClassFile":" fileName getBytes filename bytes org.aspectj.ajdt.internal.compiler.AjClassFile  ","TjpWeaveTestCase":" setUp tearDown testStaticTjp testEnclosingStaticTjp testTjp testAroundTjp testAround2Tjp  org.aspectj.weaver.bcel.TjpWeaveTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","IfFinder":" visit visit visit visit hasIf org.aspectj.weaver.bcel.IfFinder  IfFalse  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     Andy Clement                 initial implementation\r\n * ******************************************************************/\r\n","IF_ICMPGT":" negate accept  org.aspectj.apache.bcel.generic.IF_ICMPGT  ","CompileSpec":" execute addExpectedMessage setBaseDir getBaseDir setTest getTest getAspectpath setAspectpath getClasspath setClasspath getFiles setFiles isIncludeClassesDir setIncludeClassesDir getInpath setInpath getOptions setOptions getOutjar setOutjar getOutxmlfile setOutxmlfile getSourceroots setSourceroots getXlintfile setXlintfile getExtdirs setExtdirs buildArgs buildMessageSpec expected files includeClassesDir aspectpath classpath inpath sourceroots outjar outxml xlintfile options baseDir extdirs myTest org.aspectj.testing.CompileSpec  so subsequent steps in same test see my results\r\n  add any set options, and then files to compile at the end\r\n  convention that any jar on file list should be added to inpath\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer, \r\n * ******************************************************************/\r\n","WildNames":"     ","ConcreteAtAspectTest":" target pc before pc testConcrete tesCanLoad main suite I ataspectj.ConcreteAtAspectTest  ones must use a concrete-aspect\r\n  legal abstract aspect resolved with inheritance\r\n ","UnfoundConstructor":"     ","ExtensionTests":" setUp testMessageID testInnerClassesInASM getChild findChild walkit testMessageSourceStartEnd PROJECT_DIR debugTests baseDir foundNode org.aspectj.ajde.ExtensionTests  import java.util.Properties;\r\n  TODO-path\r\n  getName());\r\n /*List l = */\r\n /*Properties p = */\r\n","TestProxyGenerator":" testMethod main  ataspectj.TestProxyGenerator  ","TwoB":" firstMethod  TwoB  ","Missing":" interfaceMethod missingMethod  Missing  ","TwoA":" firstMethod  TwoA  ","UndeclaredThrows":" m m1 m2  UndeclaredThrows C  ","NonOverEagerConstantFolding":" foo main i thingy NonOverEagerConstantFolding  ","NonstaticWeaveTestCase":" testBefore testBeforeCflow testBeforePerThis  org.aspectj.weaver.bcel.NonstaticWeaveTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","GetInfo":"     ","CflowConcrete":"     ","TraceMyClasses":"     ","GUIComponentCreator":" createComponent getTitle createComponent getTitle showFrame lastFrameLocation ca.ubc.cs.spl.aspectPatterns.examples.factoryMethod.aspectj.GUIComponentCreator ca.ubc.cs.spl.aspectPatterns.examples.factoryMethod.java.GUIComponentCreator  ","MethodInvocationClosureTest":" testGetMethod  org.aspectj.aopalliance.tests.MethodInvocationClosureTest  ","AbstractImplementedPointcut":"     ","IF_ICMPGE":" negate accept  org.aspectj.apache.bcel.generic.IF_ICMPGE  ","Memento":" setState getState  ca.ubc.cs.spl.aspectPatterns.patternLibrary.Memento  ","AnnotationBinding":" suite getSpecFile testCallAnnotationBinding1 testCallAnnotationBinding2 testCallAnnotationBinding3 testCallAnnotationBinding4 testCallAnnotationBinding5 testCallAnnotationBinding6 testCallAnnotationBinding7 testAtTargetAnnotationBinding1 testAtTargetAnnotationBinding2 testAtTargetAnnotationBinding3 testAtTargetAnnotationBinding4 testAtTargetAnnotationBinding5 testAtThisAnnotationBinding1 testAtThisAnnotationBinding2 testAtThisAnnotationBinding3 testAtThisAnnotationBinding4 testAtThisAtTargetAnnotationBinding testAtArgs1 testAtArgs2 testAtArgs3 testAtArgs4 testAtArgs5 testExecutionAnnotationBinding1 testFieldAnnotationBinding1 testFieldAnnotationBinding2 testFieldAnnotationBinding3 testCtorCallAnnotationBinding1 testCtorExecAnnotationBinding1 testStaticInitAnnotationBinding1 testPreInitAnnotationBinding1 testInitAnnotationBinding1 testAdviceExecAnnotationBinding1 testHandlerAnnotationBinding1 testWithinBinding1 testWithinBinding2 testWithinCodeBinding1 testPackageNamedTypesNoBinding testPackageNamedTypesWithBinding testDeclareParentsWithAnnotatedAnyPattern testAnnotationUsedButNotImported testCallsAndExecutionsOfStaticMethods testAnnotationBindingAndITDs1 testAnnotationBindingAndITDs2 testAnnotationBindingAndITDs3 testAnnotationBindingAndITDs4 testAnnotationBindingAndITDs5 testAnnotationBindingAndITDs6 testAnnotationBindingAndITDs7 testAnnotationBindingAndITDs4_asmtest testAnnotationBindingAndITDs5_asmtest testAnnotationBindingAndITDs7_asmtest testAnnotationBindingArgsVerifyError_pr92053  org.aspectj.systemtest.ajc150.AnnotationBinding  Very simple annotation binding for 'call() && @annotation()'\r\n  'call() && @annotation()' when the called method has multiple arguments\r\n  'call() && @annotation()' when the called method takes primitive arguments (YUCK!)\r\n  'call() && @annotation()' when runtime type will exhibit different annotation (due to interface implementing)\r\n  'call() && @annotation()' when target doesnt have an annotation !\r\n  'call() && @annotation()' when runtime type will exhibit different annotation (due to subclassing)\r\n  'call() && @annotation()' using named pointcut\r\n  'call() && @target()'\r\n  'call() && @target() && @target'\r\n  'call() && @target()' - using a type hierarchy where some levels are missing annotations\r\n  but the annotation is inherited\r\n  @target() with an annotation in a package\r\n  'call() && @this()'\r\n  'call() && @this() && @this'\r\n  'call() && @this()' - using a type hierarchy where some levels are missing annotations\r\n  but the annotation is inherited\r\n  '@this() and @target()' used together\r\n  complex case when there are 3 parameters\r\n  simple case when there is only one parameter\r\n  simple case when there is only one parameter and no binding\r\n  complex case binding different annotation kinds\r\n  check @args and execution()\r\n  'execution() && @annotation()'\r\n  'set() && @annotation()'\r\n  'get() && @annotation()'\r\n  'get() && @annotation()' when using array fields\r\n  'ctor-call(new) && @annotation()'\r\n  'ctor-execution() && @annotation()'\r\n  'staticinitialization() && @annotation()'\r\n  'preinitialization() && @annotation()'\r\n  'initialization() && @annotation()'\r\n  'adviceexecution() && @annotation()'\r\n  'handler() && @annotation()'\r\n  '@within()'\r\n  '@within()' but multiple types around (some annotated)\r\n  '@withincode() && call(* println(..))'\r\n  Using package names for the types (including the annotation) - NO BINDING\r\n  Using package names for the types (including the annotation) - INCLUDES BINDING\r\n  declare parents: @Color * implements Serializable\r\n  Should error (in a nice way!) on usage of an annotation that isnt imported\r\n  Binding with calls  AsmManager.setReporting(\"c:  AsmManager.setReporting(\"c:  AsmManager.setReporting(\"c: ","AssertInMethod":" main internalMethod  AssertInMethod C  ","SFileReader":" main readNodes make getType make getType NONE maker ECHO org.aspectj.testing.util.SFileReader  XXX todo - verify message has context?\r\n  XXX signal error?\r\n  XXX signal error?\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","StructureModelRegressionTest":" main suite test verifyAgainstSavedModel IProgramElementsEqual getModelForFile setUp testModelExists tearDown  org.aspectj.ajde.StructureModelRegressionTest  method here instead.\r\n  check child nodes\r\n  was buildStructure...\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","MarkMyMethodsAspect":"     ","BetaA":"     ","AJError":" main  AJError  ","OctalChars":" main realMain  OctalChars  ","ProxyProtocol":"     ","IF_ICMPEQ":" negate accept  org.aspectj.apache.bcel.generic.IF_ICMPEQ  ","PR72157":"     ","IOR":" accept  org.aspectj.apache.bcel.generic.IOR  ","TypePatternMatcherTest":" needToSkipPointcutParserTests testMatching setUp tpm needToSkip org.aspectj.weaver.tools.TypePatternMatcherTest  ReflectionBasedReferenceTypeDelegate.class.getClassLoader());\r\n ","TypeVariablePatternList":" getTypeVariablePatterns lookupTypeVariable isEmpty write read accept traverse EMPTY patterns org.aspectj.weaver.patterns.TypeVariablePatternList  redundant but safe to read location for EMPTY\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","HandlerPointcut":" couldMatchKinds fastMatch matchInternal parameterizeWith equals hashCode toString write read resolveBindings findResidueInternal concretize1 accept exceptionType MATCH_KINDS org.aspectj.weaver.patterns.HandlerPointcut  ??? should be able to do better by finding all referenced types in type\r\n  we know we have exactly one parameter since we're checking an exception handler\r\n  no parameterized or generic types for handler\r\n  list in capturing type identifiers.\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Test1CP":" main  circle.Test1CP circle.Base circle.Type  ","FindShowError":"     ","CharacterFlyweight":" print print c c ca.ubc.cs.spl.aspectPatterns.examples.flyweight.aspectj.CharacterFlyweight ca.ubc.cs.spl.aspectPatterns.examples.flyweight.java.CharacterFlyweight  ","RequestDelegation":"     ","InnerPointcut":"     ","CovarianceTests":" suite getSpecFile testCOV001 testCOV002 testCOV003 testCOV004 testCOV005 testCOV006 testCOV007 testCOV008 testCOV009 testCOV010 testAJDKExamples verbose org.aspectj.systemtest.ajc150.CovarianceTests  ","PerClauseTest":" log main suite perSingleton testPerSingleton perTarget testPerTarget perCflowEntry perCflow testPerCflow testPerTypeWithin foo foo foo testPerThis foo s_log ataspectj.PerClauseTest  singleton is bound as soon as clinit\r\n  ok\r\n  calling singleton API will fail\r\n  this per\r\n  another per\r\n  ok\r\n  the aspect is bound to the executing thread\r\n  ok\r\n  no aspect bound yet\r\n  ok\r\n  still no aspect bound yet\r\n  ok\r\n  no aspect bound anymore since went OUT of the per clause\r\n  ok\r\n ","StructureModelTest":" main suite testRootForSourceFile testPointcutName testFileNodeFind testMainClassNodeInfo testModelIntegrity testModelIntegrityHelper testNoChildIsNull setUp tearDown CONFIG_FILE_PATH org.aspectj.ajde.StructureModelTest  TODO-path\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     AMC 21.01.2003 fixed for new source location in eclipse.org\r\n * ******************************************************************/\r\n","Test1CF":"   circle.Test1CF circle.Base circle.Type circle.DerivedI circle.IBottom  CE cyclic inheritance\r\n ","SimpleAround1":"     ","AdviceOrdering":"     ","InnerTest":"     ","StaticImports":" suite getSpecFile testImportStaticSystemDotOut  org.aspectj.systemtest.ajc150.StaticImports  ","InterTypeTests":" testITDImpl testITDField testITDCons testITDMethod interCons interMethod  org.aspectj.internal.lang.reflect.InterTypeTests  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","FinalInLoop":" main  FinalInLoop  ","UnlockAspect1":"     ","AAA":"     ","TimingSimulation":" main report  telecom.TimingSimulation  /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n*/\r\n","AtAjAttributes":" getArgumentNames acceptAttribute readAj5ClassAttributes readAj5MethodAttributes readAj5FieldAttributes handleAspectAnnotation parsePerClausePointcut handlePrecedenceAnnotation handleDeclareParentsAnnotation handleBeforeAnnotation handleAfterAnnotation handleAfterReturningAnnotation handleAfterThrowingAnnotation handleAroundAnnotation handlePointcutAnnotation handleDeclareErrorOrWarningAnnotation setDeclareErrorOrWarningLocation methodToString fieldToString extractBindings extractBindings extractExtraArgument extractExtraArgument getAnnotation getAnnotationElement getMethodArgumentNamesAsInSource getEnclosingType makeSourceLocation lookupType getPointcut isNullOrEmpty setIgnoreUnboundBindingNames reportError reportWarning parsePointcut hasIf parseTypePattern getFormalName getFormalName EMPTY_LIST EMPTY_STRINGS VALUE POINTCUT THROWING RETURNING STRING_DESC ajAttributes enclosingType context handler m_argumentNamesLazy method bMethod field bField name indexOnStack m_enclosingType m_sourceContext m_pointcutUnresolved m_binding m_lazyPointcut formalName formalName org.aspectj.weaver.bcel.AtAjAttributes  FIXME AV - 1.5 feature limitation, kick after implemented\r\n  TODO AV - if put outside the if isCodeStyleAspect then we would enable mix style\r\n  we don't need to look for several attribute occurence since it cannot happen as per JSR175\r\n  there can only be one RuntimeVisible bytecode attribute\r\n  bypass what we have read\r\n  basic semantic check\r\n  the following block will not detect @Pointcut in non @Aspect types for optimization purpose\r\n  already dealt with by ajc...\r\n  FIXME AVASM\r\n  there can only be one RuntimeVisible bytecode attribute\r\n  FIXME asc should check we aren't adding multiple versions... will do once I get the tests passing again...\r\n  we don't need to look in super class, the pointcut reference in the grammar will do it\r\n  already dealt with by ajc...\r\n  FIXME alex optimize, this method struct will gets recreated for advice extraction\r\n  go ahead\r\n  semantic check - must be in an @Aspect [remove if previous block bypassed in advance]\r\n  there can only be one RuntimeVisible bytecode attribute\r\n  code style declare error   already dealt with by ajc...\r\n  be too silent.\r\n  there can only be one RuntimeVisible bytecode attribute\r\n  go ahead\r\n  semantic check - must be in an @Aspect [remove if previous block bypassed in advance]\r\n  go ahead\r\n  semantic check - advice must be public\r\n  go ahead\r\n  semantic check - advice must not be static\r\n  go ahead\r\n  semantic check for non around advice must return void\r\n  Note: field annotation are for ITD and DEOW - processed at class level directly\r\n  semantic check for inheritance (only one level up)\r\n  empty value means singleton unless inherited\r\n  struct.context.getOffset(), struct.context.getOffset()+1);  FIXME asc see related comment way about about the version...\r\n  so we prepare to do it later...\r\n  could not parse it, ignore the aspect\r\n  could not parse the @AJ perclause - fallback to singleton and issue an error\r\n  we could not parse the pointcut\r\n  we could not parse the type pattern\r\n  , ResolvedPointcutDefinition preResolvedPointcut) {\r\n  first add the declare implements like\r\n  resolves the parent and child parts of the decp\r\n  eg. '@Coloured *' will change from a WildTypePattern to an 'AnyWithAnnotationTypePattern' after this resolution\r\n  not ideal...\r\n  do we have a defaultImpl=xxx.class (ie implementation)\r\n  check public no arg ctor\r\n  then iterate on field interface hierarchy (not object)\r\n  non marker interface with no default impl provided\r\n  prototyped\r\n  a field hosting the mixin in the target type\r\n  this  joinpoint, staticJoinpoint binding\r\n  parse error\r\n  FIXME AVASM\r\n  this  joinpoint, staticJoinpoint binding\r\n  parse error\r\n  FIXME AVASM\r\n  extract the pointcut and returned type  check that thrownFormal exists as the last parameter in the advice\r\n  exclude the return binding from the pointcut binding since it is an extraArg binding\r\n  joinpoint, staticJoinpoint binding\r\n  return binding\r\n  parse error\r\n  FIXME AVASM\r\n  extract the pointcut and throwned type  check that thrownFormal exists as the last parameter in the advice\r\n  exclude the throwned binding from the pointcut binding since it is an extraArg binding\r\n  joinpoint, staticJoinpoint binding\r\n  return binding\r\n  parse error\r\n  FIXME AVASM\r\n  this  joinpoint, staticJoinpoint binding\r\n  parse error\r\n  FIXME AVASM\r\n  no need to stop\r\n  semantic check: the method must return void, or be \"public static boolean\" for if() support\r\n  no need to stop\r\n  semantic check: the method must not throw anything\r\n  this  since for it to be resolved, we will need other pointcuts to be registered as well\r\n  parse error\r\n  FIXME AVASM !! bMethod is null here..\r\n  stop\r\n  can be null for abstract pointcut\r\n  do not resolve binding now but lazily\r\n  cannot parse pointcut\r\n  cannot parse pointcut\r\n  assert debug info was here\r\n  continue;  f.e. when applying advice on advice etc\r\n  FIXME alex deal with exclude index\r\n  sort by index\r\n  prefixes so that we can find types in the same package\r\n  bug 126560\r\n  TODO is it likely to fail in a bad way if f.e. this(jp) etc ?\r\n  FIXME -1,-1 is not good enough\r\n  FIXME -1,-1 is not good enough\r\n ","Hoo":" intStringVar intString integerVar  org.xyz.Hoo  ","MyInterface":" m foo  pack.MyInterface a.MyInterface  ","QueueNormal":" insert getFirst removeFirst insert getFirst removeFirst items first last items first last ca.ubc.cs.spl.aspectPatterns.examples.state.aspectj.QueueNormal ca.ubc.cs.spl.aspectPatterns.examples.state.java.QueueNormal  Inserts a new Object into the queue\r\n  Returns the first element in the queue\r\n  Removes the first element from the queue\r\n ","GenericSignatureParserTest":" testSimpleTokenize testTokenizeWithWildTypeArguments testTokenizeWithExtendsTypeArguments testTokenizeWithSuperTypeArguments testTokenizeArrayType testTokenizeFormalTypeParameters testParseClassSignatureSimple testParseClassSignatureTypeArgs testParseClassSignatureTheFullMonty testClassSignatureParsingInJDK testFieldSignatureParsingClassType testFieldSignatureParsingArrayType testFieldSignatureParsingTypeVariable testSimpleMethodSignatureParsing testMethodSignatureTypeParams testMethodSignatureGenericReturn testMethodSignatureThrows testMethodSignaturePrimitiveParams testMethodSignatureParsingInJDK testFullyQualifiedSuperclassAfterTypeParams testPr107784 assertEquals tokensToString setUp parser org.aspectj.apache.bcel.classfile.tests.GenericSignatureParserTest  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer     initial implementation \r\n * ******************************************************************/\r\n","NoLang":"   java.lang.Object java.lang.String  ","ObjectFieldOnInterface":"     ","SourceLocationWithinExpr":"     ","TraceFactory":" getTrace getTraceFactory getBoolean DEBUG_PROPERTY FACTORY_PROPERTY DEFAULT_FACTORY_NAME debug instance org.aspectj.weaver.tools.TraceFactory  /*\r\n\t\t * Allow user to override default behaviour or specify their own factory \r\n\t\t */\r\n /*\r\n\t\t * Try to load external trace infrastructure using supplied factories\r\n\t\t */\r\n /*\r\n\t\t * Use default trace \r\n\t\t */\r\n","ExceptionsCF":"     ","CyclicClassInheritance":"     ","InterTypeMemberFinder":" getField resolveConflicts isVisible methods addPublicITDSFrom getMethods getExactMethod matches matches addInterTypeField addInterTypeMethod interTypeFields interTypeMethods sourceTypeBinding org.aspectj.ajdt.internal.compiler.lookup.InterTypeMemberFinder  XXX may need to get the correct value for second parameter in the future (see #55341)\r\n  XXX need dominates check on aspects\r\n  at least package visible\r\n    PLUS: any public ITDs made on interfaces that I implement\r\n  XXX conflicts\r\n  An intertype declaration may override an inherited member (Bug#50776)\r\n  \r\n  System.err.println(\"adding: \" + binding + \" to \" + this);\r\n  this will return fast if its already been done.\r\n  this always means we should remove the existing method\r\n  System.err.println(\"    left: \" + Arrays.asList(sourceTypeBinding.methods));\r\n  System.err.println(\"adding: \" + binding + \" to \" + sourceTypeBinding);\r\n /* *******************************************************************\r\n * Copyright (c) 2002,2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n *     Andy Clement - upgrade to support fields targetting generic types\r\n * ******************************************************************/\r\n","AfterWeaveTestCase":" testAfter  org.aspectj.weaver.bcel.AfterWeaveTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","OverridingPointcuts":"     ","ExceptionsCP":"     ","NEWARRAY":" dump getTypecode getType toString initFromFile getExceptions accept type org.aspectj.apache.bcel.generic.NEWARRAY  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","LocalVariableTypeTableTest":" setUp testLocalVariableTypeTableAttribute tearDown  org.aspectj.apache.bcel.classfile.tests.LocalVariableTypeTableTest  /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation \r\n * ******************************************************************/\r\n","AspectMain":" main  AspectMain  aspect advises this invocation, adds \"aspect\" event\r\n ","AjcHarnessTestsUsingJUnit":" suite setUp tearDown  org.aspectj.testing.drivers.AjcHarnessTestsUsingJUnit  /* (non-Javadoc)\r\n\t * @see junit.framework.TestCase#setUp()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see junit.framework.TestCase#tearDown()\r\n\t */\r\n /*\r\n * Run harness tests as JUnit test suites.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation\r\n * ******************************************************************/\r\n","InvocationJoinPointClosure":" getStaticPart getArguments  org.aspectj.aopalliance.InvocationJoinPointClosure  /* (non-Javadoc)\r\n\t * @see org.aopalliance.intercept.Joinpoint#getStaticPart()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aopalliance.intercept.Invocation#getArguments()\r\n\t */\r\n","ErroneousExceptionConversion1":"     ","BackdoorMethods":"     ","AsmBuilderTest":" suite testNullHandlingOfVisit builder org.aspectj.ajdt.internal.core.builder.AsmBuilderTest  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n  builder.internalBuild(new CompilationResult(cu, 0, 0, 0), null);\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","PrivatePointcutCE":"     ","InnerMethods":"     ","Repository":" getRepository setRepository lookupClass lookupClass lookupClassFile clearCache addClass removeClass removeClass getSuperClasses getSuperClasses getInterfaces getInterfaces instanceOf instanceOf instanceOf instanceOf implementationOf implementationOf implementationOf implementationOf storeClass removeClass findClass loadClass loadClass clear _repository org.aspectj.apache.bcel.Repository org.aspectj.apache.bcel.util.Repository  ","StaticAdviceOnAbstract":"     ","StaticInnerInterfaces_PR386":" main go go go go j StaticInnerInterfaces_PR386 B A C D  ","StaticMembers_PR421":" main realMain  StaticMembers_PR421  --- Statics\r\n  Statics.NestedStaticClass\r\n  Statics.NestedStaticInterface\r\n  Statics.NestedInterface\r\n  --- p1.P1Statics\r\n  p1.P1Statics.NestedStaticClass\r\n  p1.P1Statics.NestedStaticInterface\r\n  p1.P1Statics.NestedInterface\r\n  --- p1.p2.P1P2Statics\r\n  p1.p2.P1P2Statics.NestedStaticClass\r\n  p1.p2.P1P2Statics.NestedStaticInterface\r\n  p1.p2.P1P2Statics.NestedInterface\r\n ","ResolvingArrayParameters":" main realMain m wants f f f f f f f f f f f f f f f f a f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f f  ResolvingArrayParameters C_boolean C_byte C_char C_short C_int C_long C_float C_double CC_boolean CC_byte CC_char CC_short CC_int CC_long CC_float CC_double A C_byte_double_boolean C_char_double_boolean C_short_double_boolean C_int_double_boolean C_long_double_boolean C_float_double_boolean C_boolean_double_byte C_char_double_byte C_short_double_byte C_int_double_byte C_long_double_byte C_float_double_byte C_boolean_double_char C_byte_double_char C_short_double_char C_int_double_char C_long_double_char C_float_double_char C_boolean_double_short C_byte_double_short C_char_double_short C_int_double_short C_long_double_short C_float_double_short C_boolean_double_int C_byte_double_int C_char_double_int C_short_double_int C_long_double_int C_float_double_int C_boolean_double_long C_byte_double_long C_char_double_long C_short_double_long C_int_double_long C_float_double_long C_boolean_double_float C_byte_double_float C_char_double_float C_short_double_float C_int_double_float C_long_double_float C_byte_float_boolean C_char_float_boolean C_short_float_boolean C_int_float_boolean C_long_float_boolean C_double_float_boolean C_boolean_float_byte C_char_float_byte C_short_float_byte C_int_float_byte C_long_float_byte C_double_float_byte C_boolean_float_char C_byte_float_char C_short_float_char C_int_float_char C_long_float_char C_double_float_char C_boolean_float_short C_byte_float_short C_char_float_short C_int_float_short C_long_float_short C_double_float_short C_boolean_float_int C_byte_float_int C_char_float_int C_short_float_int C_long_float_int C_double_float_int C_boolean_float_long C_byte_float_long C_char_float_long C_short_float_long C_long_float_long C_double_float_long C_boolean_float_double C_byte_float_double C_char_float_double C_short_float_double C_int_float_double C_long_float_double C_byte_int_boolean C_char_int_boolean C_short_int_boolean C_long_int_boolean C_float_int_boolean C_double_int_boolean C_boolean_int_byte C_char_int_byte C_short_int_byte C_long_int_byte C_float_int_byte C_double_int_byte C_boolean_int_char C_byte_int_char C_short_int_char C_long_int_char C_float_int_char C_double_int_char C_boolean_int_short C_byte_int_short C_char_int_short C_long_int_short C_float_int_short C_double_int_short C_boolean_int_long C_byte_int_long C_char_int_long C_short_int_long C_float_int_long C_double_int_long C_boolean_int_float C_byte_int_float C_char_int_float C_short_int_float C_long_int_float C_double_int_float C_boolean_int_double C_byte_int_double C_char_int_double C_short_int_double C_long_int_double C_float_int_double C_byte_short_boolean C_char_short_boolean C_int_short_boolean C_long_short_boolean C_float_short_boolean C_double_short_boolean C_boolean_short_byte C_char_short_byte C_int_short_byte C_long_short_byte C_float_short_byte C_double_short_byte C_boolean_short_char C_byte_short_char C_int_short_char C_long_short_char C_float_short_char C_double_short_char C_boolean_short_int C_byte_short_int C_char_short_int C_long_short_int C_float_short_int C_double_short_int C_boolean_short_long C_byte_short_long C_char_short_long C_int_short_long C_float_short_long C_double_short_long C_boolean_short_float C_byte_short_float C_char_short_float C_int_short_float C_long_short_float C_double_short_float C_boolean_short_double C_byte_short_double C_char_short_double C_int_short_double C_long_short_double C_float_short_double C_byte_char_boolean C_short_char_boolean C_int_char_boolean C_long_char_boolean C_float_char_boolean C_double_char_boolean C_boolean_char_byte C_short_char_byte C_int_char_byte C_long_char_byte C_float_char_byte C_double_char_byte C_boolean_char_short C_byte_char_short C_int_char_short C_long_char_short C_float_char_short C_double_char_short C_boolean_char_int C_byte_char_int C_short_char_int C_long_char_int C_float_char_int C_double_char_int C_boolean_char_long C_byte_char_long C_short_char_long C_int_char_long C_float_char_long C_double_char_long C_boolean_char_float C_byte_char_float C_short_char_float C_int_char_float C_long_char_float C_double_char_float C_boolean_char_double C_byte_char_double C_short_char_double C_int_char_double C_long_char_double C_float_char_double C_char_byte_boolean C_short_byte_boolean C_int_byte_boolean C_long_byte_boolean C_float_byte_boolean C_double_byte_boolean C_boolean_byte_char C_short_byte_char C_int_byte_char C_long_byte_char C_float_byte_char C_double_byte_char C_boolean_byte_short C_char_byte_short C_int_byte_short C_long_byte_short C_float_byte_short C_double_byte_short C_boolean_byte_int C_char_byte_int C_short_byte_int C_long_byte_int C_float_byte_int C_double_byte_int C_boolean_byte_long C_char_byte_long C_short_byte_long C_int_byte_long C_float_byte_long C_double_byte_long C_boolean_byte_float C_char_byte_float C_short_byte_float C_int_byte_float C_long_byte_float C_double_byte_float C_boolean_byte_double C_char_byte_double C_short_byte_double C_int_byte_double C_long_byte_double C_float_byte_double C_byte_boolean_double C_char_boolean_double C_short_boolean_double C_int_boolean_double C_long_boolean_double C_float_boolean_double C_byte_boolean_float C_char_boolean_float C_short_boolean_float C_int_boolean_float C_long_boolean_float C_double_boolean_float C_byte_boolean_long C_char_boolean_long C_short_boolean_long C_int_boolean_long C_float_boolean_long C_double_boolean_long C_byte_boolean_int C_char_boolean_int C_short_boolean_int C_long_boolean_int C_float_boolean_int C_double_boolean_int C_byte_boolean_short C_char_boolean_short C_int_boolean_short C_long_boolean_short C_float_boolean_short C_double_boolean_short C_byte_boolean_char C_short_boolean_char C_int_boolean_char C_long_boolean_char C_float_boolean_char C_double_boolean_char C_char_boolean_byte C_short_boolean_byte C_int_boolean_byte C_long_boolean_byte C_float_boolean_byte C_double_boolean_byte C_boolean_double C_byte_double C_char_double C_short_double C_int_double C_long_double C_float_double C_boolean_float C_byte_float C_char_float C_short_float C_int_float C_long_float C_double_float C_boolean_long C_byte_long C_char_long C_short_long C_int_long C_float_long C_double_long C_boolean_int C_byte_int C_char_int C_short_int C_long_int C_float_int C_double_int C_boolean_short C_byte_short C_char_short C_int_short C_long_short C_float_short C_double_short C_boolean_char C_byte_char C_short_char C_int_char C_long_char C_float_char C_double_char C_boolean_byte C_char_byte C_short_byte C_int_byte C_long_byte C_float_byte C_double_byte C_byte_boolean C_char_boolean C_short_boolean C_int_boolean C_long_boolean C_float_boolean C_double_boolean  changed from C_boolean... to avoid having to expect one for each subclass\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  XX\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  --------------------------------------------------\r\n  start-changed\r\n  start-new-block\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  ------------------------------------------------------------\r\n  --------------------------------------------------\r\n /*\r\n * Not finding methods in super- and sub-classes with\r\n * primitive parameter types.\r\n *\r\n * For example:\r\n *\r\n * pureJava\\ResolvingArrayParameters.java:991:9: two applicable and accessible meth\r\n * ods are equally specific: public void C_float_short_long.f(float[]) and public v\r\n * oid C_long.f(long[])\r\n *       new C_float_short_long().f(longs);\r\n *\r\n */\r\n","CflowBelowStackTest":" testMe main suite inTestClass beforeMethodExecution beforeExecutingTestMethod afterExecutingTestMethod coverage ataspectj.bugs.CflowBelowStackTest  ","StaticTypeInIf":"     ","VoidFieldDeclarationCE":"     ","SimpleAnnotation4":"     ","SimpleAnnotation3":"     ","SimpleAnnotation2":"     ","RET":" dump setWide initFromFile getIndex setIndex toString getType accept wide index org.aspectj.apache.bcel.generic.RET  index to local variable containg the return address\r\n  May set wide as side effect\r\n  Including the wide byte\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","BasicTokenSource":" getIndex setIndex next peek peek toString makeTokenSource makeString makeString getSourceContext setSourceContext index tokens sourceContext org.aspectj.weaver.patterns.BasicTokenSource  could be '...'\r\n  '...'\r\n  fall-through\r\n  Convenience, maybe just for testing\r\n  slightly inefficient ;-)\r\n  slightly inefficient ;-)\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AmbiguousClassReference":" main  ambiguousClass.AmbiguousClassReference ambiguousClass.AmbiguousReferent AmbiguousClassReference  CE 5 \"Duplicate type name\"\r\n ","RelationshipMap":" setHierarchy get get get get get remove removeAll put put put clear getEntries serialVersionUID org.aspectj.asm.internal.RelationshipMap  after (either the kind or the name or the dynamictests setting don't match)\r\n  bug?\r\n  Is this a bug, will it give us double entries?\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","ATHROW":" getExceptions accept  org.aspectj.apache.bcel.generic.ATHROW  ","StrictFPAdvice":"     ","MemberTestCase15":" testCanBeParameterizedRegularMethod testCanBeParameterizedGenericMethod testCanBeParameterizedMethodInGenericType testCanBeParameterizedRegularMethod testCanBeParameterizedGenericMethod testCanBeParameterizedMethodInGenericType  org.aspectj.weaver.MemberTestCase15 org.aspectj.weaver.MemberTestCase15  System.out.println(\"got it\");\r\n  for < 1.5\r\n  System.out.println(\"got it\");\r\n  for < 1.5\r\n  System.out.println(\"got it\");\r\n  System.out.println(\"got it\");\r\n  for < 1.5\r\n  System.out.println(\"got it\");\r\n  for < 1.5\r\n  System.out.println(\"got it\");\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","Fluffy":" doIt  fluffy.Fluffy  ","InheritedThrows":"     ","DocException":"  serialVersionUID org.aspectj.tools.ajdoc.DocException  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andrew Huff     initial implementation \r\n * ******************************************************************/\r\n","PR83645":"     ","InstructionConstants":"  NOP ACONST_NULL ICONST_M1 ICONST_0 ICONST_1 ICONST_2 ICONST_3 ICONST_4 ICONST_5 LCONST_0 LCONST_1 FCONST_0 FCONST_1 FCONST_2 DCONST_0 DCONST_1 IALOAD LALOAD FALOAD DALOAD AALOAD BALOAD CALOAD SALOAD IASTORE LASTORE FASTORE DASTORE AASTORE BASTORE CASTORE SASTORE POP POP2 DUP DUP_X1 DUP_X2 DUP2 DUP2_X1 DUP2_X2 SWAP IADD LADD FADD DADD ISUB LSUB FSUB DSUB IMUL LMUL FMUL DMUL IDIV LDIV FDIV DDIV IREM LREM FREM DREM INEG LNEG FNEG DNEG ISHL LSHL ISHR LSHR IUSHR LUSHR IAND LAND IOR LOR IXOR LXOR I2L I2F I2D L2I L2F L2D F2I F2L F2D D2I D2L D2F I2B I2C I2S LCMP FCMPL FCMPG DCMPL DCMPG IRETURN LRETURN FRETURN DRETURN ARETURN RETURN ARRAYLENGTH ATHROW MONITORENTER MONITOREXIT THIS ALOAD_0 ALOAD_1 ALOAD_2 ILOAD_0 ILOAD_1 ILOAD_2 ASTORE_0 ASTORE_1 ASTORE_2 ISTORE_0 ISTORE_1 ISTORE_2 INSTRUCTIONS bla org.aspectj.apache.bcel.generic.InstructionConstants  ","LONG_Upper":" theInstance singleInstance org.aspectj.apache.bcel.verifier.statics.LONG_Upper  ","AfterReturningTest":" main afterJP afterJPSP afterJPESP afterJPESP2 afterJP2 start stop  AfterReturningTest B1  include \"JoinPoint\" in the argument list\r\n  include \"JoinPoint.StaticPart\" in the argument list\r\n  include \"JoinPoint.EnclosingStaticPart\" in the argument list\r\n  include \"JoinPoint and JoinPoint.EnclosingStaticPart\" in the argument list\r\n  make sure it still works if \"JoinPoint\" is second in the argument list\r\n ","Model5Tests":" suite getSpecFile  org.aspectj.systemtest.model.Model5Tests  'expected model' files.\r\n  Switch this to true if you want to debug the comparison\r\n   ","AjASTConverter":" convert convert convert updateString convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convert convertToFieldDeclaration convertToVariableDeclarationExpression convertToSingleVariableDeclaration convertToVariableDeclarationFragment convertToVariableDeclarationFragment convertToVariableDeclarationFragment convertToVariableDeclarationStatement convertType createComment createFakeEmptyStatement createModifier getOperatorFor getPrimitiveTypeCode isPrimitiveType lookupForScopes lookupScope recordName recordNodes recordNodes recordPendingNameScopeResolution recordPendingThisExpressionScopeResolution trimWhiteSpacesAndComments retrieveEndingSemiColonPosition retrieveEndOfDimensionsPosition retrieveEndOfElementTypeNamePosition retrieveEndOfRightParenthesisPosition retrieveExtraDimension retrieveIdentifierAndSetPositions retrieveIdentifierEndPosition retrievePositionBeforeNextCommaOrSemiColon retrieveProperRightBracketPosition retrieveRightBraceOrSemiColonPosition retrieveRightBrace retrieveRightBracketPosition retrieveSemiColonPosition retrieveStartBlockPosition retrieveStartingCatchPosition setAST setModifiers setModifiers setModifiers setModifiers setModifiers setModifiers setModifiers setModifiers setModifiers setModifiers setModifiers setModifiers setModifiers setModifiers setModifiers setQualifiedNameNameAndSourceRanges setQualifiedNameNameAndSourceRanges setTypeNameForAnnotation setTypeForField setTypeForAroundAdviceDeclaration setTypeForMethodDeclaration setTypeForMethodDeclaration setTypeForSingleVariableDeclaration setTypeForVariableDeclarationExpression setTypeForVariableDeclarationStatement updateInnerPositions  org.aspectj.org.eclipse.jdt.core.dom.AjASTConverter  ajh02: method added\r\n  set the returnType\r\n  get the positions of the right parenthesis\r\n  set its javadoc, parameters, throws, pointcut and body\r\n  syntax error in this advice declaration\r\n  try to get the best end position\r\n  The javadoc comment is now got from list store in compilation unit declaration\r\n    the modifiers are not set on the correct object.\r\n  for ITD's use the declaredSelector\r\n  get the positions of the right parenthesis\r\n  set the return type to VOID\r\n  try to get the best end position\r\n  syntax error in this method declaration\r\n  The javadoc comment is now got from list store in compilation unit declaration\r\n  is this line needed?\r\n  ajh02: is this line needed?\r\n  ajh02: method added\r\n  The javadoc comment is now got from list store in compilation unit declaration\r\n  rather than a huge if.elseif..elseif.. thing\r\n  ajh02: default stub until I make all the concrete PointcutDesignator types\r\n  the different weaver TypePattern's\r\n  The javadoc comment is now got from list store in compilation unit declaration\r\n  remove the ellipsis from the type source end\r\n  we can create a new FieldDeclaration\r\n  We retrieve the existing fieldDeclaration to add the new VariableDeclarationFragment\r\n  initializer.setJavadoc(convert(oldInitializer.javadoc));\r\n  Parse comments\r\n  There is no node corresponding to the package declaration\r\n  we know that we have at least one initialization\r\n  resolve member and method references binding\r\n  resolve member and method references binding\r\n  cannot be reached\r\n  There is no source associated with an implicit this\r\n    the type references level.\r\n  QualifiedName\r\n  ajh02: method added\r\n  this is either an ArrayTypeReference or a SingleTypeReference\r\n  PR http:  need to find out if this is an array type of primitive types or not\r\n  store keys for inner types\r\n  Create comment node\r\n  Line comment have negative start and end position\r\n  Block comment have positive start position\r\n  Javadoc comments have positive end position\r\n  cannot be reached\r\n  resolve member and method references binding\r\n  get compiler node and record nodes\r\n  get compiler node and record nodes\r\n  get type ref\r\n  TODO (frederic) remove following line to fix bug https:  record name and qualifier\r\n  record nodes\r\n  Resolve parameters\r\n  get compiler node and record nodes\r\n  Replace qualifier to have all nodes recorded\r\n  166\r\n  166\r\n  110\r\n  110\r\n  225\r\n  we have an annotation\r\n  ajh02: method added\r\n  ajh02: method added\r\n  we have an annotation\r\n  we have an annotation\r\n  remove AccInterface flags\r\n  we have an annotation\r\n  we have an annotation\r\n  QualifiedName\r\n  update positions of the component types of the array type\r\n  cut the child loose from its parent (without creating garbage)\r\n  the dimensions are after the name so the type of the fieldDeclaration is a simpleType\r\n  cut the child loose from its parent (without creating garbage)\r\n  ajh02: method added\r\n  cut the child loose from its parent (without creating garbage)\r\n  the dimensions are after the name so the type of the fieldDeclaration is a simpleType\r\n  cut the child loose from its parent (without creating garbage)\r\n  cut the child loose from its parent (without creating garbage)\r\n  the dimensions are after the name so the type of the fieldDeclaration is a simpleType\r\n  cut the child loose from its parent (without creating garbage)\r\n  cut the child loose from its parent (without creating garbage)\r\n  the dimensions are after the name so the type of the fieldDeclaration is a simpleType\r\n  cut the child loose from its parent (without creating garbage)\r\n  cut the child loose from its parent (without creating garbage)\r\n  the dimensions are after the name so the type of the fieldDeclaration is a simpleType\r\n  cut the child loose from its parent (without creating garbage)\r\n  need to set positions for intermediate array type see 42839\r\n /*\r\n\t\t\t\t\t * start or end can be equal to -1 if we have an interface's method.\r\n\t\t\t\t\t */\r\n /*\r\n\t\t\t\t * start or end can be equal to -1 if we have an interface's method.\r\n\t\t\t\t */\r\n /*\r\n\t\t\t\t\t * start or end can be equal to -1 if we have an interface's method.\r\n\t\t\t\t\t */\r\n /*\r\n\t\t\t\t * start or end can be equal to -1 if we have an interface's method.\r\n\t\t\t\t */\r\n /*\r\n\t\t * There is extra work to do to set the proper type positions\r\n\t\t * See PR http://bugs.eclipse.org/bugs/show_bug.cgi?id=23284\r\n\t\t */\r\n /*\r\n\t * Internal use only\r\n\t * Used to convert class body declarations\r\n\t */\r\n /*\r\n\t\t * There is extra work to do to set the proper type positions\r\n\t\t * See PR http://bugs.eclipse.org/bugs/show_bug.cgi?id=23284\r\n\t\t */\r\n /*\r\n\t\t\t\t\t\t * if we find something else than a whitespace or a comment,\r\n\t\t\t\t\t\t * then we reset the trimRigthPosition to the expression\r\n\t\t\t\t\t\t * source end.\r\n\t\t\t\t\t\t */\r\n /*\r\n\t * This method is used to set the right end position for expression\r\n\t * statement. The actual AST nodes don't include the trailing semicolon.\r\n\t * This method fixes the length of the corresponding node.\r\n\t */\r\n","BindingPattern":" getFormalIndex  org.aspectj.weaver.patterns.BindingPattern  /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","AroundA":"     ","PointBoundsChecking":"     ","LoadClass":" getLoadClassType getType  org.aspectj.apache.bcel.generic.LoadClass  ","INEG":" accept  org.aspectj.apache.bcel.generic.INEG  ","Color":"     ","ProgramElement":" getModifiers getAccessibility setDeclaringType getDeclaringType getPackageName getKind isCode getSourceLocation setSourceLocation getMessage setMessage getParent setParent isMemberKind setRunnable isRunnable isImplementor setImplementor isOverrider setOverrider getRelations setRelations getFormalComment toString genModifiers genAccessibility getBytecodeName getBytecodeSignature setBytecodeName setBytecodeSignature getSourceSignature setSourceSignature setKind setCorrespondingType getCorrespondingType getCorrespondingType getName getChildren setChildren addChild addChild removeChild setName walk toLongString setModifiers toSignatureString toSignatureString toLinkLabelString toLinkLabelString toLabelString toLabelString getHandleIdentifier getHandleIdentifier setHandleIdentifier getParameterNames setParameterNames getParameterTypes getParameterSignatures setParameterSignatures getDetails setDetails setFormalComment cacheByHandle setExtraInfo getExtraInfo serialVersionUID shortITDNames UNDEFINED AccPublic AccPrivate AccProtected AccPrivileged AccStatic AccFinal AccSynchronized AccVolatile AccTransient AccNative AccInterface AccAbstract AccStrictfp name kind parent children kvpairs sourceLocation modifiers handle depth org.aspectj.asm.internal.ProgramElement  XXX is this right?\r\n  if (comment!=null && comment.length()>0) formalComment = comment;\r\n  this.declaringType = declaringType;\r\n  this.packageName = packageName;\r\n  if (comment!=null && comment.length()>0) formalComment = comment;\r\n  Accessibility accessibility,\r\n  accessibility\r\n  assumption that not having one means \"\" is at HtmlDecorator line 111\r\n  know the location when we built the node but we learned it later on?\r\n  if (s==null) return UNDEFINED;\r\n  System.err.println(name+\" SourceSig=>\"+string);\r\n  if (name.indexOf('.')!=-1) return toLabelString().substring(name.indexOf('.')+1);\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n *     Andy Clement    Extensions for better IDE representation\r\n * ******************************************************************/\r\n","ConcreteOutput":" print print  ca.ubc.cs.spl.aspectPatterns.examples.decorator.aspectj.ConcreteOutput ca.ubc.cs.spl.aspectPatterns.examples.decorator.java.ConcreteOutput  ","BcelGenericSignatureToTypeXConverter":" classTypeSignature2TypeX classTypeSignature2TypeX fieldTypeSignature2TypeX fieldTypeSignature2TypeX formalTypeParameter2TypeVariable formalTypeParameter2TypeVariable typeArgument2TypeX typeSignature2TypeX typeSignature2TypeX typeVariableSignature2TypeX fixUpCircularDependencies toString resolve ftpToBeSubstituted org.aspectj.weaver.bcel.BcelGenericSignatureToTypeXConverter  first build the 'raw type' signature\r\n  I *think* we only need to worry about the 'right-most' type...\r\n  we have a non-parameterized type\r\n  type arguments may be array types, class types, or typevariable types\r\n  'dumb' typevariablereference.\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","InvalidNewQualifier9CE":" test  InvalidNewQualifier9CE Outer OuterInterface OuterOuter  CE 9 new qualification bad\r\n  new OuterOuter.Inner(){}.new OuterOuter.Inner.I(){};   ok\r\n ","Overriding":"     ","AstUtil":" addMethodBinding addMethodDeclaration makeFinalArgument makeTypeReference makeNameReference makeReturnStatement makeMethodDeclaration setStatements makeLocalVariableReference makeResolvedLocalVariableReference makePublic makePackageVisible getCompilationUnitScope generateParameterLoads generateReturn makeMangledName makeAjcMangledName makeAjcMangledName getAjSyntheticAttribute makeLongPos getCompoundName insert insert copyArguments remove slotsNeeded replaceMethodBinding PREFIX org.aspectj.ajdt.internal.compiler.ast.AstUtil  XXX encode start and end location\r\n  ???\r\n  ??? does this work for primitives\r\n  clear bits\r\n  clear bits\r\n  XXX this could be inconsistent for wierd case, i.e. a class named \"java_lang_String\"\r\n  XXX not efficient\r\n  ??? we're not sure whether or not copying these is okay\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ClassPreProcessorAgentAdapter":" transform s_preProcessor org.aspectj.weaver.loadtime.ClassPreProcessorAgentAdapter  FIXME av for now we skip hotswap. We should think more about that\r\n ","ClassTwo":" main printMessage  ClassTwo  ","EnclosingMethodAttributeTest":" setUp testCheckMethodLevelNamedInnerClass testCheckClassLevelNamedInnerClass testAttributeSerializtion tearDown  org.aspectj.apache.bcel.classfile.tests.EnclosingMethodAttributeTest  Read in the class\r\n  Write it out\r\n  Read in the new version and check it is OK\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation \r\n * ******************************************************************/\r\n","CflowInitInAspectVariantsAfter":"     ","CflowOrderOriginal":"     ","ConstructorInvocationClosureTest":" testGetArguments testGetConstructor  org.aspectj.aopalliance.tests.ConstructorInvocationClosureTest  ","CPInstruction":" dump toString toString initFromFile getIndex setIndex getType index org.aspectj.apache.bcel.generic.CPInstruction  index to constant pool\r\n ","InterSuperReference":" resolveType  org.aspectj.ajdt.internal.compiler.ast.InterSuperReference  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","NullIdeErrorHandler":" handleWarning handleError handleError  org.aspectj.ajde.NullIdeErrorHandler  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * ******************************************************************/\r\n","DeclareInterfaceConstructor":"     ","SourceFile":" accept dump getSourceFileIndex setSourceFileIndex getSourceFileName toString copy sourcefile_index org.aspectj.apache.bcel.classfile.SourceFile  ","Colon":"     ","StackConsumer":" consumeStack  org.aspectj.apache.bcel.generic.StackConsumer  ","AbstractIndexWriter":" printClassInfo printMemberDesc  org.aspectj.tools.doclets.standard.AbstractIndexWriter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","CommonsTraceTest":" setUp testCommonsTrace testSetTraceEnabled  org.aspectj.weaver.CommonsTraceTest  ","NullIdeUIAdapter":" displayStatusInformation resetGUI debugTests org.aspectj.ajde.NullIdeUIAdapter  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","TryBlockRequiredCE":"     ","TypeBug":"     ","DuplicatedNames":"     ","ExecutionCflow":"     ","FigureElement":" incrXY move getBounds contains paint move getBounds contains paint move getBounds contains paint move getBounds contains paint move getBounds contains paint moveBy incrXY MIN_VALUE MAX_VALUE MIN_VALUE MAX_VALUE MIN_VALUE MAX_VALUE MIN_VALUE MAX_VALUE MAX_BOUNDS figures.FigureElement figures.Element figures.FigureElement figures.FigureElement figures.FigureElement figures.FigureElement figures.FigureElement figures.FigureElement figures.FigureElement figures.Element  /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /*\r\nCopyright (c) 2001-2002 Palo Alto Research Center Incorporated. All Rights Reserved.\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html\r\n *\r\n * Contributors:\r\n *     PARC     initial implementation\r\n * ******************************************************************/\r\n","StrayDot":"     ","AccountReport":" getAccountSummaries  services.account.AccountReport  ","GlobalStructureView":" getGlobalViewProperties toString viewProperties org.aspectj.ajde.ui.GlobalStructureView  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DeclareEoW":"     ","Colored":"     ","False_InvalidAbsoluteTypeName":"     ","_JoinpointProbe":"     ","ExceptionNames":" main test foo  ExceptionNames  ","IF_ICMPNE":" negate accept  org.aspectj.apache.bcel.generic.IF_ICMPNE  ","VersionedDataInputStream":" getMajorVersion getMinorVersion getBuildstamp setVersion version org.aspectj.weaver.VersionedDataInputStream  assume we are the latest unless something tells us otherwise...\r\n /* *******************************************************************\r\n * Copyright (c) 2005 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement           initial implementation\r\n * ******************************************************************/\r\n","HelloConstructionInterceptor":" construct runCount org.aspectj.aopalliance.tests.HelloConstructionInterceptor  /* (non-Javadoc)\r\n\t * @see org.aopalliance.intercept.ConstructorInterceptor#construct(org.aopalliance.intercept.ConstructorInvocation)\r\n\t */\r\n","ExtraClosingBrace":"     ","Import":" main  testPackage.Import  ","LocalVariableGen":" getLocalVariable setIndex getIndex setName getName setType getType getStart getEnd setStart setEnd updateTarget containsTarget equals toString clone index name type start end org.aspectj.apache.bcel.generic.LocalVariableGen  ","AnonymousSelfReference":"     ","OrgXYZAnnotation":"     ","VersionTest":" suite testVersionMatch setUp tearDown main testVersion ME org.aspectj.ajde.VersionTest org.aspectj.bridge.VersionTest  dev build, we can only test this on the build server.\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Example":" foo goo foo goo d d pkg.Example pkg.Example  ","DeclarePrecedenceDeclaration":" clone0 subtreeMatch0 accept0 internalModifiersProperty internalModifiers2Property internalJavadocProperty propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty internalGetChildListProperty typePatterns treeSize JAVADOC_PROPERTY TYPE_PATTERNS_LIST_PROPERTY PROPERTY_DESCRIPTORS_2_0 PROPERTY_DESCRIPTORS_3_0 typePatterns org.aspectj.org.eclipse.jdt.core.dom.DeclarePrecedenceDeclaration  $NON-NLS-1$\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  allow default implementation to flag the error\r\n  allow default implementation to flag the error\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - \r\n\t * therefore we don't do anything with this\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - \r\n\t * therefore we don't do anything with this\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on BodyDeclaration.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n","InterimCompilationResult":" result unwovenClassFiles fileName equals hashCode result unwovenClassFiles org.aspectj.ajdt.internal.compiler.InterimCompilationResult  longer term would be nice not to have two copies of\r\n ","AccessingInstanceFieldsStatically":"     ","WorkingTestMain":" main testOne example testExamples examplesDir org.aspectj.ajdt.internal.compiler.batch.WorkingTestMain  testExamples();\r\n  args.add(\"-1.3\");\r\n  CommandTestCase.printGenerated(\"..  don't run the gui\r\n  don't run the gui\r\n  don't run the gui\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Javadoc13":" makeRootDoc  org.aspectj.tools.ajdoc.rootmakers.Javadoc13  todo: options ignored in 13?\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Javadoc14":"     /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","MainReweavableLogging":" test1 test2 addJoinPoint main joinPoints ataspectj.ltwreweavable.MainReweavableLogging  and if the aspect is not declared then there should\r\n  if the aspect is declared there should not be an error\r\n ","SingletonProtocol":"     ","QueueEmpty":" insert getFirst removeFirst insert getFirst removeFirst  ca.ubc.cs.spl.aspectPatterns.examples.state.aspectj.QueueEmpty ca.ubc.cs.spl.aspectPatterns.examples.state.java.QueueEmpty  ","BadStaticCast":" foo  BadStaticCast  crash the compiler.\r\n ","TraceJoinPointsBase":"     ","MediatorProtocol":"     ","IteratorWrapper":" reset remove hasNext next getCurrent getNext toString lists iterators current next maxDepth currentLevel depth org.aspectj.testing.util.IteratorWrapper  one iterator is empty - never go\r\n  reset this level\r\n  empty iterator - quit\r\n  do the next level\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","RecordingInput":"     ","BadFormalsToCalls":"     ","BogusMessage":"     ","AJButtonMenuCombo":" actionPerformed actionPerformed mouseEntered mouseExited mousePressed mouseReleased maybeShowPopup setEnabled setMenu serialVersionUID mainButton popupButton menu isPressed button org.aspectj.ajde.ui.swing.AJButtonMenuCombo  private boolean depressable = false;\r\n  this.depressable = depressable;\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","LoadtimeModuleTests":" suite main  org.aspectj.loadtime.LoadtimeModuleTests  ","Frame":" clone getClone getLocals getStack equals toString windowClosing windowClosing handleClick _this locals stack successor org.aspectj.apache.bcel.verifier.structurals.Frame ca.ubc.cs.spl.aspectPatterns.examples.chainOfResponsibility.aspectj.Frame ca.ubc.cs.spl.aspectPatterns.examples.chainOfResponsibility.java.Frame  implies \"null\" is non-equal.\r\n ","ThrowsTag":"   org.aspectj.ajdoc.ThrowsTag  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Bindings":" register mergeIn checkEquals toString getUsedFormals getUsedFormalTypes copy checkAllBound size checkEmpty NONE bindings org.aspectj.weaver.patterns.Bindings  done just to produce fewer error messages\r\n  done just to produce fewer error messages\r\n  System.out.println(\"used: \" + this);\r\n  System.out.println(\"ret: \" + index);\r\n  System.out.println(\"ret: \" + index);\r\n  System.arraycopy(bindings, 0, a, 0, len);\r\n  ATAJ: avoid warnings for implicit bindings\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","InstructionHandle":" getNext getPrev getInstruction setInstruction swapInstruction getInstructionHandle updatePosition getPosition setPosition addHandle dispose removeAllTargeters removeTargeter addTargeter hasTargeters getTargeters toString toString addAttribute removeAttribute getAttribute getAttributes accept next prev instruction i_position targeters attributes ih_list org.aspectj.apache.bcel.generic.InstructionHandle  Will be set from the outside\r\n  byte code offset of instruction\r\n  Overridden in BranchHandle\r\n  List of reusable handles\r\n  if(!targeters.contains(t))\r\n /*private*/\r\n","ObjectType":" toSignature getClassName hashCode equals referencesClass referencesInterface subclassOf accessibleTo class_name org.aspectj.apache.bcel.generic.ObjectType  Class name of type\r\n  \"L\" + class_name.replace('.', ' /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","ExplicitConstructorThrows":"   ExplicitConstructorThrows Base Sub1 Sub2  ERR: default constructor throws IOException\r\n  ERR: default constructor throws IOException\r\n  ERR: throws IOException\r\n  ERR: throws IOException\r\n ","MainTest":" main testMainbare testDashX testDashMessageHolder testDashMessageHolderOk  org.smart.app.MainTest org.aspectj.tools.ajc.MainTest  assertTrue(1 == list.size());\r\n  xoptionText.substring(\"{0}\".length());\r\n /* *******************************************************************\r\n * Copyright (c) 2004 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","BindingTypePattern":" getFormalIndex equals hashCode write read remapAdviceFormals parameterizeWith toString formalIndex org.aspectj.weaver.patterns.BindingTypePattern  Thread.currentThread().dumpStack();\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ThreadNoField":"     ","AsmConstants":"  ajAttributes org.aspectj.weaver.asm.AsmConstants  attributes ASM needs to know about\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","IntroducedMethodsOnEachInterface":"     ","SuperField":"     ","Blurgh":" m m main  SecurityEntity Goo Base Hoo Foo Interface1 Impl1 Blurgh  ","EditorAdapter":" showSourceLine showSourceLine showSourceLine getCurrFile saveContents pasteToCaretPos showSourcelineAnnotation  org.aspectj.ajde.EditorAdapter  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","TestUtilTest":" testFileCompareNonClass testFileCompareClass testFileCompareNonClass testFileCompareClass testFileCompareNonClass testFileCompareClass testFileCompareNonClass testFileCompareClass testFileCompareNonClass testFileCompareNonClassStaticPositive testFileCompareNonClassStaticNegative testParseBoolean testFileCompareClass  org.aspectj.testing.util.TestUtilTest org.aspectj.testing.util.TestUtilTest org.aspectj.testing.util.TestUtilTest org.aspectj.testing.util.TestUtilTest org.aspectj.testingutil.TestUtilTest  File thisFile = new File(\"src  File thisFile = new File(\"src  File thisFile = new File(\"src  File thisFile = new File(\"src  File thisFile = new File(\"src /* -*- Mode: Java; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the compiler and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n *\r\n * Contributor(s):\r\n */\r\n /* -*- Mode: Java; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the compiler and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n *\r\n * Contributor(s):\r\n */\r\n /* -*- Mode: Java; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the compiler and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n *\r\n * Contributor(s):\r\n */\r\n /* -*- Mode: Java; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the compiler and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n *\r\n * Contributor(s):\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","MethodConflictsCP":"     ","UndefinedPointCut_PR396":"     ","ajcDeclarePrecedence":"     /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","MethodConflictsCF":"     ","Annotation":" toString read dump addElementNameValuePair getTypeIndex getTypeSignature getTypeName getValues isRuntimeVisible isRuntimeVisible toShortString typeIndex evs cpool isRuntimeVisible org.aspectj.apache.bcel.classfile.annotation.Annotation java.lang.annotation.Annotation  u2 index of type name in cpool\r\n  u2 element_value pair count\r\n  Fake class we can use in the absence of Java5\r\n /* ElementNameValuePair */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n * ******************************************************************/\r\n","Panel":" handleClick successor ca.ubc.cs.spl.aspectPatterns.examples.chainOfResponsibility.aspectj.Panel ca.ubc.cs.spl.aspectPatterns.examples.chainOfResponsibility.java.Panel  ","NativeVerifier":" main  org.aspectj.apache.bcel.verifier.NativeVerifier  subclass of LinkageError!\r\n ","MainWarnings":"     ","ClassClientCE":" main  ClassClientCE C  CE 5 expected: declare IOException\r\n ","SuperStaticCallJoinPoint":"     ","StubFileGenerator":" doFiles processFile processImportDeclaration processTypeDeclaration processMembers genSourceSignature addDeclID addToFormal declIDTable nextDeclID org.aspectj.tools.ajdoc.StubFileGenerator  if we got an error we don't want the contents of the file\r\n  StructureUtil.genSignature(classNode);\r\n  System.err.println(\"######\" + signature + \", \" + classNode.getName());\r\n  StructureUtil.genSignature(member);\r\n  if the next member is also an ENUM_VALUE:\r\n  System.err.println(\">>>>>>>>>>>>>\" + member.getName() + \"<<<<\" + member.getParent());\r\n  formalComment = \"  boolean appendPeriod = true;\r\n  !!! perhaps this error should not be silent\r\n /*IProgramElement*/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Mik Kersten\t  port to AspectJ 1.1+ code base\r\n * ******************************************************************/\r\n","Top6":" publicMethod protectedMethod defaultMethod privateMethod  Top6  ","PrimitiveCoercionInExactTypePatternMatching":"     ","Nothing":"   Nothing  ","FieldObserver":" notify  org.aspectj.apache.bcel.generic.FieldObserver  ","AspectJCore":" getAspectJCore getCompilerOptions COMPILER_PB_INVALID_ABSOLUTE_TYPE_NAME COMPILER_PB_INVALID_WILDCARD_TYPE_NAME COMPILER_PB_UNRESOLVABLE_MEMBER COMPILER_PB_TYPE_NOT_EXPOSED_TO_WEAVER COMPILER_PB_SHADOW_NOT_IN_STRUCTURE COMPILER_PB_UNMATCHED_SUPERTYPE_IN_CALL COMPILER_PB_CANNOT_IMPLEMENT_LAZY_TJP COMPILER_PB_NEED_SERIAL_VERSION_UID COMPILER_PB_INCOMPATIBLE_SERIAL_VERSION COMPILER_TERMINATE_AFTER_COMPILATION COMPILER_SERIALIZABLE_ASPECTS COMPILER_LAZY_TJP COMPILER_NO_ADVICE_INLINE COMPILER_NOT_REWEAVABLE org.aspectj.ajdt.core.AspectJCore  /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.core.JavaCore#getCompilerOptions()\r\n\t */\r\n","PackageWriter":" generate generateClassListing packagedoc org.aspectj.tools.doclets.standard.PackageWriter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","AsmHierarchyBuilderExtensionTest":" testHiearchyExtension setUp visit endVisit builder org.aspectj.samples.AsmHierarchyBuilderExtensionTest org.aspectj.samples.ExtendedAsmHiearchyBuilder  NOTE that we set our builder here\r\n  makeLocation(messageSend),\r\n  peNode.setSourceSignature(genSourceSignature(fieldDeclaration));\r\n /* *******************************************************************\r\n * Copyright (c) 2004 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","Target.delete.40":"     ","OutxmlTest":" setUp tearDown testOutxmlToFile testOutxmlfileToFile testOutxmlToOutjar testOutxmlfileToOutjar testOutxmlToOutjarWithAop_xml assertJarContainsEntry PROJECT_DIR BIN_DIR OUTJAR_NAME DEFAULT_AOPXML_NAME CUSTOM_AOPXML_NAME org.aspectj.ajde.OutxmlTest  System.out.println(\"OutxmlTest.testOutxmlToFile() outputpath='\" + ideManager.getProjectProperties().getOutputPath() + \"'\");\r\n  System.out.println(\"OutxmlTest.testOutxmlToOutjar() outputpath='\" + ideManager.getProjectProperties().getOutputPath() + \"'\");\r\n  assertTrue(\"Build warnings: \" + ideManager.getCompilationSourceLineTasks(),ideManager.getCompilationSourceLineTasks().isEmpty());\r\n /*\r\n\t * Ensure the output directory is clean\r\n\t */\r\n /*\r\n\t * Clean up afterwards\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Matthew Webster     initial implementation \r\n * ******************************************************************/\r\n","IsAtAspectAnnotationVisitor":" visitAnnotation visitField visitMethod isAspect visit visitSource visitOuterClass visitAttribute visitInnerClass visitEnd visitAnnotationDefault visitParameterAnnotation visitCode visitInsn visitIntInsn visitVarInsn visitTypeInsn visitFieldInsn visitMethodInsn visitJumpInsn visitLabel visitLdcInsn visitIincInsn visitTableSwitchInsn visitLookupSwitchInsn visitMultiANewArrayInsn visitTryCatchBlock visitLocalVariable visitLineNumber visitMaxs visit visitEnum visitAnnotation visitArray isAspect org.aspectj.weaver.tools.IsAtAspectAnnotationVisitor  should extend EmptyVisitor but it's not currently included with AspectJ's ASM...\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Eugene Kuleshov, Ron Bodkin    initial implementation \r\n * ******************************************************************/\r\n","PointcutResidueTestCase":" testArgResidue1 testArgResidue2 testArgResidue3 testMultiArgState testAdd testNot testState testNoResidueArgs testCflowState checkDynamicWeave checkMultiArgWeave checkWeave weaveTest checkSerialize none org.aspectj.weaver.bcel.PointcutResidueTestCase  advice.addAll(inAspect.getExtraConcreteShadowMungers());\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","RuntimeVisibleAnnotations":" accept dump copy  org.aspectj.apache.bcel.classfile.annotation.RuntimeVisibleAnnotations  ","Receiver":"   Receiver  ","AdviceOnIntroduced":"     ","TraceAll":"     ","TestB_class":" main  TestB_class  ","BcelTypeMunger":" toString munge getShortname mungeNewAnnotationOnType mungeNewParent enforceDecpRule1_abstractMethodsImplemented enforceDecpRule2_cantExtendFinalClass enforceDecpRule3_visibilityChanges enforceDecpRule4_compatibleReturnTypes enforceDecpRule5_cantChangeFromStaticToNonstatic error findMatchingMethod attemptToModifySuperCalls createReadableCtorSig getConstructorWithSignature mungePrivilegedAccess addFieldGetter addFieldSetter addMethodDispatch makeMethodGen makeFieldGen mungePerObjectInterface mungePerTypeWithinTransformer couldMatch mungeNewMethod createAnyBridgeMethodsForCovariance createBridgeMethod mungeMethodDelegate mungeFieldHost getRealMemberForITDFromAspect addNeededSuperCallMethods signalError mungeNewConstructor makeDispatcher mungeNewField createBridgeMethodForITDF parameterizedFor getTypeVariableAliases equals hashCode existsToSupportShadowMunging hashCode org.aspectj.weaver.bcel.BcelTypeMunger  PTWIMPL Transform the target type (add the aspect instance field)\r\n  hidden\r\n  munging at compile time only...\r\n  TAG: WeavingMessage\r\n  FIXME asc this has already been done up front, need to do it here too?\r\n  Set to false when we error, so we don't actually *do* the munge\r\n  ignore generated accessors\r\n  FIXME asc is this safe for all bridge methods?\r\n  A rule was violated and an error message already reported\r\n  Adding a new interface\r\n  Changing the supertype\r\n  Ignore abstract classes or interfaces\r\n  Ignore abstract methods of ajc$interField prefixed methods\r\n  Found a valid implementation !\r\n  didnt find a valid implementation, lets check the ITDs on this type to see if they satisfy it\r\n  AV - that should be enough, no need to check more\r\n  possible sig change when type parameters filled in\r\n  type\r\n  Allow for covariance - wish I could test this (need Java5...)\r\n  superMethod.getName()+superMethod.getParameterSignature()+\" which returns '\"+superReturnTypeSig+\"'\",\r\n  Don't use the return value in the comparison as overriding doesnt\r\n  target new super calls at the generic type if its raw or parameterized\r\n  1. Check there is a ctor in the new parent with the same signature\r\n  2. Check ITDCs to see if the necessary ctor is provided that way\r\n  Look for ctors to modify\r\n  m.getMemberView().equals(member)) {\r\n  System.out.println(\"matched: \" + gen);\r\n  System.out.println(\"munging: \" + gen + \" with \" + member);\r\n  Type fieldType = BcelWorld.makeBcelType(field.getType());\r\n  ret.makeSynthetic();\r\n  System.err.println(\"Munging perobject [\"+munger+\"] onto \"+weaver.getLazyClassGen().getClassName());\r\n  e.g ajc$com_blah_SecurityAspect$ptwAspectInstance\r\n  e.g. \"public com_blah_SecurityAspect ajc$com_blah_SecurityAspect$localAspectOf()\"\r\n  PTWIMPL ?? Should check if it is null and throw NoAspectBoundException\r\n  PTWIMPL Add field to hold aspect instance and an accessor\r\n  ??? Why do we have this method? I thought by now we would know if it matched or not\r\n  Resolving it will sort out the tvars\r\n  do matching on the unMangled one, but actually add them to the mangled method\r\n  Simple checks, can't ITD on annotations or enums\r\n  that the target has already declared\r\n  From 98901#29 - need to copy annotations across\r\n  interface, but the method itself we add to the interface must be public abstract\r\n  Check if the munger being processed is a parameterized form of some original munger.\r\n  FIXME asc ----------------8<---------------- extract method\r\n  System.err.println(\"Putting in cast from \"+paramType+\" to \"+bridgingToParms[i]);\r\n  Work out if we need a bridge method for the new method added to the topmostimplementor.\r\n  out that it was the top most implementor (see pr49657)\r\n  interface, but the method itself we add to the interface must be public abstract\r\n  on an ITD it declared on itself.\r\n  which is holding them.\r\n  Don't need bridge methods if not in 1.5 mode.\r\n  If it doesn't target an interface and there is a body (i.e. it isnt abstract)\r\n  XXX make sure to check that we set exceptions properly on this guy.\r\n  If we are processing the intended ITD target type (might be an interface)\r\n  Step3. Create a forwarding bridge method\r\n  Compiler might have done it\r\n  Check the params\r\n  Step3\r\n  check the return types, if they are different we need a bridging method.\r\n  Use the iterator form of 'getMethods()' so we do as little work as necessary\r\n  Step2\r\n  The bridge method in this type will have the same signature as the one in the supertype\r\n  }\r\n  don't signal error as it could be a consequence of a wild type pattern\r\n  lookup the method\r\n  annotation copy from annotation on ITD interface\r\n  getfield\r\n  Create and store a new instance\r\n  if not null use the instance we've got\r\n  args\r\n  body.append(InstructionFactory.createThis());\r\n  don't signal error as it could be a consequence of a wild type pattern\r\n  only the erasure.\r\n  System.err.println(\"super type: \" + superMethod.getDeclaringType() + \", \" + gen.getType());\r\n  int declaredParameterCount = newConstructorTypeMunger.getDeclaredParameterCount();\r\n  on an ITD it declared on itself.\r\n  which is holding them.\r\n  declared argcount + 1\r\n  do call to pre\r\n  create a local, and store return pre stuff into it.\r\n  put this on the stack\r\n  unpack pre args onto stack\r\n  unpack params onto stack\r\n  call post\r\n  don't forget to return!!\r\n  assert (!superMethod.isStatic())\r\n  the below line just gets the method with the same name in aspectType.getDeclaredMethods();\r\n  which is holding them.\r\n  wew know that we can't be static since we don't allow statics on interfaces\r\n  is this munger a parameterized form of some original munger?\r\n  Check if we need bridge methods for the field getter and setter\r\n  une cast est required\r\n  FIXME asc combine with other createBridge.. method in this class, avoid the duplication...\r\n  pr134471 - remove when handles are improved to be independent of location\r\n  XXX addLazyMethodGen is probably bad everywhere\r\n /*ResolvedMember initMethod = */\r\n /*onType*/\r\n /*String*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation\r\n *     Alexandre Vasseur    @AspectJ ITDs\r\n * ******************************************************************/\r\n","SimpleSyntheticAccessMethodBinding":"   org.aspectj.ajdt.internal.compiler.lookup.SimpleSyntheticAccessMethodBinding  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","PR79554":"     ","OutputLocationManager":" getOutputLocationForClass getOutputLocationForResource  org.aspectj.ajde.OutputLocationManager  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","IncompatibleClassChangeErrorBug":"     ","AjTypeTestsWithAspects":" setUp testGetPerClause testGetDeclaredField testGetField testGetDeclaredFields testGetFields testGetDeclaredMethod testGetMethod testGetDeclaredMethods testGetMethods testGetDeclaredPointcut testGetPointcut testGetDeclaredPointcuts testGetPointcuts testGetDeclaredAdvice testGetAdvice testGetNamedAdvice testGetNamedDeclaredAdvice testIsPrivileged testIsAspect testIsMemberAspect testGetDeclareEoWarnings aMethod logEntry ajc$before$123 logFinally ajc$after$123 logExit ajc$afterReturning$123 logException ajc$afterThrowing$123 logItAll ajc$around$123 simpleAspectMethodExecution ajc$pointcut$$simpleAspectCall$123 ajc$declare_eow$123 ajc$declare_eow$124 sa s ajc$xyz$s dontDoIt dontDoItISaid org.aspectj.internal.lang.reflect.AjTypeTestsWithAspects org.aspectj.internal.lang.reflect.SimpleAspect org.aspectj.internal.lang.reflect.SimplePrivilegedAspect org.aspectj.internal.lang.reflect.PerThisAspect org.aspectj.internal.lang.reflect.PerTargetAspect org.aspectj.internal.lang.reflect.PerCflowAspect org.aspectj.internal.lang.reflect.PerCflowbelowAspect org.aspectj.internal.lang.reflect.PerTypeWithin  AV was corrupted, cannot rely on ordering\r\n  AV was corrupted, cannot rely on ordering\r\n  AV: corrupted test: cannot rely on ordering since a Set is used behind\r\n  regular field\r\n  synthetic field\r\n  regular method\r\n  advice method, annotation style\r\n  advice method, code style\r\n  advice method, annotation style\r\n  advice method, code style\r\n  advice method, annotation style\r\n  advice method, code style\r\n  advice method, annotation style\r\n  advice method, code style\r\n  advice method, annotation style\r\n  advice method, code style\r\n  pointcut, annotation style\r\n  pointcut, code style\r\n  decw, ann style\r\n  decw, code style\r\n  dec., ann style\r\n  decw, code style\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer       initial implementation \r\n * ******************************************************************/\r\n","PerClauseTestAspects":" before before before before before s_count s_count s_count s_count s_count a_count ataspectj.PerClauseTestAspects  ","PatternsTests":" suite  org.aspectj.weaver.patterns.PatternsTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Top4":" absMethod1 absMethod2 absMethod3  Top4 Top4  ","Top3":" m absMethod1 absMethod2 absMethod3  Top3 Top3  ","Top2":" publicMethod_voidReturn publicMethod_StringReturn publicMethod_IntegerReturn  Top2 Top2  ","Top1":" publicMethod protectedMethod defaultMethod privateMethod  Top1 Top1  ","Advice":" getDeclaringType getKind getName getParameterTypes getGenericParameterTypes getExceptionTypes getPointcutExpression makeCflowEntry makePerCflowEntry makePerObjectEntry makePerTypeWithinEntry makeSoftener match maybeIssueUncheckedMatchWarning getKind getSignature setSignature hasExtraParameter getExtraParameterFlags getExtraParameterCount getBindingParameterTypes setBindingParameterTypes countOnes getBaseParameterCount getBaseParameterNames getExtraParameterType getDeclaringAspect getOriginalSignature extraParametersToString getPointcut concretize toString equals hashCode setLexicalPosition getConcreteAspect getResolvedDeclaringAspect attribute kind signature concreteAspect innerCflowEntries nFreeVars exceptionType bindingParameterTypes suppressedLintKinds lastReportedMonitorExitJoinpointLocation hashCode ExtraArgument ThisJoinPoint ThisJoinPointStaticPart ThisEnclosingJoinPointStaticPart ParameterMask CanInline org.aspectj.lang.reflect.Advice org.aspectj.weaver.Advice  the pointcut field is ignored\r\n  alias of attribute.getKind()\r\n  null until after concretize\r\n  just for cflow*Entry kinds\r\n  just for cflow*Entry kinds\r\n  just for Softener kind\r\n  if we are parameterized, these type may be different to the advice signature types\r\n  based on annotations on this advice\r\n  0);\r\n  PTWIMPL per type within entry advice is what initializes the aspect instance in the matched type\r\n  System.out.println(\"made ret: \" + ret + \" with \" + exceptionType);\r\n  alias\r\n  && attribute.getProceedCallSignatures().length!=0\r\n  System.err.println(this + \", \" + sourceContext + \", \" + start);\r\n  Set\r\n  Set\r\n  System.err.println(getSignature().getReturnType() + \" from \" + shadow.getReturnType());\r\n  pr119749\r\n  reset hashCode value so it can be recalculated next time\r\n  only called as part of parameterization....\r\n  to ignore\r\n  assert !fromType.isAbstract();\r\n  FIXME ? ATAJ copy unbound bindings to ignore\r\n  System.err.println(\"concretizing here \" + p + \" with clause \" + clause);\r\n  pr134471 - remove when handles are improved to be independent of location\r\n  XXX this perhaps ought to take account of the other fields in advice ...\r\n  for testing only\r\n  is 'concreteAspect' since 'declaringType' is null\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n /*Lint.Kind*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","FMUL":" accept  org.aspectj.apache.bcel.generic.FMUL  ","AJPush":" setSrc setKey execute addReleaseInfo src key releaseDir downloadDir waiting org.aspectj.internal.tools.ant.taskdefs.AJPush  todo: dependency on ant script variable name aj.release.dir\r\n  todo: dependency on ant script variable name download.dir\r\n  For testing make sure these directories are made\r\n  copy to staging web server\r\n  add info to release.txt\r\n  create new only if necessary\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","Before":"     ","ThreadAspectLib2":"     ","Pcds":"     ","DefaultTrace":" isTraceEnabled setTraceEnabled enter enter exit exit exit debug info warn error fatal println traceEnabled org.aspectj.weaver.tools.DefaultTrace  ","TraceTest":" test  tracep1.TraceTest  ","EclipseAdapterUtils":" makeLocationContext makeSourceLocation makeMessage makeErrorMessage makeErrorMessage  org.aspectj.ajdt.internal.core.builder.EclipseAdapterUtils  sanity .....\r\n  return Util.bind(\"problem.noSourceInformation\");   compute the how-much-char we are displaying around the inaccurate token\r\n  Dont like this - why does it occur? pr152835\r\n  extract the message form the source\r\n  remove all SPACE and TAB that begin the error message...\r\n  buffer spaces and tabs in order to reach the error position\r\n  can't be bigger\r\n  AMC if we took stuff off the start, take it into account!\r\n  mark the error position\r\n  resize underneathto remove 'null' chars\r\n  $NON-NLS-2$   XXX some cut-and-paste from eclipse sources\r\n  XXX 0 column is wrong but recoverable from makeLocationContext\r\n  in the extraDetails.\r\n  represents this so AJDT sees it correctly.\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AfterReturningParam":"     ","StaticPointcutRefs":"     ","TypeInAspectNotImportedCE":"     ","JsrInstruction":" getType physicalSuccessor  org.aspectj.apache.bcel.generic.JsrInstruction  Rewind!\r\n  Find the handle for \"this\" JsrInstruction object.\r\n  Return the physical successor\r\n ","ButtonCommand2":" executeCommand  ca.ubc.cs.spl.aspectPatterns.examples.command.aspectj.ButtonCommand2 ca.ubc.cs.spl.aspectPatterns.examples.command.java.ButtonCommand2  ","BuildCancellingTest":" setUp testCancelFirstCompile testCancelThirdCompile testCancelFirstAspectWeave testCancelThirdAspectWeave testCancelFirstClassWeave testCancelSecondClassWeave start cancelOn setProgressText containsMessage dumpMessages setProgressBarVal incrementProgressBarVal setProgressBarMax getProgressBarMax finish checkFor dumpTaskData compilerAdapter PROJECT_DIR binDir debugTests numWovenClassMessages numWovenAspectMessages numCompiledMessages programmableString count messagesReceived currentVal org.aspectj.ajde.BuildCancellingTest  Ensure the output directory is clean\r\n  Force a cancel after the first compile occurs\r\n  Useful for debugging\r\n  Force a cancel after the third compile occurs\r\n  Useful for debugging\r\n  Force a cancel after the first weave aspect occurs\r\n  Useful for debugging\r\n  This should leave two class files on disk - I think?\r\n  Useful for debugging\r\n  Useful for debugging\r\n  Useful for debugging\r\n  Causes setProgressBarVal() to be fed what are effectively percentages\r\n /* *******************************************************************\r\n * Copyright (c) 2004 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     Initial version\r\n * ******************************************************************/\r\n","JavadocComparePackageMode":" main test runCommand INPUT_FILES FILE_1 FILE_2 AJDOC_DIR JAVADOC_DIR AJDOC_CALL JAVADOC_CALL JavadocComparePackageMode  ","AjASTTestCase":" createAjAST createAjAST checkJLS3  org.aspectj.tools.ajc.AjASTTestCase  ","LocalVariableTable":" accept dump getLocalVariableTable getLocalVariable setLocalVariableTable toString copy getTableLength unpack isInPackedState data localVariableTableLength localVariableTable org.aspectj.apache.bcel.classfile.LocalVariableTable  if 'isInPackedState' then this data needs unpacking\r\n  throw it away now\r\n  Unpacks the byte array into the table\r\n ","Comment":" commentText getRawCommentText setCommentText rawCommentText setRawCommentText getTags setDoc doc setLocale locale setErr err init inlineTags tags paramTags seeTags serialFieldTags throwsTags tags firstSentenceTags findTags commentText rawCommentText tags doc loc err org.aspectj.tools.ajdoc.Comment  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","DUP_X1":" accept  org.aspectj.apache.bcel.generic.DUP_X1  ","AjcTaskCompileCommandTest":" getClassesDir addCommonArgs doWait testWaitUntilMessagesQuiet_InputErrors testDefault testDefaultList testCompileErrorList testWaitUntilMessagesQuiet_1_2 testWaitUntilMessagesQuiet_1_10 testWaitUntilMessagesQuiet_8_10 testWaitUntilMessagesQuiet_1_10_4_1 testWaitUntilMessagesQuiet_8_10_2_1 runSimpleTest runTest checkWait run getNumAdded toString loggedWarning runAllTests tempFiles result addedThread MAX_MILLIS stop wait messages numToAdd interval numAdded org.aspectj.testing.taskdefs.AjcTaskCompileCommandTest org.aspectj.testing.taskdefs.MessageAdder  do no-adds synchronously\r\n  final Thread thread = Thread.currentThread();\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","Comments":"   MyIterator  /**/\r\n","DUP_X2":" accept  org.aspectj.apache.bcel.generic.DUP_X2  ","BuildNotifierAdapter":" begin cancelBuild setProgress setText setCancelledRequested isCancelledRequested progressMonitor cancelRequested org.aspectj.ajde.internal.BuildNotifierAdapter  private int completedPasses = 0;\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","DefaultInterfaceImplementationRecipe":"     ","AmbiguousInterface":" main  AmbiguousInterface Outer Another  ","AdviceExec":"     ","Counting1":"     ","ClassElementValue":" getIndex getClassString stringifyValue dump idx org.aspectj.apache.bcel.classfile.annotation.ClassElementValue  For 'class' this points to the class entry in the cpool\r\n  u1 kind of value\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation {date}\r\n * ******************************************************************/\r\n","DCMPL":" getType accept  org.aspectj.apache.bcel.generic.DCMPL  ","DCMPG":" getType accept  org.aspectj.apache.bcel.generic.DCMPG  ","SimpleEnum2":"     ","CheckerTestCase":" testStaticTjp  org.aspectj.weaver.bcel.CheckerTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","PropertySupport":"     ","MoodyImpl":" getMood setMood mood theapp.MoodyImpl  ","IncrementalModelTests":" suite getSpecFile test001 test002 test003 test004 test005 test006 setUp tearDown  org.aspectj.systemtest.incremental.model.IncrementalModelTests  This first test doesnt do a lot currently, but is ready too...\r\n  <!-- BetaA has a new piece of handler advice added -->\r\n  <!-- secondary.GammaA added, also advises the same handler -->\r\n  <!-- primary.BetaA deleted -->\r\n  <!-- BetaA has a new piece of advice added -->\r\n  <!-- BetaA has a piece of advice removed -->\r\n  <!-- BetaA other piece of advice removed (now empty) -->\r\n  <!-- Beta changed, method added -->\r\n  <!-- Delta changed, class added -->\r\n  <!-- Gamma changed, advice added -->\r\n  <!-- Gamma changed, pointcut added -->\r\n  <!-- Gamma changed, both advice removed -->\r\n  <!-- Adds primary.Beta class -->\r\n  <!-- Adds secondary.Gamma aspect -->\r\n  <!-- Adds secondary.Delta class -->\r\n  <!-- Deletes Gamma aspect -->\r\n  <!-- Deletes Beta and Delta classes -->\r\n  System.err.println(mi.toString());\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","AjdeTests":" testDataPath suite TESTDATA_PATH org.aspectj.ajde.AjdeTests  TODO-path\r\n  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","SubC":" getMyPackage getRealPackage  psub.SubC  ","AsmDelegateTests5":" suite getWorld testCompareGenericMethods format testCompareGenericFields world org.aspectj.weaver.bcel.AsmDelegateTests5  forget them, asm delegates dont currently know them\r\n  If one is parameterized, check the other is...\r\n  public <U> Class<? extends U> asSubclass(Class<U> clazz)\r\n /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement     initial implementation \r\n *     Matthew Webster  move Java 5 tests           \r\n * ******************************************************************/\r\n","AffectedType":"     ","Counting3":"     ","ConcreteClass":"   ConcreteClass  ","ClassObserver":" notify  org.aspectj.apache.bcel.generic.ClassObserver  ","StockQuoteService":" getQuote  services.stockquote.StockQuoteService  ","InnerNameConflictsCf":" main  InnerNameConflictsCf Base Outer  ERR: no this\r\n  ERR: repeated name\r\n  ERR: repeated name\r\n  ERR: repeated name\r\n ","BindingThisInsteadOfFormal":"     ","LongFile":"     ","AjCompilerOptions":" getMap set setAspectJWarningDefaults toString OPTION_ReportInvalidAbsoluteTypeName OPTION_ReportInvalidWildcardTypeName OPTION_ReportUnresolvableMember OPTION_ReportTypeNotExposedToWeaver OPTION_ReportShadowNotInStructure OPTION_ReportUnmatchedSuperTypeInCall OPTION_ReportCannotImplementLazyTJP OPTION_ReportNeedSerialVersionUIDField OPTION_ReportIncompatibleSerialVersion OPTION_TerminateAfterCompilation OPTION_XSerializableAspects OPTION_XLazyThisJoinPoint OPTION_XNoInline OPTION_XNotReweavable OPTION_XHasMember OPTION_XdevPinpoint OPTION_XDevNoAtAspectJProcessing OPTION_GenerateModel OPTION_GenerateJavaDocsInModel OPTION_Emacssym InvalidAbsoluteTypeName InvalidWildCardTypeName UnresolvableMember TypeNotExposedToWeaver ShadowNotInStructure UnmatchedSuperTypeInCall CannotImplementLazyTJP NeedSerialVersionUIDField IncompatibleSerialVersion terminateAfterCompilation xSerializableAspects xLazyThisJoinPoint xNoInline xNotReweavable xHasMember xdevPinpoint showWeavingInformation xOptionalJoinpoints behaveInJava5Way targetAspectjRuntimeLevel xConfigurationInfo addSerialVerUID generateModel generateJavaDocsInModel generateEmacsSymFiles noAtAspectJProcessing generateCrossRefs proceedOnError org.aspectj.ajdt.internal.core.builder.AjCompilerOptions  AspectJ Lint options\r\n  General AspectJ Compiler options (excludes paths etc, these are handled separately)\r\n  these next four not exposed by IDEs\r\n  constants for irritant levels\r\n  If true - autoboxing behaves differently ...\r\n  Specifies the level of the aspectjrt.jar we are targetting\r\n  these next four not exposed by IDEs\r\n  now add AspectJ additional options\r\n  now add AspectJ additional options\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.impl.CompilerOptions#getMap()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.impl.CompilerOptions#set(java.util.Map)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see java.lang.Object#toString()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AspectDocImpl":" docForDec introDocForDec aspectDec advice dominatees dominators introductions ofClause isAspect dominates addDominator addDominatee createIntroductions createAdvice createOfClause advice introductions ofClause dominators dominatees org.aspectj.tools.ajdoc.AspectDocImpl  pluck the AdviceDec from the list of JpPlannerMakers\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","Ajdoc14Source":" doAssert  Ajdoc14Source  ","AjdtBuilderTests":" suite  org.aspectj.ajdt.internal.core.builder.AjdtBuilderTests  $JUnit-BEGIN$\r\n  $JUnit-END$\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","Java15GenericSignatureInformationProvider":" getGenericParameterTypes getGenericReturnType isBridge isVarArgs isSynthetic world org.aspectj.weaver.reflect.Java15GenericSignatureInformationProvider  /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.reflect.GenericSignatureInformationProvider#getGenericParameterTypes(org.aspectj.weaver.reflect.ReflectionBasedResolvedMemberImpl)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.reflect.GenericSignatureInformationProvider#getGenericReturnType(org.aspectj.weaver.reflect.ReflectionBasedResolvedMemberImpl)\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.reflect.GenericSignatureInformationProvider#isBridge()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.reflect.GenericSignatureInformationProvider#isVarArgs()\r\n\t */\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.reflect.GenericSignatureInformationProvider#isSynthetic()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","InnerAccess":" main getCount main run getCount getKey getValue setValue m m1 m1 m1 i s i s r InnerAccess C D InnerAccess C DI D Outer  ","NumberLinesEmitter":" characters formatLineNumber endElement startElement skipThisElement getNameCode getAttributes getNamespaces getNSCount characters formatLineNumber endElement startElement skipThisElement getNameCode getAttributes getNamespaces getNSCount elementStack lineNumber firstElement foURI modulus width separator foStylesheet _nameCode _attributes _namespaces _nscount elementStack lineNumber firstElement foURI modulus width separator foStylesheet _nameCode _attributes _namespaces _nscount com.nwalsh.saxon.NumberLinesEmitter com.nwalsh.saxon.NumberLinesEmitter  If we hit characters, then there's no first element...\r\n  The first line is always numbered\r\n  Walk through the text node looking for newlines\r\n  Output any characters that preceded this newline\r\n  Close all the open elements...\r\n  Copy the newline to the output\r\n  Add the line number\r\n  Now \"reopen\" the elements that we closed...\r\n  &nbsp;\r\n  be empty when we get to the end of the first element...\r\n  Don't push the outer-most wrapping div, pre, or fo:block\r\n  If we hit characters, then there's no first element...\r\n  The first line is always numbered\r\n  Walk through the text node looking for newlines\r\n  Output any characters that preceded this newline\r\n  Close all the open elements...\r\n  Copy the newline to the output\r\n  Add the line number\r\n  Now \"reopen\" the elements that we closed...\r\n  &nbsp;\r\n  be empty when we get to the end of the first element...\r\n  Don't push the outer-most wrapping div, pre, or fo:block\r\n ","GenericMethods":"     ","AspectDeclaration":" isAbstract resolve checkSpec addAtAspectJAnnotations generateCode needClassInitMethod generateAttributes addVersionAttributeIfNecessary generateInlineAccessMembers generatePerSupportMembers generate generateMethod generateMethod makeEffectiveSignatureAttribute generateMethod generatePerCflowAspectOfMethod generatePerCflowHasAspectMethod generatePerCflowPushMethod generatePerCflowAjcClinitMethod generatePerObjectInterface generatePerTypeWithinAspectOfMethod generatePerObjectAspectOfMethod generatePerObjectHasAspectMethod generatePerTypeWithinHasAspectMethod generatePerObjectBindMethod generatePerTypeWithinGetInstanceMethod generatePerTypeWithinCreateAspectInstanceMethod generatePerSingletonAspectOfMethod generatePerSingletonHasAspectMethod generatePerSingletonAjcClinitMethod generateSuperAccessMethod generateInlineAccessMethod generateInlineAccessors generateInlineAccessMethod lookupPerClauseKind buildPerClause resolvePerClause buildInterTypeAndPerClause printHeader getDeclaredModifiers clone0 accept0 internalGetSetBooleanProperty internalGetSetChildProperty propertyDescriptors getPerClause setPerClause isPrivileged setPrivileged getAdvice aspectAttribute perClause aspectOfMethod hasAspectMethod accessForInline superAccessForInline isPrivileged declaredModifiers concreteName typeX factory adviceCounter declareCounter dominatesPattern initFailureField weaverVersionChars PERCLAUSE_PROPERTY PRIVILEGED_PROPERTY aspectPROPERTY_DESCRIPTORS_2_0 aspectPROPERTY_DESCRIPTORS_3_0 perClause isPrivileged org.aspectj.ajdt.internal.compiler.ast.AspectDeclaration org.aspectj.org.eclipse.jdt.core.dom.AspectDeclaration  public ResolvedMember ptwGetWithinTypeMethod;\r\n  ??? should use this consistently\r\n  Used as a part of the generated name for advice methods\r\n  Used as a part of the generated name for methods representing declares\r\n  for better error messages in 1.0 to 1.1 transition\r\n  remember our modifiers, we're going to be public in generateCode\r\n  XXX this only works for aspects that come from source\r\n  check the aspect was not declared generic, only abstract aspects can have type params\r\n  if (myType == null) System.err.println(\"bad myType for: \" + this);\r\n  can't be Serializable  if super type is generic, check that we have fully parameterized it\r\n  make me and my binding public\r\n  PTWIMPL Add field for storing typename in aspect for which the aspect instance exists\r\n  XXX need to get this attribute on anyone with a pointcut for good errors\r\n  XXX otherwise we need to have this (error handling?)\r\n  public static <aspecttype> aspectOf(java.lang.Class)\r\n  private static <aspecttype> ajc$getInstance(Class c) throws Exception\r\n  generate public static X ajc$createAspectInstance(Class forClass) {\r\n  EclipseFactory world = EclipseFactory.fromScopeLookupEnvironment(this.scope);\r\n  mini optimization\r\n  codeStream.initializeMaxLocals(methodBinding);\r\n  body starts here\r\n  body ends here\r\n  pr148693\r\n  body starts here\r\n  body starts here\r\n  body starts here\r\n  body starts here\r\n  Run the simple ctor for NABE\r\n  PTWIMPL Generate aspectOf() method\r\n  body starts here\r\n  body starts here\r\n  PTWIMPL Generate hasAspect() method\r\n  body starts here\r\n  XXX this case might call for screaming\r\n  XXX should do a check for null here and throw a NoAspectBound\r\n  return type\r\n  this just returns null now - the old version used to throw the caught exception!\r\n  PTWIMPL Generate getInstance method\r\n  body starts here (see end of each line for what it is doing!)\r\n  GETSTATIC\r\n  IFNONNULL\r\n  NEW\r\n  DUP\r\n  LDC\r\n  GETSTATIC\r\n  INVOKESPECIAL\r\n  ATHROW\r\n  GETSTATIC\r\n  ARETURN\r\n  body starts here\r\n  body starts here\r\n  body starts here\r\n  body starts here\r\n  body starts here\r\n  XXX need to handle this too\r\n  ???\r\n  PTWIMPL Use these variants of aspectOf()  XXX might be too soon for some error checking\r\n  modifiers that were supplied in the original source code\r\n  $NON-NLS-1$\r\n  $NON-NLS-2$   $NON-NLS-1$\r\n  switched from MemberTypeDeclaration to TypeDeclaration\r\n  $NON-NLS-1$\r\n  $NON-NLS-1$\r\n  stays null if the aspect is an _implicit_ persingleton()\r\n  visit children in normal left to right reading order\r\n  allow default implementation to flag the error\r\n  ajh02: method added\r\n /*ResolvedMember realMember*/\r\n /*\r\n\t * additionalAttributes allows us to pass some optional attributes we want to attach to the method we generate.\r\n\t * Currently this is used for inline accessor methods that have been generated to allow private field references or\r\n\t * private method calls to be inlined (PR71377).  In these cases the optional attribute is an effective signature\r\n\t * attribute which means calls to these methods are able to masquerade as any join point (a field set, field get or\r\n\t * method call).  The effective signature attribute is 'unwrapped' in BcelClassWeaver.matchInvokeInstruction()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode and AjTypeDeclaration.\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) \r\n\t * Method declared on ASTNode.\r\n\t */\r\n","Sub4":" m  Sub4  ","Sub3":" m  Sub3  ","Sub2":"   Sub2  ","Sub1":" m  Sub1  ","JoinPointFields":"     ","StackError":"     ","AsmRelationshipProvider":" checkerMunger addRelationship addDeclareParentsRelationship addDeclareAnnotationRelationship adviceMunger getNode sourceLinesMatch findOrCreateCodeNode lookupMember findMemberInClass getDefault setDefault addDeclareAnnotationRelationship addDeclareAnnotationRelationship INSTANCE ADVISES ADVISED_BY DECLARES_ON DECLAREDY_BY SOFTENS SOFTENED_BY MATCHED_BY MATCHES_DECLARE INTER_TYPE_DECLARES INTER_TYPE_DECLARED_BY ANNOTATES ANNOTATED_BY org.aspectj.weaver.AsmRelationshipProvider  Ensure a node for the target exists\r\n  For ITDs\r\n  TODO: might want to show these in the future\r\n  Work out extra info to inform interested UIs !\r\n  get it into CVS !!!\r\n  foreward.getTargets().add(targetHandle);\r\n  back.getTargets().add(adviceHandle);\r\n  foreward.getTargets().add(targetHandle);\r\n  back.getTargets().add(adviceHandle);\r\n  XXX why not use shadow file? new SourceLocation(sl.getSourceFile(), sl.getLine()),\r\n  XXX remove this check\r\n  if we can't find the member, we'll just put it in the class\r\n  its a method\r\n  its a ctor\r\n  assume default ctor\r\n  I know I know .. but I don't want to lose it!\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","LockingWithTJP":"     ","pr121616":" main log  Main MainLogger  ","Useful2":"     ","Useful1":"     ","Exceptions":"     ","InputAnnotation":"     ","DocumentParser":" parse getXMLReader resolveEntity startElement endElement warning error fatalError replaceXmlAnd isNull isTrue DTD_PUBLIC_ID DTD_PUBLIC_ID_ALIAS DTD_STREAM ASPECTJ_ELEMENT WEAVER_ELEMENT DUMP_ELEMENT DUMP_BEFOREANDAFTER_ATTRIBUTE INCLUDE_ELEMENT EXCLUDE_ELEMENT OPTIONS_ATTRIBUTE ASPECTS_ELEMENT ASPECT_ELEMENT CONCRETE_ASPECT_ELEMENT NAME_ATTRIBUTE EXTEND_ATTRIBUTE PRECEDENCE_ATTRIBUTE POINTCUT_ELEMENT WITHIN_ATTRIBUTE EXPRESSION_ATTRIBUTE m_definition m_inAspectJ m_inWeaver m_inAspects m_lastConcreteAspect org.aspectj.weaver.loadtime.definition.DocumentParser  fine, the parser don't do validation\r\n  fine, the parser don't do validation\r\n  fine, the parser don't do validation\r\n  wether a pure precedence def, or an extendsANDprecedence def.\r\n  if no precedence, then extends must be there\r\n  TODO AV - define what we want for XML parser error - for now stderr\r\n  TODO AV do we need to handle \"..)AND\" or \"AND(..\" ?\r\n /* .. and ignore \"System property ... not set\" and then try this instead */\r\n /* Try this first for Java 5 */\r\n","Java":" lang String lang String  Java conflictingPackageNamesWithPackages.Java  ","AjCompilerOptionsTest":" setUp testDefaultValues testDirectSet testMapSet testToString options org.aspectj.ajdt.internal.core.builder.AjCompilerOptionsTest  /*\r\n\t * @see TestCase#setUp()\r\n\t */\r\n /*\r\n\t * Class to test for String toString()\r\n\t */\r\n","UserPreferencesStore":" getProjectPreference getProjectMultivalPreference setProjectPreference setProjectMultivalPreference getPropertiesFilePath getGlobalPreference getGlobalMultivalPreference setGlobalPreference setGlobalMultivalPreference loadProperties saveProperties FILE_NAME VALUE_SEP properties persist org.aspectj.ajde.ui.internal.UserPreferencesStore  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","MultiStructureViewPanel":" jbInit serialVersionUID views_splitPane borderLayout1 org.aspectj.ajde.ui.swing.MultiStructureViewPanel  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","ClassVector":" addElement elementAt removeElementAt toArray vec org.aspectj.apache.bcel.util.ClassVector  /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","ProgramA":"     ","DefaultTracingTest":" test main  DefaultTracingTest  ","PointcutBasedPerClauseImpl":" getPointcutExpression toString pointcutExpression org.aspectj.internal.lang.reflect.PointcutBasedPerClauseImpl  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","CloneablePoint":"     ","AjdeTestCase":" testEmptyAddedForAntJUnit openFile doSynchronousBuild setUp tearDown genStructureModelExternFilePath ideManager testerBuildListener currTestDataPath org.aspectj.ajde.AjdeTestCase  listener leakage in AsmManager induced by the Ajde test suite.\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","FancyGenerator":" prepare filter finalize prepare filter finalize  ca.ubc.cs.spl.aspectPatterns.examples.templateMethod.aspectj.FancyGenerator ca.ubc.cs.spl.aspectPatterns.examples.templateMethod.java.FancyGenerator  ","Precedence":"     ","PerClauseImpl":" getKind toString kind org.aspectj.internal.lang.reflect.PerClauseImpl  /* (non-Javadoc)\r\n\t * @see org.aspectj.lang.reflect.PerClause#getKind()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","Modifiers":"     ","FASTORE":" accept  org.aspectj.apache.bcel.generic.FASTORE  ","Validator":" pushHandler popHandler lock unlock setAbortOnFailure nullcheck nullcheck nullcheck nulldefault nullcheck canRead canRead canRead canWrite canReadDir canWriteDir canReadFiles canReadFiles canReadDirs canReadDirs canWriteFiles canWriteFiles canWriteDirs canWriteDirs info fail fail registerTempFile getWritableDir deleteTempFiles registerSandbox deleteFile getHandler handlers tempFiles sandboxes abortOnFailure locker org.aspectj.testing.harness.bridge.Validator  deleteTempFiles requires ListIterator.remove()\r\n  check dir\r\n  fail if necessary\r\n  XXX assumes all dirs are in sandboxDir\r\n  null file - skip\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","TypeVariablePattern":" accept getName isAnythingPattern getRawTypePattern getUpperBound hasLowerBound getLowerBound hasAdditionalInterfaceBounds getAdditionalInterfaceBounds equals hashCode toString getExtendsClause write read anything name upperBound interfaceBounds lowerBound resolvedType org.aspectj.weaver.patterns.TypeVariablePattern  eg. \"T\"\r\n  default is object unless of the form T extends Bar\r\n  additional upper bounds (must be interfaces) arising from\r\n  only set if type variable is of the form T super Bar\r\n  only set if resolved\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","AfterXTest":" log main suite dupPos testAfterReturningAndThrowing afterRet after2 after afterThrowing afterThrowing2 afterThrowing3 s_log ataspectj.AfterXTest  assertEquals(\"after after2- 2 4 afterRet- 2 \", s_log.toString());\r\n  see BcelWeaver fix in sorting of shadowMungerList\r\n  public void after2(int ret, int arg) {  public void afterThrowing2() {\r\n ","AtAroundTests":" testCodeBasic testAtBasicNoInline testAtBasic testCodeBindingTarget testAtBindingTargetNoInline testAtBindingTarget testCodeBindingTarget2 testAtBindingTargetNoInline2 testAtBindingTarget2 testCodeErrorCase1 testCodeBindThisCallChangeProceed testAtBindThisCallChangeProceedNoInline testAtBindThisCallChangeProceed testCodeBindThisExecutionChangeProceed testAtBindThisExecutionChangeProceedNoInline testAtBindThisExecutionChangeProceed testCodeBindBothExecutionChangeProceed testAtBindBothExecutionChangeProceedNoInline testAtBindBothExecutionChangeProceed testCodeErrorCase2 testCodeChangingTargetDifferingOrder testCodeBindBothCallChangeProceed testAtBindBothCallChangeProceedNoInline testAtBindBothCallChangeProceed testBreakingIt1 testBreakingIt2 testBugCase1 testBugCase2 testMultipleArgs testCodeSubsetArguments suite getSpecFile  org.aspectj.systemtest.ajc151.AtAroundTests  ---\r\n ","CoordinateObserver":"     ","ajcDeclareAnnotation":"     /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","pr128237":" methodExec beforeMethodExec methodA anotherMethod  AbstractTracer Foo  ","CloseConnectionsCflow":"     ","ConcretizationTestCase":" testNothingForAntJUnit createResolvedPointcut  org.aspectj.weaver.patterns.ConcretizationTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","PerCflow":" getBody setBody isBelow setIsBelow propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty clone0 subtreeMatch0 accept0 treeSize accept couldMatchKinds fastMatch matchInternal resolveBindings parameterizeWith findResidueInternal concretize write readPerClause getKind getEntry toString toDeclarationString equals hashCode body BODY_PROPERTY isBelow isBelow entry org.aspectj.org.eclipse.jdt.core.dom.PerCflow org.aspectj.weaver.patterns.PerCflow  $NON-NLS-1$\r\n  percflow or percflowbelow\r\n  allow default implementation to flag the error\r\n  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  assert bindings == null;\r\n  IntMap.EMPTY);\r\n  ATAJ: add a munger to add the aspectOf(..) to the @AJ aspects\r\n  ATAJ inline around advice support - don't use a late munger to allow around inling for itself\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AjcSpecXmlReader":" getReader main writeDTD setLogLevel writeSuiteToXmlFile readAjcSuite makeDigester setupDigester expectedProperties setupDigesterCompileTimeCheck addSuite isDir getPath resolveEntity DTD_PATH DOCTYPE ME LOG logLevel resolver spec cl props NAME suiteFile org.aspectj.testing.xml.AjcSpecXmlReader  use 2 for tracing\r\n  XXX\r\n  trace debug XXX\r\n  user.dir?\r\n  XXX hack fixup\r\n  implement EntityResolver directly; set is failing\r\n  XXX supply sax parser to ignore white space?\r\n  element names come from the element components\r\n  handle messages the same at any level\r\n  digester.addObjectCreate(compileX + \"  ok to have suite messages and global suite options, etc.\r\n  only file subelement of compile uses text as path... XXX vestigial\r\n  the class (e.g., AjcTest.Suite.Spec) refers to the type of the object created\r\n  digester.addSetNext(compileX + \"  addSourceLocation is for the extra\r\n  verbose removed\r\n  mapped from { \"title\", \"dir\", \"pr\"}\r\n  mapped from { \"class\", ...}\r\n  new String[] { \"path\"}),\r\n  crunSpec.addWrapFile((AbstractRunSpec.WrapFile) null);\r\n  input s.b. interpretable by Boolean.valueOf(String)\r\n  first, try id relative to suite file\r\n  then try misc paths relative to suite file or current dir\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC),\r\n *               2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n *     Wes Isberg     resolver\r\n * ******************************************************************/\r\n","ScreenImplementation":" printLine printDecor printText printLine printDecor printText  ca.ubc.cs.spl.aspectPatterns.examples.bridge.aspectj.ScreenImplementation ca.ubc.cs.spl.aspectPatterns.examples.bridge.java.ScreenImplementation  ","ExceptionRange":" associateWithTargets getHandler getCatchType getPriority toString equals hashCode updateTarget isExceptionStart isExceptionEnd handler exceptionType priority hashCode org.aspectj.weaver.bcel.ExceptionRange  assert body.contains(start) && body.contains(end) && body.contains(handler)\r\n  }\r\n  we're guaranteed that start, end, and handler are distinct instruction handles.\r\n /* we're actually using the fact that we're an instruction targeter, for the\r\n * handler */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","CharsUnicode":"     ","IFGE":" negate accept  org.aspectj.apache.bcel.generic.IFGE  ","InlineAccessFieldBinding":" canBeSeenBy getAccessMethod alwaysNeedsAccessMethod getFieldBindingForLookup toString reader writer baseField org.aspectj.ajdt.internal.compiler.lookup.InlineAccessFieldBinding  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","GraphicalVerifier":" main packFrame org.aspectj.apache.bcel.verifier.GraphicalVerifier  Frames packen, die nutzbare bevorzugte Gr��eninformationen enthalten, z.B. aus ihrem Layout\r\n  Das Fenster zentrieren\r\n  Fill list with java.lang.Object\r\n  default, will verify java.lang.Object\r\n ","AtAjMisuseTests":" getSpecFile suite testQAspectClassExtendingQAspectClass testQPointcutNotReturningVoid testQPointcutWithGarbageString testQPointcutWithThrowsClause testQAfterReturningWithWrongNumberOfArgs testQBeforeOnNon_publicMethod testQBeforeOnMethodNotReturningVoid testQBeforeWithPJP  org.aspectj.systemtest.ajc150.ataspectj.AtAjMisuseTests  ","AccBridgeMethods":" suite getSpecFile test001_bridgeMethodIgnored  org.aspectj.systemtest.ajc150.AccBridgeMethods  ","DCONST":" getValue getType accept value org.aspectj.apache.bcel.generic.DCONST  ","AnnotatedWithCombinedAnnotation":"   AnnotatedWithCombinedAnnotation AnnotatedWithCombinedAnnotation  ","ErrorDialog":" jbInit close_button_actionPerformed serialVersionUID top_panel borderLayout2 button_panel close_button jScrollPane1 stackTrace_textArea jPanel1 error_label1 error_label2 borderLayout1 border1 borderLayout3 org.aspectj.ajde.ui.swing.ErrorDialog  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","HasThisTypePatternTriedToSneakInSomeGenericOrParameterizedTypePatternMatchingStuffAnywhereVisitor":" visit visit wellHasItThen ohYesItHas org.aspectj.weaver.patterns.HasThisTypePatternTriedToSneakInSomeGenericOrParameterizedTypePatternMatchingStuffAnywhereVisitor  if (theExactType.isGenericType()) ohYesItHas = true;\r\n /*?*/\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","IFEQ":" negate accept  org.aspectj.apache.bcel.generic.IFEQ  ","IProgressListener":" setText setProgress setCancelledRequested isCancelledRequested  org.aspectj.bridge.IProgressListener  /* *******************************************************************\r\n * Copyright (c) 2003 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","JoinPointMatch":" matches getParameterBindings  org.aspectj.weaver.tools.JoinPointMatch  /* *******************************************************************\r\n * Copyright (c) 2005 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","DASTORE":" accept  org.aspectj.apache.bcel.generic.DASTORE  ","EnergyPacketProducer":" getGame run waitForABit produceAPacket getGame run waitForABit produceAPacket getGame run waitForABit produceAPacket getGame run waitForABit produceAPacket getGame run waitForABit produceAPacket MIN MAX EXPECTEDINTERVAL game MIN MAX EXPECTEDINTERVAL game MIN MAX EXPECTEDINTERVAL game MIN MAX EXPECTEDINTERVAL game MIN MAX EXPECTEDINTERVAL game spacewar.EnergyPacketProducer spacewar.EnergyPacketProducer spacewar.EnergyPacketProducer spacewar.EnergyPacketProducer spacewar.EnergyPacketProducer  /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nEnergyPacketProducer.java\r\nPart of the Spacewar system.\r\n\r\n This implementation creates booby-trapped packets 20% of the time.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nEnergyPacketProducer.java\r\nPart of the Spacewar system.\r\n\r\n This implementation creates booby-trapped packets 20% of the time.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nEnergyPacketProducer.java\r\nPart of the Spacewar system.\r\n\r\n This implementation creates booby-trapped packets 20% of the time.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nEnergyPacketProducer.java\r\nPart of the Spacewar system.\r\n\r\n This implementation creates booby-trapped packets 20% of the time.\r\n\r\n*/\r\n","DeclarePrecedenceTestClass":"     ","MethodAnnotationsTest":" setUp testMethodAnnotations testMethodAnnotationsReadWrite checkAnnotatedMethod checkAnnotation checkValue tearDown  org.aspectj.apache.bcel.classfile.tests.MethodAnnotationsTest  Write it out\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement -     initial implementation \r\n * ******************************************************************/\r\n","TextFactory":" getExtensionClass getExtensionClass  com.nwalsh.saxon.TextFactory com.nwalsh.saxon.TextFactory  TextFactory - Saxon extension element factory\r\n  TextFactory - Saxon extension element factory\r\n ","ConstantValue":" accept dump getConstantValueIndex setConstantValueIndex toString copy constantvalue_index org.aspectj.apache.bcel.classfile.ConstantValue  Print constant to string depending on its type\r\n ","AnnotationClassElement":"     ","MonitorObservation":"     ","Driver":" main test main test main test main test main test main test main doOtherStuff doStuff main main main test main main test main test main test foo foo main test getEntry main m main test main result getIt main test main test main getFoo bar test bar v isInst v v x value completed completed v foo Driver Driver Driver Driver Driver test135.Driver main.Driver Driver Driver Driver p.Driver Driver otherpkg.Driver Driver Driver typeNameConflicts.Driver Driver C Driver C Driver Driver Driver Foo  System.out.println(\"Invoking SubClass's getX method\");\r\n  of the joinpoint seems to always be null.\r\n  !!!\r\n  System.out.println(jpf.parameters);\r\n  proper values for thisJoinPoint attributes\r\n  local variable declaration in the init part of a for\r\n  init part without local var declaration\r\n  PUREJAVA: Corrrect supercall lookup for method().name()\r\n ","ExecutableMemberSubWriter":" where label printIntroducedSummaryLink printCrosscuts printSummaryCrosscuts hasCrosscuts  org.aspectj.tools.doclets.standard.ExecutableMemberSubWriter  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","ConversionInstruction":" getType  org.aspectj.apache.bcel.generic.ConversionInstruction  Never reached\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","AddObjectMethodProblem":"     ","RETURN":" accept  org.aspectj.apache.bcel.generic.RETURN  ","Proxy":"     ","StringRepresentation":" toString toString visitCode visitCodeException visitConstantClass visitConstantDouble visitConstantFieldref visitConstantFloat visitConstantInteger visitConstantInterfaceMethodref visitConstantLong visitConstantMethodref visitConstantNameAndType visitConstantPool visitConstantString visitConstantUtf8 visitConstantValue visitDeprecated visitExceptionTable visitField visitInnerClass visitInnerClasses visitJavaClass visitLineNumber visitLineNumberTable visitLocalVariable visitLocalVariableTable visitMethod visitSignature visitSourceFile visitStackMap visitSynthetic visitUnknown visitRuntimeVisibleAnnotations visitRuntimeInvisibleAnnotations visitRuntimeVisibleParameterAnnotations visitRuntimeInvisibleParameterAnnotations visitAnnotationDefault visitLocalVariableTypeTable tostring n org.aspectj.apache.bcel.verifier.statics.StringRepresentation  assign a string representation to field 'tostring' if we know n's class.\r\n  want to know that this class has also to be adapted.\r\n  We don't need real code outputs.\r\n  lengthy Code attribute's toString().\r\n /* BCEL can be harsh e.g. trying to convert the \"signature\" of a ReturnaddressType LocalVariable (shouldn't occur, but people do crazy things) */\r\n","SourceLocationToString":"     ","AtAJAspect":" m  AtAJAspect  ","BrowserViewProperties":" getStructureViewOrdering setStructureViewOrdering setActiveAssociations setActiveFilteredMemberKinds getActiveHierarchy setActiveHierarchy getActiveVisibility setActiveVisiblity getActiveModifiers getActiveFilteredMemberKinds getActiveGranularity setActiveGranularity setActiveModifiers getProperty getPropertyValues storeProperty storeProperty saveProperties getPropertiesFilePath FILE_NAME VALUE_SEP properties org.aspectj.ajde.ui.internal.BrowserViewProperties  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","StructureViewRenderer":" updateView setActiveNode setActiveNode  org.aspectj.ajde.ui.StructureViewRenderer  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","NullIdeProgressMonitor":" start setProgressText setProgressBarVal incrementProgressBarVal setProgressBarMax getProgressBarMax finish  org.aspectj.ajde.NullIdeProgressMonitor  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * ******************************************************************/\r\n","IFGT":" negate accept  org.aspectj.apache.bcel.generic.IFGT  ","PointcutDesignator":" postParse finishResolveTypes getPointcut getPointcutDeclarationText isError print getNodeType0 memSize pointcut tokens isError org.aspectj.ajdt.internal.compiler.ast.PointcutDesignator org.aspectj.org.eclipse.jdt.core.dom.PointcutDesignator  ??? is this a good signal\r\n  called by AtAspectJVisitor\r\n  shadow mungers early.\r\n  ajh02: hmmmmmmm.. should make a POINTCUT_DESIGNATOR thing\r\n  ajh02: stub method\r\n /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.ast.ASTNode#print(int, java.lang.StringBuffer)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ClosingBrace":"     ","Subject":" addObserver removeObserver getObservers getData addObserver removeObserver getObservers  observer.Subject Subject  Subject.java\r\n /*\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n*/\r\n","BreakpointTester":" main getClassName test  BreakpointTester  stopat(\"TestClassAspect\", 41);\r\n ","Answer":"     ","BadNewArrayExprs":" main o BadNewArrayExprs  ","SynchronizationTransformTests":" testInvestigatingTransforming testTransform1 testTransform2 testTransform3 testTransform4 testStaticSynchronizedMethodTransformJava5 testStaticSynchronizedMethodTransformPreJava5 testLockPcdOnTransformedNonStaticMethod testUnlockPcdOnTransformedNonStaticMethod testLockPcdOnTransformedStaticMethod testUnlockPcdOnTransformedStaticMethod testLockPcdOnTransformedStaticMethodPreJ5 testUnlockPcdOnTransformedStaticMethodPreJ5 testJoinpointsEnabledButNoLock testTransformWithLTW testTransformStaticMethodPreJava5 testTransformStaticMethodPreJava5_2 testOtherTargeters checkMethod getMethod getBcelObjectFor ensureWorldSetup getMethod dump compareMethod stringify saveMethod checkModel1 suite getSpecFile tearDown regenerate world org.aspectj.systemtest.ajc152.SynchronizationTransformTests  similar output to One.b\r\n  before() on execution jp\r\n  like m() but synchronized block\r\n  like m2() but synchronized block\r\n  after() throwing -> add a catch block that calls the advice\r\n  like testTransform3() but pointcuts explicitly specify synchronized\r\n  Java5 variant\r\n  < Java5 variant\r\n  more complex code sequences...\r\n  Load the file in\r\n  Verifies only one unlock relationship, not two\r\n  that seems to be the case anyway (peculiar...)\r\n  ---\r\n /*LazyMethodGen*/\r\n","ColorObserver":"     ","ClassAnnotationValue":" stringify toString signature org.aspectj.weaver.ClassAnnotationValue  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","GenericSignatureParsingTest":" testParsingGenericSignatures_ClassTypeSignature testMethodTypeToSignature testMethodSignatureToArgumentTypes testMethodSignatureReturnType testLoadingGenerics checkClassTypeSignature checkMethodTypeToSignature checkMethodSignatureReturnType checkMethodSignatureArgumentTypes getSignatureAttribute  org.aspectj.apache.bcel.classfile.tests.GenericSignatureParsingTest  trivial\r\n  basics\r\n  madness\r\n  with type params\r\n  arrays\r\n  These routines call BCEL to determine if it can correctly translate from one form to the other.\r\n /* *******************************************************************\r\n * Copyright (c) 2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement (IBM)     initial implementation \r\n * ******************************************************************/\r\n","Robot":" start destroy run sleepForABit start destroy run sleepForABit start destroy run sleepForABit start destroy run sleepForABit start destroy run sleepForABit FIRE_INTERVAL REBIRTH_DELAY random runner runnable FIRE_INTERVAL REBIRTH_DELAY random runner runnable FIRE_INTERVAL REBIRTH_DELAY random runner runnable FIRE_INTERVAL REBIRTH_DELAY random runner runnable FIRE_INTERVAL REBIRTH_DELAY random runner runnable spacewar.Robot spacewar.Robot spacewar.Robot spacewar.Robot spacewar.Robot  find target ship\r\n  main loop\r\n  if my ship is destroyed, give me a new one\r\n  find direction and distance from target to me\r\n  find relative velocity and trajectory of target\r\n  find angle between line to target and taget's direction of travel\r\n  calculate time to bullet impact using law of cosines\r\n  calculate angle and distance to bullet impact location\r\n  find desired change in rotation\r\n  find the shortest path to the desired orientation;\r\n  otherwise, fire, maybe even a burst\r\n  turn if nessecary\r\n  prevent ships from accelerating too much in one direction\r\n  randomly accelerate\r\n  switch targets if current one has been destroyed\r\n  randomly switch targets\r\n  A Robot tracks User-controlled ships and fires at them\r\n  find target ship\r\n  main loop\r\n  if my ship is destroyed, give me a new one\r\n  find direction and distance from target to me\r\n  find relative velocity and trajectory of target\r\n  find angle between line to target and taget's direction of travel\r\n  calculate time to bullet impact using law of cosines\r\n  calculate angle and distance to bullet impact location\r\n  find desired change in rotation\r\n  find the shortest path to the desired orientation;\r\n  otherwise, fire, maybe even a burst\r\n  turn if nessecary\r\n  prevent ships from accelerating too much in one direction\r\n  randomly accelerate\r\n  switch targets if current one has been destroyed\r\n  randomly switch targets\r\n  A Robot tracks User-controlled ships and fires at them\r\n  find target ship\r\n  main loop\r\n  if my ship is destroyed, give me a new one\r\n  find direction and distance from target to me\r\n  find relative velocity and trajectory of target\r\n  find angle between line to target and taget's direction of travel\r\n  calculate time to bullet impact using law of cosines\r\n  calculate angle and distance to bullet impact location\r\n  find desired change in rotation\r\n  find the shortest path to the desired orientation;\r\n  otherwise, fire, maybe even a burst\r\n  turn if nessecary\r\n  prevent ships from accelerating too much in one direction\r\n  randomly accelerate\r\n  switch targets if current one has been destroyed\r\n  randomly switch targets\r\n  A Robot tracks User-controlled ships and fires at them\r\n  find target ship\r\n  main loop\r\n  if my ship is destroyed, give me a new one\r\n  find direction and distance from target to me\r\n  find relative velocity and trajectory of target\r\n  find angle between line to target and taget's direction of travel\r\n  calculate time to bullet impact using law of cosines\r\n  calculate angle and distance to bullet impact location\r\n  find desired change in rotation\r\n  find the shortest path to the desired orientation;\r\n  otherwise, fire, maybe even a burst\r\n  turn if nessecary\r\n  prevent ships from accelerating too much in one direction\r\n  randomly accelerate\r\n  switch targets if current one has been destroyed\r\n  randomly switch targets\r\n  A Robot tracks User-controlled ships and fires at them\r\n  find target ship\r\n  main loop\r\n  if my ship is destroyed, give me a new one\r\n  find direction and distance from target to me\r\n  find relative velocity and trajectory of target\r\n  find angle between line to target and taget's direction of travel\r\n  calculate time to bullet impact using law of cosines\r\n  calculate angle and distance to bullet impact location\r\n  find desired change in rotation\r\n  find the shortest path to the desired orientation;\r\n  otherwise, fire, maybe even a burst\r\n  turn if nessecary\r\n  prevent ships from accelerating too much in one direction\r\n  randomly accelerate\r\n  switch targets if current one has been destroyed\r\n  randomly switch targets\r\n  A Robot tracks User-controlled ships and fires at them\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nRobot.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nRobot.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nRobot.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n /*\r\n\r\nCopyright (c) Xerox Corporation 1998-2002.  All rights reserved.\r\n\r\nUse and copying of this software and preparation of derivative works based\r\nupon this software are permitted.  Any distribution of this software or\r\nderivative works must comply with all applicable United States export control\r\nlaws.\r\n\r\nThis software is made available AS IS, and Xerox Corporation makes no warranty\r\nabout the software, its performance or its conformity to any specification.\r\n\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n|<---            this code is formatted to fit into 80 columns             --->|\r\n\r\n\r\nRobot.java\r\nPart of the Spacewar system.\r\n\r\n*/\r\n","RestrictingVisibilityCP":"     ","HasAspect":"     ","TraceMains":"     ","TestB_generictype":"   TestB_generictype  ","BranchInstruction":" dump getTargetOffset getTargetOffset updatePosition toString initFromFile getIndex getTarget setTarget notifyTarget updateTarget containsTarget dispose index target position org.aspectj.apache.bcel.generic.BranchInstruction  Branch target relative to this instruction\r\n  Target object in instruction list\r\n  Byte code offset\r\n  too large for short\r\n  May be negative, i.e., point backwards\r\n  Avoid circles\r\n ","AspectOfInterface":"     ","ParserRecoveryTestPureJava":"     ","HoldProceed":"     ","BuildConfigurationTests":" main suite testCharacterEncoding testComplianceLevel testSourceCompatibilityLevel testSourceIncompatibilityLevel testNullWarnings testSetOfWarnings testNoDebugOptions testEmptyDebugOptions testDebugAll testDebugSet testNoImport testPreserveAllLocals testNonStandardOptions testSourceRoots testInJars testAspectPath testOutJar testXHasMember setUp tearDown assertOptionEquals compilerAdapter buildConfig buildOptions preferencesAdapter projectProperties messageHandler configFile org.aspectj.ajde.BuildConfigurationTests  The tests...\r\n  this config should \"fail\" and leave source level at 1.4\r\n  this should leave us with the default warnings\r\n  turned on\r\n  this should leave us with the default debug settings\r\n  this should leave us with the default debug\r\n  this should leave us with all debug on\r\n  this should leave us with all debug on\r\n  and a few options thrown in at once\r\n  String s = null;\r\n ","InstanceAsClassRefToConstant":" main main MAX InstanceAsClassRefToConstant CWithLongConst A TestCase  stack size is -1 after stmt BreakStmt(label: null) (warning)\r\n  b) Sanity check: stack size is -1 after stmt ExprStmt() (warning)\r\n ","LoggingAspect":" aspectOf ajc$afterReturning$test_LoggingAspect$1$188fbb36 ajc$postClinit ajc$perSingletonInstance ajc$initFailureCause test.LoggingAspect  ","ClassWithNestedAspect":"     ","LocalVariableTypeTable":" accept dump getLocalVariableTypeTable getLocalVariable setLocalVariableTable toString copy getTableLength local_variable_type_table_length local_variable_type_table org.aspectj.apache.bcel.classfile.LocalVariableTypeTable  Table of local\r\n  variables\r\n  J5TODO: Needs some testing !\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * \r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *    Andy Clement     initial implementation \r\n *    Heavily based on LocalVariableTable\r\n * ******************************************************************/\r\n","FileSystemComponent":" add remove getChild getChildCount getSize  ca.ubc.cs.spl.aspectPatterns.examples.composite.java.FileSystemComponent  ","TargetClassCP":" main getboolean valid run ok result_cast f field TargetClassCP TargetClass SubClass  ","SensitiveData":"     ","MethodIntroductions":"     ","BigMethod":"     ","PseudoToken":" toString getString isIdentifier getLiteralKind maybeGetParsedPointcut getStart getEnd getFileName postParse print value isIdentifier literalKind parser org.aspectj.ajdt.internal.compiler.ast.PseudoToken  /* (non-Javadoc)\r\n\t * @see org.eclipse.jdt.internal.compiler.ast.ASTNode#print(int, java.lang.StringBuffer)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","FilteredDecList":" sameType checkDec add add add add add add denied denied filter classDocImpl declaringType org.aspectj.tools.ajdoc.FilteredDecList  /*\r\n          System.err.println(\"sameType(\"+dec+\") \" + declaringType \r\n          + \" ?= \" + other);\r\n          if (!result) {\r\n          System.err.println(\"false FilteredDecList.sameType(\" + dec \r\n          + \") us \" + declaringType);\r\n          }\r\n        */\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","VerificationResult":" getStatus getMessage equals toString VERIFIED_NOTYET VERIFIED_OK VERIFIED_REJECTED VERIFIED_NOTYET_MSG VERIFIED_OK_MSG VR_NOTYET VR_OK numeric detailMessage org.aspectj.apache.bcel.verifier.VerificationResult  ","TargetClassCF":" main getboolean valid run result_cast f TargetClassCF TargetClass PureJava  s.b. PureJava\r\n  s.b. PureJava\r\n  s.b. PureJava\r\n  s.b. PureJava\r\n ","Pass3bVerifier":" add isEmpty remove remove getIC getEC size circulationPump do_verify getMethodNo ics ecs DEBUG myOwner method_no org.aspectj.apache.bcel.verifier.structurals.Pass3bVerifier  Type: InstructionContext\r\n  Type: ArrayList (of InstructionContext)\r\n  new ArrayList() <=>\tno Instruction was executed before\r\n  => Top-Level routine (no jsr call before)\r\n  Normal successors. Add them to the queue of successors.\r\n  JSR that was recently executed.\r\n  Sanity check\r\n  System.err.println(\"+\"+oldchain.get(ss));\r\n  [subroutines are never protected; mandated by JustIce]\r\n  icq.add(v, (ArrayList) newchain.clone());\r\n  LOOP!\r\n  TODO: This is buggy, we check only the top-level return instructions this way. Maybe some maniac returns from a method when in a subroutine?\r\n  in the BCEL repository.\r\n  Init Visitors\r\n  Method no \"method_no\" exists, we ran Pass3a before on it!\r\n  Build the initial frame situation for this method.\r\n   ","RestrictingVisibilityCF":" main publicAccess protectedAccess defaultAccess privateAccess drivePrivateAccess publicAccess defaultAccess protectedAccess defaultAccess publicAccess protectedAccess publicAccess publicAccess protectedAccess defaultAccess privateAccess defaultAccessSub foo RestrictingVisibilityCF Parent InValidChild InValidChild2 InValidChild3 InValidChild4  errLine 27\r\n  errLine 29\r\n  errLine 31\r\n  todo: sep package, attempt package acces\r\n  errLine 39\r\n  errLine 41\r\n  errLine 46\r\n  errLine 48\r\n  errLine 53\r\n ","Subclass":"   Subclass  ","IFLT":" negate accept  org.aspectj.apache.bcel.generic.IFLT  ","FNEG":" accept  org.aspectj.apache.bcel.generic.FNEG  ","SuperIntroductionSubWriter":" delegateClass keyName printInheritedSummaryAnchor printInheritedSummaryLabel printInheritedSummaryLink printSummaryLink link printSummaryType printBodyHtmlEnd nonfinalPrintMember printDeprecatedLink getMembers printCrosscuts printSummaryCrosscuts hasCrosscuts  org.aspectj.tools.doclets.standard.SuperIntroductionSubWriter  XXX ????\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","AdviceOnAdvice":"     ","Implementation":" doSomething  Implementation  ","ConstructorInvocationClosure":" getConstructor  org.aspectj.aopalliance.ConstructorInvocationClosure  /* (non-Javadoc)\r\n\t * @see org.aopalliance.intercept.MethodInvocation#getMethod()\r\n\t */\r\n","NotIf":"     ","AroundInlineMungerTestAspects":" superMethod around1 before1 around2 around3 priv priv aroundCount beforeCount i I ataspectj.AroundInlineMungerTestAspects  fails to be wrapped so this advice will not be inlined but previous call were still prepared\r\n  this advice to test around advice body call  fails to be wrapped so next calls won't be prepared but previous was\r\n  all those field access will be wrapped\r\n  aspect will be prepared for inlining\r\n ","ASTNode":"   org.aspectj.weaver.ast.ASTNode  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","RunSpec":" execute setSystemProperty copyProperty restoreProperties addExpectedMessage setBaseDir setTest getOptions setOptions getClasspath setClasspath addStdErrSpec addStdOutSpec getClassToRun setClassToRun getLtwFile setLtwFile buildArgs copyLtwFile getXlintFile setXlintFile copyXlintFile expected classToRun baseDir options cpath myTest stdErrSpec stdOutSpec ltwFile xlintFile savedProperties NULL org.aspectj.testing.RunSpec  System.err.println(\"? execute() inTestCase='\" + inTestCase + \"', ltwFile=\" + ltwFile);\r\n  TODO maw use flag rather than empty file name\r\n  System.out.println(\"RunSpec.copyLtwFile() from=\" + from.getAbsolutePath() + \" to=\" + to.getAbsolutePath());\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.testing.ITestStep#execute(org.aspectj.tools.ajc.AjcTestCase)\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Adrian Colyer, \r\n * ******************************************************************/\r\n","AbstractAspect":"     ","BoundaryNums":" main  BoundaryNums  Boundary base values can be parsed\r\n ","Ajc121Tests":" suite getSpecFile test001 test002 test003 test004 test005 test006 test007 test008 test009 test010 test011 test012 test013 test014 test015_invalidXlint test016_ByteConversionInstructions test017_PrivateMethodCallsInAroundAdvice test018_PrivateFieldSetsInAroundAdvice test019_PrivateFieldGetsInAroundAdvice test023_proceedInAround1 test024_proceedInAround2 test025_proceedInAround3 test026_bindingThisAndTargetToTheSameFormal test027_itdsOnInnerClassesAsStatic test028_itdsAndInitializers test029_falseInvalidAbsoluteTypeName test030_privateITDinitialisersBeingMatched test031_privateITDinitialisersBeingMatched_OxfordTest test032_stringConcatForDEOW test033_stringConcatForDEOWErrorCase test034_scopeForITDS_pr61768 test035_innerAspectCallsPrivateMethod_pr71372 test036_innerAspectCallsPrivateMethod_pr71372_2 test037_innerAspectCallsPrivateMethod_pr71372_3 test038_innerAspectCallsPrivateMethod_pr71372_4 test039_privilegedAspectAccessingPrivateMethods_pr67579 test040_privilegedAspectAccessingPrivateMethods_pr67579_2 test041_ITDaccessingPrivateMethod_pr67578 test042_ITDaccessingPrivateMethod_pr67578_2 test043_pr62642_ExceptionInInitializerError test044_ITDnameClashes test045_ITDprotectedVisibility test045_wrongLineForExecutionJoinPoint test046_interfaceITD_pr70794_1 test047_interfaceITD_pr70794_2 test048_interfaceITD_pr70794_3 test049_interfaceITD_pr70794_4 test050_typePatternMatchingWithArrays test052_bogusMessage1 test053_bogusMessage2 test054_cnfe test055_cnfe test056_arrayCloning test057_decSoftWithSuper test058_npeOnTJPerror test059_cflowOptimization_counters test060_cflowOptimization_counters test061_cflowOptimization_counters test062_cflowOptimization_counters test063_cflowOptimization_countersWithAbstractPcuts test064 countLines test065  org.aspectj.systemtest.ajc121.Ajc121Tests  keywords: \"laurie hendren\"\r\n  System.err.println(\">\"+getLastRunResult().getStdErr());\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","RegexpFactory":" makeRegexp getGroups matches setPattern getPattern pattern regexp org.aspectj.testing.compare.RegexpFactory org.aspectj.testing.compare.RegExpDelegate  currently in aspectj-external-lib /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Common Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/cpl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","StraySlash":"     ","CrossCapitalImplementation":" printLine printDecor printText printLine printDecor printText  ca.ubc.cs.spl.aspectPatterns.examples.bridge.aspectj.CrossCapitalImplementation ca.ubc.cs.spl.aspectPatterns.examples.bridge.java.CrossCapitalImplementation  ","OutputLocationAdapter":" getOutputLocationForClass getOutputLocationForResource locationManager org.aspectj.ajde.internal.OutputLocationAdapter  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *   Adrian Colyer\t\t\tInitial implementation\r\n * ******************************************************************/\r\n","Annotated":"   Annotated  ","AssertInInnerIntro":"     ","Enums":" suite getSpecFile test001_itdcsOnEnumNotAllowed test002_itdFieldOrMethodOnEnumNotAllowed test003_decpOnEnumNotAllowed_errors test004_decpOnEnumNotAllowed_xlints  org.aspectj.systemtest.ajc150.Enums  Cannot make ITDC on an enum\r\n  Cannot make ITDM or ITDF on an enum\r\n  Deals with the cases where an explicit type is specified and it is an enum type\r\n  Deals with the cases where an wild type pattern is specified and it hits an enum type\r\n ","IFLE":" negate accept  org.aspectj.apache.bcel.generic.IFLE  ","SubAtAspect":"   SubAtAspect  ","InnerFlow":" main m  InnerFlow Interface  ERR: o not initialized\r\n  no exceptions\r\n ","AroundVoid":"     ","BadBinding":"     ","PerFromSuper":" accept couldMatchKinds fastMatch matchInternal resolveBindings findResidueInternal concretize parameterizeWith lookupConcretePerClause write readPerClause toString toDeclarationString getKind equals hashCode kind org.aspectj.weaver.patterns.PerFromSuper  AV: fallback on something else NPE in AJDT\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","SerializedOf":"     ","ICommandEditor":" editCommand  org.aspectj.tools.ant.taskdefs.ICommandEditor  /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Wes Isberg     initial implementation \r\n * ******************************************************************/\r\n","LoadingException":"   org.aspectj.apache.bcel.verifier.exc.LoadingException  ","FieldSetTestCase":" testBefore  org.aspectj.weaver.bcel.FieldSetTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ConstructorSubWriter":" printMembersSummary printMembers navSummaryLink navDetailLink setDelegator printSummaryMember delegateClass getMemberKind propertyName mw org.aspectj.tools.doclets.standard.ConstructorSubWriter  XXX hack!!!\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","LASTORE":" accept  org.aspectj.apache.bcel.generic.LASTORE  ","OneArgCallsIsOkay":"     ","TraceCalls":"     ","DeclareAtConstructorDeclaration":" clone0 subtreeMatch0 accept0 internalModifiersProperty internalModifiers2Property internalJavadocProperty propertyDescriptors internalStructuralPropertiesForType internalGetSetChildProperty internalPatternNodeProperty internalAnnotationNameProperty JAVADOC_PROPERTY PATTERN_PROPERTY ANNOTATION_NAME_PROPERTY PROPERTY_DESCRIPTORS org.aspectj.org.eclipse.jdt.core.dom.DeclareAtConstructorDeclaration  dispatch to correct overloaded match method\r\n  visit children in normal left to right reading order\r\n  allow default implementation to flag the error\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on ASTNode.\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - therefore\r\n\t * we don't do anything with this\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on BodyDeclaration.\r\n\t * \r\n\t * There are no modifiers declared for DeclareErrorDeclaration - therefore\r\n\t * we don't do anything with this\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on BodyDeclaration.\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on ASTNode.\r\n\t */\r\n /*\r\n\t * (omit javadoc for this method) Method declared on ASTNode.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on DeclareAnnotationDeclaration.\r\n\t */\r\n /* (omit javadoc for this method)\r\n\t * Method declared on DeclareAnnotationDeclaration.\r\n\t */\r\n","MethodHTML":" writeField writeMethod class_name file constant_html attribute_html org.aspectj.apache.bcel.util.MethodHTML  name of current class\r\n  file to write to\r\n  Write them to the Attributes.html file with anchor \"<name>[<i>]\"\r\n  Default value\r\n  Reference attribute in _attributes.html\r\n  Get raw signature\r\n  Get array of strings containing the argument types\r\n  Get return type string\r\n  Get method name\r\n  Get method's access flags\r\n  Get the method's attributes, the Code Attribute in particular\r\n  Check for thrown exceptions\r\n /* HTML doesn't like names like <clinit> and spaces are places to break\r\n     * lines. Both we don't want...\r\n     */\r\n","IntLiteral":"     ","Member":" read resolve compareTo toLongString getKind getDeclaringType getReturnType getGenericReturnType getType getName getParameterTypes getSignature getJoinPointSignatures getArity getParameterSignature isCompatibleWith getModifiers getModifiers getExceptions isProtected isStatic isStrict isStatic isInterface isPrivate canBeParameterized getCallsiteModifiers getExtractableName hasAnnotation getAnnotationTypes getAnnotations getDeclaringTypes getSignatureMakerName getSignatureType getSignatureString getParameterNames NONE METHOD FIELD CONSTRUCTOR STATIC_INITIALIZATION POINTCUT ADVICE HANDLER MONITORENTER MONITOREXIT org.aspectj.weaver.Member  ---- reflective thisJoinPoint stuff\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.weaver.AnnotatedElement#getAnnotationTypes()\r\n\t */\r\n /*ResolvedType*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n *               2005 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation\r\n *     AMC      extracted as interface \r\n * ******************************************************************/\r\n","AnnotationNameValuePair":" getName getValue toString stringify name val org.aspectj.weaver.AnnotationNameValuePair  /* *******************************************************************\r\n * Copyright (c) 2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Andy Clement IBM     initial implementation \r\n * ******************************************************************/\r\n","UnprivilegedAspect":"     ","ConsoleMessageHandlerTestCase":" testIgnoringInfoMessages testHandlingInfoMessages testOutput  org.aspectj.ajdt.ajc.ConsoleMessageHandlerTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","PackageDoc":" aspects  org.aspectj.ajdoc.PackageDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","IfPointcutTest":" log hello testIf main suite positive before s_log ataspectj.IfPointcutTest  unchanged\r\n ","ModelPerformanceTest":" main testNothingButKeepAntJUnitHappy skip_testRelativeToNoModel timedBuild setUp tearDown CONFIG_FILE_PATH org.aspectj.ajde.ModelPerformanceTest  TODO-path\r\n /* *******************************************************************\r\n * Copyright (c) 2003 Contributors.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Mik Kersten     initial implementation \r\n * ******************************************************************/\r\n","FormatTextCallout":" formatCallout formatCallout formatCallout  com.nwalsh.saxon.FormatTextCallout com.nwalsh.saxon.FormatTextCallout com.nwalsh.xalan.FormatTextCallout  ","StandardObjectChecker":" isValid doIsValid type delegate collector collectionResult org.aspectj.testing.util.StandardObjectChecker  /*\r\n * StandardObjectChecker.java created on May 7, 2002\r\n *\r\n */\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","PipeliningTests":" testBuildTwoClasses testBuildOneAspectTwoClasses testBuildTwoClassesOneAspect testBuildTwoAspects testBuildClassAndNestedAspect testAspectExtendsClass testRecognizingAnnotationStyleAspects1 testRecognizingAnnotationStyleAspects2 testAnnotationTransformation tearDown suite getSpecFile  org.aspectj.systemtest.ajc153.PipeliningTests  import org.aspectj.ajdt.internal.compiler.AjPipeliningCompilerAdapter;\r\n  straightforward compilation\r\n  verifying the type sorting\r\n  verifying the new code for transforming Eclipse Annotations into AspectJ ones\r\n  --\r\n ","IncrementalTests":" suite getSpecFile setUp tearDown test001 test002 test003 test004 test005 test006 test007 test008 testIncrementalOKWithOutputPathOnClasspath test009 test010 test011 test012 testIncrementalResourceAdditionToInPath testAdditionOfResourceToInJar testRemovalOfResourceFromInJar testAdditionOfClassToInPathJar testRemovalOfClassFromInPathJar testAdditionOfClassToInJarJar testRemovalOfClassFromInJarJar testAdditionOfClassToInPathDir testRemovalOfClassFromInPathDir testUpdateOfClassInInPathDir testUsesPointcutRelsWhenReferringToPCTIn2ndFile_pr90806 testPersistingDeow_pr84033 pathChange org.aspectj.systemtest.incremental.IncrementalTests  resources are *NOT* copied from inpath directories\r\n  resources *are* copied from inpath jars\r\n  resources *are* copied from inpath jars\r\n /* (non-Javadoc)\r\n\t * @see org.aspectj.testing.XMLBasedAjcTestCase#setUp()\r\n\t */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved.\r\n * This program and the accompanying materials are made available\r\n * under the terms of the Eclipse Public License v1.0\r\n * which accompanies this distribution and is available at\r\n * http://www.eclipse.org/legal/epl-v10.html \r\n * \r\n * ******************************************************************/\r\n","IFNE":" negate accept  org.aspectj.apache.bcel.generic.IFNE  ","WeavingAdaptor":" getFullClassPath getFullAspectPath getVerbose init createMessageHandler getMessageHandler setMessageHandler disable isEnabled addURL weaveClass couldWeave accept shouldDump shouldWeaveName shouldWeaveAnnotationStyleAspect asmCheckAnnotationStyleAspect ensureDelegateInitialized getWovenBytes getAtAspectJAspectBytes registerAspectLibraries addAspectLibrary makeClasspath info warn warn error getContextId dump handleMessage traceMessage render isIgnoring dontIgnore addMessage flushMessages setDelegate handleMessage isIgnoring ignore dontIgnore render setApplyAtAspectJMungersOnly isApplyAtAspectJMungersOnly getBytes getClassFileIterator getRequestor WEAVING_ADAPTOR_VERBOSE SHOW_WEAVE_INFO_PROPERTY TRACE_MESSAGES_PROPERTY enabled verbose bcelWorld weaver messageHandler messageHolder generatedClassHandler generatedClasses delegateForCurrentClass trace delegate accumulating messages traceMessages ignoring failKind unwovenClass unwovenClasses wovenClass isApplyAtAspectJMungersOnly org.aspectj.weaver.tools.WeavingAdaptor  lazily initialized, should be used to prevent parsing bytecode multiple times\r\n  System.err.println(\"? WeavingAdaptor.<init>(\" + loader +\",\" + aspectURLs.length + \")\");\r\n  System.err.println(\"? WeavingAdaptor.<init>()\");\r\n  $NON-NLS-1$\r\n  an @AspectJ aspect needs to be at least munged by the aspectOf munger\r\n  and not be included in the full set of aspects being applied by 'this' weaver\r\n  ATAJ\r\n  JDK reflect\r\n  || name.startsWith(\"$Proxy\")  if anything goes wrong, e.g., an NPE, then assume it's NOT an @AspectJ aspect...\r\n  , ClassReader.SKIP_DEBUG | ClassReader.SKIP_CODE | ClassReader.SKIP_FRAMES);\r\n  System.err.println(\"? WeavingAdaptor.registerAspectLibraries(\" + aspectPath + \")\");\r\n  System.out.println(\"WeavingAdaptor.dump() fileName=\" + new File(fileName).getAbsolutePath());\r\n /*\r\n\t * Register an aspect library with this classloader for use during\r\n\t * weaving. This class loader will also return (unmodified) any of the\r\n\t * classes in the library in response to a <code>findClass()</code> request.\r\n\t * The library is not required to be on the weavingClasspath given when this\r\n\t * classloader was constructed. \r\n\t * @param aspectLibraryJarFile a jar file representing an aspect library\r\n\t * @throws IOException\r\n\t */\r\n /* List<UnovenClassFile> */\r\n /* Classes generated by weaver e.g. around closure advice */\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Matthew Webster, Adrian Colyer, \r\n *     Martin Lippert     initial implementation \r\n * ******************************************************************/\r\n","FacadePolicyEnforcement":"     ","AjcTaskTester":" getAntFile getUserProperties test1 test2 test3 test4 test4b test5 test5b test6 test6b test8 test9 test10 test11 test12 test13 fail1 fail2 fail3 test1_fork test2_fork test3_fork test4_fork test4b_fork test5_fork test5b_fork test6_fork test6b_fork test8_fork test9_fork test10_fork test11_fork test12_fork test13_fork fail1_fork fail2_fork fail3_fork beforeEveryTask afterEveryTask wantClasses wantClasses wantClasses checkClasses init makeBuildDir clearBuildDir main TEST_CLASSES TEST_SOURCES buildDir AjcTaskTester  ","ProgramElementDoc":"   org.aspectj.ajdoc.ProgramElementDoc  /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","AjBuildConfig":" toString equals hashCode getFiles getBinaryFiles getOutputDir getCompilationResultDestinationManager setCompilationResultDestinationManager setFiles setOutputDir getOptions getClasspath setClasspath getBootclasspath setBootclasspath getOutputJar getOutxmlName getInpath getInJars getSourcePathResources setOutputJar setOutxmlName setInJars setInPath getSourceRoots setSourceRoots getConfigFile setConfigFile setIncrementalMode isIncrementalMode setIncrementalFile isIncrementalFileMode getFullClasspath getLintSpecFile setLintSpecFile getAspectpath setAspectpath hasSources installGlobals join join setSourcePathResources shouldProceed doNotProceed getLintMode setLintMode isTerminateAfterCompilation setTerminateAfterCompilation isXserializableAspects setXserializableAspects setXJoinpoints getXJoinpoints isXnoInline setXnoInline isXlazyTjp setXlazyTjp setXnotReweavable setXconfigurationInfo getXconfigurationInfo setXHasMemberSupport isXHasMemberEnabled setXdevPinpointMode isXdevPinpoint setAddSerialVerUID isAddSerialVerUID isXNotReweavable isGenerateJavadocsInModelMode setGenerateJavadocsInModelMode isGenerateCrossRefsMode setGenerateCrossRefsMode isEmacsSymMode setEmacsSymMode isGenerateModelMode setGenerateModelMode isNoAtAspectJAnnotationProcessing setNoAtAspectJAnnotationProcessing setShowWeavingInformation getShowWeavingInformation setProceedOnError getProceedOnError setBehaveInJava5Way getBehaveInJava5Way setTargetAspectjRuntimeLevel getTargetAspectjRuntimeLevel shouldProceed AJLINT_IGNORE AJLINT_WARN AJLINT_ERROR AJLINT_DEFAULT outputDir outputJar outxmlName compilationResultDestinationManager sourceRoots files binaryFiles inJars inPath sourcePathResources aspectpath classpath bootclasspath configFile lintMode lintSpecFile options override incrementalMode incrementalFile fromInPathDirectory binSrc org.aspectj.ajdt.internal.core.builder.AjBuildConfig  .class files in indirs...\r\n  incremental variants handled by the compiler client, but parsed here\r\n  XXX setters don't respect javadoc contract...\r\n  Elements of the list are either archives (jars  remember all the class files in directories on the inpath\r\n  XXX Is it OK that boot classpath overrides inpath  }\r\n  options.set(optionsMap);\r\n  XXX correct?\r\n  \r\n /*File*/\r\n /*File*/\r\n /*File*/\r\n /*File*/\r\n /*File*/\r\n /*String->File*/\r\n /*File*/\r\n /*String*/\r\n /*String*/\r\n /*File*/\r\n /*BinarySourceFile*/\r\n /*File*/\r\n /*File*/\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n *     Adrian Colyer  added constructor to populate javaOptions with\r\n * \t\t\t\t\t  default settings - 01.20.2003\r\n * \t\t\t\t\t  Bugzilla #29768, 29769\r\n * ******************************************************************/\r\n","DescendingVisitor":" predecessor predecessor current visit visitJavaClass visitField visitConstantValue visitMethod visitExceptionTable visitCode visitCodeException visitLineNumberTable visitLineNumber visitLocalVariableTable visitStackMap visitStackMapEntry visitLocalVariable visitConstantPool visitConstantClass visitConstantDouble visitConstantFieldref visitConstantFloat visitConstantInteger visitConstantInterfaceMethodref visitConstantLong visitConstantMethodref visitConstantNameAndType visitConstantString visitConstantUtf8 visitInnerClasses visitInnerClass visitDeprecated visitSignature visitEnclosingMethod visitRuntimeVisibleAnnotations visitRuntimeInvisibleAnnotations visitRuntimeVisibleParameterAnnotations visitRuntimeInvisibleParameterAnnotations visitAnnotationDefault visitLocalVariableTypeTable visitSourceFile visitSynthetic visitUnknown clazz visitor stack org.aspectj.apache.bcel.classfile.DescendingVisitor  size - 1 == current\r\n  J5SUPPORT:\r\n /* ====================================================================\r\n * The Apache Software License, Version 1.1\r\n *\r\n * Copyright (c) 2001 The Apache Software Foundation.  All rights\r\n * reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without\r\n * modification, are permitted provided that the following conditions\r\n * are met:\r\n *\r\n * 1. Redistributions of source code must retain the above copyright\r\n *    notice, this list of conditions and the following disclaimer.\r\n *\r\n * 2. Redistributions in binary form must reproduce the above copyright\r\n *    notice, this list of conditions and the following disclaimer in\r\n *    the documentation and/or other materials provided with the\r\n *    distribution.\r\n *\r\n * 3. The end-user documentation included with the redistribution,\r\n *    if any, must include the following acknowledgment:\r\n *       \"This product includes software developed by the\r\n *        Apache Software Foundation (http://www.apache.org/).\"\r\n *    Alternately, this acknowledgment may appear in the software itself,\r\n *    if and wherever such third-party acknowledgments normally appear.\r\n *\r\n * 4. The names \"Apache\" and \"Apache Software Foundation\" and\r\n *    \"Apache BCEL\" must not be used to endorse or promote products\r\n *    derived from this software without prior written permission. For\r\n *    written permission, please contact apache@apache.org.\r\n *\r\n * 5. Products derived from this software may not be called \"Apache\",\r\n *    \"Apache BCEL\", nor may \"Apache\" appear in their name, without\r\n *    prior written permission of the Apache Software Foundation.\r\n *\r\n * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED\r\n * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES\r\n * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\r\n * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR\r\n * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\r\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\r\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF\r\n * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\r\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\r\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT\r\n * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\r\n * SUCH DAMAGE.\r\n * ====================================================================\r\n *\r\n * This software consists of voluntary contributions made by many\r\n * individuals on behalf of the Apache Software Foundation.  For more\r\n * information on the Apache Software Foundation, please see\r\n * <http://www.apache.org/>.\r\n */\r\n","CFlow":" getAspect setAspect get _aspect org.aspectj.runtime.CFlow  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","BadCCutSig":"     ","User":" getName setName main getName setName main name name ajtest2.User com.codesrc.ozonator.identity.User  ","Screen":" drawText drawTextBox drawText drawTextBox display display addObserver removeObserver notifyObservers refresh implementor name observers name ca.ubc.cs.spl.aspectPatterns.examples.bridge.aspectj.Screen ca.ubc.cs.spl.aspectPatterns.examples.bridge.java.Screen ca.ubc.cs.spl.aspectPatterns.examples.observer.aspectj.Screen ca.ubc.cs.spl.aspectPatterns.examples.observer.java.Screen  ","TraceJarWeaveTestCase":" testTraceJar  org.aspectj.weaver.bcel.TraceJarWeaveTestCase  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","ReferenceTypeDelegate":" addAnnotation ensureDelegateConsistent isAspect isAnnotationStyleAspect isInterface isEnum isAnnotation getRetentionPolicy canAnnotationTargetType getAnnotationTargetKinds isAnnotationWithRuntimeRetention isClass isGeneric isAnonymous isNested isExposedToWeaver hasAnnotation getAnnotations getAnnotationTypes getDeclaredFields getDeclaredInterfaces getDeclaredMethods getDeclaredPointcuts getTypeVariables getPerClause getDeclares getTypeMungers getPrivilegedAccesses getModifiers getSuperclass getWeaverState getResolvedTypeX doesNotExposeShadowMungers getSourceContext getSourcefilename getDeclaredGenericSignature  org.aspectj.weaver.ReferenceTypeDelegate  TODO asc move to proxy\r\n  Required evil because of mutator methods in delegates :(  (see pr85132)\r\n /* *******************************************************************\r\n * Copyright (c) 2002 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n *     Andy Clement - June 2005 - separated out from ResolvedType\r\n * ******************************************************************/\r\n","pr108602":"     ","PackagePublic":"     ","SwitchInAround":"     ","DoubleDispatch":"     ","MissingReturns":"     ","MockConstructorSignature":"   org.aspectj.aopalliance.tests.MockConstructorSignature  /*\r\n * Created on 07-May-2004\r\n *\r\n * TODO To change the template for this generated file go to\r\n * Window - Preferences - Java - Code Generation - Code and Comments\r\n */\r\n","FullyQualifiedArgumentTest":" testPr58520  org.aspectj.tools.ajdoc.FullyQualifiedArgumentTest  check the contents of A.html\r\n  check the contents of the declare detail summary\r\n ","MessageUtil":" abort abort fail fail fail error warn debug info abort abort fail fail fail error warn error warn debug info makeSourceLocation printMessageCounts printMessageCounts print print print print print toShortString numMessages getMessagesExcept getMessages getMessages getKind visitMessages visitMessages visitMessages makeSelector handleMessage isIgnoring dontIgnore textIn renderToString toString renderToString toString renderToString toString renderToString toString renderToString toString renderToString toString renderToString toString renderToString toString renderToString toString renderToString toString renderToString renderMessage renderMessage addExtraSourceLocations renderSourceLocation renderMessageLine renderCounts handlerPrintStream handleAll handleAll handleAllExcept handleAll ABORT_NOTHING_TO_RUN FAIL_INCOMPLETE ABORT_NOMESSAGE FAIL_NOMESSAGE ERROR_NOMESSAGE WARNING_NOMESSAGE PICK_ALL PICK_ABORT PICK_DEBUG PICK_ERROR PICK_FAIL PICK_INFO PICK_WARNING PICK_ABORT_PLUS PICK_DEBUG_PLUS PICK_ERROR_PLUS PICK_FAIL_PLUS PICK_INFO_PLUS PICK_WARNING_PLUS sought floor infix MESSAGE_SCALED MESSAGE_LABEL MESSAGE_LABEL_NOLOC MESSAGE_LINE MESSAGE_LINE_FORCE_LOC MESSAGE_ALL MESSAGE_MOST MESSAGE_WIDELINE MESSAGE_TOSTRING MESSAGE_SHORT org.aspectj.bridge.MessageUtil  no variants for \"info\" or \"debug\", which should always have content\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  XXX untested\r\n  ------------------ visitors to select messages\r\n  XXX revert to 256\r\n  decide between message and exception text?\r\n  XXX consider suppressing nonstandard...\r\n  matching \"]\" added below after clipping\r\n  now budget between text and loc\r\n  adjust for underutilization\r\n /*IMessage*/\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","IncrementalCase":" main run verifyCompile getSandboxDir getBaseArgs makeDir normalizeFilenames normalizeFilenames normalizeFilename haveAll log info fail message getDefinitions get toString safe RA_String verbose ignoreWarnings outputDir PATH expectFail prefix files recompiled errors warnings eclipseErrors eclipseWarnings org.aspectj.ajdt.internal.compiler.batch.IncrementalCase  import java.util.Enumeration;\r\n  XXX\r\n  boolean result;\r\n  final String canonicalFrom = srcBase.getCanonicalPath();\r\n  copy files, collecting as we go...\r\n  XXX detect incomplete?\r\n  sigh\r\n  XXX argh no parent  XXX util\r\n  XXX hack\r\n  System.getProperty(\"sun.boot.class.path\"),\r\n  XXX util\r\n  XXX util\r\n  XXX util\r\n  XXX error-prone\r\n  punt\r\n  XXX worse than info...\r\n  bad short-circuit\r\n  -------------------------------------- messages\r\n  XXX matches run\r\n  Enumeration keys = props.keys();\r\n  XXX NOT bound to junit - bridge tests?\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","EditorManager":" isShiftDown addListener removeListener notifyCurrentFileChanged addViewForSourceLine getCurrFile showSourceLine showSourceLine pasteToCaretPos showSourcelineAnnotation saveContents getEditorPanel editor basicEditor editorListeners editors editor_panel editors_box org.aspectj.tools.ajbrowser.EditorManager  AjdeUIManager.getDefault().getIdeUIAdapter().resetGUI();\r\n /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AppContainerTest":" invoke setUp testApp1LocalAspect testApp2NoLocalAspect around main suite app1 app2 ataspectj.hierarchy.AppContainerTest  fine\r\n  build path and app\r\n  TODO IApp\r\n ","FormalBinding":" toString getFileName getEnd getStart getIndex getName getType type name index start end fileName NONE org.aspectj.weaver.patterns.FormalBinding  /* *******************************************************************\r\n * Copyright (c) 2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n * ******************************************************************/\r\n","AspectDoc":" advice dominatees dominators introductions ofClause dominates  org.aspectj.ajdoc.AspectDoc  , com.sun.javadoc.ClassDoc {\r\n  , com.sun.javadoc.ClassDoc {\r\n /* -*- Mode: JDE; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-\r\n *\r\n * This file is part of the debugger and core tools for the AspectJ(tm)\r\n * programming language; see http://aspectj.org\r\n *\r\n * The contents of this file are subject to the Mozilla Public License\r\n * Version 1.1 (the \"License\"); you may not use this file except in\r\n * compliance with the License. You may obtain a copy of the License at\r\n * either http://www.mozilla.org/MPL/ or http://aspectj.org/MPL/.\r\n *\r\n * Software distributed under the License is distributed on an \"AS IS\" basis,\r\n * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License\r\n * for the specific language governing rights and limitations under the\r\n * License.\r\n *\r\n * The Original Code is AspectJ.\r\n *\r\n * The Initial Developer of the Original Code is Xerox Corporation. Portions\r\n * created by Xerox Corporation are Copyright (C) 1999-2002 Xerox Corporation.\r\n * All Rights Reserved.\r\n */\r\n","ExtensibleURLClassLoader":" addURL findClass defineClass getBytes defineClass getPackageName classPath org.aspectj.weaver.ExtensibleURLClassLoader  System.err.println(\"? ExtensibleURLClassLoader.<init>() path=\" + WeavingAdaptor.makeClasspath(urls));\r\n  amc - this call was missing and is needed in\r\n  WeavingURLClassLoader chains\r\n  System.err.println(\"? ExtensibleURLClassLoader.findClass(\" + name + \")\");\r\n  System.err.println(\"? ExtensibleURLClassLoader.defineClass(\" + name + \",[\" + b.length + \"])\");\r\n /*ClassPathManager.ClassFile classFile*/\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Matthew Webster, Adrian Colyer, \r\n *     Martin Lippert     initial implementation \r\n * ******************************************************************/\r\n","StructureUtilities":"   org.aspectj.ajde.internal.StructureUtilities  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","InterfaceMethodDeclarationFull":"     ","OpenList":" count append remove get count append remove get createReverseIterator list list ca.ubc.cs.spl.aspectPatterns.examples.iterator.aspectj.OpenList ca.ubc.cs.spl.aspectPatterns.examples.iterator.java.OpenList  ","SubAspectVisibility":"     ","SolidPoint":" getZ setZ incrXY getZ setZ incrXY z z figures.primitives.solid.SolidPoint figures.primitives.solid.SolidPoint  ","TestSubAspect":"     ","JavaWrapper":" getClassLoader runMain main loader org.aspectj.apache.bcel.util.JavaWrapper  /* Method main is sane ?\r\n       */\r\n /* Expects class name as first argument, other arguments are by-passed.\r\n     */\r\n","DynamicHelloWorld":" main doit  org.aspectj.weaver.test.DynamicHelloWorld  this will throw an exception\r\n /* Copyright (c) 2002 Contributors.\r\n * \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n */\r\n","SimpleAnnotation":"     ","GenericInterface":" doSomething asInt  GenericInterface GenericInterface  ","ConcreteAspect":"     ","AnnotationPatternList":" getAnnotationPatterns parameterizeWith resolve matches size get resolveBindings resolveReferences toString equals hashCode read write accept traverse typePatterns ellipsisCount EMPTY ANY org.aspectj.weaver.patterns.AnnotationPatternList  do some quick length tests first\r\n  now work through the args and the patterns, skipping at ellipsis\r\n  can never match\r\n  could still match at runtime\r\n  match ellipsisMatchCount args\r\n /* *******************************************************************\r\n * Copyright (c) 2004 IBM Corporation.\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * ******************************************************************/\r\n","LintMessage":" getLintKind lintKind org.aspectj.weaver.LintMessage  private Lint.Kind lintKind;\r\n /* *******************************************************************\r\n * Copyright (c) 2002-2006 Contributors\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     PARC     initial implementation \r\n *     AndyClement extracted as self contained type from Lint type (4-Aug-06)\r\n * ******************************************************************/\r\n","AdviceName":"     ","TraceJoinPointsTest":"     ","AroundAccess":"     ","MemberSignatureImpl":"   org.aspectj.runtime.reflect.MemberSignatureImpl  /* *******************************************************************\r\n * Copyright (c) 1999-2001 Xerox Corporation, \r\n *               2002 Palo Alto Research Center, Incorporated (PARC).\r\n * All rights reserved. \r\n * This program and the accompanying materials are made available \r\n * under the terms of the Eclipse Public License v1.0 \r\n * which accompanies this distribution and is available at \r\n * http://www.eclipse.org/legal/epl-v10.html \r\n *  \r\n * Contributors: \r\n *     Xerox/PARC     initial implementation \r\n * ******************************************************************/\r\n","AfterThrowingCtor":"     "}