<?xml version="1.0" encoding="UTF-8"?>
<bugrepository
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:noNamespaceSchemaLocation="reports.xsd"
        name="AspectJ">
    <bug fixdate="2003-1-14 14:30:00" id="28974" opendate="2003-1-3 10:28:00">
        <buginformation>
            <summary>&quot;Compiler error when introducing a &quot;&quot;final&quot;&quot; field&quot;</summary>
            <description>The aspect below fails to compile with 1.1b2, producing the compilation error:
                -------------------- $ ajc com/ibm/amc/*.java com/ibm/amc/ejb/*.java
                d:/eclipse/runtime-workspace-ajsamples/Mock EJBs/com/ibm/amc/DemoBeanEJB.java:1: Cannot assign a value
                to the final field com.ibm.amc.DemoBean.ajc$interField$co m_ibm_amc$verbose !! no source information
                available !! 1 error --------------------------- package com.ibm.amc; import
                com.ibm.amc.ejb.SessionBean; /** * @author colyer * * To change this generated comment edit the template
                variable &quot;typecomment&quot;: * Window&gt;Preferences&gt;Java&gt;Templates. * To enable and disable
                the creation of type comments go to * Window&gt;Preferences&gt;Java&gt;Code Generation. */ public aspect
                DemoBeanEJB { declare parents: DemoBean implements SessionBean; // THIS NEXT LINE IS THE CULPRIT static
                final boolean DemoBean.verbose = true; private transient String DemoBean.ctx; public void
                DemoBean.ejbActivate( ) { if ( verbose ) { System.out.println( &quot;ejbActivate Called&quot; ); } } }
                ------------------- Making the inter-type declaration non-final solves the problem...
            </description>
        </buginformation>
        <fixedFiles>
            <file>org.aspectj/modules/weaver/src/org/aspectj/weaver/AjcMemberMaker.java</file>
        </fixedFiles>
        <reporter>Adrian Colyer</reporter>
    </bug>
    <bug fixdate="2003-1-14 15:06:00" id="28919" opendate="2002-12-30 16:40:00">
        <buginformation>
            <summary>waever tries to weave into native methods ...</summary>
            <description>If you don't find the exception below in a bug, please add a new bug To make the bug a
                priority, please include a test program that can reproduce this exception. bad non-abstract method with
                no code: private native int nativeMessagePumpInitialize() on public class
                plc.comm.pvi.PviCom$LinkEventHandlerImpl bad non-abstract method with no code: private native int
                nativeMessagePumpInitialize() on public class plc.comm.pvi.PviCom$LinkEventHandlerImpl
                java.lang.RuntimeException: bad non-abstract method with no code: private native int
                nativeMessagePumpInitialize() on public class plc.comm.pvi.PviCom$LinkEventHandlerImpl at
                org.aspectj.weaver.bcel.LazyMethodGen.&lt;init&gt;(Unknown Source) at
                org.aspectj.weaver.bcel.LazyClassGen.&lt;init&gt;(Unknown Source) at
                org.aspectj.weaver.bcel.BcelObjectType.getLazyClassGen(Unknown Source) at
                org.aspectj.weaver.bcel.BcelWeaver.weave(Unknown Source) at
                org.aspectj.weaver.bcel.BcelWeaver.weave(Unknown Source) at
                org.aspectj.ajdt.internal.core.builder.AjBuildManager.weaveAndGenerateClassFiles (Unknown Source) at
                org.aspectj.ajdt.internal.core.builder.AjBuildManager.batchBuild (Unknown Source) at
                org.aspectj.ajdt.ajc.AjdtCommand.runCommand(Unknown Source) at org.aspectj.tools.ajc.Main.run(Unknown
                Source) at org.aspectj.tools.ajc.Main.runMain(Unknown Source) at org.aspectj.tools.ajc.Main.main(Unknown
                Source)
            </description>
        </buginformation>
        <fixedFiles>
            <file>org.aspectj/modules/weaver/src/org/aspectj/weaver/bcel/LazyMethodGen.java</file>
        </fixedFiles>
        <reporter>robsi</reporter>
    </bug>
</bugrepository>